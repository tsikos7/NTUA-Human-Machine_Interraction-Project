%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: morph.dvi
%%Pages: 28
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips -D600 morph
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 2000.04.12:0850
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
%%BeginProcSet: color.pro
TeXDict begin /setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse /TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def /TeXcolorgrey{setgray}def /TeXcolorgray{
setgray}def /TeXcolorhsb{sethsbcolor}def /currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse /DC{exch dup userdict exch
known{pop pop}{X}ifelse}B /GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC /Goldenrod{0 0.10 0.84 0 setcmykcolor}
DC /Dandelion{0 0.29 0.84 0 setcmykcolor}DC /Apricot{0 0.32 0.52 0
setcmykcolor}DC /Peach{0 0.50 0.70 0 setcmykcolor}DC /Melon{0 0.46 0.50
0 setcmykcolor}DC /YellowOrange{0 0.42 1 0 setcmykcolor}DC /Orange{0
0.61 0.87 0 setcmykcolor}DC /BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC /RedOrange{0 0.77 0.87 0
setcmykcolor}DC /Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC /Maroon{0
0.87 0.68 0.32 setcmykcolor}DC /BrickRed{0 0.89 0.94 0.28 setcmykcolor}
DC /Red{0 1 1 0 setcmykcolor}DC /OrangeRed{0 1 0.50 0 setcmykcolor}DC
/RubineRed{0 1 0.13 0 setcmykcolor}DC /WildStrawberry{0 0.96 0.39 0
setcmykcolor}DC /Salmon{0 0.53 0.38 0 setcmykcolor}DC /CarnationPink{0
0.63 0 0 setcmykcolor}DC /Magenta{0 1 0 0 setcmykcolor}DC /VioletRed{0
0.81 0 0 setcmykcolor}DC /Rhodamine{0 0.82 0 0 setcmykcolor}DC /Mulberry
{0.34 0.90 0 0.02 setcmykcolor}DC /RedViolet{0.07 0.90 0 0.34
setcmykcolor}DC /Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC /Lavender{0
0.48 0 0 setcmykcolor}DC /Thistle{0.12 0.59 0 0 setcmykcolor}DC /Orchid{
0.32 0.64 0 0 setcmykcolor}DC /DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}
DC /Purple{0.45 0.86 0 0 setcmykcolor}DC /Plum{0.50 1 0 0 setcmykcolor}
DC /Violet{0.79 0.88 0 0 setcmykcolor}DC /RoyalPurple{0.75 0.90 0 0
setcmykcolor}DC /BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC /Periwinkle
{0.57 0.55 0 0 setcmykcolor}DC /CadetBlue{0.62 0.57 0.23 0 setcmykcolor}
DC /CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC /MidnightBlue{0.98 0.13
0 0.43 setcmykcolor}DC /NavyBlue{0.94 0.54 0 0 setcmykcolor}DC
/RoyalBlue{1 0.50 0 0 setcmykcolor}DC /Blue{1 1 0 0 setcmykcolor}DC
/Cerulean{0.94 0.11 0 0 setcmykcolor}DC /Cyan{1 0 0 0 setcmykcolor}DC
/ProcessBlue{0.96 0 0 0 setcmykcolor}DC /SkyBlue{0.62 0 0.12 0
setcmykcolor}DC /Turquoise{0.85 0 0.20 0 setcmykcolor}DC /TealBlue{0.86
0 0.34 0.02 setcmykcolor}DC /Aquamarine{0.82 0 0.30 0 setcmykcolor}DC
/BlueGreen{0.85 0 0.33 0 setcmykcolor}DC /Emerald{1 0 0.50 0
setcmykcolor}DC /JungleGreen{0.99 0 0.52 0 setcmykcolor}DC /SeaGreen{
0.69 0 0.50 0 setcmykcolor}DC /Green{1 0 1 0 setcmykcolor}DC
/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC /PineGreen{0.92 0 0.59
0.25 setcmykcolor}DC /LimeGreen{0.50 0 1 0 setcmykcolor}DC /YellowGreen{
0.44 0 0.74 0 setcmykcolor}DC /SpringGreen{0.26 0 0.76 0 setcmykcolor}
DC /OliveGreen{0.64 0 0.95 0.40 setcmykcolor}DC /RawSienna{0 0.72 1 0.45
setcmykcolor}DC /Sepia{0 0.83 1 0.70 setcmykcolor}DC /Brown{0 0.81 1
0.60 setcmykcolor}DC /Tan{0.14 0.42 0.56 0 setcmykcolor}DC /Gray{0 0 0
0.50 setcmykcolor}DC /Black{0 0 0 1 setcmykcolor}DC /White{0 0 0 0
setcmykcolor}DC end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (morph.dvi)
@start /Fa 1 108 df<EC3FE090383FFFF05B5DA21300147F5DA214FFA25DA25BA292C9
FCA25BA25CA21307A25CA2130FA25CA2131FEF3F804A903801FFE0040713F0013F91380F
E0F893383F01FC4AEB7C03EEF807017F903801E00F923803C01F9138C00780ED0F0001FF
133E4B14F84A48EB0FF0DA81E0EB07C048D983C090C7FCEC8780021FC9FC143E4813FC14
F014FCECFFE04814FC496C7E9039FC07FF8002017F000F6D6C7E6F7E49131F82001F140F
1830491678A2003F021F14F84C13F05BA2007FEE01E0A249150318C000FF020F13071880
490107EB0F00171E923803F87E90C73801FFF8486E6C5A003CED1FC036517ACF3F>107
D E /Fb 4 62 df<EE3F80EEFFC05D030713804B13004B5AED3FF84B5A4B5A02035B4A5B
93C7FC4A5A4A5A4A5A147F4A5A5D495B5B495B92C8FC5B495A5C133F5C137F5C13FF5C5A
5C5A5CA25A91C9FCA25A5BA2121F5BA2123FA25BA3127F5BA612FF5BB27F127FA67F123F
A37FA2121FA27F120FA27F7EA2807EA2807E807E80137F80133F80131F806D7E7F816D7F
7F6D7F816E7E143F6E7E6E7E6E7E826E7F02007F6F7E6F7EED1FFE6F7E6F1380030113C0
81EE3F802A8671E843>40 D<127FEAFFC07FEA7FF86C7E6C7EEA07FF6C7F6C7F6C13F06D
7E133F6D7E6D7E6D7E816D7F7F6D7F816E7E143F816E7E140F818082808280828082157F
A282153FA282151FA282150FA282A281A3178081A617C081B25D1780A65D1700A35DA25E
A2151F5EA2153F5EA2157F5EA215FF5E5C5E5C5E5C93C7FC5C5D141F4A5A5D147F4A5A5D
495B5B495B92C8FC495A495A495A137F495A4813C0485B4890C9FCEA1FFE485A485AEAFF
E05B6CCAFC2A8677E843>I<151F4B7E4B7EEC01FF5C5C141F91B5FC130F001FB6FC127F
B7FCA414F36C1383383FF803C7FCB3B3B3AD001FB812F84817FC4817FEA56C17FC6C17F8
375E70DD56>49 D<001FBF12FC007F1EFFA2C11280A46C1F00A2001F1EFCD4FCB3A6001F
BF12FC007F1EFFA2C11280A46C1F00A2001F1EFC712C76BB86>61
D E /Fc 8 93 df<157815FC4A7EA2815DA7000C17C0003FEE03F0D87F8049EB07F8D9E0
00141F486CED3FFC6D157FD87FFE913801FFF86D5C6C01C0010F13F0000F01E04913C000
0301F8017F130026007FFCEBFFF890261FFEF913E00107B6128001014AC7FCD9003F13F0
020F13C0020390C8FC020F13C0023F13F049B512FE01076E7E90261FFEF913E090267FFC
FC13F82603FFF86DB4FC000F01E0011F13C0003F01C06D13F0480100010313F84980D8FF
F89138007FFC49153F6C48ED1FF8D980011407D83F006DEB03F0000CEE00C0C71600A781
5DA26E5A1578363B77BF49>3 D<1278127EB47E13E013F8EA7FFE6D7E001F13E0000713
F8000113FE6C6C6C7E011F13E0010713F8010113FE6D6C6C7E021F13E0020713F8020113
FE6E6C6C7E031F13E0030713F8030113FE6F6C6C7E041F13E0040713F8040113FE706C6C
7E051F13E0050713F8050113FE716C6C7E061F13E0060713F8060113FE726C6C7E071F13
E0070713F8070113FE736C6C7E081F13E0080713F8080113FE746C7E091F13801B076309
3F130098B5FC080313FC080F13F0083F13C097B5C7FC070313FC070F13F0073F13C096B5
C8FC060313FC060F13F0063F13C095B5C9FC050313FC050F13F0053F13C094B5CAFC0403
13FC040F13F0043F13C093B5CBFC030313FC030F13F0033F13C092B5CCFC020313FC020F
13F0023F13C091B5CDFC010313FC010F13F0013F13C090B5CEFC000313FC000F13F0003F
13C04890CFFCEAFFFC13F013C06CD0FC127CD1FCB3A5003FBC12FE4887BE1280A36C1C00
A2597774DB72>21 D<F50FC01D1F8AA21D0FA28AA21D078AA2777EA2777EA28A89787E8B
1E3F8B787E787E8B787E787E787F787F797EF73FF8797E79B4FC0D0313C0003FC112F8C3
FC2280A32200003F20F8D2000313C00D0F90C7FCF71FFC555AF77FE0555A545B5490C8FC
545A545A67545A545A671E7F6754C9FC6566A2535AA2535AA2661D0FA266A21D1FA2661D
0F814978C692>33 D<912601FFE0953801FFE0021F01FE061F13FC027FD9FFC094B67E49
B600F0040381010703FC040F15F04903FF4C9038E03FF84904C0923A7FFC0003FC4970DB
FFF0EB00FE90267FF0006E02030180143FD9FF80011F01FC4A90C86C7E4848C700076DDA
0FFC6F7E48486E6DDA1FF0ED03E0D807F002006E494882496F6D4948150148486F6D4948
6F7E49030F6D4848CA127C001F706D485A90C96CD9FC07183C003E704B173E716D484817
1E48724848171F72EBBFC0007871D9FF80838400F87191CB1380725B482007725B727F84
737E737F87737F4F7F6C200F4F7F007895B56C180087007C4D486D5F4E486C7F003C4D48
6C183E003E4D486C7F001E051F6F5E001F4E6C6D16FC4E486C6D5E6C6C9326FF800301FE
15016C6C4B496C6D4B5A6D4B486D6E140700034C486E01E0EC1FE0D801F8DB1FF86E6D4A
5A6C6CDB7FF06E01FCECFF80017E4B4802079026FF800790C7FC6D6C010701806E91B55A
D91FE0011F90C86C5E90280FFE03FFFC6F6C5D6DB648041F5D010103E0040715C06D0380
040192C8FC021F01FCCB003F13FC020301C0060313C0813D78BB92>49
D<0403B7FC167F0303B81280150F157F4AB912005C020F49CAFC4A13C0027F90CBFCECFF
F84913E0495B4990CCFC495AEB1FF8495A5C495A495A4890CDFC5B1203485A5B485AA248
5AA25B123FA25B127FA290CEFCA25AA25AA2BCFCA21B80A31B00A248CEFCA27EA27EA27F
A2123F7FA2121F7FA26C7EA26C7E7F6C7E12017F6C7F6D7E6D7E806D7EEB0FFE6D7E6D13
C06D7F6D13F86EB4FC021F13C06E13FE020390B8FC806E6C1780150F1503DB007F160016
03495974CE62>I<1A1FA2F23F801A7FA2F2FF00A24F5AA24F5AA24F5AA24F5AA24F5A19
3F624F5AA24FC7FCA24E5AA24E5AA24E5A180F614E5AA24E5AA24E5AA24EC8FCA24D5AA2
4D5A1707604D5AA24D5AA24D5AA24D5AA24DC9FC5E5F4C5AA24C5AA24C5AA24C5AA24C5A
A24C5A16FF94CAFC4B5AA24B5AA24B5AA24B5AA24B5AA24B5A157F5E4BCBFCA24A5AA24A
5AA24A5AA24A5A141F5D4A5AA24A5AA24ACCFCA2495AA2495AA2495A130F5C495AA2495A
A2495AA249CDFCA2485A12035B485AA2485AA2485AA2485AA2485AA248CEFCA25A127C12
3C49816CE200>54 D<EF0780170F4D7EA2173FA260ED7FE0913907FFFE7F021F90B5FC02
7F92C7FC903901FFC03F903903FE0007D907F8EB01FE49488049488149488149488149C7
487FA24848825E4848EDFBFC17F30007030F7F4915F1000FEEE1FFA2161F484803E01380
5F163FA2003F4C13C0167FA25F4848EE7FE05EA25E1501A25E150300FF18F05EA21507A2
5E150FA25E151FA25E153FA25EA2157FA293C7FC5DA25D1401A25DA21403007F18E05D14
07A25DD9F00F15FFA2003F4A15C0A2141FA25D001F013F1680A201F8495B000F017F1600
A292C7FCD807FC4B5A5C00035F6D481407D801FF5EA26C494A5A171F017F5E6D484A5A01
1F4B5A010F4BC7FC6D6CEB03FE02FFEB0FFC499038C03FF892B512E01780D91FE749C8FC
9138E07FE04ACAFCA2133FA25CA26DCBFCA23C757AE949>59 D<EE7FFF031FB512FC92B7
7E020716F0023F16FE91B97E010318E049DAC00180011F01F0C7000713FC49018002007F
D97FFCC9EA1FFFD9FFF004077F4801C004017F4849707F4848CBEA3FF049181F4848727E
4848727E4918034848727EA24848727EA290CD7E481B80A2481A3FB3B3B3A5007CF21F00
003C86515778D362>92 D E /Fd 8 126 df<D81F80F807E0486CF80FF0486CF81FF848
6CF83FFCB3B3B3B3B3B3B3AA6D207F007F22F8A56D20FF003F22F0A36D67001F22E06D67
A36C6D5413C0A26C6D541380A26E666C22006E666C696E1E7F6C6D545AA26D6C535B6E65
6D6D525B6D6D525B6F646D6D525B6D6803FC99B5FC6D6D5191C7FC6D6D515B6D6E505B6E
6D505B6E6D505B6E01F8087F5B7097B5FC6E01FF07035C020302C0060F91C8FC6E02F006
3F5B6E02FC95B55A6F01FF05035C6F02E0041F5C6F02FC93B65A0307DAFF80020715806F
03FE49B7C9FC030092B912FC7062041F1AE004071A8004014FCAFC706C18F8051F18E005
0395CBFCDD007F16F8060F16C0060003FCCCFC070391CDFC8EC9787F9F>91
D<0703B5FC96B612FC060FEDFFC0067F16F80503B9FC051F18E0057F18F84CBA12FE0407
737E041F1AE0047F1AF893BC7E03039226FE000115FF4B0380D9000781031F02FCC915E0
4B02E0041F804B91CA00038092B500FC0500804A02F0063F7F4A02C0060F7F020F91CC00
0314C04A01FC0700804C864A01E0081F7F4A49747F91B548747F4991CE6C7F4949757F49
49758003F01C3F498C4949767F4B884949767F4990D06C7F4A894948777FA24849787E4A
1E3F488D4A8A4822804A8AA248497813C0A24890D26C13E0A3498B003F22F0498BA3007F
22F849207FA500FF22FC49203FB3B3B3B3B3B3B3AA6C48F81FF86C48F80FF06C48F807E0
8EC9787F9F>I<F207C0F21FE0507E871A7FA2507EA34F7FA34F7FA34F80A34F80A34F80
A34F80A21AFC077F80A2F2F87F07FF80A2F2F03F4E81A24E496C7EA34E496C7FA2507E4E
82A2507E4E82A24F7F063F82A24F7F067F82A24F147F06FF82A24F143F4D83A24F141F4D
83A24F804D84A24F804D84A24D90C86C7FA34D486F7FA24E81057F84A24E167F05FF84A2
4E163F4C85A24E161F4C85A24E824C86A24E824C86A295CA7E4C86A24D83043F86A24D83
047F86A24C48727EA34B49727EA24D181F4B87A24D844B88A24D844B88A294CC7E4B88A2
4C85033F88A24C85037F88A24C1A7F03FF88A24C1A3F4A89A24C1A1F4A89A24A49747FA3
4A49747FA293CE7E4A8AA24B87023F8AA24B87027F8AA24B1C7F02FF8AA24B1C3F498BA2
4B1C1F498BA24B88498CA24B88498CA292D07E498CA24948777FA34948777FA24A1E7F01
FF8CA24A1E3F488DA24A1E1F488DA24A8A482280A24A8A4822C0A291D27E4822E0A2498B
003F22F0A2498B007F22F8A24848F87FFCA349203FA249201F007F22F86C48F80FF06C48
F807E08EC9787F9F>94 D<D81F80F807E0486CF80FF0486CF81FF800FF22FC6D203FA26D
207FA36C6CF8FFF8A2003F22F06D67A2001F22E06D67A26C22C06E66A26C22806E66A26C
22006E66A26C696E1E3FA26C696E1E7FA2017F686E1EFFA26D6C535BA36D6C535BA26D68
6F64A26D686F64A26D9DC7FC6F64A26D676F1C3FA26D676F1C7FA2027F666F1CFFA2023F
666F63A2021F666F63A26E667062A26E6D505BA36E6D5090C8FCA26E65701A3FA26E6570
1A7FA2037F64701AFFA2033F647061A2031F647061A26F647160A26F647160A26F99C9FC
7160A26F6371183FA26F6D4E5AA3706C4E5AA2043F62715FA2041F62715FA27062725EA2
7062725EA27097CAFC725EA2706172163FA2706172167FA2057F607216FFA2053F60725D
A2716C4B5BA3716D4A5BA27160735CA27195CBFC735CA2715F73143FA2715F73147FA206
7F5E7314FFA2063F5E735BA2061F5E735BA2725E745AA2725E745AA2726D4890CCFCA372
6D485AA2725DF2F87FA2077F5CF2FCFFA2073F5C97B5FCA2735CA3735CA3735CA37391CD
FCA3735BA3735BA3745AA21A3F63745AF207C08EC9787F9F>I<F10FFC953803FFFE183F
0503B5FC171F177F0403B6FC160F163F93B7FC5D15075D153F5D4AB8FC5C4A17FC4AEEE0
00023F03F0C7FC4A4AC8FC91B612E04992C9FC4914F84914E04991CAFC4913FC15F04913
C0495B4948CBFC485B14F0485B485B485B91CCFC485A5B485A485A5B485AA25B90CDFCA2
127E4730849141>122 D<EA7FE0B57E14F8ECFF8015F015FCEDFF8016E016F816FE8217
C08317F88317FF846C83D8000F82D9001F15F8020081030F80030180DB003F80040F8004
0180706C7F171F05077F717F05007F727E181F7213807213C07213E0847213F0197FF13F
F8F11FFC190FF107FEA219031901A2F100FC4730829141>I<127EB4FCA27F7FA26C7E7F
6C7E6C7E7F6C7E806C7F6C7F6C7F14FC6C7F6D6C7E6D7F6D13F015FC6D13FF6D14E06D14
F86D14FF6D15E06E14FE6EECFFF0020FEDFFE06EEEFFFC6E17FE806E7E81150F81150181
163F160F1603EE007F171F1703EF003F18039538000FFC473084AF41>I<1AFCF101FEA2
19031907A2F10FFC191FF13FF8F17FF019FF4E13E0604E13C04E13804E1300187F4E5A05
035B4D5B051F5B177F4CB55A040F5C043F5C4BB6C7FC030F5C92B65A021F5D010FB712E0
007FB85AB95A95C8FC17FC5F17E05F94C9FC5E16F816E0168003FCCAFC15F0158002F8CB
FC1480D87FE0CCFC473082AF41>I E /Fe 15 107 df<003FBFFC481E80C012C0A46C1E
806C1E006A0871AC89>0 D<EA03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C
13806C13006C5AEA03F8131371B231>I<95383FFFC00507B512FE057FECFFE00403B712
FC040F16FF043F9026E0F87F13C09326FFFC00010313F0030301C09138003FFCDB0FFEC7
EC07FFDB1FF804017FDB7FE09338007FE0DBFF80EF1FF04A48C8ED07F8DA07FCF003FEDA
0FF0F000FF4A48737E4A48737E4AC9EE0FE002FE747E4948747E4948747E4948747E4A1B
7E4948874948757E013F8991CA170F017E767E49767EA24848767E491C0000038A491D7C
00071E7E491D3E000F1E3F4989A2001F1F8090CB180FA2481FC0003E1E07A3007E1FE000
7C1E03A400FC1FF0481E01A4C1FCA500F8CB00F8CA1201A56C1E03007C1FE0A4007E1E07
003E1FC0A3003F1E0F6C1F80A26D1D1F000F1F00A26D6500071E3E6D1D7E00031E7C6D1D
FC0001666D1C016C6C525AA2017E525A6D525A6E1B1F011F656D6C51C7FC6D6C1B7E6E1B
FE6D6C505A6D6C505A6D6C505A027F505ADA3FC0F13FC06E6C4F5A6E6C4FC8FCDA07FCF0
03FEDA01FEF007F86E6C6CEF1FF0DB7FE0EF7FE0DB1FF8933801FF80DB0FFE040790C9FC
922603FFC0ED3FFC030001FC913803FFF093263FFFE0017F13C0040F90B7CAFC040316FC
DC007F15E005074ACBFCDD003F13C0747676E389>8 D<95383FFFC00507B512FE057FEC
FFE00403B712FC040F16FF043F9026E0007F13C0DCFFFCC7000313F0030301C09138003F
FCDB0FFEC9EA07FFDB1FF804017FDB7FE09338007FE0DBFF80EF1FF04A48CBEA07F8DA07
FCF003FEDA0FF0F000FF4A48737E4A48737E4ACDEA0FE002FE747E4948747E4948747E49
48747E4A1B7E4948874948757E013F8991CF120F017E767E49767EA24848767E491C0000
038A491D7C00071E7E491D3E000F1E3F4989A2001F1F8090D1120FA2481FC0003E1E07A3
007E1FE0007C1E03A400FC1FF0481E01A4C1FCA500F8D11201A56C1E03007C1FE0A4007E
1E07003E1FC0A3003F1E0F6C1F80A26D1D1F000F1F00A26D6500071E3E6D1D7E00031E7C
6D1DFC0001666D1C016C6C525AA2017E525A6D525A6E1B1F011F656D6C51C7FC6D6C1B7E
6E1BFE6D6C505A6D6C505A6D6C505A027F505ADA3FC0F13FC06E6C4F5A6E6C4FC8FCDA07
FCF003FEDA01FEF007F86E6C6CEF1FF0DB7FE0EF7FE0DB1FF8933801FF80DB0FFE040790
C9FC922603FFC0ED3FFC030001FC913803FFF093263FFFE0017F13C0040F90B7CAFC0403
16FCDC007F15E005074ACBFCDD003F13C0747676E389>I<ED1FFF4AB512F0020714FC02
3FECFF8091B712E04982010716FC498249D9F0017F49902680003F7FD97FFCC700077FD9
FFF002017F48496E7F480180ED3FF891C9121F4848707E4848707E491603001F84498249
82003F198049177FA2007F19C049173FA300FF19E090CB121FAA6D173F007F19C0A36D17
7F003F1980A26D17FF001F19006D5E6D5E000F606D16076C6C4C5A6C6C4C5A6E153F6C01
E0EDFFF06C6D4A5BD97FFC02075B6DB46C013F5B6DD9F001B5C7FC6D90B65A6D5E010116
F06D5E023F1580020702FCC8FC020114F0DA001F90C9FC434476CA58>14
D<0503BAFC057F19800407BB12C0163F93BCFC1503030F1B80033F1B0092B548CDFC4A14
C04A01FCCEFC020F13F04A13C04A90CFFCEC7FFCECFFF0495B495B4990D0FC495A495A5C
495A495A495AA2485B91D1FC485AA2485AA2485AA2485AA25B123F5BA3127F5BA412FF90
D2FCAC7F127FA47F123FA37F121F7FA26C7EA26C7EA26C7EA26C7E806C7FA26D7E6D7E6D
7E806D7E6D7E6D13C06D7F6D7FEC7FFC6EB4FC6E13C06E13F0020313FC6EEBFFC06E14FE
033F90BBFC030F1B8003031BC01500163F1607DC007F19800503190094CEFCB3AA0003BF
FC481E80481EC0A46C1E806C1E006A8E71ED89>18 D<1E0FF63F80F6FFC01D031D0F1D3F
9AB512800A0314000A0F13FC0A3F13F099B512C0090391C7FC090F13FC093F13F098B512
C0080391C8FC080F13FC083F13F097B512C0070391C9FC070F13FC073F13F096B512C006
0391CAFC060F13FC063F13F095B512C0050391CBFC050F13FC053F13F094B512C0040391
CCFC040F13FC043F13F093B512C0030391CDFC030F13FC033F13F092B512C0020391CEFC
020F13FC023F13F091B512C0010391CFFC010F13FC013F13F090B512C0000391D0FC000F
13FC003F13F04813C0B5D1FC13FCA213FF6C13C06C13F0000F13FC000313FFC614C0013F
13F0010F13FC010313FF010014C0023F13F0020F13FC020313FF020014C0033F13F0030F
13FC030313FF030014C0043F13F0040F13FC040313FF040014C0053F13F0050F13FC0503
13FF050014C0063F13F0060F13FC060313FF060014C0073F13F0070F13FC070313FF0700
14C0083F13F0080F13FC080313FF080014C0093F13F0090F13FC090313FF090014C00A3F
13F00A0F13FC0A0313FF0A0014800B3F13C01D0F1D031D00F63F80F60F009BC7FCB3AA00
3FBFFC481E80C012C0A46C1E806C1E006A8E71ED89>20 D<123C127FEAFFC013F013FC13
FF6C13C06C13F0000F13FC000313FFC614C0013F13F0010F13FC010313FF010014C0023F
13F0020F13FC020313FF020014C0033F13F0030F13FC030313FF030014C0043F13F0040F
13FC040313FF040014C0053F13F0050F13FC050313FF050014C0063F13F0060F13FC0603
13FF060014C0073F13F0070F13FC070313FF070014C0083F13F0080F13FC080313FF0800
14C0093F13F0090F13FC090313FF090014C00A3F13F00A0F13FC0A0313FF0A0014800B3F
13C01D0FA21D3F9AB512800A0314000A0F13FC0A3F13F099B512C0090391C7FC090F13FC
093F13F098B512C0080391C8FC080F13FC083F13F097B512C0070391C9FC070F13FC073F
13F096B512C0060391CAFC060F13FC063F13F095B512C0050391CBFC050F13FC053F13F0
94B512C0040391CCFC040F13FC043F13F093B512C0030391CDFC030F13FC033F13F092B5
12C0020391CEFC020F13FC023F13F091B512C0010391CFFC010F13FC013F13F090B512C0
000391D0FC000F13FC003F13F04813C0B5D1FC13FC13F013C06CD2FC123CD3FCB3AA003F
BFFC481E80C012C0A46C1E806C1E006A8E71ED89>I<912601FFE01BC0020F01FCF201E0
023FEBFF8091B600E0F103F0010315F84915FE011F814916C0498290B812F848711807DB
003F6D19E04801F801076D7E4801E001006E170F0280023F7F4848C8000F01F8171F4903
036D18C048486F6D173F496F6C6C6C167F49706D1780003F716D16FF49040701F85D4970
6D4B1300007F7101FF5D90CB6C01C0EC1FFE7301F0147F007E7201FE49485A07079026FF
C00F5B00FE7291B6FC48725F736C5E745E080F5E744BC7FC08015D746C14F00078081F14
C0090391C8FC00309738007FF8D4FCB3AE003FC012C0481FE0C112F0A46C1FE06C1FC074
4F76CF89>39 D<0503B712FC057F16FE0403B9FC161F93BAFC1503030F18FE033F18FC4B
49CAFC4AB512C04A49CBFC020F13F04A13C04A90CCFCEC7FFC4A5A4913E0495B4990CDFC
495A495A5C495A495A495AA2485B91CEFC485AA2485AA2485AA2485AA25B123F5BA3127F
5BA412FF90CFFCA290BC12FC1CFE1CFFA41CFE1CFC90CFFCA27F127FA47F123FA37F121F
7FA26C7EA26C7EA26C7EA26C7E806C7FA26D7E6D7E6D7E806D7E6D7E6D13C06D7F6D13F8
6E7E6EB4FC6E13C06E13F0020313FE6EEBFFC06E6C13FE6F90B812FC030F18FE030318FF
1500161F1603DC007F16FE050316FC586A72DD75>50 D<94B5FC043F14FC0303B712C003
1F16F892B9FC020318C0020F18F0023F18FC91B6D8800114FF4902E0C7000780010749C9
6C13E04901F0040F7F4901C004037F4990CB7FD97FFCF03FFED9FFF0F00FFF4849721380
480180060113C04890CD13E0491A7F4848F23FF0491A1F4848F20FF8A24848F207FCA248
48F203FEA2491A01A200FF1CFF90CFFCB3B3B3AF007E1C7E003C1C3C606676E275>92
D<EF03C04D7E4D7EA24D7EA24D7EA24D7EA394B5FCA24C80A24C486C7EA24C486C7EA24C
486C7EA24C486C7EA24C486C7EA24C486C7EA2EF800104FF8094C7FC4B82A24B486E7EA2
4B486E7EA24B486E7EA24B486E7EA24B486E7EA24C1403037F824C140103FF82A24A90C9
7FA24A48707EA24A48707EA24A48707EA24A48707EA24B1607023F844B1603027F84A24A
48707EA24990CB7FA24948727EA24948727EA24948727EA24948727EA24A1807013F864A
1803017F86A24948727EA24890CD1380A24848F27FC0A24848F23FE0A24848F21FF0A249
1A0F001F1CF8491A07003F1CFCA24848F203FEA24848F201FFA290CFFCA2007E1C7E003C
1C3C606676E275>94 D<F01FFC943803FFFE173F4CB5FC040714FC041F14004C13F093B5
12804B49C7FC4B13F84B5B4B5B4B5B5F4B90C8FCA25E157FA25EB3B3AA15FFA25E5CA24A
5B5C5E4A5B4A5B027F90C9FC4A5A01035B011F13F048B512C0007F91CAFCB512FC14E014
FC6C13FF000114C0D8001F13F0010313FC01007F6E7E021F7F6E7F6E7F82806E7FA28082
A2157FB3B3AA82A2153F82A26F7F836F7F6F7F6F7F6F13FE6F6D7E043F13F07013FF0407
14FC040114FEEE003F17039438001FFC3FA574FB58>102 D<EA7FF0B57E14F814FF6C14
C0000114F0D8001F7F010313FE01007F023F7F6E7F6E7F6E7F806E7FA28082A2157FB3B3
AA82A2153F82A26F7F83816F7F6F7F6F13FC6F7F706C7E041F13F0040713FF040114FC70
6C13FE170F177F4CB512FC04071400041F13F0047F13804C48C7FC4B5B4B13F04B5B4B5B
5D5F4B90C8FCA25E157FA25EB3B3AA15FFA25E5CA24A5B5C4A5B4A5B4A5B91B5C9FC0103
5B011F13F848B55A007F14C0B6CAFC14F81480D87FF0CBFC3FA574FB58>I<123C127E12
FFB3B3B3B3B3B3B3B3B1127E123C08A56CFB31>106 D E /Ff 12
111 df<EA07E0EA1FF8487E487E7FB5FC1480A414C07EA27EEA1FFBEA07E3EA0003A413
071480A4130F14005BA2131E133E5BA25B5B1201485A485A485A48C7FC123E123C121812
2B748F29>59 D<1BF0F203F8A21A07A21A0F1A1F871A3F1A7FA21AFFA261618761F10FDF
1A9FF11F1FA2193E197E077C7F19F806017F19F0F003E0A2F007C0180F078080F01F004E
7F183E60A26017014E814D5A050780604D5AA24DC7FC5F053E825F05FC805F4C5AA24C5A
16074D824C5A041F8194C9FC163EA2047FB8FC93B9FC885D5D04E0C9127F4B5AA24B5A15
1F93CA7F153E037E173F157C5DA24A5A14034B844A5A020F181F5D4ACBFC5C5C14FE8849
5A497E130FD93FFF4E7F48B56C4CB57E007F02FC93B712E06F4B16F0B6FC5D6C1DE06462
7BE16E>65 D<4ABA7E4A19F81CFF1DC06E1AF091C76C48C8000713FC704803007FF43FFF
7613804D7013C088047F7113E07613F05FA204FF7113F8A25FA25DA25FA25D5213F05FA2
4B4E13E0A294CA4813C05213805D5213004C4D5A525A031F4E5A090313E04C4C5B515B03
3FDD3FFEC7FCF3FFF84C030713E0087F13804BB800FCC8FC1BE01BF81BFFDBFFF0C8000F
13E008017F4C9238007FFCF31FFE4A727E757F4C707F894A727FA24C707FA25C8993CBFC
1C7F5C1CFF5DA2141F655D63023F62635D515B027F62634B4D5B5190C7FC02FF611B7F4B
4C485A505B494E13E0081F5B4B4C5B49DEFFFEC8FC07075B011F057F13F0007FBB12C0BC
C9FC1AF81AC007F8CAFC655E78DD6E>I<DF7FFE150C060FB500E0141E95B600F8143E05
0703FE147E053F6F6C13FC94B5D8F001EBC001040349C7383FE003040F01F0913807F007
043F0180913903F80FF8DCFFFEC912FC4B01F8EE7E1F030701E0EE3F3F4B018093381FFF
F04B90CA7EED7FFC4B48834A497113E04A13C04A5B4A90CB7E4A481AC04A48844A5A14FF
49491A804949197F495BA249491A004990CDFC5B5C017F1B7E5C13FF485B1D7C485BA248
491A789AC7FC5A5CA2485BA35A91D0FCA35A5BA45B12FFA51C1E1C3EA3007F1B7E1C7CA2
1CFC641B01003F631B036D4F5A001F631B0F515A6C6C97C8FC636C6D187E636C6D4D5A6C
4F5A6E4D5A6C6D4D5A6D6CEF3F806D6C4DC9FC6D6C17FE6D6CEE03FC6D01C0ED0FF06D01
F0ED3FE06D01FCEDFF806D6CB46C010790CAFC6E01F8EBFFFC020F90B612F0020316C0DA
007F4ACBFC030F14F09226007FFECCFC676479E068>I<4AB712FEA25CA26E16FC91C700
3FEBF00070138095C7FCA25FA2163FA25FA2167FA25FA216FFA25FA25DA25FA25DA25FA2
5DA25FA25DA294C8FCA25DA25EA2153FA25EA2157FA25EA215FFA25EA25CA25EA25CA25E
A25CA25EA25CA293C9FCA25CA25DA2143FA25DA2147FA25DA214FFA25D5BA2010F13FC00
7FB7FCB87EA36C93C8FC3F5E7ADD3F>73 D<4CB712F84C16FCA37016F893C7000FEBF800
06035B62A262A260A262A260A297C7FCA260A261A2183FA261A2187FA261A218FFA261A2
5FA261A25FA261A25FA261A25FA296C8FCA25FA260A2173FA260A2177FA260A217FFA260
A25EA260A2D801E05CEA07F8486C5EEA3FFE5E127F605E95C9FC00FF5D495D49143F494A
5AD87FC05D007CC8485A007E4A5B4B5B6C4A5B6D4990CAFC6C6CEB1FFCD80FF0EB7FF83A
07FE03FFE00001B65A6C4ACBFC013F13F8010313804E6175DD50>I<EE0FFCEE7FFF0303
B5EAC03E030FECE07F923B1FFC0FF0FF8092397FF003F99226FFC000B5FC4A90C77EEC07
FE4A48804A48804A481600A24A48804A5A495F495B181F4990C8FC61495A011F163FA24A
5E133F187F137F4A5EA218FF13FF4A5EA25FA24A5E5A5FA2616C5B5FA296C7FCA25F017F
5D6E4A5AA2013F157F6EEB01FF011F4A5B6D6C5B0107141FD903FEEB7FBF903B01FF81FF
3FF86DEBFFFC6EEBF87F021F13E0020301005B91C8FC17FFA260A25EA260A25E60EA07E0
486C5C486C93C8FC486C5C007F5E4C5A4C5A48484A5A4C5A4901035B6C48495B49011F90
C9FCD83FF0EBFFFC6CB612F06C15C000034ACAFCD8003F13E041587DBB46>103
D<ED3F8091387FFFC0011FB5FC5E5BA27FD9001F90CAFC80A35DA2141FA25DA2143FA25D
A2147FA25DA214FFA25DA25BA25DA25BA25DEE07FF49023F13E093B512F8030314FE9239
0FFC07FF4990261FE0017FED3F80DAFE7EC77F15F8496C486E7E5D5D5D5B92C8FC5C5C01
7F16FF5CA25C01FF5D615CA2485E615CA2485E96C7FC5C5F485F171F91C85BA248163F60
49183E177F001F4D137E1A7C4915FF4E13FC003F4B15F8604917011AF0007FF003E0F080
074918C0190F00FFF01F8070EC3F0049EEC07E94387FC3FC71B45A496F5B6C48030713C0
003EC9000190C7FC476178DF54>I<ED07C0ED1FE0ED3FF0ED7FF815FFA416F016E016C0
ED7F80ED3F0092C7FCB3EB01FE90380FFF804913E0497F90387F0FF89038FC07FCEA01F0
D803E07FEA07C0120F1380121FEB000F5A123E007E131F007C5CA200FC133F485CA2147F
C75B14FF5DA25B5D5B5DA25B92C7FCA25B5C131F5CA2013F143E5C017F147E4A137CA201
FF14FC4A13F8A248140102C013F0150316E0ED07C06C140FED1F80ED3F00017F137E9038
3FE1FC6DB45A6D5B6D13C0010090C7FC275D7CDB32>I<181FF07F80F0FFC04D13E05FA2
5F19C0A27113801900715A715A95C7FCB3EE1FF0EEFFFC030313FF4B8092390FF07FC092
391FC03FE0DB3F007F037C131F4B804A5A14034A5A5D020F143F4A5A92C7FC5C023E147F
147E027C5DA217FF91C8FC60A25EA260A25EA260A25EA295C7FCA25EA25FA2161FA25FA2
163FA25FA2167FA25FA216FFA25FA25DA25FA25DA25FA25DA294C8FCA25D5EEA07E0486C
495A487E486C495A127F4B5A4B5A4848485B5E494890C9FC397FE00FFE49485A003FEBFF
F06CB512C06C5C6C01FCCAFCC613C03B7882DB3B>I<ED3F8091387FFFC0011FB5FC5E5B
A27FD9001F90C9FC80A35DA2141FA25DA2143FA25DA2147FA25DA214FFA25DA25BA25DA2
5BA25DF03FC049923801FFF0050713F892C74813FC94383FE0FE4992387F003E05FC13FF
4A903801F003933807E007011F4A485A4CC65A4A133E5E013F5C4B4814FE4A485A4B4814
FC017F4948EB0FF84BC7EA07E0DAF07E91C7FC5D9038FFF3F0ECF7E0ECFFC05D5A15FCED
FF8016F04801CF7F02C013FE9138803FFF030F7F4802037FA24A6C7F815A8349027F143E
A2001F03FF147E4D137C5BA2003F18FC19F8495DF001F0127F18034917E0047FEB07C000
FF16E0043FEB0F80499238F01F0093381FF87F93380FFFFE49020313F86C486E5B003EC9
EA3FC0406178DF4C>I<D90FF0EC07FFD93FFC023F13E049B491B512F890B5D8800314FE
3D01F87FC00FFC07FF2A03E03FE01FE0017FD807C09038F03F80000F011F017EC77F0180
EBF8F8D81F00D9F9F06E7EEDFBE0EDFFC0003E5D5C007E92C8FC007C5C5D027F16FF00FC
5C5A5D02FF5DC7605DA2495E625DA2495E97C7FC5D60495F181F92C85BA249163F614A18
3E187F011F4D137E1B7C4A15FF4F13FC013F4B15F8614A17011BF0017FF003E0F180074A
18C01A0F01FFF01F8071EC3F004AEEC07E95387FC3FC72B45A4A6F5B6D48030713C0013E
C9000190C7FC4F3D7CBB59>110 D E /Fg 27 123 df<ED0FFE92387FFFC00203B500F0
EE01E0020F02FC16034A02FF1607027F8149B76CED0FC049824970ED1F8049824970ED3F
005B4970157E90B5EAC0074801FCC76C6C5D4801E0021F7F028002074B5A4848C800017F
48486F4B5A01F0167F4848706C495A49161F4848706C5C90CA0007140F481703007E7249
5A00FE17014850C7FC727E481A7E197C48067E5BCCFC63F13E01193F505AA273485AA2F2
87C01A8FA296380F9F80A298C8FC1ABFA21AFEA262A362A219074F5AA362A262A362191F
A4193FA34FC9FCA361A3611801A3180361A31807A261A2180FA261A2181FA261A34E5AA4
61A296CAFCA2181C5B6C7DC85A>13 D<933801FFFC040FEBFFE04C14FF047F15F093B712
F84B16FC923803FE07923807F0004C131F4B487F18034B481300F17FF8F11FE0F103C096
C7FCA282A282A282A282150F8282A26F7E838381836F7F83A26F7F83707E84707FA2707F
84707F845E93B57E030380150F033F81DBFFFC804A13E00207D9807F7F4A1300DA3FFC7F
4A486D7F4A5A49497F494981495B4990C77E495A013F814948825C01FF81485B5C5A4849
80A25A5C5A91C9FC5AA249167F007F4D5AA25BA212FFA2495FA25FA2615BA24D5BA34D5B
A34D90C7FCA2007F5F171F6D5E003F4C5AA26D4B5A001F5F6C6C15FF4C5B6C6C5E6C6D49
90C8FC6C6D495A6C6D495A6D6C495AD93FFEEB7FF06DB612C001075D01014AC9FC6D6C13
F8020F13E0DA0018CAFC467979F54E>I<0403B5FC047F14800307B6FC151F157F4AB6EA
FE00020749C8FC021F13E04A1380DAFFFEC9FC4913F8495B010F5B4913805B4990CAFC49
5A5C485B5A485BA2485BA2485BA25A5C4890B77E84A3B9FC95C7FC49CBFCA55BAA127FA4
6C7EA2121FA26C7EA26C7F6C7F18086C6D153C6C6D15FE6D6C1401D93FFEEC0FFC90260F
FF80EB7FF86D9039F007FFE0010190B65A6D93C7FC021F14F8020714C09126003FFCC8FC
394978C647>I<F01FFC4DB57E050F14E0053F14F894B612FE4C9038F81FFF0407D9C003
7F4C48C66C7FDC3FFC6D7FDC7FF0814C486E7E4B49143F4B49814B90C8FC4B707E4B5A4B
48824B5A15FF4C814A4917805C5E4A5F5E5CA24A90C9FCA24A485EA2147FA25D02FF5FA2
4B1800A24995B5FCA24B5FA2495F635D614961A24B4B5BA24961614B5F4F5B5B4F90C7FC
92C9485A62496D15FF626F4A5B4E5B496D4A5B4E5B6F4A90C8FC6FEC3FFC9026FFFDFC4A
5A6F49485ADAF8FF010713C092267FE03F5B486EB548C9FC030F14F84A6C14E0030191CA
FC489138003FF093CCFC5CA25AA25CA25AA25CA25AA291CEFCA25AA25BA2127FA25BA212
FFA25BA45B5B6C5A001FCFFC516C7BC85A>26 D<F101E0861903A262A21907A262A2190F
A262A2191FA297C9FCA261A2193EA2197EA2197CA219FCA261A21801A261A21803A261A2
1807A261A2050FB57E94B612F8040F15FF043F16C04BB812F003079026FC1F8113FC031F
01C09038003FFE037F010091380FFF80DBFFF84901037F020301E06F7F4A0180013E6D7F
021F90C76F7EDA3FFC027E6E7E4A48717E494848027C140F494984494902FC6E1380495B
4990C8486E13C0495A494814017513E049485D485B4816034A1AF048495DA2484914075A
6091C8FC48160F5B007F4D5C1DE049151FA200FF94C85AA2494B17C063173E1D80057E5D
1D00057C5D644903FC157F6D624D4B5A007F6104015F505B4D4A5B6C7E04034B5B001F4F
90C7FC6D4B4A5A000F4F5A6D0207EDFFF06C6D4C5B6C4C01075B6C6D4C5B6C6D010FDA3F
FEC8FC6D6CEEFFFCD93FFCDA800313F06DB4030F13C00107D9C01F017F5B6D01F8902683
FFFEC9FC010090B712F8023F16C0020F4BCAFC020115F0DA003F91CBFCDB003ECCFC167E
A2167CA216FCA25EA21501A25EA21503A25EA21507A25EA2150FA25EA2151FA293CDFCA2
5DA2151E5C9578F268>30 D<EA03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C
13806C13006C5AEA03F81313719231>58 D<EA03F8EA0FFE487E4813804813C014E0B5FC
A214F0A314F8A27EA27E7EEA0FFEEA03F8C7FCA41301A214F0A31303A214E01307A2EB0F
C0A2131F1480133F14005B13FE5B1201485A485A485A121F485A5B6CC7FC120C15337192
31>I<F407C0527E527EA21C3F1C7FA21CFF63A2517FA26363A263A263638998B5FC621B
F91A031BF1F207E11A0F09C17FF21F811A3F1B00621A7E62190150804F5A1907507F190F
624F5A193F97C780197E19FE4F801801614E5A18074F824E5A181F4F80183F96C8FC187E
18FE4E834D5A17034E811707604D5A171F4E834DC9FC5F057E8217FE5F4C5A4CBAFC8A5E
5EA25E0580C912034CCAFC5E047E8516FE4B5A5E0303845E4B5A150F4C85151F4B5A93CB
FC4B84157E5D14015D0203874A5A4A5A894A5A143F147F14FF010389496D96B5FC011F6D
6048B500FC061F14F0007FDAFFE0041FB712FCB76C4C16FEA34C1BFC267FE00372EB8000
777679F584>65 D<030FBB7E4B1AFCF6FF801FF01FFC6F87DB000102C0C800076D7EDC00
3F4903008096CA003F7F0C0F7F4D727F787F4E717FA2787F17FF4E721380A28B5E4E1AC0
A35E60A34C1C804E60A221004C97B5FC60545BA24C4F5B4E6166545B4C4F5B95CB485B54
5B9BB5C7FC4C4E5B4D4D13F80B0F5B535B04FF067F13804D4C4848C8FC0A0F13F80A7F13
E04B050FB5128094B900FCC9FC1DC01DF84B19FF1EC005F0C9000F13F00A0113FC4B726C
B4FC4D717F777F777F4B737F4D717F8B894B874D838BA24B747F94CCFCA35D5EA315FF5E
9BB5FCA24A9AC7FC5E65674A624C6265674A624C4E5B67535B4A624C95B55A5291C8FC52
5B4A070F5B4C4D5B5213E04A96B55A09035C4A90CA000F49C9FC097F5B0107B50407B512
F0007FBD12C09ACAFCBD12F81CE051CBFC6C1AC07A7178F084>I<030FBB7E4B1AFCF6FF
801FE01FFC6F87DB000102C0C8001F6D7EDC003F4903018096CA003F13F00C0F7F4D0603
7F0C007F4E727E797F797F05FF737F4E84797F797F5E4E727FA27A7E5E4E737EA34C7513
8060A34C1DC060A34C876022E0685E95CDFCA35E5FA316FF4D5013C0A35D5F68A24B1E80
5F9DB5FCA24B1E005F67695D5F555BA25D4D4F5BA2555B5D94CD5C67694B634C645590C7
FCA203FF515A4C6366684A515B4C4F5B66684A515B4C4F90C8FC545A545A4A505B4C4E5B
535B535B4A505B4C4E90C9FCF5FFFE5213F84A07075B4C4D5B0A3F13804A96B5CAFC0907
13FC4A90CA001F13F050B512C00107B5043F91CBFC007FBC12FC1CF0BD128009FCCCFC1B
E06C07F8CDFC837178F090>68 D<92260FFFF8903807FFF094B712F85DA21BF08192C74A
C7FC051F13F061615FA261A35F96C8FCA394B5FC60A35E60A35E60A35E60A35E60A35E60
A35E60A35E95C9FCA393B5FC5FA35D5FA35D5FA35D5FA35D5FA35D5FA35D5FA35D94CAFC
A392B5FC5EA35C5EA35C5EA35C5EA35C5EA25CA24A5B4A7F0103B512F8003FB87E4883B9
FCA27E912680007F5B4D7179F04C>73 D<4DB500C0EB7FF84D91B612FCA31DF88394C700
03ECF000DF007F13807490C7FCA262A263A21AFF63A36163A36163A36163A36163A36163
A36198C8FCA36162A319FF62A36062A36062A36062A36062A36062A36097C9FCA360A261
A218FFA261A25FA261A2D801FC5DEA07FF486D5E5A486D5C615A5F61B5485C615F91C891
CAFC494B5A4915FF01F05ED87FC04A5B007EC8485B007F4B5B6C6C4A5B6C6C023F5B6D4A
90CBFC6C6CECFFFCD807FE01075B2703FFC03F13E06C90B612806C6C4ACCFC011F14F801
0714C09026007FF8CDFC5E7472F060>I<030FBA12FE4BF1FFF01EFEF6FFC01FF06F87DB
000102C0C86C13FEDC003F4903037F96CA800C3F7F4D060F7F787F4E717F787FA205FF72
7F60797EA25E4E1A80A35E60A29CB5FC5E60A34C4F140060A2684C614E6166685E95CB48
5B68664C4F5B4D625490C7FC545A04FF4E5B4D4D5B535B0B1F13C04B077F5B4D4D48C8FC
0A075B0A3F13F04B0507B512C094BAC9FC1DF81DE04B4ECAFC1CE005F0CFFCA25D5FA35D
5FA35D5FA35D94D0FCA392B5FC5EA35C5EA35C5EA35C5EA35C5EA35C5EA25CA24A5B8201
07B512F0007FB712FE83B9FCA36CD900015B797178F06F>80 D<97381FFFC00703B512FE
073FECFFE04EB712FC060F16FF067F17C04DB5D8E00114F0050749C7000F7F051F01F002
0313FE057F018002007F4D48C9003F7F040301F8040F7F040F01E0707F4C0180707F4C90
CA6C7FDCFFFC717F4B49727E4B49727E4B13C0031F497213804B90CC6C13C04B5A4B4873
13E04A5B4A497313F04A5B4A5B4A7513F85E4A90CD14FC4A488614FF495B4B1CFE5B495B
5D5B4949F37FFFA2495B5B92CFFC90B5FC4A99B5FC5A5C5AA25C5AA248491DFE66A2485B
A348495113FCA448495113F8A35413F0A291CFFCB55213E0A220C066A220806620009BB5
FC4965535BA26D515B7E535B6765535B6C665390C7FC656E636C525A4DB44B5B6E020701
C04A5B6C043F01F04A5B4D6D4A5B6C6D91B56C5E0403D901FE4A90C8FC6C6D902707FC00
3F4A5A05F06DECFFFC6C6D49486E485B6C6DD91F80010F495B74485B6D6C49C70007495B
6D6C013E043F90C9FC6D018070485A6D01C09338E1FFFC6DD9E07E03E313F06D01F0DB03
EF5B6DD9FC3E92B512806D01FF4DCAFC6E01FE4A13F8021F6D023F13E06EDAC007B51280
020391B648C81202020005F8ED0F80153F1507DB007F02E3161F0403D9F80794C7FC93C8
7F66661E7E7415FE535A7414031D0775EB1FF875133F75EBFFF0F3F80F98B65A66A2735E
A29BC8FC65735D6565735D745C657491C9FC7413FC080713F008001380789477F38A>I<
DFFFF81570061FD9FFC0EB01F895B612F0050303FCEB03F0050F03FF1307053FD9800FEB
C00FDDFFF8C7EBE01F4C01E091391FF03FE004070180913807F87F4C48C83803FCFFDC1F
F8ED00FEDC7FF0047F13C04C5A4B49824B49824B90CA6C13804B5A4C834B5A033F1A004C
83157F4B5A654A491701A25C4C60A25CA265A35C65821C03A270715A7094C8FCA2826E7F
82707E17E06E14FEEFFFE06E15FEF0FFE06E16FE6FEDFFE01AFC6F16FF6F17C06F17F003
03836F836F6C82041F82040783DC007F821707DD007F811807DE007F8019071900083F7F
868686747F86A286A30138197F137C13FC645BA21201A264A200031AFF64A2505B1207A2
505B6D4E90C8FC120F505A6D611A1F486C4E5A505A6E4D5A6E4C5B486D4C5B6E4C90C9FC
6E4C5A02FEEE3FFC277FF3FF804B5A01E101E0913803FFE09026C07FFE020F5B9027803F
FFF090B5CAFC26FF000F90B65A486D16F8020116E048D9003F158048020702FCCBFC48DA
001F1380657776F36B>83 D<EE0FFC93B5FC030714C0031F9138F003E0037F9138F80FF8
923BFFFC0FFC1FFC02039039E001FE3F4A90398000FF7F021F90C7127FDA3FFCEC3FFF4A
48804A488049495E4982495B4949804990C85C5B495AA249485F485B605A4A5F5A4A5D5A
62485B605A4A94C7FCA2485FA291C95BA2B5167FA2495FA218FFA2495FA25F1B0E4F131F
A2494B153FA24F133EA24D157EA24F137C007F4C15FC5F4D15F86C6C4B140194B5FC001F
4B028013F06D4AECC003000FDB07FB15E06DDA0FF314076C6DD93FC3EC0FC06CDB7F81EB
E01F6C9027E003FF0015806C9026F81FFE9138F07F00013FB500F8013FB5FC6D02E06D5B
01074A6D13F8010149C700035B9026003FF09138007FC0504B79C85D>97
D<F33F804FB512C096B6FC60A31C8084F1007F1A1F1C00A262A263A21A7FA263A21AFFA2
63A261A263A261A263A261A263A261A263A261A2DC0FFC92C7FC93B5FC0307ECC03F031F
14F0037F02F85B9239FFFC0FFC02039039E001FE7F4A90388000FF021F90C7007F5BDA3F
FCEC3FFF4A48804A488049495E4982495B4949804990C85C5B495AA249485F485B605A4A
5F5A4A5D5A62485B605A4A94C8FCA2485FA291C95BA2B5167FA2495FA218FFA2495FA25F
1B0E4F131FA2494B5DA24F133EA24D157EA24F137C007F4C15FC5F4D5D6C6C4B140194B5
FC001F4B02805B6D4AECC003000FDB07FB5D6DDA0FF314076C6DD93FC34A5A6CDB7F81EB
E01F6C9027E003FF005D6C9026F81FFEDAF07FC7FC013FB500F8013FB5FC6D02E06D5B01
074A6D13F8010149C700035B9026003FF09138007FC0527579F25A>100
D<F2FFC0070313F8070F7F073F13FF4F1480952601FFC013C04E9038801FE04EEB003F4E
48EB7FF095391FFC01FF4F5A063F5BA2187F4F5A18FF1CE05F7413C007E014804D6E1300
F200FC98C7FCA25F61A35FA261A35FA296C9FCA45FA260A3177FA292B97E875CA36E6092
C701F8C9FCA35EA260A35EA260A45EA260A35EA260A35EA395CAFCA35EA25FA3167FA25F
A416FFA25FA35DA25FA35DA25FA45D5FA44B5BA494CBFC5DA35EA2153F5EA35ED803F013
7FEA0FF8D81FFE5C123F007F4A5A12FF5EA24A5BA2494890CCFC5D49485AEBE00F01805B
007F495A393FE07FE06CB55A6C91CDFC6C5B000113F838003FE0549776F454>102
D<EF07FE94387FFF800403B512E0040F9138F801F0043F9138FC07FC933BFFFE07FE0FFE
4B9039F000FF1F030701C0EB3FBF4B90C7EA1FFF4B48804B5ADBFFF8804A496E13FC4A5B
5C4C804A4916F85C4A90C8FC4A5A1BF04A5A61495B4919E0A249495DA24919C05D615B4B
1780A2495FA24B1700A2495FA292C95BA2197FA24A5FA219FFA262A2605C62A2013F5E6E
5D62011F5E60606D6C4B5B95B5FC6D6D5B6D5D6D6D010F5C6FEB3FEF6D6DEBFFDF91263F
FC07131F6EB500FE91C7FC6E14F80203ECE03F0200148092260FFC005B92C8FC187FA261
A218FFA261A25FA2615FA2D803F05FD807FC5DD81FFE4B5B487E484C5B5F96C8FCB54B5A
4D5A494A5B04075B494A13C06C48023F5B49DAFFFEC9FC6C6C01075B90B712F0000F16C0
6C4BCAFCC615F0010749CBFC4F6B7DC854>I<16FE0207B5FC0103B6FC5BA35E7FEB0001
EC007F5EA215FFA25EA25CA25EA25CA25EA25CA25EA25CA25EA25CA293CCFCA25CA25DA2
147FA24B903803FFC0053F13FC02FF91B6FC040381DBF80F15E093261FFE017F49913A7F
E0007FF8DCFF806D7EDBF1FEC77FDBF3F8141F49EBF7F0DBFFE0814C805E4991C8FC4B83
5D5D5B5D5D61495B4B94C7FCA292C9FC495FA24A5FA2017F177FA24A5F19FF13FF624A5D
A24861605C62485FA24A5F605A5013384A4B157CA2484D90C712FCA24A4C14F8067F1401
5A4F14F091C900FF1403A2484EEB07E0A249F10FC04F131F007F1B80F33F0049611BFE00
FF057F495A1A0349706C485A95391FFC3FF072B512C049705C6C487091C7FC6C48040013
FC6CCBEA1FE0567577F265>I<163FEE7F80923801FFE05D5DA25DA417C0A26F13809238
03FE00ED00F893C7FCB3A4EC3FE0ECFFF8010313FE010F6D7E4980D93FE07FEB7F809039
FE007FF0485A4848805B12075B485AA2484813FFA248C7FC5C127E5E007C5B12FC4A5B5A
5E5C1270C7485BA293C7FC5CA25D147FA24A5AA25D5BA2495BA25D5BA25D491538177C49
5B17FC92C7FC4915F81601495A17F04A1303A2EE07E0495AEE0FC0A2EE1F80017F143F4A
EB7F00167E6E13FE013F495AED07F890391FFC1FF06DB55A6D1480010191C7FC6D13FCEC
1FF02E707AED3C>I<F103E0F10FF8F11FFCF13FFE197F19FFA51AFC1AF8F17FF0F13FE0
F11F8096C7FCB3A4EF1FF894B5FC0403804C14E0041F8093393FF03FF893397F801FFCDC
FE007F4B48130F4B48804B5A4B5A4B4815805E4BC7FC5D157E5D604A5A1A004A5A604A5A
615D187F6E5A91C95BA218FFA261A25FA261A25FA261A25FA261A25FA261A25FA296C7FC
A25FA260A2177FA260A217FFA260A25EA260A25EA260A25EA260A25EA260A25EA295C8FC
5EA2D803F04A5AEA07FCD81FFE4A5A486C5D485C5F4B5BB5495B5D494990C9FC4B5A4949
5A6C48495AD9F00313E0003F011F5B6CB6CAFC6C14FC6C14F0000114C026003FFCCBFC47
9083ED47>I<D903FE923801FFE090260FFF80021F13FE013F01E0027F6D7E4901F849B6
7E90B56C010715F02701FE0FFE4901007F9026F807FFD93FF0EB3FFCD803F09126807FC0
6D7E48486C4AC77FDCC1FC80D80FC0ECC3F8DCC7F082D81F80DAEFE080EEFFC001005D48
93C8805E003E5D007E5B5E007C5D6200FC495B4C5F5A5E4A5F1270C791C991C7FCA24A5F
A24B5F1A7F147F634B16FFA202FF60615D63495FA24B5F615B51131C4B4B153EA2494D49
137EA24B94C7127C4F15FC5B5014F84B037F1401A2494EEB03F0A292C9ED07E050130F49
1BC0F41F804A193FF47F00017F053F14FE1B014A706C485A96390FFE1FF873B512E04A70
5C4A705C6D48706C48C7FCD90F80EF0FF05F4B7AC86B>110 D<DBFF80EC03FF020301F0
023F13E04A6D91B512F8021F01FE010314FE4A6D4980DA7F839027801FFC077FDA7E0190
27C03FE00113E002FC9127E07F80007F49486CD9E1FEC76C7EDDF3FC143F4948DAF7F881
DDFFF06E7E494815C04E6E7E4A92C8FC130F4D17804A4A81011F495B1DC002005CA2495B
A2013E4B5DA25D131C90C75CA24B5FA25FA24B5FA294C91480A24B5FA24C1800A2037F94
B5FC645E6203FF60A24C4B5BA24A61624C5F505B5C505B4C94C7FC624A6D4B5A63505A70
4A5B4A4C5B704A5B704A5B4F90C8FC4A6D4A5ADCBF80EB7FF8933A1FE001FFF093260FF8
0F13C04A6DB6C9FC705C4BC614F07113C0027FDA0FFCCAFC94CCFC5DA214FFA25DA25BA2
5DA25BA25DA25BA25DA25BA25D5B017F13E0003FB612F85A82B75A7ED9F0015B5A6984C8
58>112 D<DB1FF8ED7FC092B56C903803FFFC020302E0010F13FF4A6E491480021F02FC
017F14E091273FF01FFE9039FFC07FF0913EFF8007FF01FE000FF84948486CEB83FC4948
6DD9C7F0EB1FFCD907F04C137F49486D01EF14FF49489238FFC0014A168049C81400496F
5C017E5E4903FF16F86048487213F01CE048484C6D13C0F33F0048484A93C7FCA2495EA2
5E6C5AC95CA25EA260A25EA260A25EA295CAFCA25EA25FA2167F1B074DED0F80A204FF16
1FA24D1600D803F061D80FF85BD81FFE197E123F007F4A495D00FF1901634B4C5A4B1607
714A5A49D91FBF4B5A033F4C5A49DA1FFC147F01E0017E4CC7FC297F8001FE0FFEEB03FC
4A486C6CEB0FF8283FF00FF8039038C07FF06CB5486C90B55A6C9126C0007F148000034A
6D49C8FCC649C7000F13F8D91FF0020013C0564B7BC863>120 D<EC3FE0ECFFFC010301
FF17F8496EED03FE011F6EED07FFD93FE06D5D90277F807FF05DEBFE0048486D7E5B4848
6E5D12074919FE4848137F1A7F485A1BFC48C712FF4C15FF007E5B1BF8007C5D00FC495E
A2484B16F05C610070495BC719E05E4A5EA293C814C05C615D027F1880A24B5D14FF1B00
5D495FA24B5EA249177FA24B5EA219FFA262A24B5CA262A260606F5E606D5E606D6D4A5B
95B5FC6E6C5B6F13076E6C011F5C913A1FFF80FFEF020790B5129F6E151F020002FC91C7
FC033F13F00303EB803F92C8FC61187FA26118FF01045FD93F805CD9FFE05E486D5C4860
4D5B485E614D90C8FC4D5A5C4D5A4A4A5A4A495B49C7485B01F04A13804C90C9FC6C6CEC
3FFE6DEC7FF86CB4903803FFF06CD9E01F13C06DB65A011F4ACAFC6D14F0010314809026
003FF8CBFC506B7AC857>I<DB03FC150F92260FFF80EC1F80033F7F92B56CEC3F004A02
F85C4A6E147E020F6E14FE4A6E495A72485A4A6F485A4AEDE00F91B738F83FE095B55A49
D9F0075D92C7003F91C7FCD903FC14074A9138003FFE4AED01FC49484B5A4E5A4A4B5AD9
01804B5A90CA485A4EC8FC18FE4D5AEF07F84D5AEF1FC04D5A4DC9FC17FE4C5AEE07F84C
5AEE1FC04C5A4CCAFC16FEED03FC4B5AED0FE04B5A4B5A4BCBFCEC01FE4A5ADA07F016E0
4A484B7E4A5A4A4815034AC9FC02FE4C5A4948160F495A49484C5A4948163F49484C5A49
B46CEC01FF4901FC020790C7FC90B600C0EB1FFE9338FC01FF4892B65A4801835E3907FC
007F48486D5D01E06D5D48486D5D48486D5D90C76C4AC8FC007E6E5C00FE6E14F0486F5B
48031F13800070DB07FCC9FC494B79C852>I E /Fh 10 58 df<913801FFC0021F13FC02
7F13FF49B612C0010715F04981013F15FE499038007FFFD9FFF001077F02C0130148496D
7F4890C86C7E49153F48486F7E49150F000F83491507001F83491503A2003F83491501A3
007F83A24981A400FF1880B3A3007F18006D5DA5003F5F6D1503A2001F5F6D1507A26C6C
4B5AA26C6C4B5AA26C6C4B5A6D157F6C6D4A5A6C01E001035B02F8130F6DB4017F90C7FC
6D90B55A010F15F86D5D010115C06D6C91C8FC021F13FC020113C0395079CD48>48
D<EC01F014034A7E140F143F14FF130748B5FC123F5AB6FCA26C139FEBFC1FEA1F00C7FC
B3B3B3A2001FB712F84816FC4816FEA36C16FC6C16F82F4E73CD48>I<913807FFE0027F
13FE0103B612C0010F15F04915FC4915FF90B87E488348D9F80180489026C0000F7F91C7
00037FD80FFC02007F4848ED3FFE49151F003F707E498148486F1380A248488119C06CCA
FC7E121E120E1206CBFCA45F1980A25F19005F604D5A171F604D5A4D5A4D5A4C5B4C90C7
FC4C5AEE1FFC4C5A4C5AEEFFC003035B4B90C8FCED0FFCED3FF84B5AEDFFC002035B4A48
C9FC4A5A4A5AEC7FE04A5A495B4990CAFCEB07FCEB1FF8495AEB7FC0495A000390CBFCEA
07FC48B912805A007F18C0A46C18807E3A4E7ACD48>I<913801FFF0021F13FF91B612E0
010315F8010F15FE013F81498290B87E0003DA801F7F489026F800037F4801C001007F48
90C8123FD83FFC6F7E49150F4982D81FC015076C5A6CC9FC1202CAFCA2170F60A2171F4D
5AA24D5A4C485A5E040F5B047F5B031FB5C7FC023FB512FC5F17E0178017F017FC17FF91
C7003F13C004037F04007F717EEF1FFC717E717E19808319C083A27113E0A85F003018C0
1278007C5E007E4C1380B47E6D4B130001F04B5A01FC153FD83FFFEDFFFC6C01E001035B
6C01FF013F5B6C91B65A00015F6C6C93C7FC6D5D010F15F8010115E0D9003F91C8FC0201
13F03B507ACD48>I<EE07FC4C7E4C7E5E5EA293B5FC5DED03FDA2ED07F9150F16F1ED1F
E1153FED7FC1168115FF4A13015C15FEEC07FCEC0FF8141F15F0EC3FE0147F15C0ECFF80
5B4913005C495A130F495A5C133F495A495A5C5A4890C7FC5B485A120F485A5B123F485A
485A90B912FCA219FEA46C18FCA2C9000190C7FCB1705AA23F4D7CCC48>I<90B812F05A
4883A460A249CBFCB3ED7FF80207B57E023F14E091B612F890B712FE8384DBC01F7F9126
FC00037F02F001007F02C0EC3FF84A6E7E49C8FC496F7E6C486F7E120090C97E1980A371
13C0A95F1980A3000C4C1300121C003F5E486C4B5A486C5E01F0157F6D4B5A6CB402035B
001F01C0010F5B6C01FC90B55A6C90B75A6C94C7FCC616FC6D5D011F15E0010315800100
02FCC8FC020713C03A4E7ACB48>I<923803FFF0033F13FF92B612E014075C143F5C49B7
FC49EC001F4901F0130149018090C8FC4948CAFC495AEB7FF0495A5C485B4890CBFCA248
5AA2485AA2485AA2485AED1FFE92B512C0267FE00714F04A80023F804A14FF91B77ED8FF
C3D9803F7F9027C7FC00077F02F01301D9CFC06D6C7ED9DF806E7E01FEC86C7E170F4982
491507A2496F7EA25B711380A4127FA6123FA27F4D1300121F7F000F4C5A7F170F6C6C5E
6C6C4B5A6E143F6C6D4A5A6C6D49485A02F801075B90277FFF803F5B6D90B6C7FC6D5D6D
5D010315F06D5D6D6C1480021F49C8FC020113E0395079CD48>I<007FB912C0A2BA12E0
A46C18C01980CA000713004D5A4D5A4D5A4D5A4D5A4C5B4C5B95C7FC4C5A160F4C5A5F4C
5A167F4C5A5F4B5B5D94C8FC5D5E4B5A151F5E153F5E157F5E15FF5EA25C5E5C93C9FCA2
5C5DA2140FA25DA2141F5DA4143F5DA5147FA25DAA6E5AA23B4D7ACB48>I<913801FFF0
021F13FF91B612E0010315F8010F15FE4981498290B812E0489026FC00077F4801C09038
007FF891C8121F48486F7ED80FF8ED03FEA248486F7E4981A24848EE7F80A76C6CEEFF00
A26D5D000F5F6C6C4B5A6C6C4B5A6CB4ED1FF06C01C0EC7FE0D97FF8903803FFC06DB75A
010F4BC7FC010315F8D9007F14C0A20103B612F8010F15FE013F01F16D7E90277FF80003
7F2601FFE0010013F0480180EC3FF84848C8EA0FFC48486F7E48486F7E4981003F188049
81007F18C0A24848EE7FE0A96C6CEEFFC0A26D5D003F18806D5D6C6C4B1300000F5F01FF
151F6C6D4A5A6C01F049B45A6C01FE010F5B6C90B75A6D5E011F93C7FC6D5D010315F801
0015E0021F91C8FC020113F03B507ACD48>I<913801FFE0021F13FC91B6FC010315C049
15F0011F814981498190B5C66C7E4801F0010F7F4801C001037F484913004848C86C7E49
6F7E485A003F707E5B007F707E5B170784485A1703A284A61980A36C7E5FA26D5D123F6D
5D121F6D5D6C6C15FD6C6CEC01F96E13076C01E0EB1FF16C01FEEBFFE16C90B612C16D03
0313006D14FE010F14F86D14F001011480903B003FFC0007FE91C8FCA260170FA24D5AA2
4D5AA24D5A4D5AA24C5B040790C7FC5ED803804A5AD807E0EC7FFCD80FF849485A9026FF
801F5B4890B65A178094C8FC000715FC00015D6C6C14E0011F91C9FC010013F0395079CD
48>I E /Fi 58 123 df<EE0FFF93B500F0EC1FF8030302FCEC7FFE030F80033F94B5FC
5D92B6FC5C5C5CA24AEBF8034A9038C0007E93C7121C4A4891C8EA7FFEA24BEF1FF8027F
95C7FCAE001FB800F0EC07F04805FCEC1FFC5AB96CEC3FFEA56C5FA2001F17F0C7D87FFC
CAFCB3B3B3B26E48EF1FFC141FDA0FE0EF07F058757BF46D>12 D<EE0FFF93B512F00303
02FCEC07F0030F6EEC1FFC153F4BEF3FFE92B6FC5C5C5CA24AEBF8034A9038C0007E93C7
12084A4891C8FCA25D147FAE001FB812F04817FC5AB97EA56C5FA2001F17F0C7D87FFCCA
FCB3B3B3B26E48EF1FFC141FDA0FE0EF07F057757BF46D>I<D87FC0EF03FED8FFF0EF0F
FF01FC173F01FF94B5FC6C01C0030313FE001F01F8031F13F8000701FE037F13E000016D
6C49B512806C6C01E00107EBFE00011F01F8011F13F8010701FE017F13E00101D9FF81B5
12806D6C01E749C7FC021F90B512F8020715E0020115806E6C49C8FC031F13F8030713E0
03011380481471EE67>20 D<EA3FFF481380AE6C13001207A25B120FA25BA2485AA35BA2
123F5BA3485AA25BA212FF6CC7FCA211276DF239>39 D<EF7FC0933801FFE05E5E041F13
C04C138093387FFE004C5A4B5B030713E04B5B4B5B4B90C7FC4B5A4B5A5E4A5B4A5B4A5B
5C4A5B93C8FC4A5A4A5AA24A5A495BA2495B495BA2495BA24990C9FCA2495AA2495AA249
5AA2485BA3485BA3485BA3485BA34890CAFCA4485AA5127F5BA612FF5BB3A27F127FA67F
123FA56C7EA46C7FA36C7FA36C7FA36C7FA36C7FA26D7EA26D7EA26D7EA26D7FA26D7FA2
6D7F6D7FA26D7F6E7EA26E7E6E7E826E7F806E7F6E7F6E7F826F7E6F7E6F7F6F7F6F7F03
0113F86F7F707E93383FFF807013C0040713E082829338007FC033A06FFD50>I<EA7FC0
EAFFF07F7F6CB4FC6C7F000F7F6C7F6C7FC613FC6D7E6D7E6D7F6D7F6D7F7F6D7F6D7F6E
7E816E7E806E7F6E7FA26E7F6E7FA26E7F6F7EA26F7EA26F7EA26F7FA26F7FA26F7FA26F
7FA36F7FA3707EA3707EA3707EA4701380A518C082A618E082B3A25E18C0A65E1880A54C
1300A44C5AA34C5AA34C5AA34B5BA34B5BA24B5BA24B5BA24B90C7FCA24B5AA24B5AA24B
5A4A5BA24A5B4A5BA24A5B4A90C8FC5C4A5A5D4A5A495B495B5B495B495B4990C9FC495A
495A000313F0485B485B003F5B4890CAFCEAFFFC5B5BEA7FC033A075FD50>I<1A3F507E
507E4F7FB3B3B3A6001FC212FE488D482280C412C0A66C22806C22006C69CC000101E0CD
FCB3B3B3A6735B745A74CEFC8A8A75F2A1>43 D<EA3FFF481380AE6C13001207A25B120F
A25BA2485AA35BA2123F5BA3485AA25BA212FF6CC7FCA211276D8F39>I<001FB812F000
7F17FCA2B912FEA56C17FCA2001F17F0370B7EB045>I<EA7FFEB5FCAEEA7FFE10106C8F
39>I<F201F8F203FCF207FE1BFF62A262A2621BFE1A7F1BFC1AFF1BF8611BF0A24F13E0
A24F13C0A2611B80611B006162197F62A24F5AA24E5BA2606260626062A24E90C7FCA24E
5AA2187F6118FF615F615F61A24D5BA24D5BA25F96C8FC5F60177F6017FF60A24C5BA24C
5BA25E605E605E95C9FC5E5FA24C5AA24C5AA25D5F5D5F5D5FA24B5BA24B90CAFCA25D5E
157F5E15FF5E5C5EA24A5BA24A5BA25C5E5C93CBFC5C5D147F5DA24A5AA2495BA25B5D5B
5D5B5DA24990CCFCA2495AA2137F5C13FF5C5A5C5A5CA2485BA2485BA25A91CDFC5A5B12
7F5B12FF5BA25BA25B127F6C5A6C5A50A075FD67>I<EE3FFF0303B512F0031F14FE92B7
12C0020316F0020F16FC4A82027F707E91B97E4984498449DAE001804949C7001F7F4901
F002037F4901C002007F4B814990C96C7FD9FFFC040F7F4A824849707FA24849707F4A82
48864A177FA2488691CB123FA24848727EA3003F864984A4007F1B80A34984A500FF1BC0
B3A8007F1B806D60A6003F1B00A26D60A3001F626D183FA36C6D4D5AA26C6D4D5AA36C6D
4C5B6E5E6C626E5E6C6D4C5B6E5E6D6C4C5B6D01C092B5C7FC6F5C6D01F802075B6D01FF
023F5B6DDAE001B55A6D91B75A6D606D606E5F021F4CC8FC6E5E020316F0020016C0033F
92C9FC030314F0DB003F90CAFC527376EF67>I<167C16FF5D4B7F150F5D157F4AB5FC14
07147F011FB6FC001FB7FC5A5AA2B8FCA36C149FECFE1F6C13E0380FF800C8FCB3B3B3B3
A70007BAFC001F19804819C0A21AE0A31AC0A26C19806C190043706DEF67>I<93B57E03
1F14FC92B712C0020316F0020F16FE023F707E91B912E04984010718FC4984498449DA00
0F814901F0D9007F8090B500800207804849C80001804A6F6C7F4849041F7F4801E0707F
4A16034849707F488491CB6C1380485A7413C04848845B7413E0485A86A26C481AF0123F
6C4884120F12076C5ACDFCA362A31CE0A2621CC0A2621C8062501300A2505A61634F5B4F
5B614F5B4F5B4F5B96B5C7FC4E5B06075B4E5B4E5B4E13C095B55A4D91C8FC4D5B4D13F8
051F5B4D5B94B512804C91C9FC4C13FC4C5B041F13E04C5B4C5B4B4848CAFC4B5B4B5B4B
13E0033F5B4B5B4B48CBFC4A5B02075B4A13E04A5B4A5BDAFFFECCFC495B495B010F13E0
495B495B4948CDFC48485A4890BB1280481BE05A003F1BF0A66C1BE07E6C1B80547078EF
67>I<EA7FFEB5FCAEEA7FFEC7FCB3B3B2EA7FFEB5FCAEEA7FFE10566CD539>58
D<EA3FFF481380AE6C1300C8FCB3B3B2EA3FFF481380AE6C13001207A25B120FA25BA248
5AA35BA2123F5BA3485AA25BA212FF6CC7FCA2116D6DD539>I<001FC212FE488D482280
C412C0A66C22806C2200000F21FCD7FCB3AA000FC212FC003F21FF482280C412C0A66C22
806C22006C698A3475C7A1>61 D<F007FE95381FFF804E7F4E7F95B57EA24D80A24D80A2
4D80A24D80A34D6D7F18FE053F814E7E057F81A24D486C7FA24C496C7FA24E7E4C82A24C
496C7FA24C496C7FA24C90C780A24C6F7F5FA24C486E7FA24C486E7FA24B496E7FA24B49
6E7FA24B844D80A24B496E7FA24B90C980A24B48707FA2037F717F5E03FF854C824A864C
82A24A49707FA24A49707FA24A864C824A8793CBFC4A874B84A24A48727FA291BD7EA249
88A24988A24988A34988A24990CD80A249894A86017F894A8601FF894A86A24849747FA2
4849747FA248767F5C488A4A86481F8091CFFC481FC04988A248487613E0A200FF7713F0
5B4988A201C01C036CD113E0747378F285>65 D<001FB97E4818FF4819F0BCFC1BE01BF8
1BFE757E1CE01CF88849C9000F15FFDE001F81070181DF003F80080780080080093F7F09
0F7F87757F1B00761380A2881EC088A7521380A26499B51200515B63515B091F5B515B98
B55A08035C081F5C97B548C7FC07075C96B612F095B712C090BCC8FC1BFC1BE098C9FC1A
F01AFEF2FFE01BFCF3FF801CF01CFC49CA15FF070315C0DF003F80080714F8080080093F
7F090F7F09031480090014C07613E00A1F13F07613F8887613FCA27613FE88A21EFF89A6
9AB5FC1EFE64A25213FC645213F8640A7F13F099B5FC090314E0090F14C0097F148050B6
1200081F5C4FB65A077F5D90BD12E0659AC7FC1CFC1CF01CC051C8FC1BF86C1A806C07F8
C9FC6C06FCCAFC68716DF087>I<001FB912FC48F0FFF04819FFBC12F01BFCF3FF801CE0
1CF81CFE767E8991CA003F15F0070081080F14FE080080093F80090F800903800900800A
3F7F767F0A077F767F7680768089777F777F89777F8B89777FA2777FA2781380A28A20C0
A28A20E0A28A20F0A38AA220F8AE20F0A266A320E066A320C066A2541380A29BB51200A2
535BA2535B65535B6765535B535B9AB55A640A0791C7FC525B0A3F5B525B51B55A09075C
091F5C98B6C8FC08075C087F5C071FB612F091BC5A1D8052C9FC641CF01C8051CAFC1BF0
6C1A806C07F8CBFC6C06FCCCFC75716EF093>68 D<001FBEFC481DC05ABF12E0A51EC0A2
1E0091D0FCB3B3A291BC12C01DF0A289A565A21DC091D0FCB3B3A591BD12C01EF0A21EF8
A66C1DF07E6C1DC065716EF081>I<001FBD12F0481CFC5ABE12FEA51DFCA21DF091CFFC
B3B3A491BB12F01CFCA288A564A21CF091CFFCB3B3AC6C5A123FEA1FF85F716EF07B>I<
96B512F8063FECFFF00503B87E051F17F894BAFC040319E0041F19F8047F19FF4BBC12C0
4B1BE0150F4B9238C0003F037F02F8C8FC92B600C0150F02034AC9000114C04A02F0EE00
3F4A02C0170F4A91CB12034A4918004A01F8193F91B548F11F80494A190749028096C7FC
4991CFFC495B5D495B495B5D495B90B5FC5D4891D0FCA2485B5C5A5C5A5C5AA25C5A5CA3
5A5CA4B5FC91D1FCA2083FB712E05016F0A9866E94C812017EA4807EA3807E80A27E807E
807E806C7FA26C80817F6D7F816D7F6D7F816D7F6D806D14E06D806E7F6E13FE6E7F6E14
C06E02F017076E02FE173F0200DAFFC00303B5FC6F02F8157F031FDAFFC0013FB6FC6F92
B9FC15036F1BE06F6C1A80041FF1FC00040319E0040096C7FC051F17F8050394C8FCDD00
3F15E0060002F0C9FC6C7771F38A>I<001FB712E04816F85AB812FCA56C16F8A2001F16
E0D8000149C7FCB3B3B3B3B2001FB712E0007F16F8A2B812FCA66C16F87E6C16E02E717D
F035>73 D<F13FF0F1FFFCA24E13FEB3B3B3B3B260A21AFC003C5F123E007F4D13F801C0
5E01F05E01FC93B512F0D9FF801403B500F0020F14E09126FF8001B612C092B812801A00
616C60001F60000318E0C61880011F4CC7FC010116F8D9001F1580DA003F01F0C8FC4774
78F05F>I<EA1FF8EA3FFE127FB5FCB3B3B3B3B3A991BB12FC1CFFA21D80A56C1C007E6C
1BFC59716EF075>76 D<261FFFC0F5FFFE4801F00A03EBFF80486D64B56C5214C06E64A2
6E64A36F63A26F98B6FCA201FB6D5013EFA201F96D5013CFA26F6201F81E8F6F62027F1D
0F6F62023F1CFEA26F1A3F6E1CFC70197F6E1CF87019FF6E1CF070606E1CE070606E1CC0
7060A26E6D4E1380A2037F1B007060033F6270183F6F6271177F6F627117FFA26F6D4C5B
A26F6D4C5BA26F6D4C5BA26F62715E047F96C7FC715E043F6071163FA2706D4B5AA2706D
4B5AA2706D4A5BA27060725C7060725C7060725CA2716C4A90C8FCA2716C4A5AA2715E73
137F715E7313FF715E735A715E735A715EA2735A715E735A067F92C9FC735A063F5CA272
6C485AA2725C1AFF725CA2725CA3725CA2725C7390CAFCA2F11FFCF107F06C4894CC6C13
80123FD81FC09B3801FE0082716DF0A9>I<261FFFE0F107F04801F8F11FFC487FB56CF1
3FFE8081A28181A281A201FB7F01F97FA201F87FA26E7EA26E7F6E7FA26E7FA26E7F6E7F
A26E7FA26E7F6F7EA26F7FA26F7F6F7FA26F7FA26F7F6F7FA26F7FA2707EA2707F707FA2
707FA2707F707FA2707FA2707F717EA2717FA2717F717FA2717FA2717F717FA2717FA272
7EA2727F727FA2727FA2727F727FA2727FA2727F737EA2731380A27313C07313E0A27313
F0A27313F87313FCA27313FEA2F27FFFA27413BF7413FFA286A28686A286866C487313FC
003F86D81FC0070F13F05F716DF086>I<96380FFFF80607B612F0067F15FF0507B812F0
053F17FE94BA7E040719F0041F19FC047F19FF4BBC12C04B87030F9226F0000715F84B02
FCC8001F80037F02E0030314FF92B548CA003F80020302F8050F14E04A02E00503804A02
800500804A49CC003F7F4A01F8070F7F4A49737F91B500C0070180494A73804991CE6C7F
4901FC091F7F4949757F4B874949757F498B4949757F4B8790B5D06C7FA24849777F4849
777FA24849777FA24A89488D4A89488DA24A89488DA24A89488DA491D27EA2B52180AC6E
9BB5FCA26C2200A36E65A26C69A26E65A26C6D535BA26C696E65A26C6D535BA26C6D535B
6E656C696F99B5FC6C6E515C6D9DC7FC6F636D6D515B6D6D515B6F636D6D515B6D6D515B
6D6E97B55A6D6E4F5C6D6E4F5C6E01F8070F91C8FC6E6D4F5B6E01FF077F5B6E02C04DB5
5A6E02F005075C6E02FC051F5C020002FF057F14806F02E00303B6C9FC6F02FE033F5C03
0FDAFFF8010FB612F8030392B912E06F636F6C97CAFC041F19FC040719F004001980053F
4DCBFC050717F0DD007F93CCFC060715F0DE000F01F8CDFC897775F3A0>I<001FB912F8
48F0FFF04819FFBC12F01BFEF3FFC01CF01CFC1CFF1DC08991CA000715F8DF000F800800
14FF091F80090380090080767F1C1F767F767F88767F888A89A21F8089A6651F00A29AB5
FC6664525B64525B525B1C7F99B55A09035C091F5C98B6C7FC080F14FC0707B65A91BC12
E0659AC8FC1CFC1CF01CC051C9FC1BF098CAFC1AF0A291C900037F86727F84737E737F87
737F85737F737F87737F737F86747F88747F747F86747F88747F747F87757F89757F757F
757F8789757F757F767F888A767F767F767F888A767F767F7713807713C0A27713E06C48
87003F7613C0D81FF8090113806B716EF087>82 D<001FC212C04821F05AC312F8A56C21
F0A2001F21C0CC001F01E0CCFCB3B3B3B3B3A8735B857390CDFC857079EF94>84
D<D81FF8F201FCD83FFEF207FF127FB5501380B3B3B3B3A56E61A26C1D00A26E617E656E
197F6C646E19FF6C505B806C6D4E5B6E606C505B6E606C6E4D5B6C02E04D5B6D6D4CB5C7
FC6D6D5E6D01FE040F5B6D6D6C033F5B6D02F04AB55A6D02FE020F5C6D9126FFF001B65A
6D92B81280023F96C8FC6E18FC020760020118E06E6C1780031F4CC9FC030716F8030016
C0041F4ACAFCDC007F138061746EF086>I<D83FF0972603FF80F207F0D87FFC5001E0F2
1FF86D506D1A3FB5506DF27FFC6C516DF2FFF880A26C516D4F13F08099B5626C771BE080
51646C0ADF6D1AC0805101CF6D606C6D088F1C80A26C506F4E13006E1A87510107626C78
616E86E11FFE1B7F6C78616E86E13FFC6E18FF6DA15B6F856D4F486E4D5B8109FF147F6D
506E4D5B81506F606D506F606F8650715E6D50646F866D4E496F4C90C7FC818A6D4E90C7
6E4C5A81506F187F6D4F705F81083F6F18FF6E4E705F826E057F6F6D4B5B63826E05FF70
6C4B5B6370866E4C49714A5B824F715E6E4E715E826E4C714C90C8FC5183826E4C714C5A
98C980826E4C716D4A5A6270866F4B48724A5AA26F6D735F4F48725BA26F6D087F5E4F48
725BA26F6D745E4E49735AA26F01F0745E4E49735A6F7693C9FC05F85C4E755A6F765D05
FC91CBFC4EF3F03F6F765D05FE5B061FF3F87F047F755D05FF5B70756D485A4E5AA27001
BF087F5C4F1AFD06FF98B5FC70765C61A270765C618D704A99CAFCA270765B96CDFC7049
745B7148745BDD1FF89738007FE0B6727CF0BF>87 D<92380FFFF00203B6FC023F15E049
B712F8010716FE013F707E90B97E000384000F844884DC007F7F03C001077F02FCC70001
7F02E06E6C13806C90C97E01FC7013C001F07013E0498201807013F00002CAFCCB7E1AF8
84A21AFC197FACF03FFF4CB6FC167F030FB7FC157F0203B8FC141F027FED807F49B6EA80
00010702F0C7FC011F91C8FC4913F84913C048B5C9FC4813FC4813F05C485B485B91CAFC
485A5B127F5B12FF5BA519FFA27F606C6C5EA26D160F6D5E6C6D5D02E092B5FC6C6D1403
02FE021F137F6C9026FFE003B5FC92B612FE6C17F86C17F06C17E06C17806DEDFE006D03
F8EB3FF86D15E0010792C7EA0FE0010102F891C7FC9026003FFECAFC465B75D862>97
D<EA1FC0EA3FF0127F487EB3A6EE3FFC0303B512C0030F14F0033F14FC92B7FC020316C0
4A82021F16F84A824A8291B9FC01F9D9FC008101FB01E0010F8090B5C70001804A6E7E02
F86F7F4A030F7F4A814A6F7F4A6F7F91CAFC49717E854919804983851BC0851BE0A285A2
1BF085A41BF885AD611BF0A4611BE0A3611BC0611B806D5FA26D4D1300616D4D5A606E4B
5B6E4B5B6E5D6E4B5B6E037F5B6E92B55A6E02075C9026FBFF80133F01F9D9F003B6C7FC
01F890B75A19F86E5E6E5E020F5E6E93C8FC6C486C15FC003F010015F0D81FC0013F14C0
C8000F49C9FC030113E04D7570F267>I<93380FFFF84BB612C0030F15FC033F15FF92B8
12C0020317F04A17FC021F17FF4A18C04A18E049BAFC499138F8001F490280EB007F4949
C8120F4901F8030313C003E015004949163F4949161F4948CAEA07804A94C7FC5A485B5C
485BA2485B5CA24890CDFCA25A5BA3485AA5485AAD7F127FA47F123FA27F7EA2807E806C
7FF201C06C6DEF03E06E17076C190F6E171F6C6D177F6D6C6CEEFFF06D6D5D6F15076D01
F8151F6D01FE157F6D6D6C0107B512E06D02F8017F14C06D91B812806DF0FE00023F5F6E
5F6E17E00203178002004CC7FC033F15F8030F15C003014AC8FCDB000F13C04C5B77D85C
>I<F21FC0F27FF0A2F2FFF8B3A6EE7FF80307B57E033F14E092B612F8020315FE4A8102
1F16C04A8291B87E49834983494AC66C7E4902E0010FB5FC4991C712034901F814004B81
4901C08190B5488192C97E4801FC8248845C4849825C484982A2485BA291CBFC5A5BA212
7FA25BA312FF5BAE7F127FA47F123FA27F7EA26E5E7E6E5E6C7F616C6D5E806C6D5E6E5E
6C6D5E6F92B5FC6D01E05C6D6D4A5A6D01FC140F6DD9FF80EB3FFC9339F803FFF86D91B6
5A01015F6D5F6E5E6E5E020F5D6E03F8EB7FF0020115E06E6C0280EB1FC0030F49C9FC03
0013E04D7577F267>I<EE3FFE0303B512F0031F14FC037FECFF804AB712E00207824A16
FC023F824A8291B97E498449DAF007804991C7003F7F4901FC020F7F4901F002037F4901
C0140049496F7E92C9123F4948707E4849824A701380485B4A7013C048845C48497013E0
A24890CBFCF27FF0485AA349183F127F1BF85BA312FF90BBFCA61BF0A21BC001F0CDFCA2
7FA3127FA27FA3123F7FA26C7EA26C7FA2806C7FA26C6DEF01C06C6DEF03E06E17076C6D
170F6E173F6D6DEE7FF06D6DED01FF6D01F05D6D01FC151F6D01FF157F6D02C00103B512
E06D02FC017F14C06D91B812806EEFFE006E5F6E5F020717E0020117806E6C4BC7FC031F
15F8030715C003004AC8FC040F13C04D5B78D85C>I<94B5FC040F14F8047F14FF4BB712
801507151F5D92B8FC5C5C5CEF80034A01F8C7123F4A01C0EC060093CAFC4A5A5DA2147F
AD001FB812C04817F05AB97EA56C5FA2001F17C0C7D87FFCCAFCB3B3B3B26E5A141FEC0F
E041757BF43F>I<DC3FFCEC1FC00303B56CEB7FF0031F14E0037F02F8EBFFF84AB612FE
020781021F824A824A8291B87E010383494AC67F4902E0131F0480EB07FE4949C7120149
01F86EB5FC4901E08190B548814B814891C9FC4849825C4849824A82485BA24A82485BA2
4890CBFCA35B127FA25BA312FF5BAA617FA2127F617FA26C7E61806C60806C6D5EA26C6D
5E806C6D5E6E16FE6C6D6C14016C6E4A5A03F014076D01FCEC1FF86DD9FF80137F6D9139
F803FFF06D91B65A6D5F6D5F01005F6E5D6E5D020F5D020315E002001580031F49C7FC03
0013E093C9FCA51BF0A2611BE0A2614F13C0A24F1380D803805FD807F0057F130001FF4D
5A02E0150302FF031F5B03FE49B55A92B85A6262624FC7FC6C60C66C17F0010F17C0D900
7F93C8FC020315F8DA000714804D7377D767>I<EA1FC0EA3FF0127F487EB3A693380FFF
8093B512F8030714FF031F15C0037F15F092B77E0203824A824A824A17804A17C04AEB00
1FDAFFF0010114E003C0EB003F01F990C86C13F0D9FBFE814A81D9FFF86F13F84A815C4A
811AFC5C91CAFC197F5BA35BA45BB3B3B16C48EF3FF8123FD81FC0EF0FE0467370F267>
I<EA1FF8EA3FFE127FB5FCAAEA7FFEA2EA1FF8C7FCAEEA07F0EA0FFC121FEA3FFEB3B3B3
B3A8EA1FFC120FEA07F0107472F32E>I<EA1FC0EA3FF0127F487EB3A8F10FFEF13FFF96
B512804E1400604E5B4E5B4E5B067F5B95B512C04D5C4D91C7FC4D5B4D5B053F5B4D5B94
B512C04C5C4C91C8FC4C5B4C5B043F5B4C5B93B512C04B5C4B91C9FC4B5B4B5B033F5B4B
5B92B512C04A5C4A91CAFC4A5B4A5B023F7F4A7F91B6FC01F98101FB8190B77E83A203E3
7F03C17F03817F03007F4A7F4A6D7F4A6D7F02E0814A6D7F4A7F91C76C7F496E7F498249
6E7F4981717F717F717F85717F83717F717F85727F84727F727F86727F84727F727F8673
1380857313C07313E01BF0856C4883003F84D81F809438007FE04C7370F262>107
D<EA1FC0EA3FF0127FEAFFF8B3B3B3B3B3B3EA7FF0123FEA1FC00D7370F22E>I<93260F
FFC0933803FFF093B500FC043F13FFD81F800103DAFF8092B612E0D83FE0010F03E00203
15F8007F023F03F8020F15FE486C90B76C023F814A704A8202077049B87E4A7148834A71
48834A7148834AD9000F4BEBC00303F8010002F049C7003F7FDAFFC0023FDA3FF0140F01
F149020F6D484802037FD9F3FEC86CDAFF80804A6F92C9FCD9F7F86FD9FDFE707E4A6F4A
82D9FFE0EFFFF84A70498222804A6091CA5C73844961A34996CAFCA44960B3B3B16C4871
48711300003F060F84D81FC0DD07F0EF01FC815870D7A2>I<93380FFF8093B512F8D81F
80010714FFD83FE0011F15C0007F027F15F0486C90B77E0203824A824A824A17804A17C0
4AEB001FDAFFF0010114E003C0EB003F01F190C86C13F0D9F3FE814A81D9F7F86F13F84A
81EBFFE04A811AFC5C91CAFC197F5BA35BA45BB3B3B16C48EF3FF8123FD81FC0EF0FE046
5870D767>I<933807FF8093B512FC0307ECFF80031F15E0037F15F84AB712FE0207707E
4A83023F17F04A8391B97E499126F8007F7F49028001077F4901FCC8804901F0033F7F49
01C0030F7F49496F7F4990C96C7F02FC16004948717E4849717EA24849717E4A83481B80
4A83481BC091CB7E481BE04984A2003F1BF04984A2007F1BF8A349197FA200FF1BFCAD6D
19FF007F1BF8A46D60003F1BF0A36C6C4E13E0A26E5F6C1BC06E5F6C1B806E5F6C1B006E
5F6C6D4D5A6E17FF6C6D4C5B6D6C4C5B6D6D4B5B03E0151F6D6D4B5B6D01FE4AB55A6D6D
6C01075C6D02F8017F91C7FC6D91B75A6D6C17F86E5F6E5F020717806E94C8FC020016FC
033F15F003071580030002FCC9FC04071380565B78D867>I<EE3FFC0303B512C0D81FC0
010F14F0D83FF0013F14FC007F91B7FC26FFF80316C04A82021F16F84A824A8291B9FC01
F9D9FC008101FB01E0011F8090B5C70003804A140002F86F7F4A031F7F4A814A6F7F4A6F
7F91C97E49707F854919804983851BC0851BE085A2851BF0A285A31BF8A285AC611BF0A3
61A21BE061A34F13C0A24F13806D5FA26D4D130096B5FC6D4C5B606E4B5B6E4B5B6E5D6E
4B5B6E92B55A6E02035C6E020F5C9026FBFF80133F01F9D9F003B6C7FC01F890B75A19F8
6E5E6E5E020F5E6E93C8FC6E15FC020015F0033F14C0030F49C9FC030113E092CCFCB26C
5A123FEA1FC04D6F70D767>I<DC3FFCEC1FC00303B56CEB7FF0031F14E0037F02F8EBFF
F84AB612FE020781021F824A824A8291B87E010383494AC67F4902E0131F0480EB07FE49
49C712014901F86EB5FC4901E08190B548814B814891C9FC4849825C4849824A82485BA2
4A82485BA24890CBFCA35B127FA25BA312FF5BAC7FA2127FA37FA2123F7FA26C6D5EA26E
5E7E806C6D5E616C7F6E5E6C6D5E806C6E5D6D6D92B5FC03F04A5A6D6D14076D01FE4A5A
6DD9FFC0EB3FF86D9138F803FF6D91B65A6D5F6D5F6E5E6E5E020F5D020315F86E5DDA00
3F14C0030F49C7FC030013F093C9FCB2F27FF0A2F21FC04D6F77D767>I<17FF040F1380
D81F80143FD83FE049B5FC007F1407486C5B153F5D92B6FC5C5C4A15004A14804A01F8C7
FC4A13C04A48C8FCECFFF85D01F113C05D01F390C9FC5CEBF7FC5CEBFFF05CA25C5CA291
CAFCA25BA35BA45BB3B3AA6C5A123FEA1FC0315870D745>I<92387FFFE0020FB67E027F
15F049B712FE0107EEFFC0011F17F04917FC498390B9FC5A5A489138C0003F4801FCC700
015B02E0EC003F484915074A15014890CA12784994C7FC5BA2127F5BA67FA27F6C7E8080
6C7F14F86C13FF6C14F0EDFFC06C15FE6CEDFFF06C16FE6DEDFFC06D16F0010F16FC6D82
0101707E6D6C82021F82020382DA001F81030081040780EE003F05077F1701716C138084
7213C084847213E0A384A660003819C0123C007F5F01C05E6D188001F85EB5047F130002
E092B5FC02FC02075BDAFFE0137F92B75A6C60001F606C60000360C695C7FC011F5E0107
16F8010016C0020F4AC8FCDA003F13C0435B7AD84F>I<EC03F0EC07FC140F4A7EB3A400
1FB912C04818F05ABA7EA56C60A2001F18C0C7D81FFECAFCB3B3B3A281A3191C6E6D143E
19FE70EB03FF180F6E6D137FDCF807B5128093B7FC80A26E170019FC6E16F06F15C06F4A
C7FC6F14F003071480030101F0C8FC41717CEE4B>I<D81FC0EF0FE0D83FF0EF3FF8127F
486CEF7FFCB3B3B3A319FFA360A260A260607F007F5F606D93B5FC4D137F6C6CED07FE02
C0140F6C01F0EC7FFC02FF903807FFF86C91B612F06C17E018806C17006C16FC6C6C4BEB
3FF86D15E0010F92C7EA0FE0010102F891C7FCD9001F1380465870D567>I<D87F8019FF
D8FFE0060313806D607F627F626C6C1A0062003F627F1A7F6C6D601AFF6C6280616C6D60
616C6280616C6D60616C6280616D6C95C7FC61013F6080197F6D6D5E19FF6D6081606D6D
5E606D6081606D6D5E606D6081606E6C93C8FC60023F5E81187F6E6D5C18FF6E5E825F6E
01E05C5F6E5E16F05F6E01F85C5F6E5E16FC5FDB7FFE91C9FC5F033F5C16FF177F6F495A
A26F5CA36F5CA26F5CA36F5CA26F5C7090CAFCEE1FFC51577BD55C>I<D83FC0DD0FF018
FE486CDD1FFCEF03FF6D4D6C5F486C057F4E13806D94B5FC007F551300876D5E003F555A
876D5E6C555A876E4B5A6C555A747E6E150F6C545B07FC7F806C051F013F4C5B876E16F8
6C053F011F4C5B87806CDD7FF04D5B1A0F876EDBFFE05F017F9CC7FC747F6E5C013F05C0
4D5A747F6E5C6D05804D5A747F6F5B6D05004D5A747F6F5B6D525B4E816F177F6D031F4E
5B4E816F173F6D033F4E5B4E811B1F6D6D017F4E5B60757E6E6C01FF4E90C8FC60751380
6E6C634C49173F1DC0021F725D6F48197F4E16E06E725D048719FF95C8FC6E726D5BA2DC
CFFE17F16EDF7FF95BA24D17FB04EF173F6E01FF95B55A5F886E645F886F98C9FC5F886F
625F6F49705B6F90CA6C5BDB03FE9438007FE081577CD58A>I<D83FF0F007FED87FFCF0
1FFF6D606D606E94B5FC6C6D4C5B6C626C6D4C5B6C6D4C5B6C6D4C5B6C6D4C5B6C6D4C5B
806D6D4B90C7FC6D4D5A6D6D4A5B6D6D4A5B6D6D4A5B6D6D5E6D6D4A5B6D6D5C027F4B5B
6F4A90C8FC6E6D495A6E6D5C6E6D485B6E6D485B6E6D485B6E6D5A6E4A5BDB7FFE5C6F6C
4890C9FCEFFFFE6F5C6F5C6F5C816F5C6F5C705B7090CAFC705A4C7E4C7F93B57E4B805D
844B804B804BEB3FFE4B486C7E4B486C7F4B486C7F854A496C7F4A497E4A496C7F4A496D
7E4A6F7E4A90C77F4A486E7F4B6E7F4A486E7F49707F49498249498049496E7F49496F7E
49717E92C96C7F4948844948707F4849707F48727F4849707F4849824849844A717E4873
13804890CB6C13C048487213E05B498449846C48060013C053567CD55C>I<D83F8019FF
D8FFE0060313806D607F6D60A26C6C4E1300A26C6C60631A7F6C6D60A26C6D17FF636C6D
5E637E6E4C5BA26C6D5E636C7F4F5B6D7E61013F96C7FC6E5E626D7F4F5A6D7F19FF6D60
816D4C5B81606D6D5EA26D4C5B81027F4B5B81143F6F4A90C8FCA26E4B5A828070495A80
617013FF8070485B80616E6D5A61ED7FFC5F61ED3FFE4D90C9FC151F16FF6F495AA26FEB
9FFC17BF608117FF6F5CA26F5CA28260A2705BA27090CAFCA2825F161F5F163FA25F167F
5F16FF4B5B5D030F5B0078023F5B26FFE001B5FC90B7CBFC5E5E5E5E16C05E6C4ACCFC15
F86C14E0000149CDFC516F7BD55C>I<0003BB1280481AE05A481AF0A57EA200031AE0CC
003F13C04F138096B512004E5B4E5B604E5B624E5B4E5B4E5B95B5C7FC4D5B4D5B5F4D5B
614D5B4D5B4D5B94B5C8FC4C5B5E4C5B604C5B4C5B4C5B4C5B93B5C9FC4B5B5D4B5B5F4B
5B4B5B4B5B4B5B92B5CAFC4A5B5C4A5B5E4A5B4A5B4A5B4A5B91B5CBFC5B495B5D495B49
5B495B495B495B90B5CCFC5A485B5C485B485B485B485B4890BA1280BC12E0A21BF0A56C
1AE0A2001F1A804C567AD559>I E /Fj 42 122 df[<973801FFF0083F13FE4FB612C007
0715F0073F15FC4F15FF4EB87E0607834E834E834E834E8395B97E4D844D854DED807F4D
9126F8000F8008E06D804D028013014D91C8804F814D01F86F7F4F8194B5844F814C5C77
7F4C5CA296C97E8B5E6089A765A3535BA2656765A2724C5B535B7095B5FC6764525C734A
4A191E52F43FF05291CD48B4FC704D5B734A4997B57E51B55A515C5164706E494A99C7FC
515C097F5C98B6CD485B716D485C5002F862080F5C73484A64714A4A6273B6486407FD92
CEFC7190B648630AF8655263715E52657193CF5A51665199B5FC7115F051515C715D0507
92CF4891C8FC4D5C4D02F8525B177F94B6535B0403814C6F525B161F4C6F525B93B8FC4B
71515B4B7198B5FC030F6B4B02FB6E62037F02F36E6592B600E165020303806E5091C9FC
4A4B80021F02FC6D525B4A4A6F505B4A02E06D7F49B6486D6E4F5B4992C76F61494A6E66
494A6E6E96B55A4902F07160494A6E6E4E5C4902806E6E6390B6C9634802FC724E91CAFC
484A706D4E5B4B706E5F4802C0706E614B734D5B4891CA6C6E94B55A48736E5E4A716E4C
5C4849716E4C5C585C4A716E5E48746E4B91CBFC756E4B5B4A726E92B55AB5736E4A5C75
6E4A5C4A7202FE5C784A5C756F495C756F017F5C766E90B6CCFC766E485C766E485C6E73
DAFC0F5C76DAFF1F5C7603BF5C6E7392B65A76606C7694CDFC6E7416FC0B0F5E6E745E6C
6D745E6F735E6C765E03E053CEFC6C6E07036F7E6F070F16E06C02FE077F16F86C6E4EB8
00FEF0078004C0050FDDFFC0173F6C03F094BA00F0933801FFC06C03FE040F07FE160F6D
DAFFC04ABC00E04AB5FC6D03FE49BE6C137F6D92C5B4FC6D1DFC6DF5F03F6DF5C00F6DF5
00036D0AFC7F023F09F06D7E6E09C0140F020750C81203020108F003001A80DA003F0780
161F030F06FCCA0003F0FC00030106C0DD007F17C0DB003F04FCCC000F04FCC7FC040304
80DF007F15C0DC000F0280CE000102E0C8FC>194 175 116 297
223 38 D[<F11FFF6196B512806060060F14004E5B4E5B4E5B4DB512E04D5C4D5C4D91C7
FC4D13FC4D5B4D5B94B55A4C5C4C5C4C91C8FC4C5B4C5B4C5B4C5B93B55A4B5C605D4B91
C9FC4B5B4B5B5F5D4B5B5F92B5FC4A5C5F5C4A91CAFC5E5C4A5BA24A5B5E5C5E91B5FC5E
5B5E5B93CBFC5B5D5BA2495BA2495BA3495BA390B55AA2485CA35A5DA34891CCFCA4485B
A4485BA5485BA65A5CA7B5FCA25CB3A580A27EA7807EA66C7FA56C7FA46C7FA46C80A381
7EA36C80A26D7FA36D7FA36D7FA26D7FA27F817F827F827F82808280826E7FA26E7F8082
6E8080836E8081836F7F81836F7F6F7F6F8081846F80707F707F707F707F707F70807080
7080717F717F717F7113FF718071807180716C13F8727F7213FF84060314808484073F13
0085>73 231 102 309 116 40 D[<EA3FFC487EB57E80806C13F86C7F6C7F6C7F000314
C06C806C806D7F011F7F6D7F6D7F6D806D806D806E7F6E7F6E7F6E7F6E7F6E806E808083
6F7F6F7F6F7F81836F7F81846F808184707F8284707FA2707F8284828582858285838583
85A2717FA2717FA3717FA37180A27180A38683A3727FA4727FA4727FA5727FA68684A71B
80A284B3A560A21B00A76062A64E5BA54E5BA44E5BA495B55AA35F62A34D5CA24D91C7FC
A34D5BA34D5BA24D5BA2615F6194B5FC615E615E96C8FC5E605E4C5BA24C5B605E93B55A
605D4B5C95C9FC5D4B5B5F5D4B5B4B5B92B55A5F5C4A5C4A91CAFC4A5B4A5B4A5B4A5B91
B55A495C495C4991CBFC495B495B017F5B90B55A485C485C000F91CCFC485B485B485BB5
12E05C5C6C48CDFC6C5A>73 231 112 309 116 I<0007BB12C0001F1AF0481AF8481AFC
A2BC12FEA56C1AFCA26C1AF86C1AF000071AC04F0F7DC563>45 D[<187E4DB47E4D7F4D
7F5F4D7F177F94B5FC1603160F5E93B6FC1503153F0203B7FC0107B8FC000FB9FC5A5A5A
A2BAFCA46C15FD16E16C15016C14F06C1400D803FEC7FCC9FCB3B3B3B3B3B3A848BD12F0
00071CFC48884888A2481D80A56C1D00A26C646C6400011CF0>97
162 100 289 149 49 D[<0603B5FC4DB612FC051FEDFFC094B812F8040717FF043F18E0
93BA12F8030719FE031F737E037F8692BC12F0020387020F874A874A757E91B726FE0003
824904C0D9001F814903FCC812034903E0DB007F80011F92CA001F804902FC71804902F0
170390B600C071804892CC80484A854802F873804B85484A8803808592CDFC6C49864A89
6C5B6C49866C5B6D5A6D5A6DCEFC130E90CFFCA265A36865A3535CA2659DC7FC65679AB5
FC525C64525C525C64525C99B65A6309075D091F92C8FC097F5C50B65A081F5D0703B75A
95B95A0403BA12809BC9FC4C601DF81DE0659ACAFC1CFC88F4FFC01DF81DFEF5FFC07019
F08A93C9000715FEE0001F6E7E090381090015F00A3F800A0F800A03807680766C807780
7780778077808977807780A2787FA2781480A27814C0A221E08AA321F08AAA66A221E0A2
66120ED81F801FC0486C647F6D521480487E6D99B6FC01FF1F006E62B500E0505C6E505C
14FC6E081F5C6E6C4F5C6C02E06103F896B65A001F02FE06035D6CDAFFC04D5D6C03F017
1F6C03FE057F92C7FC6CDBFFE00303B65A6C6C03FE031F5D6DDBFFFC0103B75A010F93BA
5A6D1DC00101656D9AC8FC023F1BFC020F6302031BE002001B80033F97C9FC030719F803
0119E0DB003F95CAFC040317FCDC007F16C0050303FCCBFCDD000791CCFC>124
167 116 289 149 51 D[<95381FFFF00507B67E057F15F80403B712FE041FEEFFC0047F
17F04BB912FC030718FF4B85033F19E04B854ABB7E4A1AFE4A864A874A9226F0003F814A
4AC70001814A02F06E6C8091B60080150F494AC96C80494A0401804902F07080494A173F
494A717F4991CB6C804949844B728090B54884484A72808B484A854B87484A858B4891CD
7EA24849747FA248767F5CA2771480485BA220C089A2B5FC4A1DE089A420F0A620F8A680
7EA220FC65A2807E65A26C6D62A26E627E6F61A26C6E616F616C99B6FC6C6E606F606C6E
4E13BF6F4E133F6D6D606D6EEF7FFE70EFFFFC6D02F016036D6E040F13F86D02FE043F13
F06D6E6C92B5484813F805F0020714C06DDBFFC090B612806D93B812006E616E616E616E
07E015F002034F90B5FC6E96C7FC6E60033F17F86F05E016E0030794C75A030116FCDB00
3F15E004074AC815C0DC003F01C05D94CBFC208065A2200065A2535BA267656765679AB5
FC525CA2525C64675291C7FC64525B525BA251B55A515C63515C010F4F5CD91FC0067F5C
6E95B6C8FCD93FF805035CD97FFE050F5C6E6C043F5C90B500E093B65A03F803035D48DA
FF80023F5D04FC0107B75A4892BAC9FC64646C1BF0646C6C1A80011F97CAFC6D19FC0103
19F0010019C0023F95CBFC020717FC020017E0031F93CCFC030115F0DB000749CDFC>
118 167 113 289 149 57 D[<0007BC7E001FF3FF80481CFE48F4FFE01EFEC012C01FF8
1FFEF7FFC020F020FC20FF21C08D21F821FE02FCCB6C83E1003F830A0183E2000F16F00B
0182E3003F810C07810C00811F3F0D0F810D03810D00818C0E1F808C7A808C7A80A28C8D
8FA38DA469A26BA29EB5FCA2565C686B68565C565C0E7F5C9DB6FC5592C7FC0D075C0D1F
5C0D7F5C54B612E00C075D0C1F5D9BB648C8FC0B075D0B7F15F00A07B712C051B8C9FC08
07B812FC91BF12F020C055CAFC1FF01F800CF8CBFC1E801EFCF6FFE01FFEF7FFC020F820
FF21C021F002FCCC17FC0A0116FFE2000F16C00B0016F00C1F810C0315FEE4007F800D1F
15C00D03810D00810E3F807A800E07800E01807A15807B14C07B14E08D7B14F07B14F88D
7B14FCA28D7C13FEA37C13FFAA5813FEA29FB5FCA25714FC69695714F8695714F05714E0
56B6FC5615C00E0F1580203F9DB712000D035D0D0F5D0D7F5D0C03B75A0C1F5E0B03B85A
0B7F94C7FC0A7FB85A91C15A22F06A228057C8FC21F821E0218056C9FC20F020806C0CFC
CAFC1FE06C0BFCCBFC6C1D8000070A80CCFC>152 163 102 290
195 66 D[<0A0FB512FC090FB712FE50B912F8081FF0FFC097BB12FE0707F2FFC0073F1B
FC96BE7E06071DF8181F067F894DBFFC1707171F5F94C05A4C05FCC77E040794C97E4C04
E01607043F93CB7E4C03F8180F93B700E006015C4B93CD7E030703FC1A0F4B03F01A034B
4B1A004B03801B3F4B4ACFEA0FE092B648765A4A03F099C8FC4A5D4A5D604A4AD3FC4A5C
4A5C4A5C5F91B65A495D4992D4FC5E5B495C5E495CA2495C5E5B90B65A93D5FC5A5DA248
5CA2485CA3485CA25D5AA25D5AA35DA25AA292D6FCA4B6FCA25CAF80A27EA481A27EA281
A37E81A27E81A26C80A36C80A26C80A2817E826D807F826D80A26D80826D807F826D816D
816E80836E806E806E806E6E7E846E6F1D1E6E6F1D7E6E03FC52B4FC6F6E1C076F6E6C63
6F03E01B3F6F6F98B5FC6F03FC1A03030103FF080F14806F04E0197F7003F84EB6FC7003
FF180F040F04E0177F7004FF040FB7FC040105FC020FB8FC7094BCFC053F1F008305071E
F805011EE0716C1D80061F52C7FC06071CF806001CC0073F98C8FC07071AF807001AC008
1F4EC9FC080118E0E0000F04FCCAFCE1000F02FCCBFC>153 173
107 295 190 I[<0007BDFC001F1CFE48F4FFF0481DFF1FE0C012FCF7FF8020E020FC20
FF21C021F08D21FE7B7E8E4ACC003F17F0E2007F820B0316FEE3003F810C07820C00820D
1F15F00D07810D0181796C800E1F807A810E03817A817A6C808D7B800F07807B807B808D
7C807C80A17F8E7C808E7C80A17F8E7C80A27D7FA27D1480A27D14C0A28FA114E08FA114
F0A28FA114F8A28FA2A114FCA28FA2A114FEA3A17EA3A114FFB1A114FEA3A1B5FCA3A114
FCA26BA3A114F86BA2A114F06BA25914E0A2A114C06BA2591480A2591400A0B6FCA15B6A
585CA15B6A585C6AA15B585C585C9FB6FC5792C7FC575C0F0F5C575C699EB65A565D0E07
5D565D0E3F92C8FC9DB65A0D035D0D1F15F00D7F5D0C03B75A0C1F5E53B748C9FC0B3F5E
0A1FB85A91C112E06A9FCAFC21FC21F021C09ECBFC20FC20F0208055CCFC6C1EF09CCDFC
6C1DF06C52CEFC000799CFFC>168 163 102 290 212 I[<0007C37E001F22E0488E488E
A2C47EA66BA26B6B23804AD5FCB3B3B391C1FC22C08E8EA28EA66AA26A6A9FC8FC4AD5FC
B3B3B3A591C212F823FE8FA11280A2A112C0A76C2380A26C23006C6A000722F8>146
163 102 290 185 I[<0A1FB512F8090FB712FC50B912E0081F18FF97BB12F007071AFF
073F1BE04EBD12FC0607F4FF80061F1DE0067F1DFC4DC012801707051F1FC05F94C1FC4C
05FCC77E040794C9FC4C04E004071680043F93CB7E4C03F8180F93B700E018014B93CD7E
030703FC1A1F4B03F0080714004B4B1A014B0380747E4B4ACF121F92B6481C074A03F088
4A4BF400FE4A4B1D7C95D3FC4A5C4A5C4A5C4A5C5F91B65A495D4992D4FC5E5B495C5E49
5C5E5B5E5B90B65A93D5FC5A5DA2485CA2485CA3485CA25D5AA25D5AA25DA35AA292D6FC
A4B6FCA25CA29BBA12E0655319F0AB80897E9ACB7EA381A27EA381A27E81A27E81A26C80
A36C80A26C80A2817E826D807F827F826D80826D807F826D816D816E80836E806E806E80
6E8018C06E816E816E15FC6F806F6E7E6F15E06F816F15FC030103FF50B5FC6F04E0190F
7003F896B6FC7003FF180F040F04E094B7FC7004FF163F040105FC027FB8FC7094BCFC17
3F8305071FE01701716C1E00061F1DF806071DC0060152C7FCDE003F1BF0070798C8FC07
001AF0081F96C9FC080118E0E0000F04F0CAFCE1001F02E0CBFC>156
173 107 295 198 71 D[<2607FFFEA0383FFFF8001FD9FFC057B512FE486E57804802F8
0F0F15806F69B6A114C06F696F69A3709DB7FCA27067A27067A27067A27067A202DF6D55
13FBA202CF6D5513F3A302C76D5513E3A202C36E9BB512C3A202C16E531483A202C06E53
1403A26F6D5313FEA26F6D5313FCA26F6D5313F8A26F21F07165A26F6D5313E0A26F6E99
B512C0A26F6E511480A26F6E511400A2706D515BA2706D515BA270535B84A2706D515BA2
706D515BA2706E97B55AA2706E4F5CA2706E4F91C7FCA2716D4F5BA271657361A2716D4F
5BA2716D4F5BA2716D4F5BA2716E95B55AA2716E4D5CA2716E4D91C8FCA27263745F7263
745FA2726D4D5BA2726D4D5BA2726D4D5BA2726E93B55AA27263755D7298C9FC755D7361
755DA2736D4B5BA2736D4B5BA2736D4B5BA27361755D73617691B5FC7361765B7396CAFC
765B745F765BA2746D495BA2745F765B745F765B745F765B745F77B5FC745FA27402C191
CBFCA21DE3755D1DF7755D9AB5FC755DA2755DA2755DA2755DA2755DA37592CCFC765BA2
765B0A0F13F0765B0A0090CDFC6C4997CE6C1480A26C90D7C614006C48A16D5AD807F8A1
EB1FF8>186 163 100 290 243 77 D[<9AB512F899B712F8091FEEFFC050B912FC081F
F0FFC097BB12F807071AFF073F1BE096BD12F806031CFE061FF4FFC0067F1DF095BF7E05
031EFE050F787E053F942680000F17E04D04C0C8001F824CB700F8CA16FC4C0480050F81
040F03FCCB00016F7E4C03E0DE003F814C0380070F8193B648CD000315F84B03F8080081
4B03E0093F804B0380090F804B4ACF0003814B02F80A00814B4A77804B4A778092B60080
0B0F804A92D16C804A4A78804A02F80C00804A4A79804A4A79804A4A79804A4A798094D3
7E91B5487A80494A7A80A2494A7A80494A7B7F4C8D49A181494A7B804C8D49A18193D57E
49A1814B8E90B5487C80A2484A7C80A248A1824B8F48A1824B8FA248A117804B8FA248A1
17C04B8FA348A117E092D77EA348A117F0A34AA17EA3B5A116F8AE6EA15AA46CA117F0A3
6F6BA36CA117E06F6BA36CA117C06F6BA36C6E591480A26FA0B6FC6CA11700A26C6E585C
A26F6A6CA15E6F6A6CA15E70696D6E575CA26D6E575C70696DA15D6D6E9EB65A70686DA1
92C7FC6D6E565C70686D6F555C6D6F555C71676E6E555C6E6E9CB65A6E6E545D6E6E545D
6E6E5492C8FC72656E03E00B3F5C6E6F535C6E6F9AB65A6F02FE0A035D6F6E525D6F03C0
091F5D030703F0097F92C9FC6F03FC50B65A6F03FF08075D6F04C0071F5D7003F896B75A
041F03FE060316C070DBFFC0051F5E7004FC4CB8CAFC0401DCFFC0031F16FC70DDFF8001
0FB85A053F94BB12E0050F1F80719CCBFC05011EFC716C1DF0061F1DC006079ACCFC0600
1CF8073F1BE0070798CDFC07001AF8081F19C0080106FCCEFCE0001F17C0090004F8CFFC
0A0002F8D0FC>197 173 112 295 230 79 D[<0007BC12F8001FF3FFF848F4FFE0481D
FF1FE0C012FEF7FFC020F020FE7A7E21E021F821FE7B7E8E22F04ACC000783E2000316FE
E3001F810C0182E4003F810D0715F00D00810E3F80200F7A800E01807A817B808D7B808D
7B808DA17E8DA17E8DA37C7FAA9FB55AA369A15A69A15A69575C69575C575C9EB6FC5692
C7FC0E075C0E1F5C565C55B65A0D075D0D3F5D54B75A0C1F4BC8FC0B03B75A0A07B812F0
91C15A228057C9FC6921F0218056CAFC20F820C055CBFC1FF09CCCFC1EE01E808A4ACB00
0F80877580758075808A767F88768076808B76808876807680777F8B778089778077808C
7780778089787F8C788078808A788078808D788078808B797F8E798079808B79808E7980
79807A7F8C7A808F7A807A807A808C8F7A807B7F7B808DA17E7B807B807B807B80A27B80
7C7F7C14808E7C14C06C5B8E6C497914806C491F00000701C09D383FFE00>154
163 102 290 194 82 D[<071FB512C0060FB712E04DB9FC050F18F094BBFC04031AE004
1F1AFC047FF2FF804BBD12E003071CFC031F1CFF037F1DE092BFFC02038A5C5C143F4A93
38F0000191B700FCC800035E490480ED001F4903FCCA12034903F0EF007F490380181F4C
CC12034902F807005C494A1A3F4902C0864C1A0790B548CE12014B87484AF43F80484A76
C7FC4B99C8FC5D5A5D5A92D3FCA3485BA780A381A36C808181816C8081816C8116E06C15
F816FE6C6F7E17E06D15FC6DEDFFC018FC6DEEFFE06D17FF6D18F86DF0FFC06D19FE6DF1
FFF06EF1FF806E1AF86E1AFF6E1BE002031BF86E1BFF6E6C1BC06F1BF0030F1BFC030387
0300757E041F8704071BF0040087051F86050186DD001F85060086070785DF001F840800
84090783E1003F820A0382F4003F0B0F810B011680777E0C1F15C00C0715E08A0C0015F0
8B8B7914F88B8B7914FC8B8BA27A13FEA38CA38CA85613FCA36822F8A2D80F809BB5FC48
6C5314F0487E01F85314E001FE656D5314C002C06402F05214804801FC6402FF99B61200
03C008035C03F06203FC081F5CDBFF80077F5CB700F04EB65A04FE06075DDCFFC0051F5D
05FC94B75ADDFFF0031F93C7FC6CDDFFE00107B75A96BA5A001F67000367C61FC0013F66
010F53C8FC0101656D6C1CF0020F1CC0020199C9FCDA003F1AFC03071AE0DB007F198004
0706FCCAFCDC003F17C0050004FCCBFCDE007F49CCFC>135 173
115 295 165 I[<0007C5B71280001FA116E048A116F048A116F8A2C5B812FCA66CA116
F8A26CA116F06CA116E00007A11680CF000F02E0CFFCB3B3B3B3B3B3B3AF765CA2765C76
91D0FC9938007FFC>190 162 117 289 213 I[<2607FFC0F603FE001F01F09B380FFF80
486D5413C0486D5413E0A2B56C5413F0B3B3B3B3B3B29EB5FC80A36C22E06881A36C6E52
14C0A2686C6E1F80A26F646C22006F646C555B816C555B6C6E99B5FC6F515C6C6F657062
6D535C6D02F06270083F5C6D6E505C6D6E97B6C7FC6D6E6C18036D6F4E5C05F0061F5C6D
6F067F5C6D03FE95B65A6E6E6C04075D6E03F0041F5D6E03FC93B75A0207DBFFC0020F93
C8FC6E04FF0103B75A6E94B95A6E1DF0033F646F64030799C9FC6F6303001BF8043F1AE0
040F1A8004034FCAFCDC007F18F0050F1880050105FCCBFCDD003F16E006014BCCFCDE00
071480>140 168 102 290 193 I[<261FFF80FB0FFC4801F0FB3FFE4801FCA0B5FC6E6A
B65814806F69A26C6E571400A26C6E575BA26C6E575BA26C6E575BA26C6E9EB55AA26C6E
565CA26C6E565CA26C6F555CA270676DA190C7FC70676DA15AA15A6D6E69A15A6D6E69A1
B5FC6D6E69A26D6E545CA26D6E545CA26D6F535CA26E6E5391C8FCA26E6E535BA26E6E53
5BA26E6E535BA26E6E9AB55AA26E6E525CA271646E6A6A6E6F666A6F6E9BC9FC6A6F6E65
A26F6E515BA26F6E515BA26F6E98B55AA26F6E505CA26F6E505CA26F6F4F5CA2706E4F91
CAFCA2706E4F5BA2706E4F5BA269706E639EB5FC706E6368706E63A2706E4E5CA2706F4D
5CA2716E4D91CBFCA2716E4D5BA2716E4D5BA2716E4D5BA2716E94B55AA2716E4C5CA271
4F5C86714F5C877298CCFC755DA2726E4B5BA2726E4B5BA2726E4B5BA2726E92B55AA272
6E4A5CA2726E4A5CA2724D5C88734C91CDFC887360765B7360765B7360765B73607690B5
FC7360765A7360651CFF73601D877494CEFC1DCF745EA27491B55AA2745EA2745EA2745E
A2745EA2745EA27592CFFCA2755CA2755C755C755C090114C0756C90D0FC>177
165 121 290 192 I[<D81FFC9C2607FF801FFF267FFF800C3F01E00C0313C0B56C5401
F80C0F13E06E9BB56C666E53806E53697D666E65A17E6CA19AB512C06E65A16C646C6DA1
1D805681A1656C6EA11C005681A1656C6E526A10BF7F6C0F3F545B6F99B5FCA16C646C6E
78685501FE80A1656C6EA16355496C7FA1656C6E516B576C806DA198B55A6F63576C6E62
6D6DA16367576C6E626D6EA197C7FC5583576C656D6E506AA17F6D556D525B7097B5FCA1
6D626D6E99C76C6666A16D626D6E516E665484A1646D6E4F496E66A1806EA196B55A704F
4980A1806E7A515C704F5BA16E606E6E779BC8FC544983A1636E6E506E6554856EA14E5B
7195B54881A1806EA14E5B714D91C97EA16E606EA162714D4982A16E606E6E7864534985
6FA194B55A718A5349856FA14C5C714D4982A1816FA14C91C9FC724C4982A16F5E6FA160
724C49826F7D4C5B849AB548717F6FA14C5B728A5291CB806FA14C5B724D8452886FA14C
5B724B4984A17092B5FC70A15F724B4984707D4A5CA2724B4984707D4A91CAFC73895249
8770A14A5B734C84528970A14A5B734C857094B5765EA1617393CD7E704C785EA16E5E73
495B707D4A5BA18073495B717D90B55A5386716D496BA1715A5386716D49A0CBFCA1715A
5386716E480DF05CA16E5D65716E480DF85C53755C71A15C1AE098B5CF6C6D5A71A15C86
08F149766D5A71A15CA18108FB491EFF72595B52887290B59DB55AA2528872A190CCFCA2
528872A15AA1816472A15A528972A15AA299D17E72A15A518A72A15A7349785C7349785C
7301E00C0191CDFC070301809B38007FF8>259 165 121 290 274
I<94381FFFFE041FB612F04BB712FE031FEEFFC092B912F0020718FC023F18FF49BB12C0
010786011F1AF8017F8648BC7E488748889426F8000F814CC88104C0033F804BC9000F80
03F0160303C0708092CB806C01FC8402F0061F7F14C091CC6C1480497314C0D801F8855B
CE6C14E0A2871EF0A288A21EF8A288B0083FB6FC077FB7FC063FB8FC0507B9FC177F0407
BAFC163F4BBBFC150F033FEFE03F4AB8C7FC020716C0021F03F8C8FC4A158091B600F8C9
FC4915C0010792CAFC4914F84914E04914804991CBFC90B512FC485C4814E0485C5D4891
CCFC485B5C5A5C485BA35CB5FCA25CA464A38099B5FCA26C6D606380636C6D606E183F6E
606C6E94B6FC03E016036C6E160F03FC163F6CDAFF804AB512BF04E0021F143F6C03FF01
03B512FE6C93B712FC1BF86C1AF06D19E06D19806D19006D18FC6D18F06D06C06D13F001
0095C7FC6E04F86E13E0021F04C06E13C002034BC800011300DA007F02E092C8FC030701
F0CCFC658171FE8C>97 D[<EA07FCEA1FFF487F487FA2B57EB3B0F03FFF0503B512F805
3F14FF94B712E0040716F8041F16FE047F707E93B912E00303844B18FC4B84033F844B85
92BB7E02E11AF002E3ECF80002E791C700078104FC02008102EF01E0031F8091B5480307
8093C90001814B708103F8173F4B71804B71804B17034B718092CC805C4A737F884A737F
4A851F804A851FC088A27614E0A2881FF0A2891FF8A289A21FFCA289A41FFEA289AF65A2
1FFCA465A21FF8A265A21FF09AB5FCA21FE064A25214C0A26E4F1480A26E611F006E6152
5B6E4F5B99B5FC6E4E5C6F5F515C6F4D5C6F5F6F4D5C6F94B65A6F4C92C7FC6F04075C6F
6C151F02EF6D037F5C02E701F00203B65A04FC021F5D02E39026FFC003B75A02E191B95A
02E0626F4EC8FC6F606F606F18E06F606F95C9FC6C496C17FC6F6C16F06C49011F16C06C
90C76C93CAFCD807FC020115F8CA003F1480050301F0CBFC>111
167 104 292 149 I<0607B512C095B77E050F16F8057FEEFF800403B912F0040F18FC04
3F18FF93BB12E04B1AF803071AFE031FF2FF804B1BE05D92BD12F014034A4BC7FC4A03C0
14014A4AC9121F4A02F8040714E04A02E0160091B60080173F4CCB120F494A84494A1801
4902E09538007FC0494A193F4CF10F804991CDEA0300494997C7FC5D5B5D90B55A5D5A48
5CA25D5A92D0FC5A5CA25A5CA25A5CA35A5CA5B5FC5CAF80A27EA480A27EA280A27E80A2
7E80A26C80A26C80A26C80A26C6E1BF06F1A036D6DF207F86D1C0F6F1A1F6D6D1A3F6D6E
19FF70606D6E4E13FC6D02F8180F70183F6D02FF606D6F4CB5FC6E02E0160F6E02F8163F
6E02FE4BB612F86EDAFFC0021F15F06E03FE0107B712E06E92BA12C06E1C806E6CF2FE00
6F626F1AF003071AC06F97C7FC030061043F18F0040F18C004034DC8FCDC007F16F0050F
1680050003F8C9FC060701FCCAFC6E8173FE84>I[<F67FC09A3801FFF05313F85313FCA2
5313FEB3B0F03FFF0507B512F0053F14FF4CB712C0040F16F0043F16FC93B9FC03031880
4B18E0031F18F04B18F892BA12FC4A19FE4A19FF4A1A8F4ADC800714CF4A03F0C76C13EF
4A0380140F4A02FCC8000390B5FC91B600F0814903C06F7E4992CA7E4C834902F883494A
834C83494A834991CCFC89495B90B548854B85485C4B855A5D5A5DA24891CDFCA2485BA3
5C5AA25CA25AA25CA4B5FCA25CAF80A27EA480A27EA280A27E80A27E80656C80A26C6E61
A26F617E6F96B5FC6C6E606D7F6F606D626F606D02C05F6D8070177F6D6E94B6FC6D02FE
5E6D6E4C13EF05C0030F13CF6D03F05D6E02FE037F138F6EDAFFC00103B5120F6E03FE01
3F13FE6E92B712FC806E19F86E19F06E6C18C06F18806F180003075F030105F86D13FC6F
5F041F04C06D13F8040793C76C13F0040003F89138007FC0051F02C092C7FC050001FCCB
FC>111 167 115 292 149 I<95383FFFC00507B512FE053FECFFE04CB712FC040F16FF
043F17C093B912F0030318FC4B18FF031F854B854B854ABB12F84A864A864AEDF0004A92
C70007804A02F80200814A02E0033F8091B60080030F804992C9120304FC7080494A706C
7F4902E083494A717F4C717F4991CB7E4949727F4B8449491B808890B55A484A7313C0A2
484A7313E05D488892CDFC1FF0484986A25A4A1CF8895C5AA24A86A2481EFCA25CA3B5FC
A291BEFCA71FF8A21FF01FE01F8002C0D0FCA480A27EA380A37E80A36C7FA2807EA26C7F
A2817E816C807E816D6DF201E06F1A076D6DF20FF06D6D1A1F1E3F6D02C019FF6D6E6070
4E13F86D6E180F6D02FE183F6D6E95B5FC6E02C016036E02F0160F6E02FC163F6E02FF4B
B612F06E03E0021F15E06E03FF0107B712C06E93B912806E1C006F1AFC6F62030F1AE06F
1A80030197C7FC6F6C18FC7018F00407188004014DC8FCDC003F16F0050793C9FC050015
F0060301FCCAFC6E8174FE84>I[<070FB57E0603B71280063F16FC4DB8FC050717FE173F
94B9FC5E16075E163F5E93BAFC5D5D4B9238F000074EC8123F4B02E0ED03FC4B0280ED00
7C4DCBFC4B13F85F4B5BA392B5FCB20007BB7E001F1AE048864886A2BC7EA56C62A26C62
6C6200071A80C802E0CBFCB3B3B3B3B3AE6F5BA26F5B6F90CCFCED07FC>95
167 121 294 91 I<95261FFF80ED7FC00503B500F8913801FFF0051F02FF4A13F894B7
00C04913FC040716F0041F04FC4913FE047F824BB91280030718C04B18E0033F18F04B18
F892BA12FC4A19FE14074ADCC00713FF4A03F8C7148F4A03C0141F4A92C86C13CF91B600
F8030313EF4D814903C06F90B5FC4992CA7E494A834C834902F083494A83495C4C834991
CB7E5D90B54884A2484A85485C5D89485C89485CA292CDFC48885CA2485BA35C5AA35CA3
B5FCA25CAB65A280A27EA26580A36C6D62A36C6D97B5FCA2806C6381816C63816C6E60A2
6C6E606F606C806D6D60705F6D02E018EF6D6E17FF704C13CF6D02FE4C138F6D6E160F6D
03C04B130F05F0ED7FFE6D03FE15FF6DDBFFC0010713FC6E03FE013F13F86E92B7FC6E19
F0020719E06E19C06E19806E6C18006F5F030F5F030317F06F5FDB003F1680040F4BC7FC
040115F8DC001F14C0050001FCC8FC95CAFCA51FFCA45313F8A35313F0A2651FE09AB5FC
5214C0A2013C501480017F080F1400D9FFC06102F84F5B02FF96B55A03E05F03FE05075C
DBFFE0041F5C04FF93B65ADDFF80011F5D95B95A9BC7FC6565656D1BE06D63010798C8FC
010062021F19F8020119E0DA001F95C9FC030117F8DB000716C0DC000302F8CAFC6FA573
FD95>I[<EA07FCEA1FFF487F487FA2B57EB3B0953807FFF895B612C0050715F8053F15FF
94B812E0040383040F17FC4C83047F717E93BA7E4B855D4B854B854B854B9038FE000F4B
01E0D9003F8092B5C8120F02E101FC0303804C150002E301E070148002E749161F93CA6C
14C0ECEFFEDAFFFC834B7114E05D875D5D4B831EF092CCFCA25C885CA35CA35CA55CB3B3
B3B3A26C497313E0A26C497313C06C90CD6C1380D807FC973803FE00>100
165 104 292 149 I[<3807FFC0001F13F04813F85AB512FC14FEAD14FC6C13F8A26C13
F0000F13C0C8FCB348B4FC000713C04813E04813F0A24813F8B3B3B3B3B3B3A66C13F0A2
6C13E06C13C000011300>23 166 107 293 66 I[<EA07FCEA1FFF4813804813C0A2B512
E0B3B3B3B3B3B3B3B3AB6C13C0A26C13806C1300EA07FC>19 165
105 292 66 108 D<952607FFF8963801FFFE95B600E0063FEBFFF8D807F8030703FC4D
B7FCD81FFE031FDBFF80040716E0486C92B800E0043F16F8486D010305F893B812FE4C05
FE4B717EB56C011F710307844C724A8493BA6C023F844B734A844B7391BA7E4B7349854B
7349854B73491A804B9026FE00074DEC80014B01E0D9003F6E4901F8C7000F15C092B500
8002074C01E0140102C149C800016F4801806E6C14E004F86F6C4CC9121F02C301E07091
26C0FFF87014F002C749040F02C14916034C7002E1497014F8DACFFECA03E31380DADFFC
7102E790CBFC4B714B84DAFFF0E0FFFC1AFC75884B634B634B724A84A116FE92CC5DA24A
6476874A99CCFCA34A63A34A63A54A63B3B3B3B3A26C4973497313FCA26C4973497313F8
6C90CD6C497313F0D807FC080190CEEA7FC0B77E68FDE8>I<953807FFF895B612C0D807
F8030715F8D81FFE033F15FF486C92B812E0486D010383040F17FCB56C4983047F717E93
BA7E4B855D4B854B854B854B9038FE000F4B01E0D9003F8092B5C8120F02C101FC030380
4C150002C301E070148002C749161F93CA6C14C0ECCFFEDADFFC834B7114E0ECFFF0875D
5D4B831EF092CCFCA25C885CA35CA35CA55CB3B3B3B3A26C497313E0A26C497313C06C90
CD6C1380D807FC973803FE00647E68FD95>I<953801FFFE063FEBFFF00503B7FC051F16
E094B812FC040317FF040F18C0043F18F093BA12FC030319FF4B86031F1AE04B864B864A
BC12FE4ADC0003814A03C0D9000F814A4AC80001814A02F0DB003F804A02C0040F804A91
CA00038091B500FC050080494A727F04E0181F494A727F494A72804991CC6C804B854949
73804949747F4B86498A4B8690B548747F488B4B86488B92CE7EA24849751480A2484975
14C0A348497613E0A34820F04A88A34820F8A34A88A3B51FFCAF6E646C20F8A56E646C20
F0A46C6D99B512E0A36C6D5114C0A26E636C2080A26C6E501400A26F626C6E505BA26C6E
505B6D6D505BA26D6D97B55A6F616D6D4F5C6D6E4E5C6D6E4E5C70606D6E4E91C7FC6D02
FC95B55A6D6E4D5C6E6D6C04075C6E02E0041F5C6E02F8047F5C6E02FF0303B65A6E03E0
021F5D6E03FF0103B7C8FC6E93B85A6E636F62031F1AE06F62030397C9FC030019FC7060
041F18E004071880040005FCCAFC053F16F0050393CBFCDD007F14F8060149CCFC7E8175
FE95>I<F03FFF0503B512F8D807FC033F14FFD81FFF92B712E0486D010716F8486D011F
16FE047F707EB56C90B912E00303844B18FC4B84033F844B8592BB7E02E11AF002E3ECF8
0002E791C7000F8104FC02018102EF01E06E6C8091B548031F8093C90007814B04018103
F8824B71804B051F804B834B718092CB6C804A844A7280884A874A857614804A851FC088
A27614E0A2881FF088A21FF889A37713FCA489A21FFEA389AE65A21FFCA365A31FF865A3
9AB512F0A2641FE064A25214C0A26E4F1480A26E615214006E61666E96B55A636E4E5C6F
5F515C6F4D5C6F177F6F94B65A6F4C5D6F040792C7FC6F041F5C6F6C5D02EF6D4AB65A02
E701F002075D04FC023F5D02E39026FFC007B75A02E191B95A02E0626F4EC8FC6F606F60
6F18E06F606F95C9FC6F17FC6F6C16F0041F16C07093CAFC040115F8DC003F1480050301
F0CBFC94CEFCB3A86C5BA26C5B6C90D1FCEA07FC6F9F68FD95>I<F10FFCF001FFD807F8
040F13FED81FFE167F486C4BB5FC486D140F5FB56C147F4CB6FC5E160F5E5E5E93B7FC4B
16FC5D4BEDF8004B4AC7FC4B14F04B14804DC8FC4B13F892B512E0178002C191C9FC02C3
13FC5E02C75B02CF13C05E02DF90CAFC5DECFFFCA25D5D5DA25D5DA292CBFCA25CA25CA3
5CA35CA55CB3B3B3AA6C5BA26C5B6C90CCFCEA07FC477E69FD63>114
D<4CB512F8047FECFFF00307B87E033F17F04AB912FE0207F0FFC0021F19F8027F19FE91
BC7E01031BF05B49875B5B5B4CC7121F90B600C0DA007F5C484AC9120703F816004802E0
171F484A170792CB12014849726C5A4A191FF407C04849F1018099C8FC5CA25A5CA680A3
80A2806C7F80816C8015F0816C14FF6C15C016F86CEDFFC06C16FEEFFFF86DEEFFC06D17
FE6DEFFFE06D18FC6DF0FF806D19E06D19F86D6C18FE6E727E020F85020385020019F803
3F84030784030084041F84040084050783EF001F0600820707810700811A1F0807801A01
74801B3F8775148087877514C0A287A388A799B5FC1E80120EEA1F80486C617F01F84F14
00D87FFE616D7E6E4E5B02F0183F02FE4E5B6E6C4CB5FCB600F04C5C03FE041F5CDBFFF0
92B6FCDCFFC0011F5D94B95A6C649AC7FC001F63000763000163D8003F62010F1AC00101
97C8FC6D6C18FC020F18F0020018C0030F04FCC9FCDB007F15E0040002F0CAFC628178FE
72>I[<16FF030313C04B7F4B7FA24B7FB3AC0007BC12E0001F1BF848874887A2BEFCA56C
63A26C636C6300071BE0C8001F01F8CBFCB3B3B3B3A983A471EE03C06F180FF41FE07116
3FF4FFF01B036F6E5C72143F7291B512F87213076F02FC90B6FC95B8FC811DF06F19E01D
807018007017FC1CF07017C0704CC7FC7016F8040116C07003FCC8FC051F14C0050301F0
C9FC>93 161 123 286 107 I<D807FCF203FED81FFF97380FFF80486D4F13C0486D4F13
E0A2B56C4F13F0B3B3B3B3A899B5FCA463A363A263A26363806C626398B6FC6E5F626C6D
050F7F626EEF7FFE6C6DEFFFFC03C0030313F86C02F0151F03FC037F13F06CDAFFE0010F
B512E093B812C06C1A006C616C616D606D18E06D606D95C76C13E06D17FC010105F06E13
C06D6C04806E1380020F03FCC83803FE00020103E092C8FCDA000701FCCCFC647E68FB95
>I<D81FE0F53FC0D87FFCF5FFF06D1C03B55213F86E636E6380666C1FF080666C6D1DE0
9BB5FC6C6D1DC0A2656C6D1D80656C6D1D00A2656C6E63656C6E6365A26C6E63656D6D63
65A26D6D639AB5FC6D6D6364A26D6D63646D6D98C7FC64A26D6E61646D6E6164A26D6E61
646E6D6164A26E6D6199B5FC6E6D61636E6382636E6D96C8FC636E6E5FA2636E6E5F636E
6E5FA2636F6D5F636F6D5F98B5FCA26F6D5F626F6D5F62A26F6D94C9FC626F6E5D62A26F
6E5D626F6E5D62A2706D5D62706D5D97B5FCA2706D5D617001FE5D61A27001FF92CAFC61
7002875B198F705E19CF19DF7091B55AA2715DA3715DA2715DA3715DA27192CBFCA2715C
A2715C715C063F13E0060F1380757D79FB84>I<D80FF009FFF307F8D83FFC080701E0F2
1FFE48B4506D507E6E4F6D62B56C4F6D97B5128078616E616CA149140099B6FC806CA149
5B5181806CA1495B518180A15C6C506F62800BEF626C506F62800BC7626C506F6281A191
B5FC6C5001836D6281A26C506F4D5C6F1901A26D96B56E4D91C7FC6F4E7EA26D784C5B6F
5E527F6D784C5B626F4E7F6D784C5B626F4E7F6D784C5B62816D506D6D4C5B62826D506D
6D93B55A62826D506D4D5C5083826E96C76C4D91C8FC97B582826E4E505B4F7080826E4E
505B4F717F826E6B516F6D5C61826E4E6F6D4A5B61826E4E6F6D4A5B61836E4E6F6D91B5
5A61836E4E6F6D495C61836F94C96C4B91C9FC8D96B5FC6F6D4A505B791480606F01F84A
505B7A13C0606F01FC6750716D5A606F6905FE4A716D5AA26F4A6605FF4A715C22F86F69
4E4983069F75B5FC6F69508306BF1BFD7090B597B6CAFC97CB7EA270674F84A270674F85
A270674F85A270674F85A2704A735C704A735C704A735C7190CD6C91CBFCDD0FFC973800
7FF8B97D7AFBC6>I<2607FF80983807FF80001F01E0091F13C06E5113E0486D5113F06E
98B5FC6E626C6D5014E06F4F14C06C806C6E4F14806C5214006C6E4F5B6C6E4F5B6D6D96
B55A6D6D4E5C6D6D636D6E5F704D5C6D505C6D6E4D91C7FC6D6E4D5B6D6E616E6D4D5B6E
6D94B55A6E6D5E6E6E4B5C6E4E5C6E6E4B5C7195C8FC6E6E4B5B6E6E4B5B6F6D4B5B6F6D
92B55A6F6D5C6F616F6E495C6F6E495C6F6E4991C9FC6F6E495B72495B706D5D705D706D
90B55A706D485C7002835C7002C75C7002EF91CAFC7091B55A715D8363715D715D715D71
5D7192CBFC715C84725B725BA2604E7F95B57E4D804D814D81874D814D814D01EF7F4D01
E77F94B512C34C02837F4C0201804E6C804C6F7F4C496D7F4C496D7F4C49814C496D7F93
B56E7F4B4A7F4E6D804B91C8804B49834B717F4B496F7F4B496F7F4B496F7F92B5486F7F
8A4A4A6F804A4A814A91CA804A49717F4A874A49717F4A49717F4C717F91B5487180494A
71804989494A834991CC804949737F4949737F49757F4B8790B548731480484A7314C048
4A7314E0487614F0484A7314F84891CEFC48497513FC4A7513FE487713FF4A87B548876C
5B4A876C49090013FE6C48D0EA3FFC787C7BFB84>I<D81FF0F53FC0D83FFCF5FFF048B4
1C03B56C5113F86E636E63A26E636C1FF0806C6520E06C6D98B5FC20C06C6D622080806C
646F1C006C64676C80656C6E63656F636D636F637F656D6D639AB5FC6D6D63A26F4E5C7F
646D6E97C7FC646D6E61A26D6E5F66705F6E63A26E6D4D5BA26E6D5F666E7F99B55AA26E
6D5E666E805191C8FC6E80515B80715D656F7F515B6F7F636F61836F4D5B8398B55A6F7F
A26F4C5C846F96C9FC725B81505B84705F725B705F62707F64706D5B64A2706D5B64706D
90B5FC6482078191CAFC82A207C35B83637113E307E75B83A27101F75B96B5FC6383A271
5DA2715DA27192CBFCA3725BA2725BA284628462A26260A24E5BA24E5BA395B5CCFCA24D
5B5F4D5B5F4D5B4D5B001E93B5FCD83FE002075C267FFFC0017F5C91B85A96CDFC606060
60606C178095CEFC17FC5F17C06C93CFFC16F8D8001F91D0FC759F79FB84>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 0 1
0 0 bop Black Black 347 2597 a Fj(Mathematical)101 b(Mo)-8
b(rphology)1299 3079 y Fi(Rasmus)68 b(La)-6 b(rsen)1476
3311 y(IMM/DTU)1305 3544 y(Ap)g(ril,)70 b(12,)g(2000)p
Black Black eop
%%Page: 1 2
1 1 bop Black Black Black Black 1011 2650 a Fj(Vincent)99
b(\(1993\))478 3032 y(Vincent)g(&)g(Soille)h(\(1991\))p
Black Black Black 3751 6118 a Fh(1)p Black eop
%%Page: 2 3
2 2 bop Black Black Black Black -89 1099 a Fj(Bina)-8
b(ry)100 b(Mathematical)g(Mo)-8 b(rphology)p Black Black
62 1581 a Fi(Bina)i(ry)69 b(mathematical)64 b(mo)-6 b(rphology)69
b(is)g(made)e(of)754 1813 y(op)6 b(erations)69 b(on)g(sets)g(of)g
(pixels.)1462 2295 y(T)-17 b(ranslation)181 2560 y
 11840716 11840716 0 0 11972280 11972280 startTexFig
 181
2560 a
%%BeginDocument: trans1a.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 1200 1200 m 1500 1200 l 1500 2400 l 1200 2400 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 1500 1200 m 2100 1200 l 2100 1500 l 1500 1500 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 100.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 1800 1500 m 2400 1500 l 2400 1800 l 1800 1800 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 120.00 100.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 1800 1500 m 1800 1500 l 1800 1500 l 1800 1500 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 120.00 100.00] PATmp PATsp ef gr PATusp gs col4 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1847 3734 a
 1420900 2571829 0 0 1447198 2631270 startTexFig
 1847 3734 a
%%BeginDocument: arrow1.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 40 moveto 0 0 lineto 22 0 lineto 22 40 lineto closepath clip newpath
-34.0 74.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
gs  clippath
853 1240 m 960 1186 l 832 929 l 886 1171 l 725 983 l cp
eoclip
n 600 600 m
 900 1200 l gs col0 s gr gr

% arrowhead
n 725 983 m 886 1171 l 832 929 l 725 983 l  cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs
%%EndDocument

 endTexFig
 2193 2560 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 2193 2560 a
%%BeginDocument: trans1b.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 1800 1500 m 1800 1500 l 1800 1500 l 1800 1500 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 120.00 100.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 2100 2100 m 2700 2100 l 2700 2400 l 2100 2400 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 140.00 140.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 1500 1800 m 1800 1800 l 1800 3000 l 1500 3000 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 100.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 1800 1800 m 2400 1800 l 2400 2100 l 1800 2100 l
 cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 120.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 865 4259 a Fg(A)889 b(h)846 b(A)2965 4298 y Ff(h)751
4940 y Fg(A)883 4979 y Ff(h)1020 4940 y Fi(=)48 b Fg(A)39
b Fi(+)g Fg(h)49 b Fi(=)f Fe(f)p Fg(y)d Fi(+)38 b Fg(h)49
b Fi(:)g Fg(y)55 b Fe(2)49 b Fg(a)p Fe(g)p Black 3751
6118 a Fh(2)p Black eop
%%Page: 3 4
3 3 bop Black Black Black Black 125 1391 a Fj(Bina)-8
b(ry)100 b(Mo)-8 b(rphological)98 b(Dilation)p Black
Black 91 1690 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 91 1690 a
%%BeginDocument: set2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1757 2830 a
 2841800 2841800 0 0 3683778 3683778 startTexFig
 1757 2830 a
%%BeginDocument: struct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 56 moveto 0 0 lineto 56 0 lineto 56 56 lineto closepath clip newpath
-35.0 91.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1121 1125 m 1129 1125 l gs col1 s gr
% Polyline
n 900 600 m 900 900 l 600 900 l 600 1200 l 900 1200 l 900 1500 l
 1200 1500 l 1200 1200 l 1500 1200 l 1500 900 l 1200 900 l
 1200 600 l
 900 600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 40.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 975 1125 m
 1125 975 l gs col1 s gr 
% Polyline
n 975 975 m
 1125 1125 l gs col1 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2283 1690 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 2283 1690 a
%%BeginDocument: set2dil.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 1200 900 m 2400 900 l 2400 1200 l 2700 1200 l 2700 1500 l 3000 1500 l
 3000 1800 l 3300 1800 l 3300 2400 l 3000 2400 l 3000 2700 l
 2700 2700 l 2700 3000 l 1500 3000 l 1500 2700 l 1200 2700 l
 1200 2400 l 900 2400 l 900 2100 l 600 2100 l 600 1800 l
 900 1800 l 900 1200 l 1200 1200 l
 1200 900 l  cp gs col4 1.00 shd ef gr gs col4 s gr 
% Polyline
15.000 slw
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs col2 s gr 
$F2psEnd
rs
%%EndDocument

 endTexFig
 775 3389 a Fg(A)960 b(B)791 b(A)38 b Fe(\010)h Fg(B)1290
4070 y(A)g Fe(\010)f Fg(B)58 b Fi(=)2105 3928 y Fd([)2035
4263 y Ff(h)p Fc(2)p Ff(B)2364 4070 y Fg(A)2496 4109
y Ff(h)-65 4749 y Fi(The)69 b(dilation)f(is)h(equal)g(to)g(the)g(Mink)
-6 b(o)g(wski)68 b(addition)p Black 3751 6118 a Fh(3)p
Black eop
%%Page: 4 5
4 4 bop Black Black Black Black 147 1141 a Fj(Bina)-8
b(ry)100 b(Mo)-8 b(rphological)98 b(Erosion)p Black Black
91 1439 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 91 1439 a
%%BeginDocument: set2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1757 2579 a
 2841800 2841800 0 0 3683778 3683778 startTexFig
 1757 2579 a
%%BeginDocument: struct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 56 moveto 0 0 lineto 56 0 lineto 56 56 lineto closepath clip newpath
-35.0 91.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1121 1125 m 1129 1125 l gs col1 s gr
% Polyline
n 900 600 m 900 900 l 600 900 l 600 1200 l 900 1200 l 900 1500 l
 1200 1500 l 1200 1200 l 1500 1200 l 1500 900 l 1200 900 l
 1200 600 l
 900 600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 40.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 975 1125 m
 1125 975 l gs col1 s gr 
% Polyline
n 975 975 m
 1125 1125 l gs col1 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2283 1439 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 2283 1439 a
%%BeginDocument: set2ero.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
15.000 slw
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs col2 s gr 
% Polyline
7.500 slw
n 1500 2100 m 2100 2100 l 2100 1800 l 2400 1800 l 2700 1800 l 2700 2100 l
 2700 2400 l 1500 2400 l
 1500 2100 l  cp gs col4 1.00 shd ef gr gs col4 s gr 
$F2psEnd
rs
%%EndDocument

 endTexFig
 775 3139 a Fg(A)960 b(B)791 b(A)38 b Fe(\011)h Fg(B)719
3819 y(A)g Fe(\011)f Fg(B)58 b Fi(=)48 b(\()p Fg(A)1676
3751 y Ff(C)1833 3819 y Fe(\010)39 b Fg(B)8 b Fi(\))2229
3751 y Ff(C)2397 3819 y Fi(=)2676 3678 y Fd(\\)2606 4012
y Ff(h)p Fc(2)p Ff(B)2935 3819 y Fg(A)3067 3858 y Ff(h)592
4519 y Fi(Mink)-6 b(o)g(wski)69 b(subtraction)g(is)f
Fg(A)39 b Fe(\011)3117 4492 y Fi(\024)3084 4519 y Fg(B)8
b Fi(.)-112 5000 y(\024)17 b(denotes)69 b(re\015ection,)g(and)2004
4942 y Ff(C)2191 5000 y Fi(denotes)g(complement)p Black
3751 6118 a Fh(4)p Black eop
%%Page: 5 6
5 5 bop Black Black Black Black 87 1852 a Fj(Bina)-8
b(ry)100 b(Mo)-8 b(rphological)98 b(Op)8 b(ening)p Black
Black 91 2151 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 91 2151 a
%%BeginDocument: set2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1757 3291 a
 2841800 2841800 0 0 3683778 3683778 startTexFig
 1757 3291 a
%%BeginDocument: struct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 56 moveto 0 0 lineto 56 0 lineto 56 56 lineto closepath clip newpath
-35.0 91.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1121 1125 m 1129 1125 l gs col1 s gr
% Polyline
n 900 600 m 900 900 l 600 900 l 600 1200 l 900 1200 l 900 1500 l
 1200 1500 l 1200 1200 l 1500 1200 l 1500 900 l 1200 900 l
 1200 600 l
 900 600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 40.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 975 1125 m
 1125 975 l gs col1 s gr 
% Polyline
n 975 975 m
 1125 1125 l gs col1 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2283 2151 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 2283 2151 a
%%BeginDocument: set2open.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 1200 2400 m 1200 2100 l 1500 2100 l 1500 1800 l 2100 1800 l 2100 1500 l
 2700 1500 l 2700 1800 l 3000 1800 l 3000 2400 l 2700 2400 l
 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 80.00 100.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 775 3850 a Fg(A)960 b(B)533 b Fi(\()p Fg(A)39 b Fe(\011)f
Fg(B)8 b Fi(\))40 b Fe(\010)f Fg(B)-71 4289 y Fi(An)69
b(op)6 b(ening)70 b(is)f(an)g(erosion)g(follo)-6 b(w)g(ed)70
b(b)-6 b(y)69 b(a)g(dilation.)p Black 3751 6118 a Fh(5)p
Black eop
%%Page: 6 7
6 6 bop Black Black Black Black 162 1852 a Fj(Bina)-8
b(ry)99 b(Mo)-8 b(rphological)98 b(Closing)p Black Black
91 2151 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 91 2151 a
%%BeginDocument: set2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1757 3291 a
 2841800 2841800 0 0 3683778 3683778 startTexFig
 1757 3291 a
%%BeginDocument: struct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 56 moveto 0 0 lineto 56 0 lineto 56 56 lineto closepath clip newpath
-35.0 91.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1121 1125 m 1129 1125 l gs col1 s gr
% Polyline
n 900 600 m 900 900 l 600 900 l 600 1200 l 900 1200 l 900 1500 l
 1200 1500 l 1200 1200 l 1500 1200 l 1500 900 l 1200 900 l
 1200 600 l
 900 600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 40.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 975 1125 m
 1125 975 l gs col1 s gr 
% Polyline
n 975 975 m
 1125 1125 l gs col1 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2283 2151 a
 11840716 11840716 0 0 11972280 11972280 startTexFig
 2283 2151 a
%%BeginDocument: set2close.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 182 moveto 0 0 lineto 182 0 lineto 182 182 lineto closepath clip newpath
-35.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 1200 1800 l

 1200 1200 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 80.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 1200 1200 m 2400 1200 l 2400 1500 l 2700 1500 l 2700 1800 l 3000 1800 l
 3000 2400 l 2700 2400 l 2700 2700 l 1500 2700 l 1500 2400 l
 1200 2400 l 1200 2100 l 900 2100 l 900 1800 l 2100 1800 l
 2100 1500 l 1200 1500 l
 1200 1200 l  cp gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 775 3850 a Fg(A)960 b(B)533 b Fi(\()p Fg(A)39 b Fe(\010)f
Fg(B)8 b Fi(\))40 b Fe(\011)f Fg(B)-71 4289 y Fi(An)69
b(op)6 b(ening)70 b(is)f(a)g(dilation)f(follo)-6 b(w)g(ed)70
b(b)-6 b(y)69 b(an)g(erosion.)p Black 3751 6118 a Fh(6)p
Black eop
%%Page: 7 8
7 7 bop Black Black Black Black -276 1877 a Fj(Greyscale)101
b(Mathematical)g(Mo)-8 b(rphology)p Black Black -266
2359 a Fi(Extension)69 b(of)g(bina)-6 b(ry)69 b(mo)-6
b(rphology)69 b(to)g(greyscale)f(images)-307 2591 y(can)g(b)6
b(e)69 b(made)e(using)i(the)g(set)f(op)6 b(erations)69
b(on)g(the)f(umb)-6 b(rae)668 2824 y(of)69 b(greyscale)f(images)f
(functions.)-27 3305 y('Umb)-6 b(ra')68 b(means)f(shado)-6
b(w)70 b(\(e.g.)93 b(umb)-6 b(rella)67 b Fe(')i Fi(small)1559
3538 y(shado)-6 b(w\).)-307 4019 y(The)67 b(umb)-6 b(ra)66
b(of)i(a)e(function)i Fg(f)18 b Fi(\()p Fg(x;)30 b(y)6
b Fi(\))67 b(consists)h(of)f(all)g(p)6 b(oints)667 4252
y(\()p Fg(x;)29 b(y)6 b(;)29 b(z)7 b Fi(\))69 b(that)e(satisfy)i
Fg(z)55 b Fe(\024)48 b Fg(f)18 b Fi(\()p Fg(x;)30 b(y)6
b Fi(\))p Black 3751 6118 a Fh(7)p Black eop
%%Page: 8 9
8 8 bop Black Black Black Black 1535 1474 a Fj(Umb)-8
b(ra)437 1963 y
 23681433 15629742 0 0 27167866 17958420 startTexFig
 437 1963 a
%%BeginDocument: umbra.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
gs  clippath
660 2685 m 540 2685 l 540 2940 l 600 2700 l 660 2940 l cp
eoclip
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l 5400 2100 l 5400 5100 l 600 5100 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr gr

% arrowhead
0.000 slw
n 660 2940 m 600 2700 l 540 2940 l  col4 s
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 Black Black 576 4425 a Fi(The)69 b(black)f(line)g(is)h(the)g(function)
g Fg(f)18 b Fi(.)621 4657 y(The)70 b(red)e(a)-6 b(rea)68
b(is)h(the)g(umb)-6 b(ra)68 b(of)h Fg(f)p Black 3751
6118 a Fh(8)p Black eop
%%Page: 9 10
9 9 bop Black Black Black Black -62 1364 a Fj(Greyscale)101
b(Mo)-8 b(rphological)98 b(Dilation)p Black Black -224
1864 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 -224 1864 a
%%BeginDocument: umbra.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
gs  clippath
660 2685 m 540 2685 l 540 2940 l 600 2700 l 660 2940 l cp
eoclip
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l 5400 2100 l 5400 5100 l 600 5100 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr gr

% arrowhead
0.000 slw
n 660 2940 m 600 2700 l 540 2940 l  col4 s
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1742 1862 a
 3789043 9396822 0 0 7235993 17958420 startTexFig
 1742 1862 a
%%BeginDocument: gstruct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 110 0 lineto 110 273 lineto closepath clip newpath
-17.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
2115 3930 m 2115 3870 l 1963 3870 l 2083 3900 l 1963 3930 l cp
eoclip
n 300 3900 m
 2100 3900 l gs col0 s gr gr

% arrowhead
n 1963 3930 m 2083 3900 l 1963 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 750 3900 m 750 5100 l 1650 5100 l 1650 3900 l
 750 3900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 50.00 260.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 750 3900 m
 1650 3900 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2388 1864 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 2388 1864 a
%%BeginDocument: gdilate.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
n 600 2700 m 600 5100 l 5400 5100 l 5400 2100 l 3900 2100 l 3900 2700 l
 3600 2700 l 3600 1800 l 2700 1800 l 2700 2400 l 2400 2400 l
 2400 2700 l 2100 2700 l 2100 2100 l 1200 2100 l 1200 2700 l

 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 625 3251 a Fg(f)1228 b(g)1057 b(\016)3156 3272 y Ff(g)3235
3251 y Fi(\()p Fg(f)18 b Fi(\))215 3932 y Fg(\016)293
3953 y Ff(g)372 3932 y Fi(\()p Fg(f)g Fi(\)\()p Fg(x;)30
b(y)6 b Fi(\))49 b(=)f(max)1353 4061 y Fb(\()p Ff(i;j)8
b Fb(\))1673 3932 y Fe(f)p Fg(f)18 b Fi(\()p Fg(x)40
b Fe(\000)f Fg(i;)29 b(y)44 b Fe(\000)39 b Fg(j)10 b
Fi(\))39 b(+)f Fg(g)6 b Fi(\()p Fg(i;)29 b(j)10 b Fi(\))p
Fe(g)-264 4568 y Fi(Dilation)68 b(b)-6 b(y)69 b(a)g(\015at)f
(structuring)h(element)d(is)j(a)g(maximum)1742 4800 y(\014lter)p
Black 3751 6118 a Fh(9)p Black eop
%%Page: 10 11
10 10 bop Black Black Black Black -39 1364 a Fj(Greyscale)101
b(Mo)-8 b(rphological)98 b(Erosion)p Black Black -224
1864 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 -224 1864 a
%%BeginDocument: umbra.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
gs  clippath
660 2685 m 540 2685 l 540 2940 l 600 2700 l 660 2940 l cp
eoclip
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l 5400 2100 l 5400 5100 l 600 5100 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr gr

% arrowhead
0.000 slw
n 660 2940 m 600 2700 l 540 2940 l  col4 s
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1742 1862 a
 3789043 9396822 0 0 7235993 17958420 startTexFig
 1742 1862 a
%%BeginDocument: gstruct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 110 0 lineto 110 273 lineto closepath clip newpath
-17.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
2115 3930 m 2115 3870 l 1963 3870 l 2083 3900 l 1963 3930 l cp
eoclip
n 300 3900 m
 2100 3900 l gs col0 s gr gr

% arrowhead
n 1963 3930 m 2083 3900 l 1963 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 750 3900 m 750 5100 l 1650 5100 l 1650 3900 l
 750 3900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 50.00 260.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 750 3900 m
 1650 3900 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2388 1864 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 2388 1864 a
%%BeginDocument: gerosion.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
n 600 2700 m 600 5100 l 5400 5100 l 5400 2100 l 4500 2100 l 4500 3300 l
 3600 3300 l 3600 2700 l 2700 2700 l 2700 3000 l 1500 3000 l
 1500 2700 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 140.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 625 3251 a Fg(f)1228 b(g)1061 b(\017)3153 3272 y Ff(g)3231
3251 y Fi(\()p Fg(f)18 b Fi(\))251 3932 y Fg(\017)322
3953 y Ff(g)400 3932 y Fi(\()p Fg(f)g Fi(\)\()p Fg(x;)31
b(y)6 b Fi(\))49 b(=)f(min)1361 4061 y Fb(\()p Ff(i;j)8
b Fb(\))1662 3932 y Fe(f)p Fg(f)18 b Fi(\()p Fg(x)40
b Fe(\000)e Fg(i;)29 b(y)45 b Fe(\000)38 b Fg(j)10 b
Fi(\))39 b Fe(\000)g Fg(g)6 b Fi(\()p Fg(i;)29 b(j)10
b Fi(\))p Fe(g)-229 4568 y Fi(Erosion)70 b(b)-6 b(y)69
b(a)f(\015at)g(structuring)h(element)e(is)i(a)f(minimum)1742
4800 y(\014lter)p Black 3751 6118 a Fh(10)p Black eop
%%Page: 11 12
11 11 bop Black Black Black Black -100 1267 a Fj(Greyscale)101
b(Mo)-8 b(rphological)98 b(Op)8 b(ening)p Black Black
-224 1767 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 -224 1767 a
%%BeginDocument: umbra.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
gs  clippath
660 2685 m 540 2685 l 540 2940 l 600 2700 l 660 2940 l cp
eoclip
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l 5400 2100 l 5400 5100 l 600 5100 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr gr

% arrowhead
0.000 slw
n 660 2940 m 600 2700 l 540 2940 l  col4 s
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1742 1765 a
 3789043 9396822 0 0 7235993 17958420 startTexFig
 1742 1765 a
%%BeginDocument: gstruct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 110 0 lineto 110 273 lineto closepath clip newpath
-17.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
2115 3930 m 2115 3870 l 1963 3870 l 2083 3900 l 1963 3930 l cp
eoclip
n 300 3900 m
 2100 3900 l gs col0 s gr gr

% arrowhead
n 1963 3930 m 2083 3900 l 1963 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 750 3900 m 750 5100 l 1650 5100 l 1650 3900 l
 750 3900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 50.00 260.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 750 3900 m
 1650 3900 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2388 1767 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 2388 1767 a
%%BeginDocument: gopening.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
n 600 2700 m 600 5100 l 5400 5100 l 5400 2100 l 4200 2100 l 4200 3300 l
 3900 3300 l 3900 2700 l 2400 2700 l 2400 3000 l 1800 3000 l
 1800 2700 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 140.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 625 3155 a Fg(f)1228 b(g)1051 b(\015)3162 3175 y Ff(g)3241
3155 y Fi(\()p Fg(f)18 b Fi(\))1011 3835 y Fg(\015)1101
3856 y Ff(g)1181 3835 y Fi(\()p Fg(f)g Fi(\)\()p Fg(x;)30
b(y)6 b Fi(\))49 b(=)f Fg(\016)2210 3856 y Ff(g)2289
3835 y Fi(\()p Fg(\017)2440 3856 y Ff(g)2519 3835 y Fi(\()p
Fg(f)18 b Fi(\)\))3 4400 y(The)69 b(op)6 b(ening)70 b(of)f(f)g(b)-6
b(y)69 b(g)h(is)f(obtained)g(b)-6 b(y)69 b(sliding)g
Fg(g)-240 4632 y Fi(b)6 b(eneath)68 b Fg(f)18 b Fi(,)70
b(alw)-6 b(a)g(ys)68 b(pushing)i(up)g(as)e(fa)-6 b(r)69
b(as)g(p)6 b(ossible.)92 b(A)-6 b(t)27 4865 y(each)69
b(pixel)f(reco)-6 b(rd)69 b(the)g(value)f(of)h(the)g(o)-6
b(rigin)70 b(of)f Fg(g)6 b Fi(.)p Black 3751 6118 a Fh(11)p
Black eop
%%Page: 12 13
12 12 bop Black Black Black Black 1082 585 a Fj(White)100
b(T)-25 b(ophat)p Black Black -237 1067 a Fi(The)69 b(white)f(tophat)g
(transfo)-6 b(rm)68 b(consists)h(of)h(subtracting)285
1299 y(the)e(op)6 b(ened)70 b(mask)d(from)h(the)g(o)-6
b(riginal,)70 b(i.e.)806 2138 y Fe(f)p Fi(white)e(tophat)o
Fe(g)49 b Fi(=)g Fg(f)57 b Fe(\000)39 b Fg(\015)2726
2158 y Ff(g)2805 2138 y Fi(\()p Fg(f)18 b Fi(\))737 2521
y
 18945146 16482269 0 0 27167866 23878778 startTexFig
 737 2521 a
%%BeginDocument: wtophat.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 363 moveto 0 0 lineto 413 0 lineto 413 363 lineto closepath clip newpath
-34.0 398.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
n 600 2700 m 600 5100 l 5400 5100 l 5400 2100 l 4200 2100 l 4200 3300 l
 3900 3300 l 3900 2700 l 2400 2700 l 2400 3000 l 1800 3000 l
 1800 2700 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 140.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
n 600 6600 m 1500 6600 l 1500 6000 l 1800 6000 l 1800 6600 l 2700 6600 l
 2700 6300 l 3000 6300 l 3000 5700 l 3300 5700 l 3300 6600 l

 5400 6600 l gs col1 s gr 
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 -1 5091 a Fi(The)69 b(tophat)g(transfo)-6 b(rm)67 b(extracts)g(top)i
(of)h(a)e(wdith)-85 5323 y(co)-6 b(rresp)6 b(onding)71
b(to)d(the)h(structuring)g(element)e(of)i(the)1578 5555
y(op)6 b(ening.)p Black 3751 6118 a Fh(12)p Black eop
%%Page: 13 14
13 13 bop Black Black Black Black -25 1267 a Fj(Greyscale)101
b(Mo)-8 b(rphological)98 b(Closing)p Black Black -224
1767 a
 14208860 9377844 0 0 27167866 17958420 startTexFig
 -224 1767 a
%%BeginDocument: umbra.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 413 0 lineto 413 273 lineto closepath clip newpath
-34.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
15.000 slw
gs  clippath
660 2685 m 540 2685 l 540 2940 l 600 2700 l 660 2940 l cp
eoclip
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l 5400 2100 l 5400 5100 l 600 5100 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr gr

% arrowhead
0.000 slw
n 660 2940 m 600 2700 l 540 2940 l  col4 s
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1742 1765 a
 3789043 9396822 0 0 7235993 17958420 startTexFig
 1742 1765 a
%%BeginDocument: gstruct.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 273 moveto 0 0 lineto 110 0 lineto 110 273 lineto closepath clip newpath
-17.0 308.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
2115 3930 m 2115 3870 l 1963 3870 l 2083 3900 l 1963 3930 l cp
eoclip
n 300 3900 m
 2100 3900 l gs col0 s gr gr

% arrowhead
n 1963 3930 m 2083 3900 l 1963 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 750 3900 m 750 5100 l 1650 5100 l 1650 3900 l
 750 3900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 50.00 260.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 750 3900 m
 1650 3900 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 2388 1785 a
 14208860 9235756 0 0 27167866 17892638 startTexFig
 2388 1785 a
%%BeginDocument: gclosing.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 272 moveto 0 0 lineto 413 0 lineto 413 272 lineto closepath clip newpath
-34.0 307.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 600 2700 m 600 5100 l 5400 5100 l 5400 2100 l 4200 2100 l 4200 2700 l
 3300 2700 l 3300 1800 l 3000 1800 l 3000 2400 l 2700 2400 l
 2700 2700 l 2400 2700 l 1800 2700 l 1800 2100 l 1500 2100 l
 1500 2700 l
 600 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 120.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 7418 4575 m 7433 4575 l gs col4 s gr
% Polyline
7.500 slw
gs  clippath
6015 3930 m 6015 3870 l 5863 3870 l 5983 3900 l 5863 3930 l cp
eoclip
n 600 3900 m
 6000 3900 l gs col0 s gr gr

% arrowhead
n 5863 3930 m 5983 3900 l 5863 3870 l  col0 s
% Polyline
gs  clippath
1230 585 m 1170 585 l 1170 737 l 1200 617 l 1230 737 l cp
eoclip
n 1200 5100 m
 1200 600 l gs col0 s gr gr

% arrowhead
n 1230 737 m 1200 617 l 1170 737 l  col0 s
% Polyline
30.000 slw
n 600 2700 m 1500 2700 l 1500 2100 l 1800 2100 l 1800 3000 l 2400 3000 l
 2400 2700 l 2700 2700 l 2700 2400 l 3000 2400 l 3000 1800 l
 3300 1800 l 3300 2700 l 3900 2700 l 3900 3300 l 4200 3300 l
 4200 2100 l
 5400 2100 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 625 3155 a Fg(f)1228 b(g)1044 b(\036)3169 3175 y Ff(g)3248
3155 y Fi(\()p Fg(f)18 b Fi(\))1080 3835 y Fg(\036)1184
3856 y Ff(g)1263 3835 y Fi(\()p Fg(f)g Fi(\)\()p Fg(x;)31
b(y)6 b Fi(\))49 b(=)f Fg(\017)p Fi(\()p Fg(\016)6 b
Fi(\()p Fg(f)18 b Fi(\)\))-234 4400 y(The)69 b(closing)g(of)g(f)g(b)-6
b(y)70 b(g)f(is)g(obtained)g(b)-6 b(y)69 b(sliding)h
Fg(g)k Fi(ab)6 b(ove)-169 4632 y Fg(f)18 b Fi(,)70 b(alw)-6
b(a)g(ys)68 b(pulling)h(do)-6 b(wn)70 b(as)f(fa)-6 b(r)68
b(as)h(p)6 b(ossible.)93 b(A)-6 b(t)69 b(each)254 4865
y(pixel)f(reco)-6 b(rd)70 b(the)e(value)g(of)i(the)e(o)-6
b(rigin)70 b(of)f Fg(g)6 b Fi(.)p Black 3751 6118 a Fh(13)p
Black eop
%%Page: 14 15
14 14 bop Black Black Black Black -171 1797 a Fj(Example)100
b(-)f(extract)i(w)-8 b(ashing)99 b(p)8 b(o)-8 b(wder)1578
2029 y(grains)p Black Black 54 2328 a
 14208860 14066766 8288501 14208860 31969935 37890293 startTexFig
 54 2328 a
%%BeginDocument: axion.ps
/pshalftone 50 dict def pshalftone begin
/inch {72 mul}def
/setimstr {/cols exch def /imstr cols string def}def
/placeim {/sy exch def /sx exch def sx inch sy inch translate}def
/scaleim { /ih exch def /iw exch def
	   iw inch cvi ih inch cvi scale
	}def
/setcirc {/ang exch def /freq exch def freq ang
	{dup mul exch dup mul add 1 exch sub}
	setscreen}def
/setline {/ang exch def /freq exch def freq ang
	{pop abs 1 exch sub}
	setscreen}def
/pgsave save def
512 setimstr
1.750000 3.000000 placeim
5.000000 5.000000 scaleim
512 512 8 [512 0 0 -512 0 512] {currentfile imstr readhexstring pop}
image
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000948b8f969ba29f9b9f9b9b9d968f8d99a8bdcbcfcfd1d4c4ab9fa2
a6a4a6a8aba8a8a6a69f9d999494948f898b8f9292929294929292928f8f929294948f94
9999a4a8a4a29b948f8d8d92949ba2a2a4a49f9d9b9999999694928d8f99a8b8b8a2897d
7b767992bbd4d1bfb4b8c2c8cdd6ddd6c2a292abcbd6dbd8d1c4b4b6c8d4d6cdb6927474
899da6a89f8f7f86a6c8cdaf8f867f82848996a8b4b2a8a6a6a299948f86828ba2bdcdc8
ab8976798db4d8e1dddbcdb49b8f8b898684848994a8c4d8d8d4c6ab94867f7d7b7d848b
898682848fabc6d6dbddd4bb9272749dc6d6cdaf8b767d8996adc6c8b29286827b767274
797f96b4c4c6b69d897b747b848d9babb4b2a8968b898d99adc4c4af96848696afbfcdd8
dbdde1ddcdad948b8f8d867b72696466727f898b8d9dadb4ab9da4bdcdcbbfb8ada8a6a2
9ba4b8c2c4bfbbc2c4b6a29289746b728bb8d1d1c8bdb6b6bbbdbdbbc2cdd1d4c2a2826d
6257575d666d746d6260626b7b86847b7b99c2d8dddde1dfd6cdbba299adbdcdd4d4d8d6
c6b2afbdc2c4bfb2a2a2afb4af9d8f92a4b2ab8d6d6472a2c6bfb4adb2bdc2bfb6a49286
8492a6b6c4cbc6b49d897f899db2bfcfdfdbbf967970828d82747b94a4a48d747f949989
869fc4d8dbd4c4afa6afab99898f9dafc6d6dbd6d4d4d6d1c4a68d8b9bafbdcbd4d4bd89
697da4bfc4b49f96a6bfcdd1d1bfad00009b8d8f969b9d9b9b9d9b999b948f92969ba4ad
b2b4bdc4bbada2a2a29f9b9da4a6a4a4a29d9d999292928f86898d8f929292929294928b
86898b8f94948f949ba6b8bbb2a89b9494928f92929da6a6a6a6a29d9b9b99968f8b8b89
8b9bb2c6c4a4867b79747692bbd4d4c4afadbfcdd1d4dbd4bd9b92adc8cbcdcfcdbbafb8
cbd4d1cbbb9d848db2bdb4b2ad9f898699b2b8a48d867f82828ba6bbbdbdb8b8b8afa49b
8f84828fb4cbcdc6ab89797d94b8d8dfdbd8cbad8d868482827f828b94a2b6cdd1c8b49b
897d747474767d8484868d99abc2cfd6d8d6c49f7966749fcbdbd1b88f797f94a4a8afad
9f897b767470707984868b9ba8aba28f7f767279828fa6bfc8c4b8ab9b94a2b2bfd1cfb8
96868b9bafc2cfd8dfe4e6e1cdad92949f9d897d746b697289a6b4afa2969496968f96ad
b8bbb4b4b8b8b2afb2bbc6cdcfcdc8c6c4bdb2997d6662697da8cbd4cdc2b8bbbfbfbdbd
c6cdcfcfb89482746459575b6066666664646469747f827b7b94b8d1dddfe1ddd4cbbfa8
a2bbcddbdddddfdfd8cbc4c6c4c6c2af968d9dab997b74767f8b96867066729bbbb6b2af
b6cbd4d1d1c6b2998f8b92abc4d1cdb28970747f8fa6bdcfd8d8cdaf89727b897f72748d
999b8f898f9fa48f869bc2d4d8d4cbbfbbc4bda48f99a6b4c8d6d8d1d4d6d8d1b8967f82
92a6bbc6cbc2a27960627696a6999ba8b6c8d1d6d1b49200009b8f92999b9d9b9b9d9996
999694969999999b9b9da6adada8a29d99949494999f9d9b9b9f9f9992928f8b86898b8b
8d8f929292928f868282868f96948f929fb6c8cdc4b49f9496969694949da6a6a6a4a4a2
9d9996948d8989898b99adc4c4a689797472768db2cdcdb8a29fb4cfd6d6d8cbab898496
a4a2a2afb8afabbbcfd1cdc2b299899bc2d1c8c6c2b2928b929ba2998d867f7b7d89a8bb
bbc4c8c8c8bdab9b8d848496bbc8bdb29984848f9bafd4ddd8d1bb9d847f7b7679797d84
8d9babbbbfb6a28b7d746b6b727f8d8d8d99a6b2b6bbc4cfd6c8ab866b60698fbfd6cdb4
8f7d8fb2bfb8b2a6998b7d797679869fb2ad9d929496948f7f726d707d99bbcbcdc8c4bf
b2a6b2bdc6d1cdb492969d9ba2b4c8d4d8dfe6ddc2a29299aba6897b746969799fc4cfc6
b28f7d869da6abada69f9da8c2cfc8c4c4c8cbd1d4d4cfcdcdc8b69472605b607094bdd4
cfc2bbc4c8c6c6cbcfcfd1cfb89484796b5d5b606264696b6b6d72767b7d7b74748bb8db
e1e4e6dfd1c2bfb8b4bdcfdfe1e1e6e8ddd1cdcdc2bdb69f867d86928979746b69727f7d
70666684a4adaba4abcbd8d6ddddc69f8d8994afcddbcfa87b6469768299b6cdd6d6cfbb
9474727f7b747b92a2a6a6abb2b6ad948ba2c6d4d4d1cbc8c8d1cfb89f9fabb8c8d4d1cd
d4d8d8cbab897b7f8d9fafb4af9f7f69605d6982948f9badbdcfdde1ddbf960000998f8f
96999996999d9b999d9d9b999b9b9996969b9fa6ababa4998f8b8d8d9299999694999d9b
96928d89898989898f928d8b898b8b89827f8699a8a69d9fafc2cfd1cbb8a49699999996
999da2a4a4a4a29f9b9999968f8989868b99a8bbc4b6967b706b72849db4b29f8f8fa8c8
d1d4d4bf9b7b727479767986969da8bbcfd1c4af9d898296bbcfd1cdc8b6969292949994
8b847b76747d99adb8cbcfcfcfbfa68d82828699adb29f92898da2afa6a4c8d1cbbda48d
7f7b746d6d74797d8b99a4adada49684766b64667f9fadaba8b2bbbbafa6afc2cbbb997b
62575b749dbfc4b292869dbfcdc4b6a69b92867d7f8fafc8d1cbab8b8b8f9696826d6669
82abcdd6d1cdcfcdc6bbb4b8c2c6c4b6a8b4b6a49ba8bfcbcfd1d6cfb6998d949b8f7b72
70696b7da6cfd6cbaf84748bb4c4c6bfab948b9fc6d6cfcbc8cbcdd6dbd8d4cfcdc6af8b
6d605b5b7094b8cbc8c4c4c8cdcdcfd8d6d1d4d4bf9b86796d62626262666b747d7f868d
8f8b7d72708bbfe6e8e1e1ddc8b4b8bfbfbdcfdfe4e6ededddcdc8cbbfb6a88f7b74767f
929b927b6b7282898274626982949492a2c8d8dbe4e6cfa48f99afbfcbcdbd9672646674
8ba8c2cfd4d6d1c29f766670727b8fabb6bbbdc2c8cbbb9f99adcbd4d4d1cbcbcfd1d4c8
af9fa6bbcdd4d1cfd4d4d4c89f7f7f8999a6adab9d8b796b6062769bb4ababadadc4dbe4
ddbf9b000096928d8d929492949b99999d9d9d9b9d9b9694969b9fabb8bfb8a48f868b8f
8f9292929292969b99968b82828284898f928b847f848d8d86828fb2c2bbb4bbc4c4cbcd
c4b29f9696999b9b9d9f9f9fa2a2a29f9d9b9b999289868b99abb8c6cdc4a4827069707d
929f9d8d828496afbbc4cdbd9d7d6d64606266707d8fa8bfc8c4af99897b7992bbd4d8d1
c8b499928f8f948f86827974727689a2bbcfd4d4d1bb9b847b7f8d9ba29f92868fa8bfc6
af9db6c4bbaf96827b7b7264666d767f8d969fa6a2998b796b605b6286b4c2c4bfc2c2b4
9f969fafb8af9979605252607da2b8b4a499a8c4cfcbc2b4a69689828dadcbd8d6cba884
8496a8a48469646d92bddbddd6d1d6d4cfc6afafb8b8bfc6cdcfc6b29ba2b4bfcbcdcdc8
b49b8d8b897b7069696466769dc6d1c29f7d7b9bc4d1d1cdbb9b8ba4cdddd4cdcdcfd1db
ddd6cbc2bdb2a48d79665d5d749fbbbdbbbfc6cdd1d6dbdddbd8d8dbcbab8d796d646262
64707b8fa4a49f9f9d9689797289bfebebddd6cfbda8abbdc4c4d4e1e4e6efeddbd1d1d1
c8c2ad8b746d727f9fb2ab927b7f9badad966b59626d7684a2c8d8dde4e8d6b2a8b8c6bf
b2a6997f6d64697fa2c4cfd1cfd4d6cfb2866b697084a2bdc4c4c8cdd1d4cdb2a4adbfcb
cdcfcfd1cfcdd1c8af9ba6c2d1d4d1d1d1d1d1c8a4848494a8b6bfbdad927b6b626686b8
d1c4bdb2a4b2cbd8cdbbab0000948f8d8b8f9292929696999b9f9d9b9b948d8b8d94a4bd
cfd4c8b4968692928d8f8f928f8f99a4a69b897d7b7d82868b8f8d8479869d9f8f8499c2
d1c8c6cbcbbdbdbdb8a899929496999b9b9fa2a2a2a2a2a29f9b9d998f868694abc4d1d4
cfc8af8b706972869fada89684848f9dadbdc8bfa2826d625b5b5d66768ba8bfbfaf9986
7970748db8dbe1d8c6af998f8b898b8b86827b7472747d92b2cfd8d6d1b4947f79828f99
9d998f8b9dbbcfcfb49fb2bfbfb89d7f74726b5d5d64707b8b99a2a6a29682726459545b
82b4cbcfcbc8c4b29d9b9fa8b4b69f7b60504d5b729bbbbdb6afb4c2cdcfcfcdc2a48b84
9bbfd6dbd8cbab8484a4bbab826464729dcbdfdfdbd8d6cfc8bda8a6afb2c4d8e1dbcbb4
a4b2bfc4d1d4d4d1c2a89289847b706b6662606b89a8b4a4897682a8cdd6d4d1c6ab92a4
cfe1d8d4d1d4d6dbd8cbafa4a4a4a29d9279646079a4b8b4b4b6bdc6d1dbe1e1dddbdddd
d4bb9f8676696264708292a8c2bfb6ada69f96897984b2e1e8dbcdbdab99a2bbcbcddbe4
e4e8efede1ddddd8c8c2ab826d69748da4a89d8b7d86abc6cdb47f5d5d667486a4c4d4d6
dfdfcfb6bdcdcfb89d8d7f7266646d8db4cdd4cfcbcfdbdbc49972667292b2c6c6c8cdd1
d6d8d4bda8a2a6adb6c2cbcfcdcbcdc2a69babc8d6d6d1cfcfcfd1cfb89d94a4b6c4d1d1
c4a47f69626682afcdc2b8b6b6bbc8d4cdc4bb00008f8d8b8d9292928d8b8f94999f9f9b
968b827f8494afd1dddbd1b8998f9f968d9292928b8fa8bdbda48979767d82868d928d7f
768badb4a28b99bdd1cfcbcdcbb8b2adaba2968f928f8f94969b9fa29f9d9fa2a29f9d96
8d828492adc8dbdbd4cfb692746b7b9bbdcbc2ad948b9bb2c4cfcfc2a6867266605b5962
7286a2b8bda68d796d6b7289b4d8e6dbc4a8968d847f84868682797270747989a8cbd8db
cfb28f7f7d7f848f96948b8b9dbbcfc8ad9fb6c6c4bda48972726b5d5b626d79869badb4
af997d6d6057575d7ba6c8d1cdcbcdc4b4adafb8c4bfa2796454525b72a4cbc6bbafabad
bbcbd6ddd4b69286a2c4d6dbdbcfaf8986a4b69f7b666b7d9fc8e4e4dfdddbd1bfab9da2
abafc6dbe4dbcbb6afbfcbcbd6dbdbd8cbb2998b8d8f867f7970626679898d867b727b9f
cbd6d1cfc6af949bc8e1dbd8d6d8d6d4cbb69b8d94a6afafa68d7064799dafadada6a2ab
bdd1e1e1dfdfe1e1dbcbb8a68b6d62697d969fafcbcfc8bfafa8a4998984a2cfdfd4c4ad
968fabc2cdcfdde4e4e8e8ebebe4dbc8b6af9d7b6b6b7fa2afa48b79798bafcfd8c49b74
6d828f929dafbdc4cdcbbfb8c6d1c6a88f867b6b62626d8bb2cdd1cdc8cfdfdfcba47969
7ba4c2c8c8cdcfcfd4dbd4b89d8d8b96a4afb8c2c4c6c4b49b99afcbd8d8d4cfcbcfd4d1
cbb8abb8c4cdd8ddd4b484645d64769bbbb6b2bdcdd1d6dddbcfc400008b898b8d8f8f8d
8984868d99a4a8a4998b7f767d96bddbdfd8cbaf968f9d968d8f928f868dabc6c8ad8672
7682898b8f9999897984a8bbb2998fa6c4d1cfcbc4b2a8a4a299928b89898b8d92969b9d
9d9b9da2a29f9994897d7d89a2c2d6dbd6d1b28d796d86b4d1d6cbbd9d99b4d1dddbd6c4
a88d796b625d5d647086a6c4c8b28b706d76869bb6d4e1d6b89f94897f797b7f7f7d7670
6d707986a2c4d8dbcbad8f827d7d7f8d96968f8992a8b8a8949bbbcbc6b49d84767d7260
5d626b727f99b2bfbda27b69605b5b627292b6c6c8cdd4d1c2b8bfc8c6bf9f7666595460
7db2d1cbb49f999babc6dde1d8c6ab9ba4c2d6dbd6cbad8b84969d8474798f9dabc6e1e6
e1dddbd4c2a69ba2a8a4b4cfdfd6cbbfb8c4c8c8d4dbdbd6c8b49b8f94a4a8a89d866b66
70797f7f7d76748bb4c6cbc6bba2868dbddfdfdddbdbd1c6af9b8d8692afafada88f7264
748d9da4a4927f869bbfdde1e4e1e1dfddd4cbbfa4766269849fa6b6d4d8d6cbbbafabab
a28f92bdd1cdbba28d94bdcdcdcbd6dddfe1dfe1e4dbc8b4a69f8f766b6d82a4af9d7d72
89a8bdd1d6c4a27f82a2ad9f94969da4ada8abbdc8cbb696929b947964667084a4c6cbc6
c6d6dfddcda87d6b86afc6c8cbd1d4d4d6d8cba4867d7f96a6aba6a8b2b4af9d8b8fa8c8
d8d8d4d1cdcfd1d4cfc4b8c2cdd4dbddd8bd8966626b829badadafc2d6d8dbddddd8cf00
008686868b8d8d89827b7f8da2b6bbb4a69482767b99c2d6d6cbb8a28d868b8d8d8f928b
7f849bbbc8ab84727f99a2a2a6adaf9f827b9dbbbda48f92b2cdd1c8b4a49b9996928d86
7f7f868b9294969b9d9f9fa29f9d968d847d7b849bbdd6dbd4cbab86746b89b8d4d1c6b8
9d9fc2e1e4ddd6bda8947f72666262697996c2dbd6bd94747b8fa6b6bbc6cdbda8968f82
767479828279726b696b74869dbbd1d4c4a88f7f7d8292a4adada48f8b9494867f94bbcd
c6ad8f7970766d5d5d5d60627494b2c4c4a67b66696d6669748ba8bdcbd1d8d4c4b8bdc2
b6ab92766459576994c2d4c8ab8f8b94adcbdfe1ddd6c8b2a8bfcfcfc4bda8949fa48f6d
6b92b8bdbbc4d8e4e1dbd6cbb6a49fa49f8f9dc2dbd6cbc4bdc4c4c2c6cbcbc8c6bba89d
9fb2bfbfad8f72666b768b999b927f7d8fa4b6bba284767fadd4dfdfdbd4c6a88b7d797d
94b4afa49f8d7b7079848d948d7d727d99bbd8e1dfdbd6d1d4d8d4cbaf84646b899fa8bb
d8dbd1c4b8afabadad9b8fa8bdbfab948699c4d6d1cdcfd6dbdfdbd8d4c8b8a89f948270
6669768f9b8d767ba6cdd1d6cfb6967f8fbbc6b69f9996928d8b9bb4bbb29f92a6bbb699
7b767d869bb8c2bfc4d4d8d8cdaf847292b4c6cbcfd6dbd8d6cfb684696d829fada8948d
92948f827b849fbfd6dbd8d4d1cfd1d6cfc2b6b8c6d1d6d8d4bb84696b7da2b2afadb2bf
cdcfcfd6dbdfdb00008284848b9494897b74798fafc6cbc4b49d867b7d96b8cfd1c4af9b
897f7d82898d8d867f7d8badbd9b797289adbbbdc2bfb8a8847692bbc4af948b9fc2cfc4
ab9992928f8b89847d7d7f848b8f94969b9fa29f9b949286827f7d8299bfd8ddd1c4a482
747082a6c4c6b8a696a4c4ddddd4cbb6a89b86796d64626b82abd6e4d8c2a2898d9fb6bf
b6afab9f968f897f7676869692796d69666b748294abbfc6bba68f7d7d99b8c4c8c4b499
8b867d767992b6cbbfa2826b60625d54504b4b50647f9fbbbb9d7972868d7974849dafc2
cfdbdbcfbbadaba6998d8276665959729fc6d4c49f7f86a2bbcddbdfdfdfd4bba8b6c6c6
b4a89ba2bdb68d646994bdc8c6c8d4d8d8d4c6ad96929b9f928294bfddd6c8c2bdbfbbaf
a6a6b2c2c4bdb4afbbcbcdc2a27f706b6d84a6bdbdb6a28f8694abb2967b768bafcbd1d1
d1cfc4a886706b7696bdbdafa6a4998d8f8d8f8d7b707286adc8d4dbd8c8b8b4c2cfd1cb
b68d6970929fa4afbfbdb8afa49f9d9d9f968b8fa4af9f898296b8cfd4cdcbd1dddfddd6
d4c6b2a29b8d7f72666269798b8f8992bbdbdbd8cbad8d7d96c4d4c6b2a8a89f92868d9d
9d9494a4bdcbc4af9486898b96adb6b6bbc8d4d8cfb68f7b94b2c6cdd1d8dbd8d1bd9669
57647d9ba69b827b7f7b7270747f96b6d1ddddd8d1cfcfd6d1bda6a4b2c2cdd1c8ab7f6b
728bbbc8b6a8a8b2b2a8a6b2c2d6db000082898994a6a692796d728fb8c8cdc6b89f8b82
8494b2cfd4cdbda48b7d7b7f898f8b8982797d94a2826d7496b8cbcbcbbfb4a684748bb6
c8bba28d92adc2bba4968d8d8b8684827d7d7d7f82868b92999b9d9d968f8d847f7d7f84
94b6d1d8d1bfa28476747d92adb6ab9d9fb2c8d8d1c4bdbbbbad927d7066646b89bbdde4
d8c4b2a69fa2afb4a89d968d8b8684827b7d8d9f96796d69696d748292a2b2b8b4a48d7d
7fa6cbcfd4cbb499898276727689abbbb294746057504b42372e2e324259799999867682
9fa48f899db4bfcbd4dbddcfb29d948d86898b846d5b5b7299bdc8af89748bb4c6cbd6db
dfdfd6bda6afbfc4b2968d9fb2a27d646d89a8c8d1d6d6c8bfb6a28b7d7f82847d7b92bd
d8cfbfb8b8b6a899898fabc2c4bbb8bfd1d8cbb28f72696b799bbfd1cfcbc2b29d9fadaf
9d868bafc8d1cdc2c6cfcdbd966d667499c2cdc6bdbfb8afa89f9d998474748fb8cfd1d6
cfb6948ba2bbbfbfaf8b6d7494a2a49f9b8f9bada49b9694948f8682929b8f827f92abc4
cfcdcbd1dfe6e4ddd8cbb29d968d7f72625b60748f9fa2abc8dfddd8c6a88b7d92c2cfc4
b2a8abad9f929299928b9bbfcfcdc4b49d8b8d8d96a4abadb2bdcdd6d4c4a28b9bb2c2c8
cfd6d8d1bf9d7659505d798d968d7f8489796b697b8d9db6d4dbdbd8d4cfcfd1cbb4968d
99afc6d1c29d7b6d799bc6cfb69f9b9d8f7d76849dbdcd000082868fa4bbb69d7b696d92
bbcbcbc8c4ab92898994adc8d1cfc8b496827f86949d968f867d76797d706d82a8c2cdcd
c2b6b2ab927f89abc6c8b4968b99a6a499928986847f7f7f7d7b7d7d7b7f868f999b9999
8d84827f7d7d7f8289a2bfd1cbb69b867b76798294a2a2a4b8c6cdd6cdbfbdc8cdbd9d7f
726b64698dc2dde1d6c2bdbfb2a49fa29b9b9b8d89898b8b847f89928b79706d6b70747f
8f9fb4c2c2b49f8b829bbbc8d1cbb69d948b726b707d99a89d7f66544b443b32241e191b
273d54666b6d798da6ab9f9fafc2cbcfd4d8e1d8bd9f89848d9ba49b7d605b7094b2af8d
706b86b8c8c6d8dbdbddd6c2a8a8b8c4bb96828b8b7f6d728694a4c6dbdfd6b6a2968682
827d70666b748dafc6bbaba6a8a292847b84a2bfc6bfbfcddddbbd9b8272696982afcbd6
d8d1cdc6b6afafad9d8fa2cddbddd8c4c6d1cdbd966d69799bc4d4d4cfcbc8c2b6afada8
967f768fb6cbcdcfc4a88474849da8ada286767b8d9b9f94847d9bbfbdb4ada69692928b
8d8d867d8294a8c4d1cdcbd1dfebebe4ddcfb499948f827262595d7496a8adbbd1dfdbd1
bda48b7b86abbfb6a4a2a6aba89d9fa69994adcfd6cfc4af96848d94969ba4abadb4c4d4
d8cbb2a4abafb2b8c6d4d4c4ab8662524b57728b9fa49d9d998470708da6b4bfd4dbdbd8
d1d1cfc6b69f89828fabc6d4c8a27b6d7fa8cdd1bda2968d7b6b6b798fb6c80000848da2
b8c4bba27f666b89adc4cfd6d4bf9f89868f9fafbbc4c4b499898d9dadb4ad9f92867b70
70767f94b2bbc4c6b8afb2b4a89994a6bfc8b69b8b8f94968f8b847f7f7f7f7d7b797676
797d848b9499968f827b797d8486827d7f92abbdbba694867b79797b869299abcbd4d1d4
cbbfbfcbcfc2a6867470666b8dc2d8ddd4bdbdc8c4af9b9ba6b6b8a89696a8a89b868484
7f79726d6b70747d8b9dbdcfcdcbc2ad968fa4bfcdc8bbb2af9b746972849fa899765949
4039302924201e1b2232424b5764798fa4a89da2b4c6cfd6d8dbdfddc6a4898ba2b2b4a8
8d6b607ba2b6a67d64667ba2b4bfdbdbd6d6d4c2ababb8c8bf967d7f7d747086a6b2adc2
d8e1d1b2998d84898b826b60627089a4af9f9499998f7f797b8da8c4c8c2c6d8e4d8b28b
7470696b82afcddbdbd1d1d1c6bbafa28f8ba8d4dfdfd8c4c8cfc4ad8669697d9dc4d4d8
d6cfcdcbc4bdb8ad9b847b8fb2c6c8cbc2a47b70829fafb2ab9b8f898986867f7479a4cd
d4d1cbbd9f9baba69d928d7d7d92adcdd8cfcfdbe6ebe8e4dfcdb29b96998b7460575d72
8f9fa6bfd1d4cbbdafa28f7b768296948999a6adafa49f9f949fc2d8ddd1c2ad9b96a2a6
9f949ba4a8abbdcfd6c8b6adada8a2a4b4c4c6b8a284624d4750698fb4c2bbafa6947d84
a8bbc4c8d6dbddd8d1cfcbb89b7f797b8fadc4d1cfb6897284adcdd4c6b4a48f72707d8f
a6c4d40000869dbbcbc6bdad8f69667f9fbdd4dfdfcfad8f898d8f969ba6ab99847d92b2
c6cbc4b29d8d7b72768b9dadb4afb8c2b4adafb4b6afa6a2adb6ad9b8f8d8d8f8f89827d
7d7f7d7b7b767272747b848f999d998b7f7b7984999f927f7f8d99a2a2968b847f7b7979
828996afcfdbd6d1c6bdbdc4c6bfaf947b726b728fb8d1d6cdb8bdcfcfbda2a2bbcfd1c8
afa8bbbbab92827d7b79726b6b6d727d8ba2c6dbd4d6d6c8af9dabc8d1cdc6c4bb9d766d
798fafb49d7457443b342e27222224242e3740495260768d99998d92abc6cfd6dbdddfdd
c69f868fa8b8bbaf997d7994b6c2ab8264698299a4b6d8ddd6d4d4c6b2b6c4cfbf9b8994
9b8d8296b4b8b2bfd8e4d4b6998b84827d746660627492a8a6928f9b96897d7f92afc6cd
c8c2cbe1e8d8b4846b6b69707f9fc2d6d8d4d6d6cdbda68f7b7fa8d6dfddd1c2c2c4b699
79646b849fb6c6d1d4cfcdcfcbc4b49d897b7686a4bfcbc8bfa2767496bbc4c4c4bfaf9b
8b7d79767079a2d1dfe1dbc8ada8b8b6ab9f967f798fb2d4dbd1d6e1ebede8dfd4bfb2ad
aba48f7260575b6d8b999bb2bdb8ada6a6a4947b69646d6d7089a2afb29f8f8f96b2cfdd
dfd6c6b8b2b4b8b8ad9d9499a2a4b2c8d4c6b4a8a69d8f8d99adb6af9f84665044495d84
abbfbbafa69f8d92afc2c8cdd4d4d1d1cfcbbb9d82726d748ba8bfcfd6c89f7d7f9fc2cf
cdbfb2997b849fb6c4cfd6000092abc4cbc2b8b49d726b86a6bdcdd8ddd4bba496928d8d
8b8d8b796b6b82a6c6d4cfb89d8b7d767b8fadbdb8b2b6b69f9699a4b4b6ada4a4a8a69b
8d8684898d8b8482847f7b7b7d767272727b8d9fa8ada896847b7f96adb4a48d82898f92
8f898482827f7b797d8499bdd6dfdbd1c2b8bfc2c4bfb6a28b797279899fb8c2b8b2bdd1
d4c4aba8c6d6d6d6c2b4b6bbab8f7f7979767069696b748499abcddfd8dbdbd1b8abb8d4
d6d1cfcbb69274707f9bb8b89d745747403b322722272e343d3d3d4749577282847d7b7b
96bbcdd8dddddfd8c299868b9fb4b8af9d99a2b8c8c2a47966799dafafb6d1d8cfc8c8bf
b2bbcbcdbda69fafbbaba4b8bdb4a8b8d6e4d8b89f94847970666262697d9db4b6a8a4a8
9b867d8fadcbd6d1cbc6cddde4dbb8846466707b8996adc6cfcdcdcfc6ab927f7079a4d6
dfd8cdbbb2a89b826d69749bb8b6b4bbc4c2c2c4c8bfa47f6b66697486a4bbc2b4947076
9dc2cdcfd1cfbfa6928f8f867b7696c8e6e8dfcdb2abbbc2bdb4a48d899db8d1d8d6dbe1
ebede8ddcbb4bbcdc4b2967d6d606079969f9696969494969da496867666605d64768fa4
a4948996afc8d8dfe4e1d6cdc4bfbfbfbdad9992999fafc6d4cbb49d94847676849ba69f
927b624b4042527294a4a2a2a8a49696adbfc8cdcfc4c4cdc6b89d7f7069696d84a2bdd1
dbd4b68b7b96b8cbcbc4b4967f92b4c8d1cfcf0000abbbc8c6b6b2b2a47f7692afb4b8c4
cfd4cbb8a8998b8984827b6b6262728db2cdcfbb9f897b747482a4b8b4afb4af8b767b8d
a8b6b6b8bbbbaf99867f7f848689868689868282827b726d72849fb6bbbfbda88b7d8dab
b8b4ad99868482868984827f7b7d7b767d89a4cbd8dbd6cdbbb2bbbdbfbfb8afa28b7b76
7d84929b9fb2c4d1d6c6adabc6d6d6d8c6b2adb4a68b7d767472706b69707d94abb6d1e6
dfdfd8cbb2adbdcfd1cdcfcfb88d76728db2c4bd9d7960524b4434272730393d4740393d
404b606b6b6664697d9dbbcfd8d8d8cdb49b898492a6ab9f99abc4cfd1bb926d6686b4c4
c2c4cdcbb8adadb2b2b6bbb8afafb4bdc2b8bdcdc6b29fa6c8e1dfc6b2a28b847b706b66
697b96b6cbc6b8a89984849fbfd6dbd6d1cfd1dbdfd1af7f64708499a29f9fafbfbdbdbb
ad947d746b7099cfdbd1c2b4a89d8f7d6d6b7fb4d1bfada6a6a6abb6c2bb99705d5b5d66
728bafbfb28d707499c2d6dbd6cbb29992a2a699847289bfe8edddcba69badc2cbc4b2a2
9da6b6cbd4d4d6d8dfe6dbcbb8abbdd1cbb8a29489746b8da6a68f7f7b7f868996abafaf
a6896b5b606b8699948b8da6c6d6dde1e6e6e1d8cdc2bfc2c2b8afa6a2a4b2c6d4c8a886
796d696b7b8d9289766250403b3d4b6982868b99adb2a299adc2cdcfcbb8b8c6bfa27f70
666262667999bdd1ddd6af897d92b4c2bfb8a284768bafc8d1cdc40000c6cdd1c8b8adaf
a6897b8b9f9fa2b4cddbd4c4b29b897f7d7b746b66667086abcbcdc2a68b7972727d94a4
a2a4aba4826b6b7694adbfcbcfcdbb9b84827d7f8486898b8b8b89847f766d666b82a8c6
c6c4c2ad8b7d99b4b8afafa28d7f7b7f8482827f7d7f7b797d86a2c6d1d1cdc4afa6abb2
b8bdbbbbb8a68676797b7f8294b6c6cbcfbfadabc6d8dbd6c2ada8afa692847b74707276
79828fa2afbdd8ebe4ddcdb8a8adb8c2bdbdc8cfb68d7b799bc4cfc4a68d7d7264523929
2e373b40474037393b424b5052545962708299afbbbfc6bfab967f7682949d999bb4cfd6
d1b28264648dbfcfd1d1d1c2a89da8bdc4bba89fa8b8bdb8b8b2b6c4c6bba8a4c2dfe1cd
b8ab9d9b9b998d7466768db2d1d1bb9f8d848ba6c8dddfd8d6d6dbdfddc4967470829db2
bbb6a29ba6abb4b6ab997f6b646989bbcbc4b4adb6bdaf8f726d82b8d6c6b6a8a2a6b6c4
c6bd996b5d595b64769bc2cbc4a8847994bdcdd1c4ab92848ba2a89b7f7082b4dddfcfbb
8d7d94b2c6c6bbafa69fa6b8c6c4c2bdc8d8c4a49994a6bbbbaf9f948f7b7496aba48f84
8b928b849bc2cbcfc8ad7f6064799ba89d949db8d4dddfe6e8e6e4dbcdbfbfc2c2c4c8c4
b6abb2c6d4c89f74696664666d767669594940393940495d6970829bb2b8aba2afc6d4cf
c4b4b6c4bb9b796d66646464708bb2cbd4c4967d7d89a4aba4997f69667696b2bdb6ad00
00d1d6dbd4bfada69d867979828999bbdde1d8cbb49d8b7d76726d6d70727992b6cfcfc8
b4947b72727d8b928f94968b76666266799bbfcfcfc6b499847f7b7f8486898d8f8f8b86
7b726960627ba6c8c4bdbba686798fa8afadafa28b7d797b7d7d7f82848684827f8294b2
c8cfcbc4ab99999da4adb6bdc2b8967b7476797d8fafb8b2b2b4afabc4d8dbd4c4b4abb4
b6ad9d8d847f848f9da6a8abb2c2dbe6e1dbc6adababababa4a6b6bda8897b7fa2c6d1c8
b8afa49682664730343b3b3b423b3237373b3d42474b545d69747f8b949dadb8af947466
728ba2a6a6bdd4d6cda87960648fc4d1d4d6d8cbb2a2adc6cfc2a69badbbb4a6a8a6a6ad
bfbfafa4b6d1d6c4b4afa8afb8bdad8b798996abc6cbb899868696afcfdfdfd8d8dddfe1
d4b28672768dabbdc4c2af9d99a2b4bfbfb2926d62647692a6a8a2a4c2dbcfa87f727dab
cbc6bbb2b6c8d4d4cfbd9469605b5b6989b4cfd1d4cdab8f99b4ada899847f7f7f8d998f
7976869fb6bbb8af8b7b8dabbfc6c4bdad9b9babb8b8b6adafc4af94969696999d9d9284
7b747994a49d929badaf9f8da4cfd6d8d4b886647999b6bdb6abb4cddde4e6e6e8e6dfcd
b8adb2bdc4c8cdcbbdabafc4d4cfa6766d6b6d6d6662594b40393432343940474959799b
adab9d9fb2c8d4cdb8bbc6c8b6967d7976797b76768299afbbb2947d7b828d8f897d6b5b
59627b8f9696940000dbdfdfd6c4ad9d92867972747d96c2e4e6ddcfb49b897b706b6b72
767d89a2c2d6d1cdbd9f7f70767f86898689867b706660627299c2cdc8bbafa4998d8484
86898b8f94928d867b726660647ba2bfbdbdbdad998f99a6afb2af9f8d827b7b7b7b7d82
8489898682848b9fbfcdcdc6af927f7d8494adbdc6c4ab897270747b89969b969db2bbb8
c8d6d6c6bbb4b4bdc8c6b6a8a4abadb4bdbfb8adafbfcfd8dbd8c4a6a29f999692949b9d
927f797d94afbbbdc2c4bba892745239343939373b39323434373d44494d57606972797f
848d9fb2af8d6d647694adb4a8bbd4d1bd947060668dc2cbcdd1d6cdb6a4a8bfc8bda6a6
bdbfafa2adb6ad9fa6ada89fa6b8bfafadb4afbbc6c6b89d96adaba4b2bdb89f89869bb6
cddbdddbdddfdfdfc69d7d74849fb6c4cbd1cbbbadafb8c2cbc2a279696d747b8d99969d
c2e1d8c29d7f7b8fabb4b6b6c4dbe4dfd6bd946b626062749bbdcbcdd6dbc4a6a6b69b8f
897f7f7f827f7f79768994969dabb6b8a89699b2c2c8cdcbb8a29ba8b6b8b6aba6ad9f9d
b2b2a4928f928d7f767b8d9fada696a6bbbdaf9babd1d6d6cdab827292b4c4c4c4bdc2d4
e1e6e6e6e8e4cda88f8d99afbbbdbfbdb8b2b8c8d6d4b689797d8682725b47372b272427
292e34343244698f9d8b7f8fb4c8cbbdb2c2d1cfb6998b8b898d928f8b868496adb8ab8d
7f8989847f7262575b708b998f898b0000dbdfdfd6c8b49f94897d74767d92bbe4ebe4d6
b89b86766d6b6d76848d9bb2cbd4d1cdc4a68270767b868b8989847b72666262769bbdc4
bdb8bdbdb8ad9d968d868992968f8b8479706966667999b4bbc4cdc4b8b2b2b6bbbdb6a8
9f9b8b7d7674797f8286898989868996afc4c8c2b294726970829db8cdcfbd9b766b6d79
84898b8f9db8c8cbcfd4cdb6a2a4b4bbc2c4bdb4bfcfcbc6c8c6b6a4a8b4bdbdc4cbbb9d
948f8b8d8d8d8d867f7974767f8f99a4b2bfbdad997d5d403432343437343032343b474d
525760666d747d8b92929fada6846b708299adb29fadc8c8ab8269626986b2bdbfc2c4c6
bbabafb4b2ada6b4cdcdbfb6bfc6b899898f9b9d9fa4ababb2bbbfc4cbcfbfaba8bfb8a6
a2afb8ad99899bbbc6d1d6d8dde1e1dbbb8f7b7996bbc4cbd6dfd8cdc6bdbfc6cdcdb894
7d84928b8d949699bddbd1c6ad8f827f8999abb6c8e4ebdfd4c2a27d69667084a8bdc4c8
d4d8c4a4a6bdada8a89f92929b8f7f70708b999badbfcbcbc6b2a2b6c4cbcfcfc2a8a4af
bdbdb8b6b8b6adafc4c8bda48f8b8b898d9fb2b6bfb4a2abbbbdab929bbfcdc8b28d7982
a2bbc2c2c6bdc2d6e4e6e4e6e6d4af8b797b899fadada8a8b2bbc6cdd1d4c29d82869694
8262422e1e1719191b243030303b52747f726d89adb4a89dadc2d1cdb29b949294999d9d
96897f8dabc2c2a48d96968f82706257607fa2ad9f8f8b0000d6dddddbd4bda694867f7b
7d8292b6e1efe8d8bb9b82746d6b72849dabadbbcdd4d1cfc6a8826d7476848d8b89847b
6d625d626d89abb6b2b2bfc8c8c4b8a68f848d9da4998b7f76706b6b697489a2b4c8d4cf
c8c2bdbfc2c4c2b6afad998276767b7d82868b8d8f8b898d9badbbb6af9976696b798fab
c4cdbf9f7b6b728494948d8d9dbbcfcfcbcdc8a88f8d9fa4a4a4abb6cbd8d6cdc8c4ad9b
a2a8aba4a4aba89b928b8b8d928f867f7b7979797b7f848d99a4aba89984694b39323232
343230343b4450575d626970747989a6b4b2b8bbab8970728494a4a89496afbda47b6664
70829ba6a4a2adc4c8bbc4b8a29da2b8d4d6cdc4c6c8b8927b7b8b969999a6c2cbc4c4c4
cbcdbba6a4b4b4a29fb2c4c2ab94a2c4c8cdd4d6dfe1dfd4b48f7f7fa6cfcfcfd8dfd6c8
c4bdc4c8cbcfc8af969bada4928d9292b4d1cbcbbda89d89797f92abc8e6ebdbcfc4b69d
7f767f8da8b8bbc2c8c4ad94a2c4c6c6c2bbaba4aba492766b7f8f9bbdcdd4d8d6bfabbd
cdcfcdc6b4a4b4c4cfcfc4c8d8d8cfc8cdd1cdb899847d849fbbc8c6c2b4a4a6ada48b76
7d9db4af9476798d9fafb2b4bbb4bddbe6e8e4e1d8bd967d74768499a6a49b99a6bbcfcf
c8c8c2ab8d8d9b9b8d7457341b1012171b273434343b404d5959627d948f848ba8bfcbc2
a28f8d8d949da4a296867d89a4bfc8b29da8aba28d7964575d7d9da89986820000d4d8dd
e1ddc8ab8f847f7f848694b4ddede8d4b8998276706d7b9bbbc4bfbfc6cbcbc8bf9f7d6b
6d707b8486847f7669605d626b798da4a8a8b4bfc8c8bda286869db6bdb2967d746d6966
6b74828fa6c4d4d1cdcbc4c6c8cdcbbfb4b29f8b7f828282868b8f96a2a4998986949f9d
9d8f7b767b8b9ba8bbc6bb9d7d76869faba28f8999b6c6c4b6b8b4927f7d86928d8996b8
d1dbdbd4cbbba49ba2a6a2969296a2a4a29b9496a299847d7b7d7f7f7d7d7f848b949fa2
9482705b4d44403b3b3b3b3d444d575d626b72797f899bbfd1cfd1c8b49674697989999f
928fa2b8a47d6d74898d898d898499bbc8c2cbc4ad9f9bafcfd6c8b8b8bdb69b7f72747b
7f86a6d4ddcdbfb8bbb49f8f94a29f96a2bdd4d4c4a6a6bdbfc4cbd4dfddd1c4ab8f898b
add4d4cdd1d8d6c6b8bdcbcfcfd1cfbda2a4b6b49f9294899dbdcbd6cfc2b69d7d74829f
c4e4ebddcfc8cbc2ab968f8f99a2a8adaba28f8fa4c2cbcbc6bfab9d9b9b8d7466748499
c2cfd4d8d4bfafc4d1cfbdafa8afc6d4dddfd4d4dfe4dfd6cfd4d4c29d7d6d7696b8c8c4
b8aba29d927d727079899b9b867479868d9299a2a6a4b6dbe6e8e6ddc6a88d7970727f96
a6a49b96a4b8cbcbc2bdbdb8aba4a2a29d9476422014192027343d393434303742506279
86898d96a6bbc4b68f797b8494a2a8a6998d8d99abbbbfb2a8b2b8af99846b595b728d9b
927f790000cbd4dbe4e4cdab8d847f7f898b94a8cbe4e4cdb296867d767282a8c8d1cbc2
b8b4b6b6a68974696b747b7d827f7b7266606069797d7f99a4a4a6a8b2b6a88f7b82a4c4
cfc6ab8d7b7069696d767f8b9bb8d1d1d1cfcbcdd4d6d1bdadafab9b929b9b929499a4b2
c2c4af948484898484848999a4a6adb8c4c8c2ab8f8b9db4bbad948692a6b4af9d968f7f
797b8694948b96c4dbd8dddbcdb4a4a2a6afa6928b99abb4b6a8999dada6867d7f868d8b
847f8289929fa8a28f82766b6057524d4b4b49494b505459626d79848f99adcfe1dbd1c4
af967b747d7f868d8d9db8c4af8b7b92aba68b7b747992b2c2bfc4c2b6a699a8c4c4af9b
9ba8b4ab89695d627086afd8e1d1c6bbab94847f89969696abcddddbcfb2a2a6a6a8b4c6
d4c8ada496898b8dadd4d1cdcfdbdbcbbbc4d1d4d1d6d1bba4a6bbc4b6ab9f8282a2c8db
d8cfc8af8d7b89a6c2dfe8dfcfcbd4d8cbaf99948b828286847b7d92a8b4bdbdbdb49b92
968f7b625d667b9bc2cfcdcbbfb4b6c8d1c4afa6adbbcdd8dddfd8d1d1dbdbd4cfd1cfbb
967466708badc6c4b6a8a29482747d8689898d8f86797984898489929496b4dde8ebe6d6
b89f947f7470768d9f9f94929fb4c4c2bbbbc2cbc8bdada6aba88d5b321e1b222b323737
322e2e34445d748999a6afafa8abafa27d696d829ba8adaba49da2adb8bdb8b4b2b6bdb6
a28f79696470899b9b8b820000bfc4d4e4dfc8a894898282898b929db2cfd4bda696928f
827682a8c8d1cbbda89b9f9d8b796b666d7f868686847d72646064768d8d849299998f84
848b86796d7da2c6d4cdb8a28d7d7270747d848b94a6bdc8cbcbcbd1d6d6cbb4a6afb4b2
adb2b2afb2b6c2cdd4cfbd9d8982827d7d8ba4bbc2b8b6c4cfcdcbc2ad9da4b4b6a68d82
8b99a29f94867d797d899ba8a89da4cddfd8dfdbc4a6a6adb2c2b89b898f9fadbbaf9992
9f9d847d828b94999286848692a2a69f968f897b6d64605d5b57524d4b4b5259667d949d
a4adbfd8e4d6bdada692868992897d7d8bb4d1d1c49f89a8bfb696867d7686a4b6b8b8bb
b6ab9d9fada694868996a8ad8d69575d799dc4dbddd6cfcbb28b7b7d8b9b9da4c2dbdfd8
d1b69d9994949dafb8a88b86827d8694b4cfcfcdd4dfddcfc4c8cfd4d6d6c8a8969db8cb
c8bba8847999cddfddd6cfbf9d869bb4c4dbdfd4c8cbd8ddd4bdada68b7066696b6b748d
a8b4afafada499a2afa27652525b7096c2cbc2b49fa4bdcbc8bbada8adbbcbd6dddfd8cb
bfc4cbc6c2c2bba2826b697b9dbdcfd1c6b29d8f84869ba6a296949f9f8f8d9499928b8b
8b96bde4ebebe4cfbbada69684726d7d8f968d8996adbdbfbbbfcbd4d6cbb6a6a8a8a28b
54291b1e272b3237342e32394b6d8499abb8bfb8a89d927f6b64708ba4adabada8a4a8b2
b6b6b6b4b2b6bbb6ab9d96948b848fa29f99990000b4b2c2d4d4bba4948b898684868d99
a2afb2a2949dafaf9f8b8ba6c2cbc4af998d8d86796d64626d828d8f9294927f69606d84
9d9f8d848b8d7969646b6b6b6b769bc2d1c8b6a69b8b7f829299969692929ba6afb4bfcb
cfc6b4a4a2b4c4c8c4bbbfc4c8cdd4d8dddbcbad948484848d9fb8cbcdc2bbbfcbcdd1cf
bda29da49b8b7d7d89949b9f92847d8496a8b6bdb8adabc8dddfe1d4b89ba6b2b8cfc6a6
8f848694a8a8968484847b7b828f9fafab9489828b99a2a4a6a89f8b76706d69645d544d
4949505d799bb4b6b6c2cbdddfcba699a4948d8f9b8f7d7992c4dbd6cdaf9bb2c4b8a29f
99868494abb2b8bfc2bbada6a8a69b867f848d92866b576489b4cfdbdbd6d6d4c29d8682
8b9fa6b8d6e1dfd8d4b89d948d8d96a6a899867f7d7d8fabc2c8c8cdd6ddddd6cfcfcfd1
dbd6bd947f849dbdc8bfa6847699d1e1dfdbd1c2a48fa8bdc4cfc8bbb6cbdbdbcfc4c2b8
926d646470797f94afc2bdb4a6969dafbbad7b4d4d54668bb8c4b49f8999bdcdc6b6afad
adb6c6cdcfcfc8c4bfb4aba49f9f94827069799dc2d1d8ddd4b896868999afb6ab9da2b4
bdafa8a8aba69989869fcbe8edebe1cdc4bdb4a68b726970828d84828fa8b8bbbdc8d1d6
d4cfbfada6a8b4b27b3d2019272e343b3b3439405779899badb6b8b4b4b4a27f64627b99
afb4adafadabadaba4a2b2b4adb2b8bfb8adafbbb69b8f9b999ba80000adabb2c2c8b69f
928d8d898486929b9b99948f8fa8c2c4bba89fadbfc6bba48d847d7469625b5d697b868d
9496998f76707d92a8ad9b827b766660666d6b70767f9bb8c6bbafa69b8d8694afbbb4ab
9f968b8486929fb4b8ad9f9da6b8cdd4cfc8c8cbcfd6dbdde1dfdbc8ab8f868b9dafbdcd
d1c8bfb6bbcbd4d4c29d928d7d79767d89949d9f8d7d7d8dafc4c6c4bdb2a6b8d4e1dfcd
ad999da8b2cbcbbbad94848699a499827676767d8494afc8c6a88f7f8492a6afb4b6a88f
7d7976726b60544d4949506084adc6c6c4c6cdd8d6bb9994a49b8b89928f89899bc6ddd6
cfbdadbdc4b49ba4ada2968d96abbfcfd4cdc6bfc2c2b69f847672706d625b6992bdcfd6
d6d6d8d6c8a88b797b8fa8c6dbe1e1dbcdaf968d848699aba89d94867f86a2bfcfcbc8c6
cdd8dbd8d6d1d1d8dfdbbd927b727b9fbbb692797494cbdfdfdbcfb4948fabbfc2c2b2a2
a8c4cfc8c2c2c8c49b746d7b8d9dadb6c6d4d4c8ad949fb2b49f705050576482adbbad94
8294bfd8d6bfafafb4b4bdb8afabafbfc4af94848482796d696d92c4d6dbdddfd4af8479
869fb6b4a28f99b4c6c4bdbdbfb8a48d8dadd4e8efeddfc8bfbdb4a289747070767d797d
8fa8b6b8bdcdd6d4cfcbbfb4afafbdc29654291e272e343d44403b446284949ba6adadaf
c4cdc49d6d69869fababadb2b2afab99898ba8bdbdb8bbbfbbafb6c6c29d84898b94a800
00a6a6abbbc8c2ab948f8d8b8689929694928f8b92b2cbcdc6b6a8b4c2bfad9682766d64
5b57525462707d848d92969689828b9dabb2a6826b625d6274847d7f8fa2afbdc4b4a89f
92827f96bbc8c2b8ada48f7b747982969d99969da4adc8d4d1cfcfd1d1d6d8dbddddddd4
bda49494a4afbbcbd1cdc6b4b2c6d4d1bb9689827476798292a4afa8927d7989a8c4cbcb
c8bda8abbfcfcbb499898b94a6c6d4d1c8af9694adb8a6897472797f8499bbd4d4bd9f86
8292a8b6b8bbab9286847f746d6257504b4d576686b2cdcfcbcfd1d6c6a48d8f9d96897f
8289929ba4c4dbd6d1c4bdc8c8ad8f9dafafa48984a2c2d4dbd6d1cfcdcdcdbf9b796662
5d5d60729bbfcbd1d1d1d1cdb89476666679a2c8dbe1e4ddc4a28986828999a8adafb2a6
969bb6cbd6d6c8bbb8c6d4d8d8d4d8dfdfd6bb997f6b6982a4a489827f92b6c8cfcbb696
828fa8b8b8af9d8d9bb4b6a6abb6c2bf9b797b92a4b4cdd6dbddddcfb2969dada4826254
5459647996a8a28984a2cde4e4cdb2adadadada29492a4bfcbbd9d827b7470696674a4d8
dddde1ddc89f79727f96aba48b767996b4c4cbcdcdbfa28b99bbd8e8efedddc4bbb6ab9d
928d8b827b79767f9bb6bbb8bfcbd1cfcbc2b8b6b6b8c2c6a2694234302b303942443b42
648b99999b9d9ba6c4d1cfb27f7b94a49f94949da4a29b82727fa2c4cfc8bfb6afadb6c2
b88d6d70747f990000a8a4a6afbbbdab96928b8b8d8d9294948d89868fafcbd1cfbda8b6
c2bba48b796b645b524d4b5059667684898b8f94998f8b9ba4a89d7b645b5b6682969294
a8bdc4c6c8b8a28d7b707b9bbbcbc8bfb6ab96847972727f8f999b9f9fa4bfd4d6cfd1d6
d4d4cdc8cfd4d6cfc2b4a69b9da6b2c4cfd4cdb8afbfc8c4ab8f847d74747989a8c2cbc2
ab897684a2bbc8cfd1c8b4a2a4ada694847b7b849dc4d8d8cdbdafadc4cbb69276727b82
8da6c8d6d4c8b49b8b96a6b2bbc2b8a8a49b8d7d6b5d57525054607496bdd1d1d1d6d8d6
bd94828689847d76748294a4afc8d8d6d4c8c8d1cba88694a8a89f827b96b6d1dfdddbd6
cfcfd1c8a67d646062667282a4bfcbcfcfcbc4bda27660595d6d94bfd4dddfddc69b828d
949da4a4adbfcdc6b4adc2cdd4d4c8bbb2b8c8d1cfcdcfd6d6c8af94796460708694999f
968d94999f9f927f7b8da4ab9f8d7d798292968d92a6bbb89276869ba8afc4d6dfdddbcb
af9499a292705b59575b6270828f92898db6dfe8e8d8bb9d949ba2a2968fa2c4d8cfb696
7d76746d6674a6dbdfdfddd4b892746b74869b94867b767d96bbcdd4cfb6968ba6c4d8df
dfdbcfbfb8ad9d9da2a6a6998982828ba4c2c6bfc2c6cdcdc6bdb6b6bbc2c8c4a47d6659
443029303b3d39405d7d868b99968f9bbbcfd1bd968fa2ada28b7b797f827f74707d9dc8
dbd4c4ada2a6adaf9f765b5d646d8b0000aba4a6a8aba89f948f8b8b929294928d867f84
8ba4bdcbc8b6a8b8c4b89d8474665d54504b4b4d5460727f848486949f94898f94948970
5b52546284a4a6a6b2c4cbcfcdbf9b7466667fa4b6c6cbc8c2b29d927f6d66728fa6aba8
a2a2b8d4dbd4d6dbd8cbb4a8b6c6c8c4bdb4a89d999dabbdcbcfc8b8afb2b2a8998b827b
74727692bdd4d6d1c299798badc4c8cdd1cfc4ab9b998f867d7270768badbfc6cbcbbfb8
c6cfbd92726d798496b4cfd6d4cfc4af9d9b9da6b6c6c6bfbfb2a28d6d595252575d6d8b
afcbd6d6d4d6d6cdaf8b82848279706966748ba6c2d1d8dbd1c8c8cdbf9d848d99948b7d
8496a8c4dbe1e1dbd1cdcfc6a27b666972869699a8bdc8cbc4bbb8b29469595b647699b8
cfdbe1e1cfa68d9fadb6afa4a6bfd6d4c4bbc2c4c4c8cdc8bfbdb2b2b6b4bbc8cfbfa48b
6b5d62727d8b9fada48d7974797f86847f899996827269666b72797b7b8da4a48270899b
9f99a2c2d6d6d6c8ad8d8b8b7b646066696d76848b949b9ba2c6e8edebdbb6928494a4a8
9b94a6cde1dbcfb899898279696d9dd1dbdbd8cfb88f70666d7f9da8a69d998d8dabc4cf
c4a48f96afcdd4c6b8b2b4b4afa49b9da2a8ada4948b8b8fa6c4c8c8cdc8c8c4bdbbbbbd
c4c6c6bfa8948b7d623d2b3040403b425b7274849d94898ba6c6d1c6ad9da2adab94766b
69727b7979829fcde4ddcdb2998f92948466575b626d8d0000a4a4a8aba69f9b968f8d8b
8f928f89847f7d7d848f9fababa2a4b6bfaf927b6d645b524b49494d525b667276767982
8d86797d84847464544d505d82a8afabadc2cfd6d4c2966b62647d9db2c6cfcdc6b6a499
826b646d8fb2b4afa6a2a8c4dbdddbdbd4b6948da2b4b8b8b2ada296949badbfc6c2bdb6
ada49b9289847d7672727b99c6d8dbd8c69f7d92bbd1cfcfd1d4cdb89f9289847b70696b
768699b2cdd4c4adafb6a8866d6b7486a6c4d1dbddd6c8b4a496929bafc2c6c2bbb4ab96
795b50525b64799bbfd1d6d6d4d1c8b499898d96927d6b625d647da6cddbdddbcdc4c8cb
b4968d948d7672849da8a8afc6dfe4ddd6cfcbbb997d798999adb6afb6c4c8c2bbb8b6ad
9476696b768badc4cdd8e6e8dbb69fadbdc2b6a8a2b6d6d6c8bbbdb4adb8d1d8cfbda29f
ada8b4cbcfbfa28266607084848492a4a28b74727d868f8d868b9289746d6462666b7274
76797d7d6d6b7f89867b7fa6c4cdcdbda28476726960697d8b929ba4a6afb2adb2cbe4e6
e4cba29294a2a8a29494a8cde1dfddd4bb9b897d66698dc2d8dbd8d6c6a67f74768db6c8
c6bbbbb29f9bafbfb49b9bafb8cdc8ab928fa2adafafad9f9ba4aba28f898d92a4c8cdcd
cfcdc8bfb8bdc6cdcdc4bdbbb2aba696724734425759505774847d7d8f897d7f9bbbcdcb
c2ab9ba6b4ab8b6d667989867f89a6d1e6e4d8c4a88d7d796d625b60697b9b00009fa2a6
a6a29d9d9b948d8d92928f897f7f7d7b7b7d82898f96a4b2b4a486766b5d59504947494d
525960646666666b72706b727b796b5d5450505d7d9fa8a8a8b6cdd8d1b68d6d64627696
b4cdd6d1c6b6a69f8469626684a8b4b2a4948fa6c8dbdbd6cd9f7d7f92a6adb2ada69b92
929fafbdbbb6b8b6ab9b8f847b797472707482a2c6d4d8d6c29b7d8fb8d1d1cfd1d1cbb8
9d8b89867d726966667286abcfcfb496969b8f7b6d6b748bb2cfd8dfe1d8c6b4a28f8b94
a6bbc8c4b4af9f897d624b525d697999bbcfd4dbdbd1b89d8b8f9fa89f846d605d6279a6
d1dfe1ddc6c2cfd1bfa4999989696989abb4aba6bbdbe1ddd8cbbba68d828fadb8bfc4c2
c8cdc8bbbbc2b8b2a89d8f868696b2c4c6d4e1e6d8bba4abbdc2b8ab9da8c2c6b6abada2
9fb8d8e1cfb2a2b4c4b8bbc6c2b29b86746b7689867b79898d847f8b969da2998d929d96
82766b64707f86847d74696260646d706b667092afbdbda8928472665d5b6b869fa6a8af
b6c2c4bfbfcddbdbd4b69299a8afad9b8f9bb2cddfdfe1ddcba2867b6b728db6d4dfdbd8
d4bf998d8d9fc6d4cfc6cdcdb69694a29f99a4b8bdc6bda28f8fa2b2bdc2bfaba2a6a699
89868b8d9fc6d4d4d4d4cbbfb8c2cdd4d1c6bbbdbfbdb29b6d42405b74766b6d8699866d
6d707b899fb6c6cfcfbba2a4b8bfa2726276898b8692add1e4e4ddd6c6a47f6964666d74
829bb40000999b9d9fa2a2a29d96928f9294928b847d7d7f7b797b828d9dadb6af9b7f72
695b54504b494b505960666b696664646262666b706b645d575257607692a4abadb8cfdb
cba27f706b6d7f9db8cfd8d4c8b8aba68d6d6060748fa2a496847f8fadc4cbcbc4947479
8b9fadb2ada89f999dabb4b4afafb8b6a694847972706d6d6d727f99b4c4cbcbb6998489
a6c2c8c4c4c6bfad998f96998d7d7066646d89b6d4c29b8b969d8d7d6d6d7d99b2c4d4df
e4d8c6bbab92848ba2b6cbcbb8a88f79725d4d596d7d8692a8bfcfdde1d4b2948b96abad
9b86767070707fa8d8e4e1ddc6c6d6dbcfb29b96896d6b82a2afb4bdcddbdfddd8c4af9b
8b899dbdc6cbcdcdd4d6cdc2c4c6b8b8c2c4bba8948f9fb6c6d1d8d6c8b29fa2adb2a8a2
96969d9d928b8f8f9fc4dfe6cfababc6d1bfaba49994969b998b7f847f72646d798699a2
abadada49699abada49b82727f949f9b927f6d626064696d6d696b86a2aba4948f96896d
5b576279949fa2a8b6c8cfcfcbcfd4cfbfa496a8bbbbab9696adc6d1d8ddddd8c49b8279
70829bb4cdd8dbdddbc6a69d9fa6b4bdc2c4d4d8c4997f899da8ababafbbbdb2a49fa8b8
c4cbcbc4bbb2a494898b8f8d99c2d8dfdfdbcfbfbbc4cfd1d1c6bbbbbdb6a4845b3d476b
8682766d7b8b76574b5776929fadbfd1d6c4a6a2b6c4ab7962707f8d94a2b6c8d6dfdfdf
d6b68966667689929bb2c6000096999fa8adaba69f9999949496948d8b7f7f847d7b7d84
96abb6bbad947d70665b54504d4d525b66727f7f74726d6662626469706d64605b5b6066
7286a6b6bdc6d4d8c28f706d6d76849db6c8cfcfc8bbb2af9d7d6460667484867f7b7b84
92a4afb8b6927676869fadafafafababb2bbbdb4a8adb8b6a28979706969696b6d707684
96a6afb2aba69f94a2b8c2b2a8aba8a69b99a4adab9f826b697699c2d6bb94929fa69986
727492b6bdbbc6d6ddd6cdc6bda68f8da2b8c8c6af997f696257597699adada49fabc6d6
ddd4b8a49fa8b8af948b898f948d8da8d4dfdbd4bfc4d6d8d6bf9b8f867b767b89a2bbd4
dfe1ddddd8c2b2a89f9499adb8bfc6cfdbdfd4c4bfbfb2b6c8d6d4c4ab8d8dadcfd4cdbf
b2afaba6a49b8f8f92928d847f868f9dafc8dfe6cfadbbd6d6b88d76767f99b6b8af9d89
766960647994a8ababada8a29da8bbc4c4bba28b8b9fada8a28f7b7472797f898b7f727d
8f948d8fa4b4ad865d596472828b96a2b4cbd8d8d6d4d1c4ab9ba2bdcdc2a694a2c4d6d8
d6d8d1c2a68b7b74768b9da8bfd1dbdbcdb8a8a8aba69994a2bbcdd6c89f7f86adbfb8a4
9bafc6c8bfaba4b6c6d4d8d6cdbba68d848f9699a4c2dbe4e1dfd1c2bdc4cbcdc8bfb2a6
9b8f7b60493b42667f7d6d5b5d69543d3b476b89929db4cdd4c2a49dafc2b892706d7f92
a2b2bbb8c4dfe1dfd8bd926b6b7d96a2a2b4c800009f9dadbdc2b8ab9f9b9996969d9d94
8f8b8b897f7d7f89a2b4bbbbab927d70645d57545252596b7d8f9b99897d766d69666b76
8689796964696b707484a6bdc6cfd4d1b8846b6b6b767f8fa2adb6bbbfbdb8bbad8d6d62
666d74797d828d94969fabb8b6a2897f899ba6adb4b6b6bdc6cbc8b8afb4bdb8a2847469
626666696d70747984949b9babbdc2b6b4bfc6b4a29b9fadada2a2afbbb28f727486a6c6
cfb49fa8a8a89f947b7fa6c4c8bdbdc2cdd4d1cfcbbfa89496abb8af968272645d596d9d
bfcdc8bfaba8c4d1d8d6c6bbbbbdbda892969fa8afa69494b6d1d4c6b4b8cbd1d4c29f86
848d897f7d92bddde6e1dddbd4bfb6bdb6a489828b949fbdd1dbcfb8b2b2a4a8bdd4d8d4
bb8b82a6cfd4c4adabbdcbc4b69b84899ba8a49da2afb6bfc2c4cdcdbdafc6dfd6ab7b66
667692b2b8b6a4866d625d627d9babafb2b2a4a2abbbc6cbcdc6b2948fa6b6b2ad9b8b8f
92999da2a4997f74767b84a6c6cdc296696b7f867d7d8494afcddddfdfddd1bb9d8fa2bf
c8b89d94afd4dfdfddd1c4ab8d7f766d76869499a8bbc6bda89da8b2b6ad96848dabbfcd
c6a28692bdd1c4a494abc8d4cfb29ba4b6cbd6d4c8b6a4867b8d9fafbdcddfe4ddd8cbbb
b2b6c2c6bfbbb4997b666054473d4050626957444244392e34425d767f8696afc2bdada6
adc2c6ad82728696a6b6bbafb6d8dfd6cbbfa88672768d9fa4b4c60000ada2b2c4c6bfad
a29b999499a2a49b94928f867d7b8294b2bdbbbdb49b8270645b575754546079969fa2a4
a29984726d70798fa8ad9b89828686847f86a2b8c6cdcdc4a67d6b7079828b8f8b8d8f94
a4b2bbc4b6967b6d70767d8b99a6afb8bfc2c8cdc8bfa88f8b96a4afb8bbbfc8cfd1cbbf
bbbfc4bfa47d6d646064696b70747d84898d8f9bbbd1d4cdbdbfcbbda89fabbbbba48f94
a6a48b7d8fa4b6bfbfb2b2bdb4afafab9494b4c6cbc6c2bdc6d4d8dbd8cdb89d92a2ada2
8979746d626282b4cdd1d1c6b6b4c8cfcfcbc4c4c6c2b6a29babafafb2a8927f99bdcdbf
abadbdc6cbbf9f898b968f89848fb8dde8e6e1ddcfbbb8c4bfa67f66646b7996b2c4c6bf
b8af9d99adcbdbd8bb86799bc4cfbda6afcddfdbcbad99a2b8c4c4c6cbd1d1d1c6b29f9f
a4a8c8dbc8966d666b7b8b9ba49f9282746b62627d9fb2bdc4c4bbbdc4c8cfcfd1cbb292
89a6bdbdb8a296a4abafada8aba68d70627296c4ddd6bf926b799299897d7d8dadcde1e6
e6e1d4b28f8699a8a89d928fafd8e4e6ddc6b4a496897b79869294949ba2a292848da8b6
b8b4a68f899fafc2c4ab9ba6c8d1bd9b92a8c8d8d4b494929babb6afa2948d797286a4bb
cddde4e4dbcbb8a69fa6b2bbbdc4c4a87b646d6959423b3940473d343432302e3240576b
767b7f94b4c4c2b6b6c4cdbd99869696a2b4b4a8a8bbc6bfb6bdbda882768296a2afbd00
00b4a4b2c4c8c2af9f999694969da29d9992897f7d7d869db6bfbbc2c2ad8b7264575250
5054647f9b9f9ba2b2af94747074849dafb4afaba8a6a4998b8696a8b8c2bfaf8f76727d
8d9ba6a68b7d79798499b4c4bda2897f7f8b9dadb8bbbdc8d6d8dbd8d4cfbb9b8f9babb6
bfc6cbcfd4cdc2b8bbc2c6bf9f796662646d747d848494a8a4928da6c2d1d4cbb8b6bdaf
9f9fb2bfb89f7b7d928d828bafc2b8a8a8b4c2c4bbbdc8c4aba4b8c4cbc6bdb8bdcdd8df
ddcdbba499adb8af99868689797494c2cfd1cdbfbfc8cfcdbfb4bbc8cdc4b8b6bfc2bbb2
aba4999294a8b6ad9fa6bbc4c8bb9b8b8f9994969ba2bbd8e8e8e4d6c2b6b8bfb292705d
5d62697b9bbdd4d6cbbdad9da2c2d8d6af7b6d8db2bdaba4bdd6e1ddcdbdb8c4cdd1d4d6
dbdfddc8b29d8f9fafb4c6c6a87f6b768fa4a8a49f99928d8f8d7d727da2c4cfd1d4d4d4
d4d1d4d8d8cdad8982a2bdbfbba6a2b4bdb8aba2a6a896725d79b2d8e1d8bb8b6b7d949d
92848696adc8dde6ebe6d4a88482999d968b8489a6d1e1ddcbb4a6a6a4948b9db6bfb4a6
a89f8b7f7689adbbbbb8b8ada8b4b4bdc4c2b8bdc8bfa2848ba8c6d4cdaf96a2a89f8b7f
76727270748299afcbe4e8e4d8bfa699999da4abb8c6c8af7d6b827f6b4b3b302e302e32
373737343b4959697d848699bdcbc4b8bbc8cfc4ab9d9d9296a8a8a29b9f9fa2a8b8c6b6
8d797f94a2a8b20000b4a6afbfc6bfad9b928f9292949999948b827d7b828d9bb2bdbdc2
c6bb96745b5049494b5262798f9b99a2b8b89d7b707689a2abafb6bfbdb6afa48f828999
a6adafa28676798694a8bbbb997d74727686a4bbb8a4948f99a8bdc6c6c2bbc6d8dbdbd8
d6d4c4a89b9fadbbc6cfd4d4d4c6afa4adbbbfb49472646266768f9d9d96a8c2bdafa8b4
c4cfc8b6ababa6998b92a8b8b294798299928496c2c8af929bb4c6c4bfcbd4cdb6a8b2b4
ad9f9999a4b4c4d8dbc4b29d99afbdb8aba2a6a89d96a2b8bdb8b2afcbdbd6cfbdabb4c4
cbc2b6c2d4cdbbadababb6bdb2b4b2a29babc2c4c2ab86828b969fabb8bdc4d6e6e1d4bd
a8a4afb29b7f6d6664667084abcfe4e1d6cbc2ab9fb6cfcb9f72697f99a29ba4c2d1d6cf
bfb6c2d1d1d1d8d8dfe4d6af8f96afc4cbcdcbb68d747089b2c8cbbfb8b6ada2abad9b8b
8badd4dbd8d8dddfddd8dbddd8c8a68284a6bfbbb4abafc2c4b6a8a4a49f8d726482bfdb
dbd4bd946d7b96a4999ba2a8b4c6d8e4ebe8d6a68289a8b2a48f8289a6cbd8cfbdb2adab
a28f99bfd8dfcdb6b8a47f7d7f9bbbc4bdbbc6cbcfd4cdc8cbcfc8bfb49b847982a2bfcb
bfa29dbdcbb48b747070747d868b929fbfe4ede6d6bbadaba4998f92a4b8bb9b74708986
76593b2e292b30373b3d3b3d4750576989949499abb4afa8b2c2c8c2b2a89f8d8b99a29f
9fa89d96a4bdc8b48d767d94a4a8a60000b8afb4bbbdb6a4948b8b8b8d8d8d8d8b86827d
7b8494a6b2b6b8b8bbb6997052494240444d5b6d7f8d96a6bdbfa68270748ba4a8b2c4cb
c4bbb6ab9b8d89929dabb8b69f847f8b92a4b6b89f827070727986999f9b9496a8bdc6cb
cbc8c4cbdbdfe1ddd8d1c8bdb2a4a6b6bdc8d1d6d6c49f8d94a6ad9f82696060667fa4b2
a2a2b4cbcfc8bdbbc4cfc4a49ba2a296827d8d9f9d867d96ada499a6c6c6ab94a2b4c2c4
c2c6cdc8b2a4a4948276767d8ba2bbd8ddc2a28b8fa6b8b8b2b6bdbfbbb4ada6998f8f9f
c6dfdbd1bba8b4bbbbad9ba6bfc2b6a8a8afc4d6d1cfc4ada4b4c4bba88d72727d8fa6c2
d1d1cdd4dfd6bb9b94949b9b948b867d74727f9dc4dde8e4dbd1c8af9fadbdb28d747286
9fa8a6adbfbfb8af9fa2b6cbcfd6dfdddfddc29482a4cbd8d4d8d1b88d727496bfd1d1cb
c8c6bdb2bbbdab9da4c4dde1dddde4e6e1ddddddd1bb997f8bafc6c2b8b2b8c2b8afb2b4
ad9984726b86bfd6d4cfc29d727994a4a6b4bfbfbfc8d8e4e8e8d8ad8689abbfb499868f
afcdd4cdc6c4bfb49f8da6d4e4e6d1b8bda884869dbdd1d4c4b8c4d4dddfddd4cdd1cdb6
947b747986a6c2c4b29fa8c8d8c8a2867d7d8296a4a2a4a2b6e1ebe8d6b4b2bfb2947972
7d8f8d76667489867b5d39292b343b3b393b3b404b5257698f9d99897d848f9da8afb2b2
b8bdb2a29496a6adb4bba696a6c6cbb69d7d79899da29d0000c2bdbfbbb6ada4998f898b
94928d8b8b8d8b898b8fa2b8b4adada4a49f8462474037373d495462728999a6b8b8a686
706d84a2abb8cfcfc8bdb6ada4999294a4bdcfd1b88f82898b99a6a8927d7270706d6b72
84949699a8bfcdd4d1cfd1d6dde1e4dfd8cfc8c6bba29ba8a6adc2d4d4b88d7d7f8b8f84
70605b5b6989adb6a8adbbc8cbbdb2b4c2c8bd9f99a4aba68d7670797b747d9db6b6b6bf
cdc6b2a4afbbc2c4bdb8bbbb9f8982747274767b8fafcbdbddc69d828ba2b4b2abbbcdcd
cbc4b89f82767f8db4d4d8cdb29fadb8b2997d82a2bbbdab9fabc4d4dbddcfb2a4a8b2a4
928276707b96afcfddd6cbcbd1c4a48d8d898d969b9b968f86868fa6c8dddfddd4cbbfab
9da4ada48b7f7f99b8c4c4c2bfaf9b8d7d849dbbd1dfe4dfdfd1ab8484b2d8dbd1d6d4c4
9b747299bfcfcdc4bdb8b2afc2c4b2a4afcddfe4e1e6ebe8e4dfdbd4c2a28b8492afc2c4
bdbbbbbbb8bbc2c2b2967f74748bbbcfcdc4b6946d74899babc4cfc8cbd1dbe1e8e6d4a6
827d96b4b49b8996b8cfd1d1d4d4d1c2a696b4dfebe8d4bdbba88b8fb6d6dbd8c6b6bfcf
dbe1dfd6cdd4d6c49974697b9dc2d4cfc2b6bbcdd8cdad96929292a8b8b6b6a8add4e8eb
d8b6b2bdad8f7064666b66606070828272593b2e34495749343b3d4752575b7299a69979
6469829ba6a49fb2c8d1cdc2afa4abb6bfbba296adcfd1c8bd997b798694960000c8c8c4
bfb8b4b4ada29ba2ada89f9fa4a6a8a8a6adbbc4b29d9486827b6952423930323b475059
6d8b969fafad9f896d667b9da8b8cbcdcbc2ada6a6a6a4a4b4cddbd6bb927d7d7b828b8d
82797979746d696b849fa6a2abc4d6ddd8d8dfe1dde1dfdbd4c8c2b8a68f898f8d94abbd
bb9f7f76797b797064595766829bb4bbb2adafbbc4af9fabb6b8ada6adb6b8b89f7d6660
66707f99b4c6cdcfd1cdc4bbbfc4c6c4b8afafad8b6d6669767f7f849bbdd1dbdbcba284
94abb6a89bb2cbd1cfc8bb9d827b848ba4c4cfc4a68f9fb2a886727999c4cbb6a4b4c6cd
d8e1d6b6a49f9d9696998b7d8dadbbcfdbd6c8cbcdbfa68d848ba2b2a89d9494999b999b
b4c6c6c6c8c8bdada29fabafa28b89a2c4d4d4cbb89b82796d7286a6cfe4e4dbd6c89d82
8bb6d8d6c8cdcfc29979768fabb6b2a89f9b969dbbc4ab99a4c6dfe4e4e8edede4dbcdbd
a48b848d9bafb2abadb6bbb8c2cbcfc8ab897b767989abbfbdad9b7f696b798b9fc4d1cd
d1d8dfe4e6ddc29474707f9b9f8d828fb2cdd1d4dbddd8c8afa6c4e6ebe1d1c2b49f8b9b
c2dbdbd4c4b8bbcbd6d8d4cfcfdbe1dbbb846d86b4d4dddddbd4cbc8d1c6a6a2a8a69dab
bbc2b8a49bb8dbe6d6b8afb29d8470696d706d6b69707b7f6d52403d424b5b4b37404752
5b606b84a2af966b6064798d9b9fabc6d8dbd4cdbda8a6afbbbbada4b8d6d8d6d6bb9d82
7b8b990000cdc8c4c2bfbdbdbbb4b2b8c2bfbbbbbfc2c2bfbdc6cfc8ab8d7f766d625749
4037323239444b546682898b9d9b998b70667999a6b6cbcdcbbba29ba6b2b6b8c2d1dbd4
b88f7b766d6b6d79848d94948476706d89adbdb6b4c4d4dddde1e4e4dfe1ddd8cfc4b6a2
8f8b8f8d8b898f999d94867f7d79726b6054577499adbbbdb29b96b2cdc4b4b6b2a49db2
c4cdc8bfa67f625b667d99a8b8cdd4d4d6d8d6cfc8cbc8bdafa6a2997b605d6b7b848989
94b2cfd8d4c2947f96afaf998da6c2c8c4c4bfab928b9da2a8b4bfaf948ba2b4a6827279
94bbc6b8abbbc4c2c6d6d6c4b4ada69ba6ad9d8b99b8c2cfd6d4c8cbd4cbbb9b899bbbc6
b2968d9badaf9f8f96a2a6b2bfcbc6c2b2a6adb6ab867f99bbd4d4c4ad897069667084a2
cbe1e1d8d1c29f8d9bbbd1cfbfbfc4af897f828486868482868d8b89a8b2998289abc6d1
d6dfe6e6dbc8b29b867f8696a8af9f8996adbbbfcbd4d4c499747274767d8fa4aba28d7b
70707d8b99b2c4cbd8e1e6e4dbc8ad8f7b7274848d898689a4c4cdd4ddddd6c4afa4bfdf
ddd6cbbb9f8d94afcddbdbd1c4bdbfc8c8bdb6c2d4dfe8e4cb94768bb6d1d8dfe1dfcdb8
bbb4a2adbbbba699a2afa69b9badcdd6c8b8ad9f897b767b7f82827f797270706450444b
4d4747403b475760606d849dadaf946d6b72767d8ba2bbd1dddbd4cfb89d9ba4b4c2c4c2
c8d8dbdbdbcfb89d8692a60000cfc8c4c4c2bdbdbdbdbfc8d1cfcbc8c8c8c8c6c6cdd1c4
a4867b72695b50474039302e37444d5057666b6d7d848d8f766b7996a6b8cbcdcbb4928d
9fb2bfc4c6cdd4cdb68f7d796b62607496b2bbb89f8d7f7484abc4c2b4afbdd1dfe4e4e1
dfdfddd4c6bdab948d99a49d94868692a4a4948f89827b7669595b7da8b8bbb4a48f92b4
d8dbd1cdc2a69dbfd1d6cdb696745d59698bb4bfbfcfd6d6d8dbddd1c6cbc6b2ab9d8f82
6d5d5b6d7d868f8f8f9fbdcbbd9d7b728ba49f898badc4b8a6adbfb69f9bb2b6b6b6af94
8292b4c4b699828292a4aba4a2b4bbafa8c2d6cfbfafa8a2afb6a48f96b2c2cbcbc8bbbb
c8cbbfa492a4bdc2ab8d89a6bdbdab99969b9da8b6c2c4c8bfada8a89b7b7489a4bdc2b8
a482646069829fb6d1dfe1dbd4c4abadbbc6c8b6a4a6b2a68b8b8b84796b66728b9b9486
9296867d7b8699adc4dbe4e4d8bf9f8b8d92929bafa68b7b8fafc2cbd6dfdbc28d646672
7f868f999d96897d797f949f9fa4abbbd6e4e6ddc8b8afa2998b7d828b92948b92a8adbb
d1d8d1b899899dbbbdbbb29f8b899fbdd4d8d4c4b4b2bfc8bb9f9db8d6dfe6dbbd947b89
a8c4cdd1dbddc8a2949494abc2c6ab897b848b94a8bdcbc2b6bbaf9684848b8f928f8d8d
82705b5759595052504944404249596470869fb2b4ab92828f94847d92b2c6d4d8d8d6cd
af8b8b9fb6c8d1d6dbdfd8cfcdc4b49f929db20000cdcbcbc8bfbbbbbbbfc8d4ddd8cfcd
cbc8c6c8cbcdcbbb9b7d746b645b524b473b302932444d4d4b494d546472848d7d6d728d
a6b8c4c8c2a67f7d94adc2c8cdd1d4cbb49684796b605d749fc4cfc8b6a28b767996b2b4
a4969dbbd8e6e4dfddddd8c4a8a29d9496a2ada8998b8ba4bbbba69f999496927f696b92
b8c2b8a89d9dadc6dbdfddd8cbafa4c6d8d6bf9d7d665b60749dc4c8c2cbd4dbddddd8c8
bdc4bfadad9f8b8270605b6d8492969694929da89d7d6d748b9b948694b6c8b2928fa4a2
9ba2b8c4c6c2af897b99bfcfc8b89d99a29f9b928f999d9ba2c4ddd4bba29ba6b4b49d89
8999abb4b6ad9d9ba8b4af9b8d9dadab967f8db6c6c4b8b2b6b4a8a4abb6bbc4bfa89b94
8b7d849bb2b6b2afab8664626b96bbc6d1dbdfd8cfc2b4c8dbd4bf9d8d9badab9b999999
927464769bada4948682868f8b7f849dc4e1ebebe1c69f92a4aba8abb69b7b7b8fafc2cb
d6ddd6b48666667d96a8afaba28f7f7b849bafb6b2adabb4cdddddcdbdb6b4adada48f89
929d9d8f8686899fc2d6d1af89828f9694928f89828ba6c6d6d4c4ad9b96a8bbb8a4a4b8
cfdbd6bd9d8d8d99afc2c6c6d1d8c49276767f9bb8c4a87d6266728dafcbcdbdafb2ab96
92969d9b9b96948f846b52505d6960524b4d4b4742444d64869db4bbb29d8f9db2b2998b
a8c6cbd4d6dbd6c69f828ba8c2d1dbe1e6e6d4b8a89d9b9999a6b60000cbcdd1cfc2b8b6
b8bdc8d8dfdbd4cfcbc4bfc2c8cdcbb694796d64625d595247392e2e3742494b49424249
5464798482726b7b94a8b4b6ad8f70708ba8bbc6d1d8d6c6b2a2948976625b6d92c2d4cb
b8a48b74707d92968d868ba2c6e1e1dfdddbd1b28b89999b969fadab9d8b94b8cdcbbbab
9fa2afad9b868ba6c4c6bbadadbfcfd6dbdddfdbc6a8a4c2d1c8ad896d5d59698bb2cdcf
c4c2cddbe1dfd6cbc4c6c6bdada49f927b625b708f9f9da29f999d9682727b96abafa699
96b6c8b8998689898fa2bdcbcfc8b286728fbbd1d4cbb4a8ababa89f9289899bb8d4dfd6
b6948da6b8b49d867b7d8fa2a89d8d7f828f8f7f7d8b948d7d7d9dc6cdc8c6c8cbc4af9d
9fadb8c2b49486898f929db6cbcbb6a6a692766b7099bdbfc6d1d8cbb8a8adcfe4dfc89f
8b9bafada2a2a8afa8897284abbbb6ad9286949f9986869fc8e6edede4cfada2adb4b8c2
cbaf928b94abbbc6cfd8cda482727292b2bfc4c8bd9f847f96b6c4c4bfbdbdc4cfd6d4cb
c2b8b6b4b4ab998f96a2a29486868da8c8dbd6b68f8d9b967f74797d8492afcfd8cbb49f
928b99b4c2bbb6b2b8c4bba6999fafbdc8cfc6b6c4cbb689727484a6b8b499745d5d647f
a8c6c6ad9da29992a2a8a8a29996968d826d5754626d6450474d4944403d47648da8bbb8
a28d92adc2bfa899bbd1cfd4d8ddd4b49694a8c4d1d8e1ebf1edd4ab8b8496a8afadaf00
00c6cdd8d6c6b8b2b4bbcbdbe4dfd8d1c8bfb8b8c2cdcbb6947669646b726d594234323b
474744474b49424457646d797f74696d82949d9b8d76646b849fb2bfcfd6d1c4b6b2afa4
8b6b5b6684b4cdc4b69f86706970767d7f7f8492b8dfe4e4e4ddcba4848b9b9992949fa2
9b8f9dc4d6d1c6b2abb2bbbba8999db2c4c8bdb6c4dbe1dfddddddd4b69b9bafc2bda282
66595d7b9fb8cbcbbdafb6cddddbd6d1d4d4d4cba8a2a48d7b645d7299adabababafbba6
7f7696b8c4c4b8a494b2c8bfab968d8b96abc2cfd4cbaf846d84b2d1dbcfb8aba8abafad
a4999fb8cdd8dfddc2a294a2b4bbb29f8b7d8ba8b6a6927b747f7f7b828982727289b2d1
d4cfcfcfcfc6b2948f9da8ab9679768496a2a8bbcfcdb49b9b9f96847b8da8b4c4cfd1bb
998496c2dbddcfab8b929d9d9499a8b2a68d8294b8cdcbbdaba4a8a8998992a8cde8f1ef
e6d4b2a2abafb6c6d4cbb49d929fb4bdc6d1c89d7f767ba2bfc6cbd4cfad969bb8cdcdc4
c4c6cdd1d6d4d1d4cfbdaba6a49d8f8f969d9d928fa2b8c8d4dbd4b8928d9b96796d727b
8da8c8dbd8c2a2928d94abc8d8d4c6b2a4a2a4a8b4bdc8d1d6dbc6a8b2b4a28d82899fbd
c2ab8b6b5d5d667da2bbb4967d7f828dabafa48f84868d8f8f7f665b626960524b4d4940
393d475d829fada4928d9fbbc8c6b4a4c2d6d4d4cfcfc2a494a8c4d6dbdfe4edf1e8cfa8
8b8fa6b8bdafa80000c6d1dbd6c6b6ababbdcddde6e4ddd4c8bdb6b8bfcdcfbd9b796b74
8fa49b744b3437444b4740404950494960666b767f796b70869da2947b66606986a4b4c2
cdd1cdc6c2bbb8ab8d70667289a8bbb2a28d7b6b66696b70767b828fb4dde6e6e1cfbb9d
868f968f8689949999949bb8cbcbbdb2b4bdbfbba8928f9fb4bdb8bfd4e1e4dfddddd8c6
9f898999afb6a686695b647f9dadb2ada49ba2b8cfd8d6d4d8d8d4c4a2948f7669605d70
94afb2a8a6b6c2af8b84abcbcbc6b8a28da8c4cbc2b8b2a6a6b2c4d6d8c6a27f7486adcb
d4c8ad968f94a2abadb6c4cdd1d1d8dfd4c4b4adb2b6bdb8a69296afbbad94899296928f
99947d647299c2d8dbd4d1cdc8bda8999492867d7266707f94a49d9fb4b6a69499abb2a4
999299a8c2d1cfbb967d849fb6c6cbab84828686868f9fa6968284a2c4d4d6cfc6bdafa6
9996adbfd4e6f4f4e8d4ad9ba4abb6c4d1cfb896828999a2b2c2b88d727482a6bfcbcfd6
cfb4a2afcfd6cfc6c6cdd4dbdbd4d4dddbc8ad94867f7d8b9696948fa2c4dbdfdbd6c8ad
928d968f796b707b9dc6dddfd6bd9d868299bfdbe8e6d6bb9f9da2b6cdcfd1d4d6d6c8af
adaba8a89b9bafbfbda6896b62666d7d96a89f8269646b7b999d8b726d7d929d9f967f66
646d6b6d6964604d42505b6d7b7f84868fa4bbc8cfcdbdadc4d6d6cdc4bfb4a299afcfdd
dfe4e6e6e4ddc6a48f9fb2b8bdafa80000c8d4dbd6c8b6a8abbfcdd8e1e1ddd4cbc2bbbb
bfcdd4c8ab867b8badbfb89b6b3d373d403b373942504b495d646b7482867d7d94afb6a2
7f66626b89adbfcbcfcdc6c6c4b4ab9f928986898f9ba29b82706966626060646d76849f
c2dddfdbcdb8af9f868d8f89868b92999f9b969fabafafb6bdc2bbad967d747b8b9ba8bf
d8dfe1e1dddbd1bb967d7b86a4b2a4896d646b7989928d8b8b94abc2cdcfcdcfd6d1c8b8
9d8b7d6b696b6d7286a2ab9d99abb4af9d99afc6c8bfb49f8ba2c4d4d6d1cbbdb4b4c4d6
d8bd8f7b7f96afbdbbad997f72748294abcdd6d1d1cfd6dddfd8cdc2b2abb2b8ad9b96a4
ab9d929dada699969b8f79697ba6c8cfcfc6bbb4ada8a8aba6947b6960627084999f9489
8f929ba2a2adb2adb4ab9da6b8cdd4c8af96898d9badc2af8f867f828b9fada68d7d8fb8
cfd8dbddd8c2a49d969fbfd1dbe4f1f1e6cfb2a4a8afbfcdd4cdab7b72798496adb49d74
647289a4bfd4d8d4c4ad99a4c6d4d1cdcbcdd6dfdbd1d1dddfdbc8ab927f79828d8d8696
bbdbe4e4ddcfb69f9ba4ada486747484abd1e1ddd4c6ab867d9bc8e4ebebdfc2a29fa2bb
d8dbdbd8d1c8c6c2b2adbbc2a69bb4b8af998479828d8982899b9279645b5d697f8b8b86
869dafadadad9f7d707d929d9d96866959708b9b8f7262749bbdcdd4d6cfbba6afc4c6b8
bbbdafa29db6d8e4e4e6e1ddddddcfaf96a6b2a8a49fa60000c8d1d8d4c8b6adb4c6cfd6
dddfdbd1cbc4bfbfc4cdd1cfbba29499afc2bfaf844b343437323034404d4b4959666d74
89999992a2b6bdad92796d728db4cbcfcbcbc6c4bba89b999fa49f94948f8b8270626060
605b5b5d667996bbd6ddd8c8b8b4bbab848489848b949da2adafa6a29994a2b8c6bfab94
7d6d66646b798fb2d1d8ddd8cdcfd1c2a27f6d7996a69982797f898b8d928b84899fbfd1
cfcbbfbfcbc4bdb8a88d74728496998f8d9fb4ab9999a8b8bdb6adafb6af9f9292a6c6db
d8d6d1c4bbb8c4d8d8bd8f7d8da8b4ad9b867d7262626b7d9bc6d4cfcfd4dde1dfd6cdc8
b6a4a4a4a49d92928f8992a4af9f928982796d6d7fa4bdbbad9f968f96a4b4bdb8a68d70
6069849dabafa8a2968fa2b4adada69dabada6a8b4c8d6d6cfbb9d9fa8afbdb8a89b8f86
94b4c4b6998ba8d1dbdddfe1dbb88b898b99bfd4dbdfe6e6d8c2bbb2a6b2c8d6d4cba272
728292a4b6b294726472899fc2dbd6bf9f8b7b84a6c6cfcdcbcdd6ddd6cfcfd8e1e1d8d1
bfa2867d8486849dc6e1e4e1ddcba896a8bbc8bf9f82798bb2d4dfdbd1c4a8897f9bc4dd
e6e6dbbfa29b9bb6d6dddfddcfbfc2c8b2adbfc6a896adab9d8f929db2bfb69f8f9b9f89
6b5d5d6d899dabb4b8c4c8bdbfc2b8998d9fb6c4c4bb9b79708db4c2a8795b74adcdd6db
d6cdb28f8b9da6a8bbc6b49f9bb8dbe8e8e6ddd8dfe4dfbf999b9f8d7d7f8f0000cbd1d6
d4c8bdbbc4cdd4d6d8ddd6cfcdc2bdc2c4cbcfd1c6b8ada4b4c6c4b6894d32323737373b
444d4d4d5b666b7696a8abadb4b8b2a8968479768badc4bdb8c6c6bfb2a29496a8ad9d92
9f99826d646669707069605d6682abcfdddbcfbdadb2bba8847d7f82929fa8abb4b8b6ad
998d9bb2bbad967f70665d5b5d667da2c6cfcfc4b6c2cfc8ab7d626d848d847d8da2a6a8
b2b6a8999db6cfd4cfcfc2b6bdb6b4b4a8896b7ba2bfc2b49fabcdc6a694abc8d1c8ad96
8d89827f8fa6c6ddd8d4cdc6c2c4cbd8d6c29d8694abb2a68f7976726262728694a6b2b8
c4d4dfe1d8cfcdcdbba29689929d9b9282768ba8afa48f7f726b6b6d7992a49f94847d7f
94adc4c6c2b29472627296afb8bfbdb8b4adb4b8adada28f99a8b2b8c4d1d8e1dfcdb4af
b2afb4b6b6ab968999bfd1c2a29dbddde1e1e1e4dbb2827b8499bdd1d1cbcfd1cdc2c4b8
a8b6cfd8c6bb99767d8fa2adb6b4a2826964748babc6bfa27d6d666d89afc2c6c4c6cdcd
c4bdc4d6dfdfdddfddc69f8482898b96b6d8e4e6ddc6a299b2bdc8c8a8897d96c4dbddd8
cdb49282869bbdd6e1ddcdb29b9492a6cbdde1dbcbb8bbc4aba8bfc6af949696949bb6c6
d1d8d1bdabadbdaf8266647fa8bbc4cdd4dbd8cfcfd1c6a6a2bbcbd4d4c49f7b7292bbc6
a8795d76adcdd6d6cfc6a67b728294a4bbc6b69b99bddfe8e6e1d8d8dde6e1bf8f898674
696d7f0000cbd6d8d6cfc8cbd1d1d6d8dbd6cfc8c8bdb8bfc4cdd1d1cbc6bbadbbcdc8b8
894b32323d474744474b47495b64667296a6adbbc2bdab96867b7070829baba6abc2c6bf
b2a29294a8a89692aba8896b626b7d92998f7b666b8fbbd4d6d1c8b8a8abb2a88d84868d
9ba6abadb2b2b2ad9d949fabab9b84766d645b57575b6d92bbcfcfc4b8bdc4b899726066
727679869fafafb6c6cfc2b4b8cfdbd8d4d1c2afb2ada8a28d746679abcbcdc2abb4d8d4
b299afcbd4d1b68f7070767f8994b6d8dbd6cfcdcdcdcfd1cfc6ad9292abafa892848984
706d8ba6a2948b96b2d4e1d8c8c2c6c6af92867d8da6afab92747fa2b6ad967d6d6b6b74
828f9ba49d8b797f96b4c8c8c2ab8466607299b4bfbfbfbfbfc2c4c2b6a8998b8da6c4d1
d8d8dddfdbcbb6ada499a4b2b4ab8f869fb8c6b69da4c4dbdfdfdfdfd4b89d928d9fc6cf
c6b4b4cbd8d4d1c4b4c6d8d4bba8927f8fa6afadb4b6a88d6b59606d8dadb4a286746969
7fa6bdc2bfb6ada69996add1dddbdbe4e8d6ab868699968b96c4dfe8dfc8a69db4b2b8bb
9b8489adcfddddd8cfad827d8da6c4d6ddd8c4a6948f8d99bbdbdfcdaf9da6af9da4c2cb
bfa49496a4b4cbd6dbddd8c8b6bbcfcb9f767292b4c6cdd1d8e1e4dbd8d6c69d9fc4d4d8
cdbb9b79697da4b2997966799fbbc4c4c2c2a87d74869ba4b4bdad9494bddde8e4ddd6d6
dddfdbbd94847969666b7f0000c8d6dddbd6d4d6d6d6dbdbd6d1cbc8c8bfb8bbc2cdd1cf
cdcbc4b6c2cfc8b88d57403b42524d474747403d50595d66869fb2bfc2b69f8b8682706d
829fa8a6abbdc4bfb29d8d92a49f969badb29b7662667da2b8b89d797299c4d1cbc8c2b8
afbbc8c4ad9f999b9fa2a4a6a29f9fa49d99a2a8ab9b847b7464595254576682add6e1db
d1c6b69b7d69646670767f99adb4b4b8c6d1d1cfd1dfdfdfdbcdb49fa29d928270646476
a4c6cfc4b2b6d4cbad9bafc8d6d6bd926d7486928f8da6c8d1d1d4d8d6d1d1d1d1cbb692
8ba6afa8948d948f7b7ba2bdb29f86829bc8dbcdbbadb2b4a284747d99b2bfc2a87d748f
aba694827270768dabb4b8bdaf9d8d8da2bdcdcbc2a87d69646d94b4c4c4c4c4c2c6cdcf
c6ab8f8489a4c8dddbd6d8d6cdbba69f92869dafb2a489869da69f9496a6bfcdcfcdcdd1
cdc4b6ad9da2c2cdc4b2a8c6e4e1ddcdc2cfd4c8b2a29699afc2bfb4b4b6ad94725b5d69
8db4c4b89f897b747d9db4bbb4a28f84797b9bc2d1cfcfdfe4d1ab898da4a48f89a6cfe4
e1cba69fb2aba8a88f8b9fc2d8ddddd8cfad7f7b8fb2d1d6dbddd4bb9f999296abbfc4ab
897b89948f9fbdcbcbb8a8abb6bfc8cfd4d6d4c4b2b6cfd4b4897f99afc8d1d4d8e1e6df
ddd4b88d92b8cbc6b4a28d72606b7f8b82707089a8afb2b6bdc8b88d7d8b9fa4b2b8a68f
96bbd8e6e4d8d1d4d8d8d6cbb29d846d6d76890000c6d4d8dddfdfdfddd8ddddd4cdcbcf
cfc8bdbbbfc6c6c4cbcfc8c2c6cdc2b28f6b54443d44424249494039404950607f9fb6bd
b2a49694a4a27f768dadb6adabbbbfbbab8f828b9b999badb4bba67d6b69799dbdc4a682
7996b8c2bbb6bbb8bdd8e1dbcbb8ab9d8d8484867f7f8f9b9f9da2a6ada6948f866d5b52
5254627ba4d4e6e6e1d1b28b7266646b7d898d9dadb2afb2bfd1dbd8dbe4e4dfd6bd9d8b
9289766962626479a2c6cfc4b2afbbb29f9bafc8d6d4b48b767f96a29d9badc2c2c6d1df
dfd8d6d8d4c8ad897f949d9b8f8b8f897d89adc2b2a48d7d86a4bbbfb8afa8a89b7f707f
9db6c6cbb88d747d92948f867d7989adcdd6d4cdbdafa8a2afc6cdcbc4b28f7f746d84ab
c4c8c8c6c6cbd1d4cbab8b848da6c4dbd8d1d4d4cdb49b8f89829badada49694968f7d7d
99b2bdbdb8ababbfcdcdc6bfab9fadbfc6bba8bbdde4dfd6d1cbc6b6a296a4bbcbd1cdbf
b2b2b49f7b60607299bfcbc2a88f867d7d94b2b8a492867b727996bdcfcdcbcfcdbf9f84
869fada28d92b8d6d8bd9b9dafa29da69fafc4cfd6d8dbdbd1af847d94b8d6dbdde6e6db
c4b29d999f998d7f706d798b96a6bbc6cbc6c2c2bfbbb6b2b4bbb8afa4abc8d1b89692a4
b2c6d1d6d8e1e6dfd8cbb28f8d9f9f968b84796459666966646279a4c6bfb4b6bfd1c69b
8689949badb8a6969dbfd6e1ddd1c6c8d4d8d8d4cbbfa27f7f8b9b0000c4d4dbe1e8e6e4
e1dddddbd6cbcdd4d4cfc6bfbfbfbbbdc8cfcbc4c2bdad9d8974604d3d37373d4b4d4440
44474d6486a6b6af927f8da8bfb6948d9badb4a4a2b2b8b8ab897679868d9db4b8bdab86
76768299b2b8a2898292a4a89f9fb2bfc8e1e8e6dbc6b49b7b6d6b6966728696a8ada6a6
abada6a6997b62524d52607696bfd6ddddcdab846b62667d9ba496999fa2a6a6bbd8dfdd
dfe8e8ddc6a6897f82796b646262667ba8cbd1c8af9b9996969db4cbd6cba284848b9da6
a4a4b2bdb8b8cbdfdfdbddddd6c6ad8b76797f868d8d897f8296b4bdab9d8f8b8f99a6b6
bfb69f96897b79869fb8c8cfbf9b7d798489969d9492a2bfd6dfddd4c6bdb6a8afbdc4c6
c4b8a699826b7296bbc8cbc8c8cdd4d4c49f898f9babbfd1d4d4d8d8d4bf9f9289828d9d
a8abb6b8a88f7d849bb2b8b2a69699b8d1d6d1cbb69f9fb2c6c8b4b2c6d6dbdbd6c2af9f
8b94b6d4d8d8d4c6b6b4b8a682696d7d99b2bfb8a4897b7984a6bdbfab8f7f79727fa6cd
dbddd8cfbba48d7d849db8b89d869bb8bfaf999ba89996a8bbd1dbd6cfcfd4d4c8a8847d
94b8d6dddfe8edebdfcbab99947f6d66697089adb8bdc4cdcfd1d1cfbfa8968d8d8f8f92
96a2b8bdab9fa8b8bbc2c2c2c6cdd4d4cbb6a294948d7b72727064544d57595757628bbb
d6cfbfb8c4d4cdb29d969294a8b6a69ba6bfd1dbd8cbbbb8c8d4d4cfcdc6af99969b9f00
00bbd4dfe8efede6dfd8ddddd6cfd1d6d6d4cdc2bbb6b8c4cdcfc8c2b6ab9b8f82746659
493b373b444b4d525d5b5b6b8da6afa67f6d89afc8c2ada4a29d9b8f92a8b2b8af8f726d
7b8b9db2bdc4b6998b92a2abb6bdb6a8a2a6a294868da6bbc8dfebebddcbb49676727269
66708496adb6ada6a6adadaf9f7b62504b5060728babbbc2c8bda27d66607299b6b6a499
94928f94b6dfe8e8e6e8e8dbc6a88b767069666b7476727da8cdd6cdad8d8b8f9ba8bbcd
cfbb8f7d8d949d9b929babb2afb6cbd6d1d4dbdddbcfbb9d7d6b708294998d82869db4b4
a49b9fa4adb8bfc6d1c29f8f827b8292a6b8cbd1bd967d797f86a2b4b2afb6c8dbe1dfd8
cbc6bfa6a2adb8bbbbbbb6b2946b6982a4bdc4c4c8cbcfc8b2928da6abafb8c8d4dbdddd
d8c6a692867d798494a4bdc6b8a6948f99a4a49d968b8dabd1dfddd6bfa69ba8bfcbbfb6
b6bfcfd4c8b49f8b7f9bc4dbdddbd4c6c2c2bfb29b7f747d8b99a4a4947f797b8bb6c6c6
bb997d707086afd1dde1e4d8bb9d948d8d9bb6c2ab8b8b96a2abababa89999b2cddbd8cd
c8c8cdc6b49b848296b8d6dfe1e8ebe8dfcda48682746b697484a4cbcdcbcbd1d6d8d8d1
bb9b82797b7b7b8694969f9d94a2b8c8c8c4b49d9ba2b2bfaf96898d968b7b7672665d52
4947475464749bc2d1cfc6c4c8d6d6c6b8ab9b8d9dab9f9fa6b8cdd6d4c8b4adb8c8bfb2
afafadaba69b8b0000a4bddbebedede6dfd6dbdbd4d4d1d4d4d6cfbfb6adb6cdd4cfc4b4
a69d998f8474695b50443d3b4049546676766d7089999f9d7d6b7fa4bbbbb2a89f948b8b
9badb4b4ad967970848f9babb8bfb29996abbbbdbfc8cdc8c6c6bb9f847f94a8b8d4e1e4
dbc6a889767b7f7269708499afbbb6a8a6adadab99765d504d5460728dabafa8b4b29d7b
646076a6c2c4af8f7f7d7986addbe8ebebe8e4dbd1bd96706460697b92948684a4cbdbd4
b49fa4a8adb6bfcbcdb28674868d8b7f767f929b9dafc6cbc4c8dbd8d6cdbb9f7f6d798f
9fa496868694a6a69b9fadb4bbc6d1d6d8cbaf9f99969499a6b8c6c8b286767b8492abbf
c8c8c6cdd8dbd8d8d4d4c8a89ba6afadafbdc6c8a8746d829badadadb4b8b6a6928499b8
b8afadb4c4d4dddbdbd1b6997f74767b828dabc2c4bbab9d968d847f827f829bc8e1e4df
c8a89696a2b2bfbdb4b2c2cdc8bba48b82a2c6d8ddd8cdc4c8cdc8c8bb99706d797f8b8f
9296998f94b6cbcfc29d79646d86a8c6d1d8ddd4bda8adaba29badbdb6998d8d99b2c2c2
af999fbdcfd6c6afb2bfc2b6a29286828fb4d6dfdfe4e1ddd6bf967b7d79706d7f9fc2d1
d1cfd1d6d8dbd8cdb89f8b7d76797f8989827d7d86a8c6d4d4cbb492848ba2b4a4929292
948b7b7469626460504444577286a2bbc8cdcfcfcdd8d8cbc4b49d8f9dadadada4a8bfcf
d1c4ada2afbdab8f898fa2aba48d7900007f9bcde8e6e6e4ddd8d8d6d4d6d8d8d8d6cdbd
b4a8b2cdd4cfc6b2a29da29b8b7d6d5d50474040445060728689766d828f929282767b92
9d9d999b9d999ba2afbbbbaf9f927d727f898b929da2927f869fb4b4afb8c8cdcdcfcdb6
8f7f8fa8b2bbc8d6d4bf997b76848d7f6d6b7f9bb6c4bda89fa2a69f8d725d54545b697f
9fb4ad9fa8ada89476647094b4bdab846d6d7286a4c6dfe6e8e8dfd6d1c49b6b5d5d7292
a2a29999b2cfdfdbc4b2bbbfbfbdbfcbcdb88b727d7f796b6469727b89a2bbc8cbd1ddd6
cbbfaf997f7994abb2ab9d8f848492998f9ba6adb6c6d4d8d6c6b4afb6bbb29b9db4b8b8
9d74707d96b2bdc6d1d6d1cbcbcbcdcfd6d8c8a69b9da2abb4bfcfd6b886849db4b2a28f
898b897b70728babada2969babc4d1d4d6d6c6a884768b9289899dbbc8c8c2b8a4846d6d
70798296c4e4ebe4cda8867b7d8dafb8afabbdd4d8d1bb9d8b9fbfd6ddd6c8bfc6cbcdcf
c69f6b62696d798ba4bbbfab9fbbcfd1bd99725d697d96b2c2cbcfcdbbafb4b2a69ba6b6
b49d8f8996b6cbcbb89b9db8c2c2a4848fa2a49b928d868284a6d6dddbdfd8d6d1bf9982
8b8b7d6d7ba8cbd4d4d4d6d4d8d8cdb6a8a8a28b7f8d9f9f8970697084afcfdbd8cbb499
8d94a6b2aba6aba49d8f746257575b594d444759728699abbfcfd6d4d1d8d6c6c6b69f9d
adbfc2b6a49badc4cfc8b4a8afb49f827f86929694847900006d86c2e6e8e8e1dddbd8d4
d1d6dbdfdfd6c6b6ada8b4cbd4d4cdbdada8ada696867666544942425062707d8d8f7d6b
7b8282898d8b8b94928686969f9da8b2b8bdb6a48f847970707070727d8276696d82999d
949bb6c8d1d4d6c6a48ba2bdbfbbc2d1d4c29b7b8296a299796b82a8c2c8c2ad9b969992
8272645b5b647999b2b6aba2a8b6bfb6947469748da29f867069748da2b6cfdde4e4d6cd
c8b28b64595d7d9fa49fa2b6cbdbe4ddc8bdcbcfcdcbc8cdd4c89b797b7b72646260626b
84a4bdcdd8ddddd6c6b2a292848db2c4bfb2a296897f8d998f8f96a4b8cdd6d6cdbbafbd
cbd1c89f9bb4b2a2846b6d89abc8cbc8d4dbd8cbbdb6bbc4cdcbb89d8f92a2bfc4c6d8dd
c29299bbcdc6ab8669696b6662627486867f7d899badbdc4c6c6c4a8847b949f948f94a8
bfcbd1cdb894746b768994a2c8e4ebe4c89f7d706d7492a4a4a6c6dbddd6bd9b8999b8cf
d6cfbfb8c4cdcfd1bb8f6b707b76748db8d4d6c2b4c6d4cfb894705b606d86a2b4c4cdcb
c2b6ab999299a2a8a89f998f94b4cdd1bf9f9bafb2a4846b72828b8d8b867f797694cbd8
d8dbd8d6cbb8998b969b866d7099c2d4d8d6d6d4d4cdb89d9fb8c2ab9db2bfc2a2726674
89b2cfdbcfb6a49d94929dabafb4b8b2af9f745b52524d47403d495764767d8dafcbd4d1
cfd6d4c8cdc2abadbdcbc2ad9b969bb6cfcfbdadb2b49f898b94948984848d0000697bad
d8edefebe4dbd6d4d4d6dddfdbcfbfb2adb4c2cfd1cfcfc8bbb2b4b4ab967f6b5b4d474b
5d79868b8f8d7d727d7d7679828b969f9b9299a8a89ba4adb4b6afa2968b7d726b625d62
727b7264697b8d928d92abc6d6ddddd4b899afcbd1d4d6d6d1c8a88d99a8b2a6827492b8
c8c8c6b8a28d8b847b72696264748fabb4b2abafbdc8cbc2a4826b6470899f9d86727992
a6afbfd1ddd8c8bdb4967660596282a2a49da8c8dbe1ddcfbfbfd1dbdbd4cfd1d8cfa27f
7f7d72646262666d86a8c6d6d8dbdbd8c8ad8f84869bbfcdc4b29f968d8699aba8a4a6b6
cddbdbd6cbbbb6c8d6dbcfa69fb4af997d747692b8cdcbc6cfd8dbcbb4abb2b8b8ab9b86
7b86a8cdd1cddfdfbf94a4c2cdcdaf86666d7b7b6d6674847d72707684929fafb2afafa4
89767f8b8b89868b9dbbcfcdb6947d8299adb4bdd1e4ebe1c49f8b7d72728b9f9fa6c6db
d6cda8847b8ba6bdc6bdb6bfcbd1d1c49f79768f9d8d7d8fbbd6dbcdc2cbd4cfb68f705d
5d667f9db2c6d1cfcbb89b8486999d999fb6bba494afcbd4c8ab9b9d9d8d74666b86a2ab
9b8474696982b8d4dbdddfd8bfa28f929b9f8d726b84b4d4d8d6d6d6d1bda28fa2c6d4c6
bdc8cbcdb67f727f94b6d1d1b4948b948d8489a2b2bbbfb6b8ab7d6259594d443b37444b
4d5d647296bdcdc8c6cdcfcdd6cdb6b8c6cfc6af9b8d89a4c4c6b4a6abafa2949da4a28f
8496b20000666d8dc4edf4f1e8d8d1cfd4dde1dfd4c4b8b4afb8cbd1cfcfd1cfc8c2c2c2
bdab8b705d4d4b57708f9f9b8979747b8f8d7b6d6d7d94abb2b2b8bfb299969da4a8a8ab
adab998270625959667676697492abab9b99b2c6d8e1ddd6c2abb8d1dfe6e4d8cfcbb69f
a2afb6a6847f9bb6c6c8c6bfad94827976726b696d7d96a6a6a6b2c2cfd4cfc2ad947966
6984a6b8ad948d9ba8abb2c8d8d4c4af9b7d69605b6982999b99a8c8dbdfd1b4a4adc4d6
dbd6d4d8d8c89f848b847d74706d6b72829fc2d8d8d6d6cfc2a27d798ba2bbc2b8a4948f
9292a8c2c6c4c2cbdbe1dfd8cdbfbfcfd8d6c6a8a6b4aba2998f899bbfcfc8c2c8d1d6c6
afa8afab9b8b7f747486afd1d6d1dbd4b294a8bfc6c4a8846d849d9f897b8fab9f7f6969
74849fb8bbada8ada2826d69727674707b9bbdc4a88986a6bfcbcbcbd6dfe1d1bfafa48f
7b7da2b4afadbfcdc8b6947674798da6b4b2afbfc8cdbf9b7b728bafb8a2868badcbddd4
c6cbd1cdbd9f8269626d89a6bbc8d1cfcdb68f828b9b9d9babc8cfb69fb4cdd8d4bba296
998f7d70749bbfc2ad927d7066729fcbdddfddcfb29992999fa2927969769fc6d6d6d6d6
c8af968fa2bfcfcbc6c8c6cdbd8b7b8696b2c8c49f847f7f7b74798da4b2bbbbbfb6997b
695d52473b303d444250607086a4bdc4c4c2c2c6cfc8b8bdc8cbc6bbab9984899da69d99
a2a49d9dadafa89689a6c8000066667bb6edf8f1e4d8d1cdcfdde4dfd4bfb4b4afbbcdd6
d6d1d4d4cfcdcfcdc4af8d705d504d5b7694a69974646b7d9696867269799dbdc6c6c8cb
c4ad948d929babb8c2c6b89d826959525b6b727089adc8c6ab9fb4c6d4d8cfc2b6b8c2d4
e1e8e1d6cdcbc2ab949da899848499adbfc6c6c4b69f82727070706d6d74828b929bafcb
d8dbd1c6bdad8f70708fb2c6c4b6afaba8a6adbfcfd1c4af94796b6b6b727d8d94949dbb
cfd4bd998b9db4c8d4dddbddd8c299848d8f99a29f8f7d767b8fb2d1d6d4d1c6af897076
96afb6afa69b8f8f969dbbd1d6d6cfd1dde4e1dbcdbdbdd1dbd1c2b6b2ada8adb2aba4b2
cbcfc4b6b4bfc4bbada6a49b897974748299b4cbcbc8d4c29b869bb2b4af9b82748da6a6
9496b2c8bf9972646b89b2cfcfc2bdbdb696725d60646462697fa6b8a68f99bfcfd6d6d4
d4d6cdb8afb2af9d868bb8cbbdafa8aba699867b726d7b99aba8a4adb2ad96726b7f9dbd
c4b292869bc4dddbcbcbcbcbcbbfa6826d7da2bfc8cbcbcbcbb2898b9ba2a6b2c2cdd8cd
b8bfd1dfdbc4a89fa8ab94797ba2bfbfb8ad9b826b698bbfd8d1c6b6a69d9ba2a6a48d72
666b89afcdd4cdc8b6a49b9babbbc4c8bfb6bfcdc29986868da4bbc4af99867d79726d76
869db4c4cbc6bda67f594949443d474949597282848fadc8c6bfb4afbbbfbbbdbdbbbbc2
c2af968b8d8b8b8f9999969badb2b2a48fa8cd00006b697fb8ebf4ebdfd6cdc8cbd8dfdd
d4c2b4b2afb8cbd8d8d1d1d4d1d1d1cdbda2846d5d52545b6d848f8266627082898b867b
707da4c6cfcbcfd1d1c29d898999b4c4cbcfc8b69d7d64595b646d7b9dbbcdcfb49ba4b4
bdb6a6949bb8cdd8dfe1ddd4cfcbcbb68d828b8f8d8f9ba4b4c2c6c2b6a284706b768489
7d706b76828ba2c4dbddd1cbc4b89f7d89abc2cbcbcbc6b6a6a2a6b2bfcbc8bba68b848d
8f89828b8f898499adaf9d8f8fa2b6c2d1e4e1e4d8b48b798494b4cfd4c6ab8b7d849fc2
cfd4cfbf9d766b7999b2ad9b8f948f929fb2cbd8dbddd6d1d8dfdfd6c4abadcbdbd6cdc6
bba8a6b4bfb6b6c8d8cbb8a69da4afbbbfb6a89d92867f8b9ba8b4bfb8b6c6b28d7d8999
9994928d8b9b9f948da8c8d4cfb2866b6d94c4d6d4cdcbc8bb9f79605b5d5d5b607096b4
b2a4adcdd8dfdddddbd4c6ada2a6a89f8b92c4d6c8b294848286847b726b72899d9b9496
8b7b7069799bb6c4c4b89b8694bfddddcdc8c8cdd1c8ad867b92bbd4d6cdc4c4bba696a6
b2afb8cbd6d6e1dbcdcdd4ddd6bba4a4b2bda67d7999b6bbc4c2ad89696276a6bfb8ab96
8b949da6ab9d826b69707b96bbc6bbb4a2999da8bfcfcfd1c4afbbc8c4a8948b8996b6d1
d1c4a6928f826b7084a2bdcfd1cdcbbf96604b4d545d69665d6b828f8d94b6d6cfc6b6a2
adb4afaba4a4b6cbcbb6a8afaf9d9499a29f9496afc2c6b699a6c800006b6b8bc2e8ebe4
dbd4cfcbcbd1d4d1cfc4b6adadb8c8d6d8d6d4d1d1cfd1c8b2927d6b605d5d5d626d7b7f
76707f948482847f7b89abc8d1d1d4d4d6c8a28d929fb8c8cbcfcdc6b499765d60697d9d
b2c2cbcdaf8b848b8f867b7684abd1e4e4dfdbd6d4cfcbbb927f8b9da29d9b9ba2adb6b6
ad9d8b76768fadb49d79666d767f8fb2d6ddd4c8bdaf998fabc8cdd1d1d1cbb29b969ba8
bbcdcfcdc2ada6afb6a48b868f8b76747d8d99a6a8abbbbdc8dde6e8d4a88674768fb8db
e6e4cfaf948694b4cbd1cbb49479707b929f94827f8d929fb6cbd6d8d8d8d1cdd1d8d8cf
b69da2cbdbd6cfcbbda69badbdb6bdd1e1d4bfa89492a2bdd1cfbdafada4999ba2a8adb4
afb2c6c2a4868286848699abadab9b898bb2d1d6d1bb947276a6d4d6cdc8c8c6b6997664
62605d595d6b92b6bbb4b6cbdde4e4e4dfd8cbb49f96968d7f92c4d6cdbb9b84828d8979
726b727f86827f827262647492b2c6c8c2af947d89b6d6d8c8c4cbcfc6b2927b7fa2c4d6
d6cfcbc8b2a2afbdc2bdc6d1d8d6dfdbcfcdc8c8c2ab999da8b6a4797089a4b2c6cbb284
625960768d9486746d7b8fa2a68f79727b868b94a4a69d9b9292a4bfd6dfdfdfcfb4b6c4
c4b4a69d9694b2d6e4dfc4aba49276799bbfcfd8d4cfcdc6ad825d5466849696867b848f
8fa4c8ddd4cdbfa49b9692949299b2c2bfb4b2c4c8b6abafb8b2a6abc6d8dbc6a6a4c200
006d6b8bc2e6e8e1dbd4d4cdc4c4c6c4c4c2b6a8abb8cbd4d8d8d8d4cfcdcfc6af8f7969
64666d6962667d92928992a2928989868294b8cbd6d8d8d6d6cbad9d9fa8b2b6bbc4cdcb
b8a27d5d5b6692c2c6c6cbc4a27b6d6b6d6d6b6d7696c8e1e4ddd8d8d6cfc8b89f96a6b8
af9b8f929292999d9d9b92848badc8cfb4866b69707989a8cfdbd1c4bba896a4bfd6d6d6
d1d4cfb899899db8c8d1cfcfcdc4bbc2c8af8f8b9b9d84696b8babb8b6b2b6b4b6c6dbdf
cfaf8d767489b2d8e8e6dbc8ab9294b2c8d1c8b6a28f828694927f747b869bb6d1dfdfd8
d4cfc8c4c6cdd1cbb49fa6c8d6cdbfc4b692828fa4adbdd4e4ddcfb6998b94b6d8d6c2b6
b6af968f92999ba2adc2d4d6bf9b7f798294afbfb8af9f969fb8cfd6d4bf9d7f89b6d8d1
c6c4c4bda484767676726b625b6b94bdc2bdb2b8d4e4e8e8ddd6d1bfab9b99928d9bbbcb
c8c2b29f928d8476747686948476767f76696d86a2b4c2bfb29b82707da8cbcfc2bdc8c8
af967f7982a2c2cfcfcfd6dbc6b4bfcbcfcdcbcdcfd1d6d4cdc4b2a6a8a6a29d9b9b8969
697d96adc8cfb27f5d59545b666d69626674899b9b86798296abb4b4ab998686868da2c6
dbdddbddcdafabb4bdb6b2ada49badcfdfddcdbdad997f7fadcdd1dbd8d4d6cfc2a87d64
79a8b8b6a47d768286a6c6d6d6d8cdad8f7b7d8999a8b6b8b4b2bbc4c4b6adb4bbb4b6c4
d4dfe1d6bba8b400007d7089bfe6e6e1dbd6d6cfc2b8b8bbbfc6bdadb4bfcbd1d4dbdfd8
d1cdcbbda68f796b66727d745d627d99a4a29da29d928d8d8496b8c6d4dddbd6cfc6afa8
adaba49999abbfc2ab896b5954669bd1d1cbc6b8946d6662646466696d86b6d4d8d6d6d6
d1cdbdadababb8c6b8a2949d9d92898d969fa4969dbdcfd1bf99746469748bafcfd4c8bd
bbada4b6cbd8ddd8d1d4d6c6a294b4cdd1d1cdd1d4cfc4c6cbb29b9da8ad926b6d96b6bd
bdb8afa8a6b2c4d1cdb48f79747fa2cde4e6ddcfb69fa2bbcdd1c8bfb6a89d9b9b8f7b72
7484a2c6dfe8e6dbd1c8c2b6afbdcbc4b6a2a2b8c2b2a4b2a67d6d708299bdd6dfdbd1c2
a48d8badd4d1bbafa4967f7679828da6bfd1d8d6c8a6847f96abbbbfb6a8a6adb4b4b8c6
c8bda4929dbfd4cdbfb8b6b29b82868d8f8d7d695b6689afc4bba6a2bdd8e4e6dfdbd6c8
b4a6abb2b6b8bdbfbdbbbdad927f79767d8fa8b4a28b7f847f747992a6adb4ab9b867269
7292b8c8c2c2c6bb9b8d8279829bb8c4c4c8d8e1d8c6c2cfd8d6cdbfc4d4d6d4cfbda494
9fb2bbb29b7f6d666b768dafcdd4bb8b665b545960666969748ba4ab9b848299afc4cdcb
c2ab8f7f7b7f94b6cfd6d1d1c6a8999dadb2b6b2a8a2b4c8cbcbcbc4af947d7fafcfd1d6
d6d8dbd6cfbf9b8292c2d1c8a87b7286949badc6d8e1dbc29b7b7689a8c2cdcbbdb2bdbf
b8afabb2b8b6c2d1d8dfe1e1cfada20000948492c2e6e6dfd8d4d6d1c4b6afb2bfcfcbbb
c6cdcfd1d1d8dfddd6cdc4ad9686766b6979867452577294a4a69f999f968d8f8694b2c2
d1dbd8d1c8b8a2a6af9f9489848da2a48b6b5754596da2d1d1c8bda68d7b706660626d7b
7f86a8c2c4c6c8cdc8bfa89da8b2bbc6bdaba4b2b8ab8f868f9da6a2a8c4cdcdc2ab866b
66708bb4cfcfc2b2ada8a6b4c8d8dbdbd6d6d8c6aba8c6d6d1d4d1d6dbd4c6bdc2ada2ab
b2ab8d6d7699b2b4bbbdaba2a2abbbc8c6ab8b79747b99c4e1e6dfd4bbadafc2d6d8d1cd
c2b29f99998f796d6d82add4e6e8e4ddcdbbada499a6b8bbaf9b94a6a8998d968d6d6262
6b7fa8cbd6d4cdc2ab968fa6c6c2ad9d867469666b7b99c2d1d1cfcbc2ad969bafb2b6b6
b4adafb8b49f8d96abb2a499a4c2d1c8b8ada29d8d82969f9f9d84665d6682a6c4b89f94
9bb6cfdde1dfd8c8ada4b8c8cfd1c8bdb4b2b6a48270728294a6b8c4bbab96868482828f
9da4a296897f7672727d9db6c2c8c6b2948d82747f99afb4b2b8cfdfd6bdb2c6d1c6b8ad
b8cbcbc6bda68f8da4bdcbc4a6867b86847d84a6c6d1c29670605b6476898b898ba2bdc2
a68d99b2b8c8d1d1cdc2ab897b8296b8cfd6d6d4c6a8929badb6bfbbafafc4cdbdbdc2c2
af8f767ba2c6cfc8c6cdd8dbd8cbab8f9dcdddd1af8d8496a49292b4d4e4e1d1ad867486
adcdd6d1b69fa6a8a2a4a8b6c2c4cdd6dbdfe4e8ddb2940000968b96c2e6e1dbd8d4d8d4
c4b4abafbdd4d1c8d1d6d4d1cfd4dbddd8cdb89f8b7d72696d7f846d4b4d667f8d8d8d94
9f94868b8692abc4cfd1d1cdbb9d898f99867f7b7f868d8670605b6069799fc6c8bbab9f
a6a89474626b84a4a69296a6adb2b4b8b49f8d8b99a8b4bfb8afadbbc6bb9b7d798694a6
b8c8c8c6c2b8a486706d8bb2cbcbb6a29ba2a6a4b6cbd1d6d6d8d6c2afb6cfd8d6d6d4d6
d8d6c8bbb8a6a2b2b4a88b76869da4a8adafadafb2b4c2c6bda2847476829dc2dfe4e1d4
b6abb2c4dbdfdbd6c8a8847f8b8972646b82b6dbe6e6ddd1c2a69696949da8ad9d8d92a4
a89d8f897d6d6464666b84a8c6d1cdbfaf9d99a6b8b6a89476646262667ba6cdd1c4bdbb
bdbbb4bdc8b8afabadb8b6ada68264729bb2a89d9db4c8c2b4a48d82797b9baba8a4866d
697b96b2cbbfa6928994abc6d6d6c6ad9699b8cdd6d6cdb8a8a8a69270667996abb4bfcb
cbbda28b8d928f92999d96999b9d9f9f9b8f8fa6c4d1d1bb96897b6d7b94a8ab9b9bb2c6
c2a6949fa69d999dabb4b4a692847d89a6c4d1cbb89f9dafab8f7f99bbcdbf927064647d
9badb2a89fabbdbfa699adc2b8c4cfcfcfcdbd967f86a6c8d6dbdddbcdaf9fa4b4bfc8bf
adb6cbcbb6b2bdbdaf927d849badb4afafc2d8e1dfcfaf96a4cfd6cbb69f8f8f998b86a4
c6dbddd1b68f7684a8c8cdbf9d7f7d7d7d8999adc2cfd8dbd8dde4ebe1b28b0000867d89
b8e1dfd8d6d8d8d1c4b4abadbdcfd6d4dbddd8d6d4d4dbdfdbcdbb9d897f797476827d66
4d52697b7970748b9b8b767b7d8292b4bfc2c6bb9d7b767d847d7982949d96826b6b7982
848999a8aba29dadc2c4ad7f7289a8c4c2a48b8b9fa6a8a69f89797b8496abbbb8b2b2bf
cbc29f74647694b4c8cbc8c8c6c4bda889768bb4c6c2a8948f9ba6a4a2a8b6c6d1d4cdb6
afc4d6ddd8d8d6d6d6d1c6bbb29d9baba89f8f899fafb2b2a6a4b6cbcfc8c4c2b89f8b82
828da4c2dbe4ddc8a69babc2dbe4e4ddc89f767989847066707fa8d1e6e1cdbfbfb2a299
9d9f9b94827f92a4ada492847b74706d6d6d7692b4c8cbc2b4a4a4b2b8b6ad9b7f706662
697fa8c6c8b8b2b8c6cdcdd6d8c6ab9ba8bbad928b6d54648ba8a89b929babafab9b8470
697699ababa28979829da8b4c6bda48d848994abbfbda2898499b4cbd6d4bfada4a4a28b
70667da2b6bdc4cdc8bb9f8689949699a2a8a8b2bbbdc2c6c6bbadb2cbdde1cda27f6964
728fabab8b7d8d9b9b8f847d7f848b969994968470748292a8c8d4cfc6b4afbfbfa48b9d
c2d4c2997b767999b2bdbfb6adadb4af9d99adbfb4bdc6c8cfcfc6ab8686b4cddbdfe1db
cdbbafb2bbc6cdbda6afc2bdabadb8b8a8928da2aba69f9dadc4d8dfd6c6af9fadd4cfbb
a48d8686897f7f99b4cdd4cbaf8f7d829fbbbfa8897062626972849db8cfdbdddbdde4eb
dfab7f0000867b7dabdddbd6d4d6d8d4c6b6adadb8c6d4dfe6e6e4dbd8dbdfdfdbd1c6af
9b96948b7f7d74645b66798279696d8b96846b64666b768fa2b2bfb28d6d707f86868b99
abb4ad8f7079929fa29f9b94868499b6c4bfa88992bbc8d4cfbb968b9ba8a89d927d7272
79899fb6bfbbb6bdc6bb9672647da8c6cfcfcbcbcbc8cbc2a88484a4bbb6a2948fa2b2b2
a69996a8c2c6b6a6a8c2d6dbd8d8d6d1c8c2bbb4a48f8b96948b848fafc2c4c2ada4bdcf
d4cbbdbdb49d99999694a4bfd6ddcfb2928da2bfd8e4e6dfc4997d8994897b79868fa4c4
d6c8b2b4d1cfb8a6b2b29d89767b8fa2a8a28d7d7b82827f7b7b7f92a6b4b8b2a6a6afbb
b8b2aba29282766b799bbbc6bdafadc2d4d6d6dde1d4af96a8b49d7264595259708b9999
9b9692999b9286766b728d9fa296868294ababa8b8b4a292969fa8b8bdaf8f7b8299b4cb
d1c2a2969da6afa2846b7da8c2c8c8c8bbad947d7f8d969dafbfc6c6c6c8cbcfd4d4c8c4
cfdde4d6ad765b62708fabaf9279797d82827f798ba2a6a8997d726b697b8f9ba6c6d6d8
d6c2b4bbbfafa4bbd4dfd1a68b8b94abbdc2bdb8b4a8a2a4a8a2a6adababb4bfcdd1cdbd
8f89b6cddfe4dfd6cbc2bbbbbfc2bfafa2a6b2b2a8adb4af9d8b94b2b8afa89fadbfc6c6
bfbfbdafb4cfc8a8827279868d848294b4cbcfc6a28682829dbbbd9f7d6b5d5d64748ba2
b8cddbdfdfe1e6e8dba6790000998b82a6d8d8d1d1d6d8d6cbbdb6b4b6bfd1e4ebebe6e1
dfdfe1dfddd8cfbfb4afa69986746662697984867f6b74949b8669595964798fa6bbc8bd
946b6979828699abb6bfbda279849fadadaba6967b7d9fbbbfb29f92afd4d6d6d4c8af9f
a6b4ad9d927f726d727f94adbbbfb8afaf9f7f70728bb6cdd4d4d1cfcfd1d4cdb88f7982
999f99949bb4c6c4b4968292a8ad9f9ba6b8cbd4d4cdc4bbb4b2afa8967f72767672748f
b4c6c4bdada4b2b8bdb8afb2ad9b9fa6a299a6c2d1d1b6928492a6bdd6e1e1dbbd998992
998d82899ba4b4bdb6a496add6dbc2afc2c8b8a2898696a2a6a294868d9fa49f8f86868f
9ba2a2968b99b4c2b6a89f9d92897f7f9fc4d1c8b4a4a8c8dddddbdfe6ddbb9da2ab9260
47424b50576986a4b8ab8984898d8b7d70748f9f96867f8696aba6a6b8bbb6b4bdc4c8cf
c8b49682849dbdd1c8a88b899badbfb68f707fadc8cdc8bda89684797d868f9bb4cdd4d1
cdcfd1d1d4d6d4cbc8d6e1d8af765b64768fa6afa28b7b74797d7d7fa2c4c2c2ad846b62
6d8496969bbdd6ddddcbb8b2b4abafd1e1e4d4a68d96a4b6c2c4bdb6af9f9babc2bfb4ab
a4a2a6b8cfd8d4c29686abcbe1e4ddcfcbcbc6c4c4b89f8b8b94a4adafa6a6a6948692b2
bbb8b29fa4adafb4bbc8cbb6a8b8b89d796b7992a29d94a4c8d6d6c89b7f7f89a8c2c2a2
7b695d5d6b89a8b8c2cfdbdfdfe1e4e1cfa27b0000a6998ba2cbcdc8c8d4dbd8cfc6c2bf
bfc6d6e4e6e4e1e1e1e4e4dfdddbcfc2b6afa294826b60626d7b84867b6b76999b846454
576b89a4b6bfc6bf9969626d76829fb6bdc6c4ab7f8fa6ababa8a4927984adbbb6a69b9f
bdd6d6d1d4d6c6afa6b2afa49b8b766972869dafbfc4b8a28d7b6b707b8fb2cdd8d8d6d6
d6d6d4cdb8927066707d868f9fbdd1cbb894798292999ba8b4b4b6c2c8bfaba2a8a8abad
a28469625d627092afbdb8b2adafb4b2afa89d9d9b8d949fa29fadc6d1c29b797b94a6b8
d1ddd4cbb49b8f8b867f828f9fa8b8bbaf9b8f9fc6d1c2b2c2cdcdc2a89da6afb2b2b2ab
adbbc2bb9d7d828f969b9282798fb2bfb29b8f8f8b84869dc4d8d8c6ab969fcbe1dfdfe1
e4ddc49f8f94825b443b424b526286b6cdbf967b7b8989796b7694a69b7d768699adb4bb
cbcfcfcfd4d8d8d6d1c4af9d9bafcddbc69f8d92a6bbc6b68d7489b2c4c8bfab94827472
79828b99b4cdd6d4d1d4d6d4d1d4d6cdc6d1dfdbb67b5d697d94a8b2af9b8276797d7b82
a2c6c8c8bd9f7b666d84928d8dafcddbd8c8b6abababb8dbe6e1c6948294abbdc6c6bdb8
b2a8abbfd4d1c2afa8abafbbcfddd8c49984a4c8dfe1d8cbcbd1cbc4bba88670747f94a8
af9fa4b69f929bafbbbbad948d9db2c8d1d1c8ab929da8a2867689a8b6b4afbfd4ddddcf
a4827b7f9db6b89d7d6b6062749bbfcdcdd4dbdbd4cfcdc8bb9d8d0000ad9f8d92a4a8a6
afcbd6d6d1cfcdc8c8cddbe4e1e1e1dfdfe1e1dfddd8cdb4a6a49282766b6b6d7070797d
7269769292795b4d5066899fa8abb2af8f6662697082a4bdc6c8c29f76849ba2a29d9684
7289b4b8b2a2a2b2c8d4d4d4d6d8cdb4a4a8a8a29b8b797082a6bdc4cbcbbd9d7b696974
8492a4c4d6d6d6d6d4cfc8c4b899745d626b798ba6c4d1cdbd9f7b79828fa4bfcdc2b4b6
c2b49d94a2a4b4bfb699745b545d76a2b6bbbbbbc2c6c6b8a696898b8f89848d9da4b2c6
cbaf8972768b9badcbd4c8bbab9d8b766d7b8f9f9fa4b2bbb6a89499b6c8bfb2bfcbcdc8
bdafb2c2c6c6cbc4c4c8cdc29b7079929d9f8b726982a4b4a68b7979797f99bfd6dfddcf
ad8d9dc8e1dfe1e4e1d8bd94797970594d47505d707d99c2cfc8ad847682827266728dab
a67f76869bb4c4cfd4d6d4d4dbdfdbd8d6d1c8c4bfc4d6dbc6a299a4b8cbc8ad84748daf
bdbbafa28f7d72747d8d9ba2b2cbddddd8d8d6d4d4d6d8d4cfd6e1dfbf84626b7b99afbd
bda8897b7b7f7f8dabc4cdcdc4b29276707b84868da4b8c4c6bdafababafc4dde1cfb28b
7d8ba4bdc8c4b6b6bfc6cdd6dfd8c6b4b4b8bbbdc8d8ddc49684a6c6dbddd4cbcdd4cfc2
ad92766b6d79899da696a6c4b4adb4b8bbb4a48f8b9dbdd8dfd8cdb4998f9b9d8d899db8
bfbfc2cdd8e1e1d6b28d7d7b8b999d9284766464799fcbdbd8d6d1cdbfafa4a2a2a2a400
00b2a28b7f7d7b7f9bc2cfcdcbcfcfcbcbd1dbdfe4e4e4e1dddbdfdddbd4c8afa29b7d72
76797d7d746264706d69748b8b7b62505060798b9499a6a6927466667086afc8cbc6ad84
697994998d89897d7286adb4afabb6cbd4d4d8d8d8d6cdbdb2afa89b8f89848b9fc2d1d1
d1cfc4a482727d94a4a299adc8d1d1cfcbc2bdc2c29f745d60697289afcdd1cbc6b28b76
7f96adcbd4cbbdb8b8a894929fabbfcbbd9d765d57607da8bdc4c8cfd1cfcdbfa8928282
8d999499a6a8b2b8b49b82797b868f9dbbcfcfc6ad947f66647d9daba294a2b4b6ad9b9b
b2bdb4a8afbfc6c4bfb4b2bfcbcfd4d1d1d1cbb892707b9dafa6896d647496a89b7f6b69
6d86afd1dfddddd6b694a4c8dfdfe6e4ddcbaf927972665d5d5d64768994a4c4cbc8bb94
7b74726962708db2b2897b8496b2c8d4d4d1d1d6dfe4dfd8d8d4cfd4d4d1d4d4bfa29bad
c6d4cbab82798fabb8afa6a4998976728299a6abb2c8e4e4dfddd8d4cdcfd4d4d1d4d8d4
b47f667484a2bbc4c4ad8f8b8b929fb4c8d1d4d1cbbba6968f8f8b8b969da4abb4b4ada2
a4b2c6d6d1bda28d7f7f92afbfb6a8adc8dde4e8ebe1cbb8bbc2c2bbb6c8d6bf8f7fa8cb
dbd8d1cfd6dfdbcbaf8f746b7686949fa8a2a6b8bbbbbdc2c2bfb29d9dafc2dbdfd8d1c6
af999d9f9494a8c2c6c6c4c8dbe4dfd1b8a496868486868b92896b6279a2cfe1ddd6cdc4
b8a6948992abbd0000ad9b8479726b7496bbcbcbcbcdcdcbcdd4dbdbdfe4e6e4dfdbd8d8
d4cdc6bbab967970798286867b595262696b79949d9b825d545d6d7f8d9ba6a89f8b796d
728dbdd1c6af8969627b969986828d92828babb4b4b8cbd4d6d6dbdfddd4cdc4c2bfb29b
8b92a2b2bfcfd8d8d6d4c8ab8f869bb4c2b29696afc4bfb8b6b4c2cdc49f74606269728d
b4cbcdcfcfbf9d8b9dbbc4d1d4cbbdad9d8f8b94a6b6cbd1bd94726459607699b4c8d4d6
d4d1d4cdc2ad8f828da2abafb8b6b4a89d9b998f89868992b2cfd8d1b8926d5b627f9fb2
a4868da2aba69699adada29494a8b6b4b2ada8afc2d1d6dbdbd6c8b28f707b9daf9d7f70
707b8b968d7d747b829dc2d8dddddfd6bb9dabcbdddddfddcfb2a29d948974707d827d7b
7f8699bbc6c8c2a27f666060647696afab92848999b8cdd4d4d1d4d8e1e6e1d8d6d4d1d4
d8d8d6cbb2928da2bdcbc6a88b8696abb2aba4a2998d7b707d94a6adb2c8e6e6e1e1ddcf
b8adafb8bbb8bdb696726d8292abbfc8c4ad96999dabc6d4dddfd6d4cfc2b6b6c2bfada2
a49696a6b4bdb4a6a8b6c4cbbfada49f9282869dab9f96abcfe4eff1efe6d4bfb8bdbba4
949dafa28686b2d1ddd8cfd1dbe1dfcfb699766d8299a6afb8b4a6a4b6bdbbc2cbd4c8ab
a4afbbd1dbd6cfc8bdabafaf9f94a6bfc4c2bbc4dbe4d8c4b8b8af9686868996a6a27669
86b4d6e4e4dfd6cfcdbf9f828bb2cd00009d8b7b7270697292b6cdcfcdd1cfcdd1d6d6d4
d6dfe8e6dfd8d1cbc2bdc2c2b2927972767f8b8f7f5b505b647084a4b4b4996b5b5b6276
8696a6a8a69d8b767696c2d1bd926b5d607692a29d9da8ad9694adb8b6bbcdcfcfd4dde4
dfd4cdcdcdc6ab8f8999afbdc8d4dbdbd6d4c8ad999bafb8b8a886849bab9b8f96a8c6d6
c8a279696b707994bfcfcfd6d4c2a29dbbd4d6d6d6cdb4947d7d828da4b4cbcfb8927672
6062748bb2cdd4d4d4d6ddddd8c8ab9496a6b6bdc2bdb29d99b4c2b29d8d8486abcddbd8
c6a2705d667d9fb8ad7f79899494898da4a28f8486969d9b9b9d9fa4b8cfd8dfdfd8cdbd
9d726d7f897b6b6d7d8b8b7f7b8294a4a8b8cdd6dddfe4d8b89fb2cfdddbd1cbb89994a4
ada48f8ba2a6947b707486a4bbc8c4ab7f5b545b667d9fafab9f999dabc6d1cfd1d4d6d8
dfdfdbd4d6d6d1d1d6dbd8cdad897b8499a8af9f8b8f9ba2a4a6a49b94897b6d70829bab
b6cde4e6e4e6e6d1ab8b8f9b9da4aba88f76728494abc2cbc6b29f9b9fb6d8e1e6e1d6cf
cdc8c4c8d6d8cbbfbb9992adc2cbc4bdc2c8cbcdbdafb2b6b29f8f8f928f8da4cbe6f1ef
ebe8ddc4adafab8f827d7f7b798bb4d1ddd6cfcdd1d4d1c2a68d726d7f9bb2bfc6bb9f94
adbdbbbbcbd6cdb4a6a6a6b8c6cbcbcbc4bfc2bda8929fb8b8ada8bdd6e1d4bdbbc4c4b2
9689929dafaf897692c4dde6ebebe1d8d8cda87f8bb4cf00008b8276706b69728db2cdd4
d1d6d4cfd1d1d1d4d6e1ebe6dfd1bfb6b2b8c4c6af8b7d7979848f9486665d6462708daf
bfbb9b6d59575b6d7f8f9da2a6a699847f9fbfcbb47b5d5b60728b9fa6a8a8a49494a6b2
adadbdc8cdd6e4e6dfd6d1d4d1bf94798694a6b6c4d1dddfd6cfbfa296a2b2aba2947674
8492897d8499bfd4cbad8974767984a6cdd6d1dbd1b89b9dbdd6d8d6d1c2a27f70767982
929dadafa28d827b6972828dadcbd4d4d4dbe4e6e1d6c2afa8adbbc2bfaf9f96a6c8d6cb
b696828299b4cbd4c8a67b6b6d7da2bdb27f696d7b7d747d999b8b8699a4a299969da4ad
bdcdd8e1e1d8cbc2a67f706b645d5969828f89767994b4c4c4cbd6d4dbe1e6d6b8a8bfd4
ddd8bfab9b898fa6bbb6abadb8b6a28676767f8fb2c6c2a679575054607696adb4afafb4
bdd1d4cfcfcfd6dbdbd8d4d1d4d4d1d4d6d8dfd8bd967b7682969f94868f948d8b969d94
8d84796964708ba8c2d6e6e8ebefebd6a884899496a4afb6a88b7d8692abc2cdc8bda896
94add4e4e6dfd4cdcbcfd1d1d6ddd4cdcbada2b4c8cdcbd4d1d4d6d6cbc2c4c8c8bda88f
8996949dbde1ede8e6ebe4c6a6a4a48d8479726d7692b8cfd6d1cdc4bbb6b4ab92796b6d
7b94b4cdd4bb998fa2afababc2cbbfbbb2a492a4b8bfc6bfb6bbc4bda496a6b8a8948fad
cdd8c6b2bbcdd4c8a68b92a4b6b6967d94cbdfe6efefe8dfdbcda67f94bdcf000086827b
7470707b8da6c4d4d4d8d8d6d1cdcfd4d6e1ebe8dfcbb4afbbc8cbc8ad8b8b8b898f9999
8979747469728fb4bfb48f6652505b70828f94969ba29d8d8ba6b8c2ab79605d606d7f92
9d998b848b92999b928b9bb8cfdde6e1d8d4cdc8bda27d6d7d8b9fb6c4d1dbddd1c4b292
8b949b969289746d7b8f9492929dbbcdcbbb96797b7f92b6d4d8d4d6c8af9999afc8cfcf
c6af8f797272747b898b867d7f848982747f9292a6c6d8d6d4dbe6e8e4ddcfc4b4a4abb2
ada49b9db2cbd4d1c2a2898b92a6bdc4b4967d79767b99b2ab866b666d70666d89928d96
b2bbb4ada8a8abb4bbc6d4dfddd4c6b6a692827260545766798684797b9dc2cfcfd1d6d4
d8dfdfcdb8b8cdd8d6c69f847b76849db2b6b8bfbfb6a4928986828babbdaf9672544b4d
54647b9db4b8bbc2cfd6d8d4d4cfd4dbd8d6d4cfd1d1d1d4d6d8dfddcfb4927b82969b94
8f8d8b84848d948f84766d69697289a8c6dbe6ebebedebd4a684848d8fa2afbbb89d8484
92a8c2d1d1c6af8f849bc2dddfd6d1cdd1dbdbdbdde1d8cdc8b8adadbbc2cdddd8d8dbd6
d1cdd1d6d4cdbf9b8da29f9fb4dbebe8e6e8e4cba4a2a6998b7d767282a4c4cdcbcdd1c4
a692969b8b766b707b94b2cbcdaf8f8d969b9699afbbafb6b8a894b2cdcdc6a894a2afab
9ba2bbbfa4847b8fadbbb4adbbcfd8d1b29296abbbb28d7b9bcfdfe6edefe8dfddc89f7f
96bdcb0000928b847f7f7f86929fc2d4d8dddfddd4cdcdd4d6dfe6e1d4bdadb8c8d1cfc8
ad8d949b9b9b9b928489867b70748dadbbab84624d4b597086928f8f929496949db2bbb8
a8866b6062707d8b9694867d8f998d7f727084b4d4dddfd8cfc2b2a4947f706b747f9dbd
c8d1d6d6cbb69d8b8d94928f8d84747692b4b4adababbbcbcbbb96797d8ba2c4d8ddd4c8
b4a8a6a4a6b2c2c6b8a89f968b7d767d8686766970797d7d7d8fa29da4bdd6d6d4dbe4e4
dfddcfbfa68d8b949da4a2a2a8b8c6cbbd9d89929db4bfad9282868d8d868b9da6967b74
7f7f6d64798d96a2bdc8c6c4bdb6b2b2b4bbc8d1d4d1cdbda69484746260727d797d7f7d
768bafc8d1d1d4d4dbe1ddc6b4bbd1d8cdad826d6b6d7d8d9fb4bfc2bfb2a299968f8992
a8af9b8266524b494d576989adbdc2cbd8dddbd6d4d1d4d8dbd8d1cfd1d1cfd1d6dddfdf
dbcdaf8b82949b9fa49b948b898d94927f70666970798dadcfe1e6e6e1e1e1cda686797d
899dadb8b69b7f7b89a2bdd6d4c8b28b7d8dafcfd1c8cdd1dbe1dfdfe1e4ddcdbdbbb4ab
adafc6e4dfdbd8d6d1cfd8ddddd6c6a699a8a6a8b6d6e8ebe8ebe1cbafabafa89b867d84
9bbdd4cdc4cbd8cda68489999486898d8d9db4bfaf94828486898686929b9da6a89d96b8
d6dbcfa27b848f949bb4cbc8ab847074849fb2b6bdcddbd4b89b99a8b29f7b7092c2dbe4
ebede6dfdbbd947f94b8c400009f9994928b82848f9dbbcfd8dfe4e1dbd4d1d1d4dddfd4
bda4a6bbc8cdcfc4a88f99a2a29b8f8484968f7972798fa8b69f796454505b748d969492
8d848496b2bdbdb2a292796b767b7f848f9994898f8f7f6d646b86bdd8d8d1c6b499867f
7f7b7674747d9fc2cdd4d4d1c2a2868d9da6a29b8f827684adcdcbc4c2bdc4cbc8b28f7d
8b9fb4cbdddfcdafa4abb2afa49da6afafb4c2c6b49b82797d7f7d7d7f7b76797d99ada6
a4b6d1d6d6d8dfe1e1dbc8af9989848994a4a69f9ba4b2b4a8948996a8bdbb96797d9bab
ab9b8996adaf9b8b9496826b7692a4adc4d4dbd8d1c4b6b4b2b4bbbfc2c6c8bda2827269
667b9ba28d8f9486727694b8cdd4d6dbdfe4ddc4afb4c4cdc4a47b666b728292a4c4cdc4
b6a69d9b948f94a2aba2846b594d49474952607d9dafafbbd1dbddd8d4d1d4d6d8d6d1d1
d6d4cfd1d8dddfdfddd6c29d848f969da6a6a69d8b8f9d9d8d766b707b8294b6d6e6e6df
d8d6d6c6a68472748499a8afa68972707d8fadcbcdc8b4948996abbfc4bfc4cfd8dfdfdf
e4e1dfcfbdbbb6aba4a6c4e8e4d4c8cbc8c8d4dbdbcfbdadadb4afadbbd4e4ebededddc8
bfb2adafa28b869fb2cddfd1c6cddbcfad8b869299a2b4b4a4a4bbc6ad927d7979797b7d
7b7b828b8d8b96b4cfd8cfa67d7d848fa2bdcdc8ad8970667099bdc2bbbfcbbfab92898d
8f82727082a2c2d4dfe4ddd4cbad8d849bbfcd0000aba8a6a2947d7d8b96abbfcfdde4e4
dfd6cfcfd1d6d4c2a2929db2bfc4c2af998f9ba29f947d768ba2967b798296adb69d7b74
6d605d76929d998d7d70769fc2c4bda894928b8b9692847f899b9f8f82766d6666708dbd
cfc4b6a4927d797f8684827f7b829fc4d1d4d1c8af8f869dadb2ada292827f9dc4d4d4cf
cdcbc6c4bb997f84a6bdc6cdd8ddc69b9bafb6b4a89f9ba4b4c4d1d4cbb48d768494a2a6
a49484828299ada89dadcfd8dbdbdddfdfd6bda89f9d9b9492a4afa89da4a292948f94a4
afb29f7b6b82adbdbbab929fbbc4bba4999f8f7b828fa8b8c4d6e4e4dfcdbbb8bfbfb4b4
b6b4afa2866d625d6992afab99a6b29d7b7289a8c4d1dbe1e4dfd1b4a8adafb6b6a4826d
6d768492afd4ddcdb8a49d9f9f9fabbbb499745d5049444449526279929b949dbfd6ddd8
d8d4d1d1d4d1cfd4d8d6d1d4d8dbdddddbd6cbaf999494999fa4aba28b92a2a69f86747b
868f9dbfd6e1e4dfd8d6d6cfb68f72728694a4ab9f826b6b727f94b4c2c4bba8abb6bbbd
bbbdc4c8cdd1d8dddfddddd4c2b4a6998d99c2e4dfc4abafb6bdc6c8c4b49fa8bdbfb6af
bdd6e1e8edebd8cbc8b8b2b4a28b8da8bbc8d1c2b2b6c6bba292868696bdcfc6ada6bdd1
c6ad8f7b797b848d867d7b7d8d9fadbfcbc6b8a28f929babbbc6c6bdaf9979606d96bbc2
b8b4b6a89b89746d6d747d898d8fa6c6dbdbcfbba89b8d8ba2c4d80000b4b4afa89b827f
8b8fa2afbfd1d8dbddd6d1d1d4d1c2a8928b96adb6b4af9f8d8b999f9682696b8da6997f
828fa4b2bdad948d86725d7086928974626074a6c8c8bb9f898f9fabb2ab94828b9fa899
7b696b6d798ba4b6b29f92867f7b899494928d8b86869dbfcdcfc8b4948699afb8b4ab9b
8d848db6d4d6d6d1d1d1c4ad967d7994bfd1d1d4d4d6bf928da4b2b6b8b8b2b4c2cdcdc8
c4bb998ba6bdc6c4bda28d898b96a2a299abd1dddbd8dddddbcfb4a8abafb4a496a4b4ad
9b9b927f8d9badc2bfab8d726982adb8b6a894a6c2cbc4a8949d948686899db2bdd1e1e4
dfd4c6bfc6c2adadafaba48d74625b5d7099ada696afbfb294828b9db6cfdde4dfcfaf9b
a2afa6a2a4a2927f74747b8dafd8e4d8c4ada6abadafb8bfbb9f79594d49444449546b82
9296929dbbd4ddd8d6d1cfd1d1cfcfd4d6d6d1d4d6dbdbd8d8d6d1bfaba2a4a8aba8aba2
8b929fa8a69684848f99a4c4d6dddfdbd4d6dfe1d1ad82768994a6b2ad94796b6b72849f
b4bbb8b8c8d4d4c8bdbdc4c4bdbfcbcfcdcbcdc8b8a6927b7686b4d8d1b6a6afb4b6bbb4
a89486a4c6cbbdb2bfdbe1e4ebe4cdbbbfbfc4c2a68d8b9db2b6a6948b92a29b8f8d8684
99c6d1c4ababc2d6d6cbb29b9fa29fa29d968b8da8c6cdd1c2a4969ba8abb2c4d1c6af9f
a29b7d606d8ba4afbfc8c4b29f8b72697089a4b4afa2abcde6dfcfbba6a29f999db8d600
00afb4b2a69689868d8f9fadb8c2bdbbcfd8dbd8d8cdb4998d8f99adafadab997f76868d
7f66545d7f9b8f7d8ba2b2b8bfb29d8f7f6b5b64747b6b59525b79abcdcbb8947b86a8bd
bfb8a68f8d9da89d82798692a4b4bfb8a28f8f8b7d7b96a6a4a29996949499a6b6c4bfa8
8b869fb2b2a69d8f8b8fa2cbdbd4d4d1d6d6c29d7b747d9bc4d1d4d1cbc8b6948b96a4b4
c8d4c8c2c6cdc8c2c4c4afa2b4c8cfc8c29f86868b8d8f999db4d4dfddd8d8dbd6c8b4af
b6bbbfaf999ba29b868282869dafc2d4d1bb997d6b72929da29b8fa6c2c4b69989928f82
7976869fb8cdd8dbddd8d1cbc8c2b4a8a2a8b4a6896d5d627b9dada29bb6cbc4b29b8f92
a6c2d6d8cfb28f8b9fada49b9ba6ab9f8b79798db2d6e4dfcbbdb4b2b4b2afb4b6a27659
4b494747495b768d949496abc8d8dddbd4d1d1d1cfcdcfd4dbdbd6d1d6dddbd6d6d8d6c8
b2a8abafb2b6b6ad999299a6a69f8f86929babcbd8d8d6d4d1d4dfe4d8bb8b798694a8b8
bbad8d7064697d99abb2b4bdcfd8d1bdadafbbb4a6a8adb4b2a8a4a49f927d6d7086abc2
b4adb6bbbdb6ad9f96897fa6cbcdc2b4bfdde4e4e8ddc2a4a6b4c8cdb2948b96afad8f79
747d898f92928d8d9dbfc6b6a6b2cddbddd8c8b6c2c8bfada299929fc2dddfd8b88d7d99
bbbfbbc2cfbd967b8482726b8292949bbfd8d6c6af9472697ba2c6d1c6b4b6d1e8e4d8c8
bdbbbdb4a2adc80000949d9d9282868d8f949dabb6b8a499b6d1dbd8d4c8b2948b8b929d
a2a49f846662727d796652547086847b8fabbdbdb8a68f7b6960606269695d54525d7daf
cbc4ad897082adc8c4bbad9b8f949f9d949bb4bdc6cbcbc2b2a49d9686798da6ada89f9b
9fa696828da4ad9d897f8fa29b8d8b868994afd4dfd6d4d4d8d6bf9b7f797d8fafc4cbc4
b6afab9b969696a6c8ddd4cdcbcdcbcbd1d1bfa49fb8c8c8bf997d828684828f9fb6d1df
e1dddbd8d1c6bdb6b6b8bdb29d99928479747d92adbbc4cfd1c29f7f645d6974869499ab
bdb69f847b827f7264627496b6cbd6dbddddd6cbc6c8c2ab969fc2c4a67b606986a6afa4
9fc2d6d1c4a88f8692afc6c4b29d92929b9f96949dafc2bda282798fb2cddbd8c8bdb4af
afa8a2a8a692705b504b4b494d607989898f9db4cbd8ddd8d1d1d1d1cdcdd1d8e1dfd8d4
dbddd6d6d8dbdbcfbbada6a6abb8bdb8ab9692a2a69f8d7f8d9bafd4ddd6cfcdd1d4dbdd
d4b88d798696abbbc4bd9d746970849ba4a6a8adc4c8b2998b94a2998b92949b9b898286
8479707082a6bfbda8adbfbdbdb8a692868282a4c4c8bdb2c4dfe6e6e6d8bd9f99a8c2cf
bb9b8994b2bba48b797b89969d9f9f9b9fadada49fb4d1dfddddcfbdc6d4d1bba28f8fa8
cde4e4d6b284748db4bdb4b4bfb28d6b69697289a6ad9f9fb8d4ddd6c6a679667ba8cfdb
cdb6abc6e4e1d6cdc8c6cdc8ada8b80000767f82766d828f92969ba4afb29f96afcdd8d1
c8c2b8a4968d89898d9694745b6272848674595060727d7f92afbfb8ab9989766b707b76
6b666964606989adbbb29b7f6d7dabcbc6bfaf9b8986929fadbfcdd1d6d4cbc6bdab9d9b
8f767994afb2a49da6b2996d6d7f928f827274847d72767b8999b6d4dfd6d6d8dbd4bb99
847f86929fb4c2bba69da4a4a29d9b9fbdd6d6d4d1cdc6cbd6d6bf99849fbdc2b48d767d
827d7b8999b2cfdde1dfdddbd6cdc6b8afb2b4ada69f8d79706d7b94afbdc2c4c8bd9b70
575459647f9fabb2af9d86726b6b696460606b86abc4d1dde6e6d6bfbfcbc6ad8f96bdcb
a87660708ba6afa8a6c4d8d8cbad92868babc6c4b4a8ab9d9692868b9bb6cbc8ab867989
a6c2cdcbbbaba29b9694969994826b625b5959525260767d8499abb8c8dbdfdbd6d1d1cf
cdcdd4dde4dfd6d8dfdfd6d6dbdddbcdb8b2aba6abb6b8bbb89b899299927b72829dbbdb
ddcfc8c8cfcfcfd4cfb48b7b8b99a8b8c8c4a88679849ba8ada89b96a8b29f8b848f9b8f
7f7d828b8976767b72696b7f9fc6d8d1bbb6c2c2c4bba48b8484849bb4bfb6b2c4dfe6e1
ddcbaf94929fbdd1c6a28494b8c8bfab8d82929fa4a8aba69b968f8b8fa8cdddd8d8d4cb
cfdbdbc6a48b92abd1e6e4d6ad7b6d7b96abb2b4b6a484665d60769db4b4aba8b6c8d1d8
d1b8896d7dabcdd4c2a496b4d8ddd4c8c4c2cbcbad9fa80000747f7b6d6b8496969b969f
a8a49d9fb4cfdbd1c2bdc2b8afa49686848b8670606b7f8d86725d525462707b89a2afad
9f96928b868d968b76727d7b72728696968f8b8679799dc2c4c2b29b827d8fafc6d1d4d6
d8d1c4b8ad9b8f8b84747289a8b4a89fadb2926260707f827464626b6b666b7489a6c4d6
d6d4d6dbdbd1bb9d8d92a2adafafb2ab99949d9fa4a8aba4b6cdd4d6d1cdc8cdd6d6bd96
7f8fa8ad9b7d7079848689949badc6d4d8d8dfdbd4cfcbbdb2b2afadaba48d74696b768d
adb8b6b4bbb69666505259698bb2b8b29b82746b625b60696d70727d99b4c8d8e6e4cdb6
bdcbbd9d8492afbda270627089a4b8b8afbfd4dbcdb2998d8fafd4d8d1c8bfa496948f92
a2bdcfcdb289798294adbdbdab9b8f89848686827f796b666970746b6266727d8ba4afb6
c4d6dddbd6cfcdcdcdcfd1d6ddddd8dbdfddd6d6d8ddd8c6b2afafb2b4bbbdbdb8967b7b
7d7b707282a2c8dbd6c6c6c8c4b6b4bbbda6847d92a2adbdcbc4b49d8f99afbfc4b69d8d
99adb4a6a4afb6af9479747b7d797f7d6b626986abcbd8d4c6c4c8c6c8b6928d96998d8d
99a4a6abc2dde1dbd1c6ad8b828dadc8c6a2869fc2d1cbb49486999fa6adafa68f7d7982
8b9dc2d8d4d6d8dbdbd8cfb69f949fbbd8e8e8dbaf796d7992adb4b6b49f84695b627999
adada4a4abb6c2cdd1bb8b7282a6c2c2a68989abcdd6c6b6b6afb8bd9d929d00007b897d
696b82969b96949fafab9f9fb4cdd6cfc2bbbdbbbbb6ab9b969486766d76828982726054
575b64707b8b9ba49f9d9b999dabb2a694898d9284747b7974798b94897b8dadbbbdb4a6
8f92abc6d1d6d6d6cfc6bbb2a4927d726b6d7b8d9fada6a6b2ad895b5964707266626264
66696b748db4d4dbd1cbcfd6d6cbbda699a8bbc4c4ad9489848992999d9fa29da8b8c2cb
cfd4d4d4d8d8c6a286868d8b84746d7b8d999b9b9da4adbbbfc6d1d1cfcdcbbdb2b2b2af
aba8967b6d707f96a8ada8a2a8a6896250545d7094b8bdab89706b665b5b69797d7f7f84
94abbbc2cdc8b8adbdc8af8b7b8d9fab946b64748db4cbc6b6bfd4ddd1b4998d8db4dbe1
e1dbcbab96999b9da6bdd1d1b89284868494a8afa6998d8989897f6d7076727079898d84
7674798292a4abafbfd6dfdbd4cbcbcdcdcfcdcdd1d1d1d4d6d6d6d6d8dbd6c8b2abb4bd
bfc4c2b8a884707272767d8999adc6d8d4c8cdd1c4a28d9299897b7d92a6b4bfc6bbb4ad
a29fb2c8cbbb9f8ba2c4cbc4c4cfcbcdb68676797d8696947662667f9fbbc8cbc6c8c6bb
b8a48696adb2a2897f86929db8dbdbcfcdcdbf9b7b7992a8ab9b96b4c6cbbfa4898496a2
a8b4b6a88970768b9494b2d1d8dde1e4dbc6ab999babbbcddfe8e8d6a67672849fb6b6af
ada6967960627d9db2b2aba6abb6bdbbbfb2927d7f9bb2ad927d7f9fbbbfb2a8a69fa8af
968d960000727f76625b697d868b9bb4c4c4b6abb4cdd6cdc6bdb6b4bbbdb8b6b2ada496
8b867f7f7f7b6457606b7072798699a6a6a8a69fabbbc6bda28b8b968d7d8b8472748b9d
8f797486969da4aba8b6c8cfd1d1d4cfc2b6b8bbaf967d6d6b798d9999999fa8ada68969
5d647076797b7b746d6d74829dc2dbdbcbbbb6c4cdc8bfab9db4c6cdc69f7972798da2ad
a6998d848994a2b8cbd4d8d8dbdbcba6847d7d7b8276707b92a2a49f9b9696a2adb6bdc4
cdd4cbbdafafb2afadada6998b899fb8b2aba6a49f8d725b575b667699b8b89d7662605d
5760798b8b86828496abb4afa8a6a29db4c2ab847282949986707686a4cdd6c8b6bdd1db
cda8897f82a6d1dfe1ddd1bb9d8d9499a2b8cdd1bf9d94948d9bafbbb49f8d898489846d
6970767b8b99968f847d828996a2a4a6bbd8e1dbd1c8c8cdcdcdcbc8cdcdcbcbcdcdd1d6
dbdbd6c8b4abbbc8cbcbc6b89f7b6b74798494a4afb4bfd1cfcbd4ddcfa2797682767479
899babb6bba8a4a6968f9db6bbab8f86abcdd1d8dfe1d6d1bf9d969b9b9ba2a28d726472
8dafc6cfc8c4bda89d8f869bb8c4b28d76828f9fb6d1d1cbcdd4cdab7f727f8d949badc4
c2b2a28d7b7b94a6afb8bdab84727d969b92a8cfdfe4e4e6d4b28f8fa2bdd1d8dfe4dfc6
9974798b9fafafa8a6afad8d66668fbbc4c6c2b6b8c4c8bbb8b8a68f899daba68f86828d
999fabada29ba4ada8a4ab000054666454494d5d6d82abc8cfcfc8bbb4cbd8d1c8bdb4ad
b4bbbdc2c2c2bfb4a8997d74797469667986847b7d8496a4a8b2b2abb6c2c4b28b707684
84849d997b728496866b5b646d7989a4c2cfd1cdc2bbb8b4afb2bdc4bd9f7d7682929f9d
8d7f86969b94897b6b7082949b9b9b927f76869db4cbd8cdb29b94a8bbb8b29d96b2c8cb
b68664697699bbc8c2af9986828994a8b8c4cfd6dbd1b6967f797b869284797d92adbdb6
a6948b94a4adabb4cbd8d4c4b6b2b2afafb2b6b4afb4c6d1c8bdb8b8a68669606d7b7f86
9db8b89d766060605d6b7f949b94867d899da69d999b9d9bb4c6b88d6d74868d8684949f
b2d6dbc8b8c2d1d4bd9476727692bbdbdfdbd1c2a6969b9b9fadb8bfb6a29d9fa6bbc8cb
c4ab94867b7f84766d707b8999a49f948b898b8f949b9f9fafd4dfd8cfc8cdcfcfcbc8cb
cdcdcbcbc8c8cdd6dddbd6c8b6b2c2cfd1d1c8b69f7b69707b8d9fb2b8b6b8c8c8c8d4e1
d8ad7976897d706676869ba49f8d868476747b8b94928486abcbd6e4ebe6d8cbb6a6b2bd
b49f999d9986727086adcdd8d4cdbfa2928b8996b4c8bf9f868da4b8c8d1cfcdcfd1c8ad
8b767b8b949da8b6b6ad9f8f7b768da6b4b8bba686767f999f96abd1e1e4e4e4d1af9296
abc6d8dbddddd8c6a4827d8996a2a6a4abb8b89d72709fcbd1d4cfbfbfc6cfcbc6c4b694
899da8a6968f8b827d8dabb8a89fa6b6bdbfc20000404b49404044526992bdd1d1d4d4cb
c2cbd6cfbfb4aba4afbbbdc4cdcfc6bbb29d76666b6d768292998b7d7f848f9da8b8bfbd
bfbba88b6d6066707b8b9f9b7f6d79867d66595b647284a4cbd6d1c4ad96898f9fb4c8cf
c6a87f798b969f9b866d69747f7f8282767b92ababababa48f8499b8cdd4d4b6927f7f9b
ab9d8d848fafc6c29f7662667ba2c6cdc8c2b6a49d9d999999a2bbcfd4bf9b8284848f9f
a69d8f8992b4cfcbb699868b9da8adb8cfddd8c8bbb6b2adadb8c2c4c8d1d8dddbcdc4bf
ad8f7470899f9f99a2b4b6a27f696d797d7b8496a6a4947f7d8d968d99a6a8abbdcfc6a2
766d7f929499a2a2a8cfd6cdc4cbcfc6a67d69697289afcfd8d6cdb4a6a8aba8a8ada69f
9b99a4b2bfcfd4cfcbbba692868486827d7d868f9ba29f948f8f8f8f92949694a2c8dbd8
cfcbcdd1d1cdcbcbcfcfcfcdcbcbd1d8dbd8d4c6b6b4c6d4d1cdbfad9672626b768b9dab
a6a4a8b4c2cbd4dfd6ad7b7d948b705b667d999d89746d7272747470747b828da2bdd6e8
ede1cfb69f9fafbbb2948d969b927f7986a6c8d8ddd8c6a48f929b9fadc4c8b29ba4bbcd
d4d8d8cfc2bdb6ad9d7f7482898b8b92abb8ada2827082a2b6b8b6a48b7b849499929db8
d1dfddd6c8b69f99a6bfd4d8d8d8d8d4c2a48b8994999ba2afb8b8a27f7fa2c4cbcdc6b8
bdbfbfcdc8bfaf8b7f99a8a494969289828da4b2afa8b2c2c6c6c6000044474034394050
70a6cbd6d8dbdbd6d1cdcbbfaba29d99a6b2b8c2cdcdbbb2a8927266707b8b99a2a29282
868f999da8bdcdcbbda88d766b66666d7d929d947d6d79898474625b647999b6c8d1cfc2
ab8b767f99b4cdd6cbab827986929b927b665d627276848f848499adafafb2a6928ba4c8
dbdbd1a87f747b8f9986797689b2c8b88b6d697089afcfcfc8c6c8bdb4afa28f7f86a2c4
c6a4847f929badbbbbb4a89f9db4cdcdbd9f898b9bafc4cdd8e1ddcbbbb6ada4a8bbcbd4
dddfe1e4e1d4c4bdb29b82829bb2afa4a4adab9679727f96a29b8f94a6aba2948d9dabab
b2b4afafbfd1cdb2846d849ba2a29d8f8fb4c6c8c6c8c8b68b6960626984abc4cfd4cbad
a2ababadafb29f8b8494b2c6cfd6d6d4d4c8b29d9fa29fa29b94999b9f9f999999948d92
96948d8b9bbdd4d6d1cbcdd1d4d1cfd1d6d8d8cfcbcdd6ddddd8d6c8b2adc4d4cbbda899
846b5d66798fa4aba2928d96b2c8cfddd6b286869b9479647499b8b696766d767f898679
6b6d7d8996abcde6e8d8bfa2929babad9b868694999696999bafcbdde4dbc4a28d99afb6
b6bdc8bbabafc6d4d4d8d6bf9d999da4a47f6b76797b7982a2b4afa282697696b4bbb29d
89828b8f897d7989adcfd4c6c6bfad9da4b8cbd1d4d6d8dbd6c29d8f9694949babada694
848499adb2b2adb4c2b8a6b2af9f947d7d94a49d8d8f9da8abadadafb4b6bfc8c8c6c600
00494d443432394970add4dddddbdbdbd8d1c4b2a2a29f92949da8b2b6afa4a49b867974
7b8694a2adab998484929b9ba6bdcdc8b29b929692847d7b86969d927b7286968f7d665d
697fa6c2c4cbcdbfab8b76849bb2cbd1bf9b7f79828f927d645b576070798d9b8b8b9baf
b4b4b4a88f89a6c8d8d6c4997b8289928f8279798fb8cfbf927472798fb6d1cfcdcbcfcb
bfb2ab9b8f8b8fa4a48474849fb2c2cbc8c2b8b2b2bfcdcdc6ad8f8d9dbbd1d8ddddd6cb
bbafa6a2abc2d4dfe6e6e8ebe1cfbdb2afa28f92a6b2aba6a6a89d7f69728ba4b2af998f
a4aba69fa2b4c8d1cfc2afa8bdd1d4bb8d70829ba6a4998986a4bdbfb6b6bbad82645d60
647692a8c4d1cfb6a4a2a4a8abab9984829dbdcdd1d8d8d8d8cdb29badb8bdc8bba8a2a8
afaba4a4a49b9299a49b8f8d9fb6cfd6d1cfd1d4d6d4d1d4d8dfdbcdcbd4dde4dfdbd6c8
b6afc2cdc2ad9489826b5d697d99afbdb8a28b8ba2b8c4cbc4a88f94a8a48f7d8fbfd6cb
ad9284828994968b7472899499a6cbdfdbc2a8999babb4ab927f86949496abc2c4cfdbe4
e6d8bd9b868fafc4c2bfcbc6b8b8cbd8dbddcfab7f8492999d847276797d8286929d9f94
7f70728babb8ab8f7f7f8b8b796d667296c2cfc6c2bdb2a2abbdc6cbd1d8dfe1ddcdada2
9d8f8f969d96897b797d899fb2a8a2b6cbc2a4998b7d74767d849494898fb4cfcfcbc2bd
b8bfc6cbc8c8c80000474d473b32374774b6d8dfdbd8d8dbdbd6c8bbb4b6b6a89f9da2a6
a8a69f9f947f7b76797f8996a6a48f76747d84868fabbdb6a89fabb6bdb4a49b9da4a499
7f728699928472707d8da4b4b2b6bbb29b82798496adc2c8af897d7b7f868270605d5d64
747d949f898499b2b8b8b4a68f8dabc8d4cbb29b99adb4ad9f94848299c2d4c8a88b7d7f
92b6d1d1d1d4d4cdbfb8bdbfb6a28d8b8974707f9fbdcfd4cdc8bdb4b8c6cdcbc6b29692
abc8d4dddbd6cfc6b8aba2a4b4cddde4e6e6e8e8dbbfa8a8a8a29699a4a8a4a6a69b7f69
64748fa6ada48b7f929999969fb6cfdbdbcdb6a8b8cfcdb68f76798f9b968d868ba4bdbf
adabab9f846d64646d767f8db2cfd1bd9d929b9f9f9f92868babc4cbcdd6d8dbdbcfb29f
b8cbd1dbc6ada6b4bfb8afada6968f9dab9f948f99a8c6d8d4d4d4d4d6d6d1cfd4ddddcf
cdd6dfdfdddbd6cfc6c6cfcfbfa48f8b8974667284a2b8c4c4b49d969ba4a6a49b8f8d9d
afb4a896a6d1dbc4b2aba4948f969f99868ba4afadb8d6dbc6a2999dafbfc4b8a496969d
9999b4d4d4dbdddfe4d8bfa48684a2bdc2c2cdcfbdabb6cfe1e4d6ab7b7d8b929999999d
948f92969289828484827f8da6b29f7f6d707b796b62647694b6c6bdaba29f9dafbfc6c4
cbd8dddbcfbfada8a289868d928f84797479869db8b6a6b4cfd4bb9d7f6b647279747f8b
94a6cbddd8cfcbc6bdc4cdcdcbcdd100003d4447403737497bbdd8dfddd8d8ddddd6cdc6
c8c8c6c2bbb4b4bbbfbdb4a68b706b6d79868d8f8d8d7f767b7f7d747992a6a4a4adbbc2
cbcdbdb2b2b4ab9d846d7d949b96868496a4adab9d9b9d968b827f8492a6bbc8b68f7d7b
7f7f7d7b7f827b767f8492967f7f96afbbbbaf9b8b8da6c2c6b8a8a8bdcfcfc6b8a89489
9fc8d6c8b49d8f8d9bbdd6d6d4d4d1c2b8bfcdd8d1b69292997f727996bbd4dbd6cbbbaf
b8c4cbcbc2ab969bbbd1d6dfdbcdcdc2afa49fa8bdd4e1e6e4e1e1dfd4b4999699999292
9da6a4a69b846b64748b9d9d927f6d66727b7f8494b2cddde1d6c4b8bbbfb6997b69697b
868482848d99abb4b4afa28f867b70707f8f8b849fc8d4c2a2949b9992928b8692b6c8c8
c4cfd8ddddcfb6a8c2d4dbddc4a8a6bbc6bfb6af9f867f8fa29b948f8d92b4d1d6d6d4d6
d8dbd6d1d4d8dbd6d1d4ddddddddd8d4cfcfd4cdb69b8f8f897674828fa6bdc6c6b49d94
9b9d8d8d867d849bb4bba896a8d1d1b4a6b2bdab9694a2a299a2bbbfbdc6ddd1ab8692a6
b6c4c8c4bbb2a6a2a4adc2d6d8dbdbdde4dbc6b6968699b6c4c4cdc8af8d96bddde4d6ab
7b767f8d9fb2bfc4bda69babad967d8292948f94a2a28b72666466645b5b6b8299afb8ad
968b8f96abbbbfbdc8d4cdbbada6a4ada88f828999a2a2927f7d7f8fafb6adafcbd8c4a2
7b6964696969707d99bdd1dbdbd4d1cbbfc4cfd1cdcfd40000393b4042403b4b7fc2dddf
dbd6dddfdbd1c8c6cfcfc6bfbbb8bfcbd1cfc2af8d645d6b86a2aba2928b8b929b9d8970
708294969badc2c2c8cbc4bdbfbdad997d667694a6a69d99a6bbc6bba89f9f9b9b9d9992
969fafc6c4a27d727d7f7d869fa6998684848b897b7f96abb8b29f948d8f9babada4a6ad
bfd4d6d1c8b8968296bdcfc4b4afa89fabbfd4d8d6d1c8adb2c8d1ddd6bb9ba4b69f897f
8fb2cfdbd6c4afabbbc2bfc4b69f96a8c4d1d6ddd8cbc6bbaba2a8b8cbd8e6e8e1dfdddb
d6bd9d8f8b8d8b8d9da8a6a28f72646d8babb4a27f665d6064696b7082a6c8dbdbd1c6bf
b6ab9d7d645b5d728282828d9b9da6b2b8b8a48f897f76768fa49b848db6d1cbb6adb2a4
8d84848694bdcfc8bdc8d8dfdfcdb4a8bbd4dfddc2a6a8b8c4bdafa49279707d8d8b8b89
827f9bbfd1d6d4d6d8d8d4d1d1d4d4d6d6d8dfe1dfddd8d4cfcdcdbda4999da28f79798d
96a4afb8b6a286849294898f8b7b7f96afaf94849bbfc2a89fb6cbbd9f9499999ba8bfc2
c2c6cbb6927b8da2afbbc4cbcbbda89ba4bbcfd8dddddbdde6dfcfc4a89299b2c4cbcdbd
9b7d86abcddbc69d7b70768bb2c8d4d6d1b69fb4bfb29289949d9b9d9f947f7b7d726960
5b607fa2b2bfc2b8a69d9fa6b6bfbdbdcbd4c4a6969da4b4b499868ba4b4b8ad998b8286
9fb2b2abc2cfbd9b7d7270645b5d64799dcbd8ddddd8d4cdc4c8cfd1d1d1d60000443d3b
40443d497bbbd8dfdbd6d8dbd4c4c2cfd6d6cdbdaba6b2c6d4d1c4af8d645d6d92b6bfb6
a89d9fa8b2af94706674848489a6c4c4c4c6c8c6c4bb9d8470647696adaba6a8b6cfd8cf
c4b8b8b8b8b6af9f9d9da4c2cbad7d707d7d7d8dadb8a2847f82847f797b8b9fab9f8d96
9b9b96949da8a4a4afc6d6d6cfc292727d9bb2b4b4bdbdafadb4c6d1d4c8b49ba8cbd6dd
d4bda6b6cdc2b4a29dabcbdbcdb49fa2b6bbb4b6a49299b6c6c8cdd1cfc6bfb4a69fb2c8
d1d8e4ebe4dfdddbd8cbb8a692898f9bafbbb8af9674667299bdc4b28b696472797b7b7f
86a6c4cfcdbfb6b6ab9b8d76696462798d8f96a6b8bdbfc4c8bba28b867f797f94aba68d
829dc2c4bbbdc8bb9982828b99bdcfc6b2b2c8dfdbbfa4a4b2cfe1d6b4999ba6ada69f99
8f7f727276767d7f7b7b89abcbd6d8d8dbd8d4cfcdcfd1d1d4d8dfe1dfdbd8d4cdc4bbab
9ba4b6bba6827b929b968f928f84797f8d999fada4897f8996968f8b96abb2a49fbfd4c6
ab9289898fa2b8bdbdb6a68f7d7682929fadbbcdcfbda69ba4c2d6dfe1dfdddfe6e6dbc8
a8949bafbfc2bba2847682a2c2cdb48f7b707292c6dbdfe1dbbda2b2bbb294868996a2ad
ad9b898b9994847062709bc2cdd4d4cdc6bdb8c2c8cbc2bdc6cbbfa89da6a8b4af8f828b
a2b4bbb4adaba29294a2a6a4b8c2af948b8f846d595b6b86abcdd8dbdbd8cfcbcdcfd1d4
d8d6d40000493d373b4240476da8cdd8d6cfcbc6bdb2bdd6dbd8cdb89f94a2bbcdcdc2a4
7d5d597099c2c8bfb2a29fabb8b4967260697474799dc8cbc8cbcfcbc4ad7f6964647996
adaba4a6bbd4ddd6cfc4c2c6c2b8afa6a2a2a6b6bdab847984898d9db6bfa2828489897d
726d74848b84869ba8a6998d9fb2a69d9fb2d1ddd6c69976798499abb6bbb29d9296a4b2
b8ab948f9db8cfdbd8cbb4bfd1d1cdc2b2a6bdd1c2a8999fabafada88d829fbfc6bfc4c2
bfbbb2a89fa4bbcfd6d8e4ede8e6e1ddd6cfc6b89d929dabc2cfcdbfa27b667092b6c6b8
9472728b9da6a8abadb6bfc2b4a29b9d9b8f84746d6962768f9fb4c2c8cbcdd1d4c4a68d
89827d8694a4a48f8286969fabbfcbbfa2898f969db2bfbda69fb4c8c2a696a2b2cddfd1
a27d848d92949da29f9682706b6d797f82848d9fbdd4dbdbdfdbd4d1cfd1d4d4d4d8dddd
ddddd6c8b8afa69b96a8bdc4b284768d9689726b6b70768296afc4cbc2a27d768492a8ab
a4a6aba29dc2d6c8ad8b7f8b96a8b8bbbbab8b7670727b848f9db2c8cdbda89b9fbfdbe4
e1dfe1e6e8e1d1b8a299a2afb6af9d897972829bb8c8b69b8d76769fd6e4e4e4dbc2a4a6
aba2867d7f94b4bfbdb29994a2a6997d6d82adcddbdbd6d1cfcdcdd1cfc8c2bbb8b6b2ab
abb6bbb69f827b899fb6bfbbb8c2c2ab8f86929db2b4a49ba8b49f7b60607694b6d1dbdd
d8d1cbcdd4d8dbdddbd1c80000473432373b4249628db6c6c4bbafa8a8b6cbd8d8d4c6af
968996b2c6cbc49f7b665b6b94bfc8bba8968b92a4a28d72626670767999c4cdcfcfd4cf
bf996b5b60647486999d9699b4d4dfdbd6c8c2c6c4b8afada8a6a69da2a69b999ba2abb6
c4c6ab92999f9d8d79645d64646b829fafa68f869bad9f9999a6c2d8dfd1b29286848fa4
b6b6a68b7f8b99928d847f8b96a8c8d8ddd1bbbdcfd1d1cfc2a2a6b6a8a2a6ad9d92948d
747099b8c4bdb8b2ada8a4a2a2a8bbcfd8d8dfebedebe4ddd1cdc8bda49dabb4c6d4cfc2
a484727084a8bdad86747f9bb2c2c6c6c2b8b4afa29286868f8f7f6d64605b6986a8c2cd
cbcbcdd4dbd4bda28f827b79797f868989847d829bb6bfb49d8d8f9496a2b2bbb4adaba4
948692adbdcfdbcf9d72768999a2b2b4b6af997f76797f89999fa2a4afcbdbdddfddd8d4
d4d1d4d6d8dbdbdbdbdbd1b89f9d968d8b9bafb8a47f7b99a4926d595969798ba6c2cfd4
cdb4847489abc4c2afa6a69b96bbd1c6af8f8699b2c4c8c6c6b289696472828b94a4b4c2
c6bfb4a49db6d4e1dfe1e4e8e6d1b6a8a2a4abb2ada2998b7970829bb6cdc6b6a28486af
dfebe6e1d1bfaba2a29986828dabc6cbcbc8afa4a6a6967d7692b8d4dfdbd4cfcfd4dbdd
d4c4b8b4ada6a6a2afcbd1c6a689828da4c2cdcbc8cfd1bf998b96a4afa89fa8bfc6b28d
6d667fa4c6d8dfddd6cdc8cdd6dddfdfd8c2ad000054373037404b526484a4afa699969d
b2cfddd8d4d1c6ab928692abbfc6c4ab8f7d666984a8bbb8afa694868d8b84766669798b
99adc4cbc6bfbfbda67d696262626972797d7f8babd1dfddd8cdc6c6c4b6adb4b2a89f8b
8fa6afb6b8b8bfc6cbcdb8a2a4afaf9b82624d5052607994a29482899fafa8a4a8b2c4d6
e1dbc6a88f828999adb6ad9692a6b29d827b8d949dabc4d4d8cdb4afbbc2cbcbb899969b
8fa2bdbf9b827d725d577299b4b8afa2949299a2a6adb8cbd6d1d6e4ede8e1dbd1cdc8bb
a69fadbbc8cfcbbdad9f92848296ab9972748ba4b6c6cfcbb4a49fa8afa68f8b9b9f846b
5d5b54628bb6c8cbcbcbcfd6dbd8c8b29d84766b5b5b6b7d8982797f9bb2b4af9b827f7f
8294afc4cbc6b292747492b6cbd6dbcfa67b7994abb4c2c4c4bdab9b8f8b8f9fafb2b2b2
b4c2cfd6d8dbd8d6d4d4d4d6d8d8d8d8dbd8cdb296928b827b84949d8f828babb8a67b57
5262768babc6cdcfcbb894869dc2d1c8ad99948d89b2cbc4b49994adc8d4d4d4cfb68464
62798d99a4b6bdbfbfbfbbada2b2c8d8e1e4e6ebe4cbaba2a4abb2bdb4abb6af927482a6
c6d6d1bfa68d92bbe4efe8dbc8bbafa8a89d8b8fa8c4cfcdcdcfc4bdb6a48f79799dc4db
e1dfd8d1d1d8e4e6ddcbb6aba49d9999b4d8ddd1b2948f9badc8d4d4d4d6d4c4a2a2b4b6
b8ab9da8c4cfbf9f79667dafd4dfe4dfd4c6c4cbd4dde1e1d4af8b000072473437425762
799fafad9d868ba8c8e1e1d1cfd1c8af9b8f8d99a8b6bbb4a896766b768dabbfc6c8bba4
928b897f72748dadc4cfd1cbb8a8adad9f8479706b6664666b6d7484a6cddfddd8cfc8c6
bdafa8b4b6ad9b898b9fb6c6c8c4c6cbcfcdc2a89dadaf9b7f604b505b6972797b7d869b
b4c2bfbdbfc8d4dddfdbcbad8d82848d99abada2afbfc6b48d849da6abb4bdbdbbbba69f
a4a6b2b4a289828689a6c4c6ad8f7f6b50404962869d9d8676798999a2a6b8cdd1cdd1df
e4dfdbd8cdc6bdb2a6a6adbbc8cdc8bdb6b6ad998486948b747b8da2afc6d1c6a48d92a6
c2bda49fb4b896745b52526492bdc4c2c2c8cfd4d6cdc2b29b82726b5450606d74727689
a4b6b8b49b767476798dadcbd4cfb89472728dafcbd6d8cfaf897f9fafb4c2cbcbbdada8
a496a4b8bbb6b6bdbdbbb6bdd1dbddd8d4d4d6dbd8d6d6d8dbd8cbb4a6a89d8672727d82
848996abbdb28659505d697d9db8c6c6c2b49d9db4cdd4c29f827b7f89adc2bba899a2bf
d1d8dbd6d1b47d62667b929fadbdbfc2c4c4bdb2a8abb6cbdde6e8e6d6bb9f969ba6b4c6
c2bbcfcba88289b4d6dfd6c4a8969dbfe6ede4d4bbb4b6b2b6a68b9dbdd1d4cfcdcbc6bf
b49f8f7d7b9fc8dddfdfdbd4d4dde8ede8d4b8a29b96949fbfddddc4a294999da4bdcbcf
cfd1cfbb9fa8bfbdbdb4a29bb8cfc2a27b6b82b8dfe8ebe1d1bdb6bfcdd8dfdfcda67d00
0082503b3d49627996bbc2b6a48f92b2d4e4ddcfcfd4cbafa69d897f8ba8b8c2bfad8270
7486afcbd1d4cdb69b96968b7f89a6c4d6ddddd1bdb8c6c4b6a4927f7674696670747989
a8c8dddfdbd4cbc2b6a8a4b2bbb49d8b8b9db2c6cfcfcfcfd1d1c8b299999d8f7b625259
74867f6d667696b6cbcfc8c8cbd1d8dfe1d6c49f7d797b7b84969d9bb2c6cdc29f8fa2b2
b8bbb8a4999d96969696a2a696796b7484a2bbc4b299846b4b37373b506672665d667689
929bbfd4d1cdd1dbdbd6d1cfc6bbafa8a8adb4bdc8cdcbc8c4c4bfab8d7f898d898b949d
abbfd1cdb29b99a8c4c4ada4b6bfa686624d4d648db4bbb2b2bdc6c6bdaba69f86747066
5249525d6b748496abb8b8b2997672797f8fa8c6d6d1b8967f7b8da8bdc6c8c2ab8f89a2
a6a4b4bfbfada2a6a494a8bfbdb6b6bfbfb4a29fbdd8ddd8d4d4d6dddbd4d6d8dbd8cfc2
bbbfb6997b767d7f82868d9bada8845d59626670849fb4bdbdb6a6adc4d4cdb28b768294
9ba8afa89992a8c8d8ddddd4c49d72626b7b8fa2b2bfc2c2c6c8c4b8aba2a6bddbebebd8
b49994949699a6b8bbbbc8c2a68d92b4d6dfd8c4afa4a4bbdfe6d8c2afb8c6bfbfa6849b
bfd6d6cfcbc4af9d999d968486a6cbdbdddbd8d4d6dfe8ebe6cfaf9d94969fb6cfdfd8b2
8689949696abb8bbb8b8b8a694a2b6afafada28fa4bfb6997d798fbfdfebede6d6bda8a8
bbc8d1cfbb96740000825b47444d6d89a6c4c6bdb2a29fb4d4e1ddd4cfd1c8afa69b7f72
7fa4bfcdcdbb8b747d94bfd6d6dbcfb4969ba4998999bdcfd8ddddd4cdcdd6d1c4b4a692
8482726b74797f92b4cddde1ddd6cbbbafa8abb6c2bb9f868fa8b2c2cfd8d8d6d1cfcdbf
a68f827d7d7264668494897466769fc6d6d1cfcdcdd1d6dfe1d1b48b7072767b828b9296
a4bdd1cfb8a2a4b4bdbfbba4928f898b92969b9d8f6d5d697b94abb6a68d745b4434302e
303744495060707f848fb6d1d4cfcfd1d1d1c8c2bbb4a89fa6b4bdc2c8cfcdcfd1cfc8bb
a48d8d969da2a29b99adc8d1c2afa6a8bfbda496a8bbad926b4d4b5b799da69f9b9da29b
8d7d7b7f746b666252494b5b7b92999da2a6abaf9f847f8999a2b2c6d1c4b2a49b8d8fa2
9f9fa6a89f92929b968fa4a89b8b8f99948696a8adb2b4bbbba8928ba4c8dbd6d4d6d8dd
dbd4d1d6dddbcdc4bdb8b4a28d8d92948f7f79828f94846d696b6b7079899fb6c4c4bbbf
cfd8cba68684a2b6b2afa8998d92a8c4d6ddd8cbab826664727f8da2b4bfbdbdc4c8c8bf
ad9b96afd8e8e4cda696a2abab9f9b9ba4aba69f94898d9fbbd1cfbfad9f99abd1ddc8a4
9db6cbc8c6a87d86afcfd1cdc4b28f7b8ba6a49494a4bfcbc8c8cbd1d8dfe4e6dfcbad9b
969fb4c6d6dfd4a4797f8d949bafafa29b96968f8d9b9f8d8f928d8b9fb6b29d8b8d9bb4
cfe4e6e4d6b68f7f94a6b4b2947966000082705d5254708da6c2c6bfb2adabb2cdd8dbd6
d4d1c4a89b866d6b7fa2c4d1d4bf8d7484a4cbd8d8d6c49f89929b8d84a2cbd1d4d4d6d4
d1cdcdcbc4b8ad9b8982726b7076869db8cddbe1ddd6c8b8ababb4c4cdbf9b8294b4b8c2
cdd8dbdbd6cdcdcdbb9679767f7d6d6d828d84766676a4cfd8d1d1cdcdcfd1d8dbcba882
707986929b9b9b9d9db2cdd6cbaf9da4afb8bda68b7f7d8d9faba89f8d6d5b5d6d828f92
8972543d3434322b27293039475d747f7f849fc2d1cfcdcfcfd1c8c2c2bdb2a6a4b2c2c8
cdcfcfd4d6d4cfcbb89b99a2a6aba6948496b8cbc6b8a89dadab948699afab8f69504d54
667d8484827f766b625d646b706b62605b57576b92abadab968699aba6969babb6bbc6d1
cfbdb6bdb89f949b8b84898f94949694847d8f8f82797b7d76727b848ba2afb2ad9b8b89
99b6cdcfd1d6dbdbd4d1d1d6dbd8cdc2b6a6a29d999da2a8a28470727d8d99948479797d
7d84a2b8c8cdcbd1dfe1cfad969db6c6c8c4af928999b2c2d1dbd6bf9d7b6d6d7b8994a6
b8bdb4b6c2c6cbc4ad928ba6d4e4dbc6aba4b2bfc2af998b9294847b797b84899bbbbfb2
9d8d8b9dbfd1bf998da6c4cdcdaf827b9dc2c8c4b296797b96afb2a49d9ba2a49fa2b2c8
d6d8d8dddbcfbba499a6c4cfd6dbcd9f7d929d9dabc6bfa8a69f927f8699947674797d96
afbdb6a69d9da2a2b2d1dfdbc49969505d70828674625b00008d897b66627b94a2b6c2bb
afbdbfbbbfcbd4d4d1cdbfa68f7660667999bbcdcfb88d768bb4d1d6cdbfa48272797f7f
92b4cdc8c2c4cdd6cfbdafb4b6afa69b8d7b727070768ba2afbdcddbdfd8cbbbadb2c4d4
d6bf94849dbdc4cbd1d6d8dbd6cbcdd1c6a489827f746669767f766b6682b4d6dbcfcfcf
cbc6c8d4d6c6a4867d8b9ba6ababa49b9bafc8d4cdb4948d9bb6cbb88d7279a2c2cbc4ad
8d746260707d868474593b2b2e393b3230302e32425b768b8d8d99b2c8d1d1cfcfcbc6c8
cdcdc4b4a8afc2cdcdcbd1d6d8d8d6d1bd9b9da8abab9b897d86a2bdc4b8a28f9496867d
89a2a4896959595d606b6d727269594b4b505b6b7b7d70646669728ba6b8bdb8967994ab
aba2b4c4c4c4cdd4cdbfc4d4cbaf9da6a6a2968f9499968d79727d7f7b7d7d7466626469
70869ba6a8a49d9ba2abb4bbc4cdd1cdc6c4c8d1d8d8d1c8b4998d92999ba2aba8927b79
89a4b8b8a28b8f99969db6bdc6cbcbd1dbdbcdb6a8b6c4cdd1d1b89289a6c4cbd6ddd6bb
9b847d7f8b9ba6b6bfbbb4b6c2c8cdc6ab8f8ba6cddbd1bda4a2b4c2c6b6998684827266
646d7f868fa4a69b928d8f99abc2bd9f8fa2c4d1d1bb99869bb6bbb29b867986a2b4b8b2
a89d8d7f7d869fc4ddd8cdcdcfd1c8b4a2a8c6d1cfc6b89686a2aba8b4d1cfbbbbb49d7f
898d84797d7f89b2c8c8bfb4a496948686adc8c49f7049393d4d626b665b5700009f9d96
898b9fadafb8bbb6b2c8d4cdc2c2c6c4c4c2bdad8f6d5d627089abc2bda48b7d92bfd4cf
b8967b6b62666d82abc6cbbfb6b8c4d4cfb49d9fa6a29d9d96847b7676768699a2b2c6d6
dddbcfbfb6bfd4dddbbf968dabc8cdd1d6d4d8d8d1c8cdd4cdb49b8b796b6264666b6964
6992c6d8d8d4d4d4c8bfc8d8dbc6a28d94a4a8a49fa49b8b9bb2c8d4cfb692869dc2dbcf
a27986bbdbd8d1b894796b748f9da4a286603729324244403d3d30324059799fb6b4b6bd
c6d1d6d4cfc4c2c8cbd1cfbdafadbfcdc8c6d1d4d8dbd6cbb49fa4adafad998686868d9f
b2b6a899999f9b8d8d9fa48b6b62666460646266644d4039394450627f9289706b768dab
bbc2c4b49486a8b8afa6bdcbc6c4cdcfc2bdcdddcfb4a4b6cbcdb699949b9489827f7d7d
86969b896d5d59626d7b92abb6b8b6b4b4b4b2b6c2c8c4b8afafb6bfcdd8d6d4bd927f86
969fa8ada896868ba4c2cfc6a8949badb4bbc8bfbbbfbdbfc2bdb6b2bbcbd1cbc6c8b899
8db2cfd1dfe4dbb89b8d8d949fa8afbdc4bdb4bbc8cdd1c8ad948d9fb8c6c4b8a29dafbb
bdb29d867670645b5b627282929d9494a4a6a49999a8b2a69babc8d6d4c6b4a4abb6ad9d
928f8d94a4b6b8b4b2a68d747682a4cde8e1cdc2c2cdcdbba6a6bdc6bfb6a68b7d8f9da4
b2cbcdbfbbb6a6949d8d7b828d8d94c2d6d4cbbfa48476707692a29676543d373b495b66
665d6000009d969296a8bbc6c8c2b8afb4cddbdbd4c6b8adabadb4b28f69595b697b9bb4
ab8d847f8fb4c4bda284746b625d647da4bbbdbbb8bbc4d1d1bfab9d99969b9f9d8d827b
76747b899bb6cbd6d8d8d1c8c2cbdbddd8bd9999b8d4d6d8d6d1cfcfcbc4cfd8d1b89d8b
7d6d6262606269707d9dc8d8d8d6d6d4c8bfcbd8ddcba694a8b6ad968b89847f94b4cbd1
d1bb9694b2d4e1d4ab828fc4e1ddd4bd967b7d9bb6bbbbb8a682543939474b4947423734
405b82b4d1cfcdcbcfd1d8d8d1cbc6c8cdd4d4c4afafbfcbc6c4cfcfd1d4cbb6a4a2a8b2
b6b4a4968f8d848294adb6adb2bfc4b6adafaf96766669665d5b595950393234323b4757
768f8f796b7494b4c4c2b69d8b99c2c8bbafbdc6c4c8cfc8b4bfd4dbc8ada8bdd1d6bf99
8f928f929da6948b99b6b89f7b69666b798dabc2c6c6bdb6bbbfc2c8cfcbb8ab9fa2abad
b8cdd4cfaf7f707f99a6afb2a89484899dbdd1cbab969fb2bdc2c8bbb2b6bfc6bdad9fa8
c2d1d1bfafb6b8a48fa4bfc6dbe4d4ad9494a2afb4b2afb4b8bbb4bfcfd1d1c6ab948d96
a6b2bbbfb4a8a6a6a4a29f8972696d665d5d69849faba6adc4bfaf968b99b4c2bbbdcbd4
d4cdcbbfb8b2a294949f9f9b9fadb6bbb8a68972767fa6d8e8e6d6c4bbc2c6b6a49da4ad
b2b4a88f7d7f8b99a6b8bdb6b4b2b2b6bda88b8b968f8db8d4d8d1c4a8826b6d828f826b
5949423d42526b7d7f706b00008686828ba4b8cfd6cbbdb4b8cbdbe1dfd1b8a49b9da6ab
89645b606d7d9bb2af927f797f949d998f928b7664595b6b7f8fa2b2b8bfc8cfd6d4bf9f
89898f9494928b84796b6d7d99b8cfd6d4d4d1cbc8d1dbd8cfb69b9dbdd6dbdbd8d4cbc6
c8c8d4dbcdb4998682746662626b798b9db4cbd8dbd6d4cfc4bbc8d6dbcfb2a2b2b8a689
827f7d7b89adc8cfcfbfa6a6c2dbddcda68289bbdfddd4b892829dc2cbc8c6c6bda27244
3d474747423d373952799dc4d8d6cfd1d8d8dbddd6cdc8cdd4d8d4c4b6b6bfc4c4c4c8cb
d1d6cbb29b99a4b4bbb8b6a8928d847982a4bdbbc2d1ddd4c6bbb29f8469645d5450504b
3d343030303b44526b7f827469708badb8af9b84829fcbd4c2afb8c4c6d1d6c4adc6d6cd
b49d9ba2b4b8a8928f8f8999b4c2ab96a6c8c2a4847f84868da6c4cfcfcdc2b2b8c2c8cd
cfc8b69f969da4a6afbfbfb29270697d99a8b2b4ad9989827f9bbbc2ad9b9fadb4b8bdb4
b2c4d4d8c8a88b96b6c2bda699adbba8898699abc6d4c6a292a2bdcfcdbfafa6a8b2b8bf
cbd6d8c8ab948f9badbbc4cbcbbba49692969b8f7b747f76696b7fa4bbbbbdc8d4cdb494
86a4cdddd8cbc8cdcfd4d8cdb8a4968f96a4aba8a2a8bdc6b8997b727984afdfe8e8ddcb
c4c4bfb4a4968f96a2a8a6a6a49d999da6a6ababa8b4c6d1d1bb9b8d96928dafcfddd8d1
b68b6d6d8694846450494b4b5066869fa48d840000829289849bb4d4dfd6cfc6c2cbd8e1
e1d1bdab9d9ba4a68969646d7b89a2b8bdad9b8b8686828292a29b846d5954606d7d92a8
b8c6cdd4dbddc89f7d7b828b8d969d9d8d76707b92adc6d4d6d4cfcbcfd4d4c4b49f949f
bfd6d8d8d6d4cbcbcfcfd8d8c6b2947f7f796b6269798ba6bbcbd1d8d6cfc2b8afabc4d4
d1c8b6afb4b29b86898d8b82829fc4d1d1c8bbb8cdddd6c29d7b7dabd4d4c6a6898fb6d4
d6d1cfd1c8ab744039403b39373737426292b4d1dfd8d4d8e1dfdddbd8cdc8cfd4dbd6c8
bfc2c4bfc2c4c4cdd4d6d1bb9d929fb4bdbfbdb29689827d829fbbbfc8d4dfdbcbbdb2a2
896d5d57504b4b443b373230323b444d62727974706d798f998f7f767d9dc6cfbda4afbf
c6d4d4bfa8bbc4b294847d797f898b8d9d9d8f9bb2bda896abcbbd9f8d9296969fb8cdd1
cfcbbfadb2bfcbcdcdc4ad96929da6afb6bdb8a68970667992a4b2b4ada294847d92afb8
ab9d999999999fa6bbd1dbd6c4a282869f9f9b8f8da4b2a2847b8494abc2c6b2a6b4cddd
ddcbad9d9da8b8c2cbd8d8cbaf9996a8bdcdcfcfd1c6ad928f9fa69d8b827f76707b9fc4
cbbfc2cfdbd4b6948bafd4e1ddc8bbbdcbd8ddd4c2a8948d929db2b8afadc6cfb286747d
7f8fb8e4ebe8d8c8d1d4c4b29d92898992a2b2c4cbbfb2adafa4a4a29fb8d1dbd6bb947f
848d99b4d1e4e1dbb67f69708da4a28b726259576484abbfbdada600009bb49f8d9fbddb
e6e4dbd1cbcbd6ddd8cbbbafa6a6adad9b82767d8992a8b8c2c4bfaf9986797b92a6a694
826659667f9299a4bbcfd4d8dbdbcda6847d7b828b9fb4b8a686767b8494b4d1d4d6d4d1
d6d8cba8968f8f9dbbd1d6d1cfd1cdcfd4d1d4cfc4b494797b7b70666d7f9dbfcfd4d4cd
c2b2a29b949bbdcdc6bdb6b8b6a894868d96968d869bbdcfd4cfcbcdd8ddcfb692767da6
c6c2ab8d7f99c2d8dbd6d6d8cba66d3b3037343230343d49648fb8d4dfdddde1e8e4dfdd
d8cbc6cdd4ddddd1c8c8c6bbbfc4c2cfd6d6cfb8998994adbdbbb2a6948b8f9494a2b2bb
bfcbd8d8cdbfb4a48b6d5d524b4b49443d3d3b373b444b546472797b7d7970798484797b
89a6c6cdbda8b4bbbfd4d1c2afada6927d76746b6b798b99b2b29f99a4ab9f9db4c8b49d
999f9b94a4c2d1d1cfcbbfb2afbfcdcbc8b4968d929fabb4bdc6c8b48f7266798f9fadb2
ada89b8b869dbdc4b69d897974747f9fc2d4d8cdb89d8992a296897f8499a4967f767d8d
adc8d4c6b4b8d1dbdbcfb2a2a4afbfc6cbcfcfc4ab9b9fafbfcfd4cfcfcbb69996a8afab
a2947d706b7ba2c4cdbfbfcfdbcfaf928fabcdddd4bda8afcbdbdddbcdb294868286a4ad
a8b2cdcfa67f79898b99bde1e8e6d1bfcfd8cdb89f8d828494b2cbd8d8cdbbafa89b9b9b
9dbbd4d8cfb48d727994adbfd4e6e8d8ab746b7f9fbdbfb6a69272647ba4c6d4d1c2b800
00b2cbb49ba6c4dde4e8dfd6d1cdd4d8cdc2bbb6ada8abafad9f94969696abb8c4c6c6b4
9479707b8fa2a8a6967d6b728d9fa2a4bfd8dfddddddd4b699897f828da6bdc6b48f7b79
7986afd4d1d4d4d6ddddc8a89da29d96a6c6c8c2bdc8cfd4d6d4d1cbbfab866b7476726b
6d7fa4c8d6cfc2af9f948f8d8b96b8cbc8c2bbb8b4a692898d969b968d99b6cfd6d4d1d4
d8d6cbab867284adc8c4a88d8496b8d6dddbd8d6bf9664423230302e2b3447506692b8cf
dbe1e1e6ebe6e1dfd8cdc8cfd6dfe4ddd1c8bfb4b8c4c6cfd4d1cbad8d7d7f94a49f948d
8b8fa2afadadb2b6bbc2c8c8c4bdb6a68d7460524b4b47403937343740505b667684847d
89897f8f9f9d8b8fa4c2d8d8c8b8bbb8b8cbcfcdc8bdab948d928f7b707d99abbbbbada2
a4a8a4adbbbda899a2af9f92a8c6d6d4d1d1cbbfb6c2cdc8bfa68d8d99a4a8afbfd4d8c6
9d796b7b9299a4aba6a2948484a6c8cbb48f7469666b7da6c6d1cfc4b4a8a4b2c4b89f86
829499897b747b94bdd6dbcdb2b4cfd6d4c8b2adb8c4c6c4c6c8cbc4af999bafbbcbcfcb
cdcfc2a49fa8adb2af9f7f6b69728db2c6bdbdc8d6cbaf9494a2bbcfc8b2a2b2cddbdddd
cfb496897d728496a6bdcfc299848b94949bb6dbe6e4d1bbc2cfd1cbb2947d829fc4d8df
dfd1b4a2a292969996adc6cfc6b89b797f9fb4b8cde4e8d4a67d7b8dabc6cbcbc6b4896d
8bb4d1dbd6c2b40000bbd1bd9d99b2cddde4ddd8d4cdcdcdc2c2c4c2b6a8a4adb4b4b4b4
a89fa8b6c2bfb4997b6d7284949ba6afa6947d7486999da2bbd6e1e1dfddd4c4ad9b9294
9badbdc8bb8f7b7b7b8db6d8d4d1d6d8dfddcfb8afb4a88f8da6a8a29fafc4d1d4d1c6b6
a68d72667276767b8294b2c8cfc4ad92898f8f9496a6c4d4d4cfc6b6a89d92898d969fa4
9d96a2bdc8c6c4cfd6d1c29b766d86abc4c8b8a49694a2bbd6dfddcdaf8d725944393230
323b4b577299b4c4d4e6e8e8ede6e1dbd6d1d1d8dfe4e1d6cbc2b6abb2c2c8cdcfd1c8ad
9289848b8d848486898da2b6bbbbbbc2c8cbc4b6b4b8b6ab92766257524d403730292730
425b7082949f96868f9496b2bdb29da8bdcdddddcdb8afa8adc2cfd6d6d1c2b4bbc2bfa6
84849fb4bdbfbfb2afb2afb6bbab8f89a2b4a699b2cddbd8d6d6d4c8b8b8bfbfb8afabad
b2b2a8adc6e1e8dbbb8b76829499a2a89d8f7d7279a2c4bf9f766262696d82abc6c8c6bd
b6b8c2d1dbd4bf9f8f94968b89848b9fbbd1d4c6afadc2c2b8afa8b4c4cdc8c6c8cdd1cd
bb9b96a8b6c6cbc8cfd4c6a89fa6afb6b4a68970646b829fb2b2afbdd1cfc2b2a8a8b2bf
b8aba6b4cfdfe1e1d1bbaba4967f7d96b8cfd8c4a49999999296adcbdfe1d6bdafbbcfd1
c6a47d7fa4cddfe1e1d1ab9ba89b96928b94adc2bfbba686869dabadc6dfdfcdab8f8d96
a8c4c8cdcdb6866b8bb6d1d4c4afa60000bdcbb6948692b2d1e1dfd8d4c8c6c4bfc4c8c8
bfafa8b4bdc2c6c6bfafa6b4bdaf947b74767d8994969fa8ab9f86747b8d9ba6b6cfe1e1
ddd6d1cbbbaba6a6abb2bdc6b689767d8296bbd8d6d1d4d8d8d8cfbdb6b4a48479848482
8292afbfbdb49d897f79726b72798b9fa8b8c8cfcdc4af968b92969dadc4d4dbdbd4c2a8
948986868992a2b2af9689a4b2afb2c4d1c8ad846d7086949fb2b4ab9d8f8b9bbdd8d6bd
9f928b765b47403b3b404b5d768fa2b2cfebebe8ebe6dfd8d8d8dbdfe4e4d8c6b8b8b8ad
b8cbcfcdc8c6bbb4afadaba8a2949b9d8d8d9db6c2c4c4cbd4d8cbada4adafa89279665d
574d443d3429293750708496abafa28f949ba4bfc6b29dadc2cbd4d6cbb4a29ba6b6cbd1
d4d6cdc6d4d6d8cda48b9bbbcbcfcbbbb4b6b6b8b29b7b728ba4a29fb8d4ddd6d6d4d1cb
bdb4afaba6b2c6c8c4b6abb2cfebede6cda28282999fa6a6967d7074829bafad94746462
696d7b9dbbc2bbbdc4c8d4dbdfdbcbb6a29699a4ababa8adb2bbbfb4a6a6afa89b94a2b4
c2cbc6c8d1d6d8d1c4a294a2afbfc6c6cbcdc29f99a8b6b6b4b2a27f6062748fa8b8b2b4
cbd1d4cfc4bfc4c8c2b4afb8cfe1e6e1d4c6bdb8ad948ba2c6dbe1d8c6b4a696868ba2bd
d8e1d1b2969fbfcfcfb2827d9fcbe1e6e1d4b4abb8ad968684899bb2b4b4a68f929d9f9f
bbd4cfc2b4afa89fa2b2bbc4c2a87960799db6b4a6a2a80000afb8ab8f7f849bbfe1e1d8
d1c8c4c4c4c6c8c4bbaba6b8c4cbc8bfb8ab9ba4a8967f7d86867f7f8b8f8d96a49d8470
7492adbbc4d4e6e1ddd6d1cdc6bdb8b8b6b6bfc6b2826d747f94b4cdc8c6c8cfcfcdcbbd
b6af9b7d70727279828d9696948f897f7b7d796d707b99bbcbcfd1d6d4cbbba2928d96a6
c2dbdbd8dbd4b4948b848686868da2b6b69986a4b6bbbbbfc6b68d726b748b8f8b929b9b
8f8b8994b4cbc4a496969986665049474749596b7b8289a6d1e8e8e6e8e4dfd8dbdde1e4
e6e1d4bfafb2bdbdc6d4d8d1c2b2a8b6c4c4c8c2b4abb2b29b969fb2c2c6c6cbd6ddcfa6
94999da2998b7b6d5d50505047393d577692999db2af9f94999da6bfc2a48694b2bdbbbb
b8ad9b99a6afbdc2c4cbc8cddbdde1ddb68f8db4d4dbcdc2bdbbb8ada292796b70828b9b
bbd4dbd4d1cfd1cfc2b4a8968fa2c2cfc4afabb4d1ebede4d1ad847d949b9f9b8b797d92
999fa8afa48d7b706d6d7489a2afadbdcdcfd6dbdbd8cbbfb29b9bb4c6c8bdafa6afbbb4
adadafab9f9babbbbfbdbbc2cbd4d6d1c4a699a4adbbc2c6c8c8b69499afb8b8b2b2ad8b
6664708db2cdc2b2bdcfd8d6cfcdcfd4d4c8bdc2d6e4e1d4cfcdc6bfad9289a2c4d8e4e1
d4c2ad947b7b99c2dbd8bd997f86a6c4c8af8b849dbfdbe4e1ddcbc2c8bd9f8689848994
9d9f9b9ba6a69b96a2b2b6b8bfcbc4af948d94a29f8b6b5d6b8294a4adafaf0000a6b2a6
8d7d7f8baddde1d6d1c8c6c6c8c8c4b8a28f8fa4b8c8c6ab9289868d928f8f999b897976
7f7d767986897d727fa6c6cbcfd8e1e1dfd6cfcdcbcbcbcbc6bbbfc2a879626b7d9bb4bf
b6b2b8c4c6c6c6bdbbbdb4967b7274828f99928d8f99a29f948b79666b7d9fc6dbdbd6db
dbcfbba48f8694abcbdfdbd8dbd4b2949996928982899db2ab9289a8bfcfd4c8bfb28b6d
667fa2ada29292928d969fafc6c8b49f9fa2967f6654505454596b767b7b7fa4d4e8e8e6
e6dddbd8d8dbdfe4e6e1d4c4b4b2bbc4cbd4dbcfbbadafbbc4c8cfc8b8b2b6b8a8a4abb8
c2c4c2c8d6dbc69d898b94a4a49d94846b57575d574d597fa6afa29bafafa29d9d9da2b6
b28f707694a49f948f8d868d9fabb2ada6adbbcde1e4e4ddb8867294c4d6cbc4bbb4afa2
9489766d6d727d96bbd6dbd6d1cfcfcbbdad9d8d8b9dbfcdc2ada6abc6e4e8e6d6b28979
868b92928479849ba6a4abbdbba68d7b74706d7486999fb8cdcfd8d8d6d6cdc6c2a69bb2
d1d6c2afadbdc8c6bfbdbdb8afafbfc8c2b8bbc2c2c6c8c4b2a29fadb6bdc2c8c8c2ab8f
9bb4bbb4a8a2997d6b727f96b6cdbfa8abbdd1d8d4cfd1d6ddd4c6c6d8e1d6c4c2c8bdb2
9f8b8699b6cddbd8cdc4ab896b7096c4d4c29d7f747686a4a6999294a2b6cbd4dbdbcfc8
cbc6ad969284746b767b849db2b4aba8a2a4afb4bfcfcbad8676767f7f766b66707f9bbd
d1cdb80000b4bfad8d7f7f849bcbd8d6cdc4bfbdbdb6ada28b797989a2bbbd9679798286
8994a6b2ab9286847d6d6469747b7b7f96bfd6d4d4d6dbe1dfd6cbcbcfd4d4d4cdbfbbb4
996d5b667fabc4c2b4a8a6abadb6bfbdc8d6d4c2a8968b929fa6a6a2a2afb8b8ad997962
6479a2cfe4e4dbdddbcbb29b8d8692abcde1dddbddd1b29ba4a29b8d82828f9d94868ba8
c2d6e1d4c8bda27b6b8bb4c4b8a4968f8999b4cdd6c6b2adb4af94725d5959646469797b
767682b2dbe6e6e1e1dbd8d8d8d6d6dbdfdfd8cfc4bfbfc4c2c8d6c6b2b2bfc4c4cdd1cb
b4a6a4a69fa4adb6b4ada8afc4cbb6947f828b969492948f7d6660646464799dbdc4b6a8
a8a8a6a4a49b99a89f867072828d8f82767270798b9ba49d929fb4cde4e6dfcfa479667b
9dafafafababab99867d727b8b8b8f9fbfcfd4d1cfcdcbbfb2a292898da2bfc8bfada4a8
bfd8dde1d6b694868b8992948474768fa6a8adbfbda4847270706669748496b6cbcdd6d8
d6d8d4cfc6a894a4cdd4bdb2bdcdcfcfc8c6c6bfb6b8cdcdc2c4cbcfc6bdb2a6999da6af
b6bbbfc8cbbfa48b94adaf9b847670666d848fa2b4bbb4a6a4afc6d4d4d1d4d6d8cbbfc4
cdd1c8b4afb4a69992949699a4bdcdcbbfc2a67b62668db6c6af897474726d797d869da4
adbdc4d1d8d4c8c2c8cdbb9f968269595b627494adbbbfc4bdb6b6adafb8b29d89847b7f
8d8f867f8696b6d6e1d6bb0000b6cdb89686828696b8d1d6c6b2a6a29d948d898984828f
a6bbb89b84868f898496b4c4bda8a2a29270697d868b84899dc4dbddd8d6d8e1e1d8cdcd
d4d6d6d6cfc2b29f896459647fb2cdcbb8a492898f9fafb2c6dde1dbcfc2ada6abb4bfb8
afb8c2c6bda27d64667da8d6e6e6e1e1d4bda89b8f8996b4d1e1ddd8dbd1b29ba6a6a69f
928b8b8b828292adbfd4e4ddd1c4ab82728dafc4bba294897f94b8d4d4c2b4bbc4bb9b76
5d5960696d747f7d767d9bc8e1e1e1dfddd8d8dbd8d1cdd1dbdddbd8d4c8bbb8b6bfcfbd
abb6cbc8c2cfd1c4a68f8b8f9294999b99969494a4ab9f8d7d797d7f7974797f7d746966
667086a8c2cdcbbba69d9b9ba2999299927d6b6b747f8d8f898279797d828b9296a8b8cb
dfdfcfb28b72707f8f9292a2afb6b294766b6b8ba8afafb8c4c4c2c4c6cbc8bdab9b8f8b
8b9badb4b2abadb6c2cbcfcdbfa89d9fa6a4abab8f746d86a4adb4c2b49979696d6d6664
6b7b96bdcfcdd6dbd8dbd8cfbda48b92b2b6adb4c4d1d6d4cdcdcfc6b6b4cbcbc2c4d1db
d6c8b29d949dadb4b4b6c2cdcdbb9b84899d9f84665b575d6d8b9dabb2b4b6b6afafbfd1
d6d1cbc6bdb2afb8b8b4afa6a8ab9b8f96a8ad9f96a6b2afabb6a47b666482a8bbab8b7d
827d69697084a4b4c4cfd4dddfd4c4bfcbd4c29f8d79645757647992abc2d1d4d1cbc2b4
a49d9d9d99948692abafa69da6bbd1dfddc6ab0000afd1c6a8998d92a6c4d8dbc6a69999
8f89828696999badb8c4c4b29f999b8d8496b8c8c4b6b2b4a68284a2a69f928f9bb6d1df
ddd4d6dfdfd8cfcfd4d4d1cfcfc2a68b765d5b66799fbfcbbda2897d7f899299abcbe4e1
dbd4bfb6b8c2c8c2b4bbbfc4bfab8b6d7086b6dfe8e6e4ddc8b4ada2948d9dc2dde1dbd8
ddd4b6a2a8abb4b2a2948d89848da2afb6c8dddbd1c6b28d7282a2b6b2a4927f7996b8cf
cfbbadb6c4bfa684645b626b727d89868699bddbe4e1e1dfd8d4d6dfddd6cbcdd8dfdfdf
dbc6afa8abbbcbb8a8b6cdcbbdc2c2af94867f8692928d898994a2a8aba49d9482797b7f
7d726b6d767b7b726d748dadc6d1cfbda6998f8f9b998b89827669646b7b8d969b9f9b99
8f7d7b899db4c8d6dbd1bb9f867d84949f9b9badbdc4bb9472666984a6bbc6cbcdc6bfbd
c6cfcdc2b29f94948b89949fa2a8bbc4c4bfb8ab9b969fafbdc2c6c4ab847284a2b4b8bb
a88d7b7274726d6b707d99bbcbcbd8ddd8d8d8c8ab96867f8f99a4bbc6cdd4d1cfd1d6cf
bbabbbc6c8c8d6dfe1dfcfb8a49fb2bfbdbdc6cdc2a88f82899da89274625b5d697f96a6
afb6c2bfb2b2c6dbd8c4afa89f9fa4b2b4ada29da6ad9d94a2b8b49f929699999ba89f82
706d82a2b4a88f868b86726d7486a2b8cddde1e6e1d1bbb6c8d6cba6897b6d5b60728da6
bdd1dddbd6d4cfc2b2abada89f968b9dbdbdb2abb6cddfdfcda8960000abcfcdbdad999b
b6d4e1dfcdb2a8a6968d8b8f9fa6b2c4c6cbcfc2b2a69d928489a6bbbbb4b4b6a88b9bbd
b8ad9f9f9fa2b6d6d6cfd4dbddd4cbcbcfcdc6cbcfc2a284705d60667086adcbc4ab8b7b
7b7b7b8499c2e6e1dbd6c6c4cbcdc8bfb4b6b4b4b4ad997d798fbfe1e8e6dfcfb8adb2a2
9492a2cbe6e4dbdddfd1bbadafb4bbb69f867d7f8294a6a8adbfcfcdcbcdc299767d99af
b6b2997b7696b8cbcbaf9dabbfc2ab8b706466747b849499a2bdd6e4e4dfdfdfd8d4d8df
ddd6c8c2cbd8e1e1dbc2a4999db4c8b4a4b4cbcbbbb4a89989897f7d8b928b7f7d8fa8b8
b6ada69f8f84898d8f89746d7b92968d868ba2bbcbcbb8a29d9b9999949492897f7b7669
6b7b898d94a4abada2847d89a2c6dbe1ddcbbbad998d949fa8afb8c2c8cdc69d7b74707b
96bbcbcfd4cdc8c6cfd6d6cbbdafa8a699929daba4a4bfcbc6bbad998b929fb4c4cdd4d1
c4a68b869fb6bdb4a28d7f827f767072798296b4c6c8d4d4cfcfcbb496928d868d8fa2bd
c4c6c6c6cdd4dbd6bfa6afc6d4d1d8e1e6e6ddcdbbafb8c6c6c8c8bfa899948d92a6b8a6
89746d6b6b7692a2a2a8b4b2a2adcde1d8bda2999b9fabbdc2c2b8a8a8a8948fa6b8ab99
94999da4ada89f8f7f7d869bb4b6a28b898d7f72707d8fa6c4dde6ebe1c8b2b2c6d6d1b2
8f827664647d9db6cfdddfddd6d4d4cbc2bfbfaf9f9d8fa4c6c6bbafb8cfdbcba8868600
00a6c6d1cbb89fa2bdd8e1dfd4bbada49d9f9f9da4adbdcdcdd1d8cbbdad9b9282798fa4
a8a6a8ab99829fc4bdb2a8aba699a2c2c4c6cfd6d8cbbbc2cbc6bdc2cbc2a68672646469
6b7fadd1cfb48d76797d7d86a6cfe6e6dbd1c8cfd6d6cdbdafa6a2a4a8aba28d8296bfdf
e4dfd1bbaba6a49b928fa2cde6e4dddfdfcfc2b8b2adadab967b6d747b8f9d96a4bbc4b8
bbcbc6a8898da4bbc4b89676768ba4afab948da4bbbda68f7f746d727682999fafcddfe8
e4e1e1e1dfddddddddd6c8bbbbcbdbddcdad92898d9fb8b6afb6c8cdc4b6a89684897d76
828b8474727f949f9fa2abad9f96a49fa4a2847b92b4b2a2999fb4c2c2b69d8b94a2aba6
9699a292827f847972767d7f869ba4a89b847d89a4cfe4e6dfcdc2bda28f94a2afbfcfcf
d1d4cdab897f7b8299bbc6cdd4cdc8cbd4dbdbcfc2bdbdb6b2b4bfc2b8b2c2cdcdc6bfb4
a8a6adbdcdd6dfdfd4bfa292abc2c6b6a6948d9d9d8b7974798299bdd4d1c8bbb6b6ad9b
8d929da6aba2a4b4b8b6b2b6cbd8d8d6bd9fa4c8ddd8d8dde4e6dfd4cdc4c2c4cfd1c6af
9fa4afab9da4b8a48f898682797f9fab9f9da29d92a6cde4ddbf9b929dadbdd1d1cfcfbd
b29f847f929f8f8f9b9fa6b2bdb6afaba8a49999b6c2ad8d86928b7469727f99b6d4e4e8
ddc6b4b8c8d4d1b68f8279666482a8bfd8dfdfdfdbd6d6cfcdcdcbb8afb4a4afc8c6b8ad
b4c4c2a48470740000a2bfd6d6c2afb2c6d6dbdbd1b8a69d9fafb8b4afadb6c4c6cfd8cf
c2ab969286727989928b8f8d7d7b96b8bfb8b2afa49494abb4bbbfbfbdafa4b4c8c8bdbd
c6c6af8b726d6b66697ba8d1cdb28d7b7b7d7f8db2d6e6e8dfd1cdd4dbdbd4bda2949296
9fa6a496868db2d4d4c2a89b9fa29b948f8fa2cde8e4dbdbdbcfc8bda894949b89746b74
7f8b8b869bb8bdafadbdc6bdababb4c4c8b88b6b6d7b86867f7d8ba6b8b4a49b8d827469
66768d9dadc6dfe8e6e6e4e6e6dbcfd1dbd6cfc6bdbdc6c8af8f827f8692a4b6b8b8c8cf
cbbdb49f897f797b8b968d766d7076797684a2b8b2adbdb8bbb292869fc4bfa89da8bbbf
b8ab9d949fafb6a6929ba8927f7d847f727074747b8f999d96897b7f9bbfd6ddd8c4b8b6
997f7d94b2cddddbd8d6cbab8f8b898b9bb6b8bfcdcbc6c4cbd6d8cbb6b4bdb8bbc6cfcb
c6c4c4d1d6d4d1cfc8c2c2c8d4dde6e8e1cba692b2c8c6b6a29da8bbbfaf9479727d99c4
ddd6c8b8b4b8b4a29294abc2c8bdada8aba69da6c2cdc4c4ad8b92bfdddbd6cfd1dbdbd6
d6cfc8c8d1d1bfa69dafc8c8ab9dafa69994968d7b7d9fb2a6a2a4a496a2c2dbd6b4999d
a8bdd1dbdbd8d6c4ad8f746d74797482999f9fa6b6c2c6cbd1cfb8a2b6c2af928692927f
70747d94b2d1e4e4d8cfbdb8c4c6c6b28d7b74696984adcbdbe1e4e1dfdbd4cfd4d8d4cd
c8c4b4b4bfb2a49d9fa49d8b7d726d0000a2bbd6ddcdc2c4cfd4d6d6c8ad9f9d9db4c6c8
bdada2a2adc6d8d4c4af9fa49b7b6669797d827b727f94abbfc2b6a694848294afbbb2a6
9d999babc4d1c8c2c6c6a8867674726b69729bc8c8b4998b7f7b7d86a8cde1ebe6ddd8d8
dbddd6bb9986828994a2a69b867f99bdb89b7f7f949f9b969294a8d1e8e4dddbdbd4cdb6
927f868b7666667986827682a2bbbbb4b8cbd1d1c8bfbbbfc2af8262646b7274767f99b4
bbaf9d9692948d72646d849badc2dfe6e6e4dfddd6c6bbc6d4cfcdcdc4b6adafa28b797b
828b9babadadbfcbc4ada8a28f7b7486a2afa48b70696966667696b2b6bdcfcfcbbb9d8b
96b6bbafabb8c8cdc6b4a29ba8bbb89f8f9fad8d79767b7b706970797d868b8f94948986
99a8b2b6bdb8afa48974707fa8d1e4e6dfd4bda89b99948f9bb4b8bbc2bfb4a8adc4cdb8
9f9fafb2b2b8c4c6cbcbcbd6ddd8d4d1cdc6c8cdd6e1e8e8e4c29989a2b6bdb8a4a6c2cd
d1c8ad8470798fc2dfdddbcdc6cdcdbda49fb6d1dbd4bda8a6a4999fb4bba89f8f7b7fa6
cbd1c2b2b4bfc8cbcfd1d4d4d6cfbda69badc8cdad99a8aba296998b747294adb2b6bdb8
a296a8c6c6afa4b6bfd1dfddd4cfcfc2ab8d726b6b6264728692949fb6cbd6d8dfe1cfaf
b4bbb6a69d9fa29689848ba2b8cfdfdbd6d8c4b4b4bbbfb2927469696d7fa6cfdfe4e6e4
e1dbcfd4dde1dbd8d1c6bfb8b2a296928682848989867b00009fadc6d4d1cbcbcdcfd1d1
c6afa4a6a6b8cfd8cbb69d8696bdd8d8cbbbb2b6ad8b645b69747b7674848d9dbbbdaf9b
86747289b2c2b8b4aba8adafc2d1cdc8c8c49f7f797274726d749fcdd1c8b29b867b767b
8dabcbe4ebe4dbd4d4d8cfb6967d767b8b9da6a4968f9bafab92797b8d9fa49d969fb8d8
e8e6e4e1dfd8d1bb968689897260627684796979a2bbbdc2cfddddd8d4cdbfb8b2a2846d
6b6b747f8994a6bdbba286848fa2a48469697d99adc2d8dfdfdfd6c8bdb8bfc8cfcbc4c4
bfb2abb6b69b7672798699a4a4a6b4bfb294969f94767496b8c2b4966d6974706d7b96a6
b2bfd4dbd6c4a88b849db4b8bbcbd6dbd4bb9f96a6b2a89494a8ab8d7b7f92997f667484
89868689949f9999a6a8998999aba89484847f799bc6dbe4e1cfb2a4a4a8a89b9db6c2bf
bbb4a69494afc2b6a299a2a2a2a6adb4bfcbd4ddddd8cfcdc8c4c6cdd6e4ebe8dbad8684
94a4afb6a6adcdd6ddd1b68b747b8dc2e6e6e6d8cdd1d4c6ada6bddbe1d6c2afafada8ad
bdbb9f8d847d7989a4afa29499a6b2b4bbcbd8dbdbd6cbb49d9fb6bdab9ba2a2998d8676
697089a4bbcdd4cbab8b9bbfc2b6b4c4cddde6dbcbc4c8bfad947f867f6662646d7d869f
c6d6dbdde1e1d4b6abb2bdbdb4abada8a299a4bdcbcdd6d4d4ddcfbbb4bdc8bb9672646b
7486a6c8dde6ebe8ddcfcbd6e1e1dbd8d4cdcdc4b2a8a4997d6d7994a2a4920000969bad
c4cfc4bfc4c8cdcdc6b8b2b4b6bfd4e4d8c4a27f8db6d8ddd4c4bbb6ad946b5459606969
6670798db2b4a28b7b6d667dabc4c6cdc4b8b6b6c2cdcdcbcdc6a682706b747b7d89afd6
d8cfbda48d766d727989b2dfebdfd6cbcdd1cdbd9f7f72798d9fa8adafb2b6b4a68d7d86
99adb8afa8b2c8dfe6e4e1e1dfddd8c8a8948f8b76625d707b74667292abb6cddde4dfd8
d6d1c6bbafa2968679768292999fa6aba88d74798fabad866b6b7992abbfcdd4dbdfd8c6
b8c2cfd8ddd1bfaba4a2adc6c8af8270768da2a8abafb8bbab9292998b6d6d99c4cfbd99
70727f7b768299a4adbbcfdfdbc6a482768ba8bbc2cfd8dfd8c2a499a29986868f9d9d8f
8d9db6b68d6d828f8d89868b96a69d9fb6b2967f8b96968b8d968f798dafc4d6dbcbab9b
a2b2bfad9badbbbfbbb4a89b96adc6c8bbaba49fa4a49fa4b4cbdbdfdfddd1cbc8c4c8cd
d4dfebe8d4a68b92999fa8ab9d9fbfd4d8c6a4847d8492c6e8e8ebe1d4d1cdbda6a2bbd6
dbcdbdb8bfbfbbbbc6c2a48f86847d84949f9b94969fa6a6afc8dbdbd6d6d6cbaf9fa8b8
bdb4a492867d726669747f9bbdd6dfd6b48994bdc2bdbfcdd6dfe1d8cdc2bdb2a89d9ba8
9d74625d647486abd4dfdfdfe4e6d8bda4adc2c2ada2afb8b6abafcbd4cdd4d1d1dddbcd
bfc2c8bd94766d76869bafbfcdd8dfdfd1c6cfdbe1dbd4d4d6d4d1c6b6b4af9d7b697da2
b4bba600008b8d9fb6c2b2abb8c4c2bdbfbbbdbdbbbfd6e8ddc69f7b84b2d6ddd6cdbfad
a2946d4b4047546064647499b8af9276696262749db8c4cfcbc2c2b8b6bdc6cbcdcdb68d
6964798f9496b2cfcfc4b6a2897269707684afdbe6dbd1c8cbd4d4c8af897686a2abadb2
bfcbcdbd9b828299abbbc6bfb8bdcddbdfdfdbdddfddd8c8af9f948b79645d6976797476
828fa4cde4e6dfd8d8d4c8bfbbb8b6a6897f8b999fa6a28f897f767b8fa8ab89767b8289
9dbbc4d1dfe6e4d6c8c6d6e4e6dbb88d848ba2c2c8b28b727b92a4adb2b6bfc4b8a4998d
7964698db8c8bb9d8482847d79899fa4a4afcbdddbbf9974697b9db4bfcbd4dddbc4ab9f
9b8b7b848b8d898d9babb4a889768d99968f8d8f9ba69ba2bbb4998999968b89949d9486
94a8b4c8d1c8a68b8b9fb4a48b92a8bbbdbdb6ada8bbd1dbcfbfb2a8aba89da2b8d4dfe4
e4e4d8cdc8c8cdcfd6e1ebedddb89fa2a2a6afb4a2949db4bfaf8f7f828b96c2e4e8ede8
ddd1bfa8948d9db6c2bfbdc8cdc8bfbdc4bd9f8b868f99a2afbbb8b2aba8a8a8afc2d6dd
d4d6d8d4bfabafc6d1cbb4948b8b7f726d797d96bbd4dfd4b2827fa2afb6bfd1d8dfddd4
cbb69f999da2a6afa6897969697b94bbdbe1e4e4e8ebdfc4a6a8bdbd9f92abc4c6b2a8bb
c6c2cfcbc8d8e4dbc4bbbbaf8d76768496a2a8afadadb6c2bfbfcfdbdfd8cfd1d8d8d1c4
b8afa68d7064799dbbcdbb00007f869fb4b6a69da4b2b4b6bdbdc2bfb4b8cfe1d6b88f74
7fa2c6dbd8cfbd967d76593b2b34476d898499b8c2b69674626066748fa4abb8c4cdcdbb
a49fb4c8cfd1c49b69627f9da49ba4b8bbb4a694796666707b8ba8c6cdc8cbc8c8cdcbc2
ab897d8fadb6b2b4c6d4d6c4997b84a4b6bbc2bbb4afb8c6d1d1d1d1d4d1cbc2b6a8998b
7f70646d828d8b847f8296c4e1e6ddd8d8d6cdc6c6c8cbbda292949fa6b2ab94898d948b
96a8ab968f99968484a2b2d6ededebe4dbcfd6e1e1dbb682767b8fadb6a27b6d7b8f99a4
afbbc4cbc8bbab8d6b5d627b9db2b6afa492827d7f96ada8a8b2c4d1d1bf997466728da4
adb6c4d1cdb49d9b948d8489898686929f9f8f867d82949b9b9b99999fa4999fb6ad9fa6
bfb69d92999d9ba2adb8bbbbc2bb9679707b8b897d7d92abbdbdb8b6c2d4dfdfd4c6bbaf
aba29b9fbbd6e6e8e8e6dbc8c2cbcfd1d8e6f1f4e6c6ada8a8b4bfc8bda4929dadab968b
8f9da2bdddebede6dfd1bda48d797689a6bdcbd4d4c8b8b6b2a48d848da4bbc6cdd6d8d4
c6b8b2b4b2b2c2d4d1d6dbd6c2afb2c6d1cdb89f9ba29b8270747d92adc4d1cba87b6d84
9fadb4c2c8d4d8d1c6a8848292a2a8afafada68d7986a2c6dfe1e1e4e6e6d4b6a69fa4a8
968fa8c6cbb29f9fa6abbfb8b4cfe4d6b6adb4ab89767f96a4a8a69f89798292a2b4c8d6
d8cfc8cfd8d4cdc2b29b8b7b69626b8db6d1c800007f8dabbdbdb4a2949fadb8bdbdbfbb
adafc4d4c6a27d70768db4d6d6c4ad7450493b30292e4779a2a4b6c8c6c2a88476797d7f
898f96a4b8c6c4b29b96a6b8c6cfc49d6b647d9ba49fa2b2b6b2a69276696b79848f9da8
a8abb8c2bdb4b2a8947f7d94adbbb6b4c4cfd4c4997b89a8b6b2aba6a29696a2abadadad
b4bdbfbdb8b6a48f8f7d707d9fab998f89929fb8d8e6ddd8dbdbd1cbc8cbcdc2afa4a2a4
a6b4b29b96a4ada2a6b4b4a8a6ada68976849bd1f1efede8ddcfd4ddd8cfad867b828f9f
ab96706b7682848fa6bfc8cfcdc6bd9d7260606b7d9fbbc4b8a2897f94adb8bbc2c8c8cf
cfc29f7f727484929ba6bbc6b8a494928f9294998f868692998970707682969b9fa49fa2
a6a2999fafa6adc8dbd1b2928f9da8b6bfc6c4afa89f7d707276767b827f8494adb4afb8
d1dfe1dbcdc4bfb4a89d999babc8dfe8e8e4d1bfbfcfd4d4dde8f1efdfc4afabb2bfcbcf
cdbba8abb8b8aba4abb4b2b6cfe6e8e6e1d4c2a68d746679a8cbd6d6d1c4b2a896827b7f
99b8cdd4d6dfe6e4d1bdbbbdb6afafbdcfd4d6d6c2b2b2bfcbc2afabafb4ad9479727686
9bb4cbcdb48b727f9fb6b8adafc2d1d4cfaf7f728299a8b8bfc6c8af8f8da2cbe1e1e1e4
e6e1c8a8a4968686898fa2bfc4b4a49d9996a49f9dbdd6c8a4adbdb8947f8ba6afb2ad99
79666d768ba6c6d4d8d1cdcdcbc2c2bba6897b767064627ba4cdcd0000899bafc2cbc4ad
9ba2b2bbb8b4b8bdbbbfc8cdb6997d706d82add4d1b6965d3934292e302e426b94abc6d1
cbcdb89b9ba29f92898b99b2c6c6b29f9b9d9fa8b6bfb48d696d7f8f99a2b2bdc2b8ab96
7f767f8b929499999699a8b2afaba8a28d828299b6c4bbb2b8c2c6b489768da4afa49496
99969b9b968d8b92a4b8c6bfb4bfb49d967f748bb8bda294949fa4adc6dddbd6d6d8cdc6
c4bfbdb4a89f9f9f9dabb4aba4abb4b4b6bdbfb2adb2a689727486c2edefede1d1c6cdd4
cfbda28f8d9ba2a4a8997d7d827f7984a2bfc6cbc8c4c2a882726d747f9dbfcdc2b49d8b
a8c2c8d1d8ddd8d6d1c6a68b7d7f8b949fb4cbcfc4b8ab9d9d9da4afa896868982706064
72829ba4a8a6a4a8a89d9499a49fb2d4dfd4ad7f7b92afc6c8c6bfa6998f7b7f8b897b7f
8d89828294a2abb8d4ddddd1c4bdb8ada29fa29b96abcfdbddd6c6c2cbd8d6d4dbe4ebe4
cfb8adafbbc6cbc8cbc6bdbdc2bfb2afbbc6bfbdcbdde1e1e1d8c6ab8f797286afcdd4d1
c8bfb6a889707284a4c2cfd1cdcdd6d6cbb8b4b6b6bdb8bdd1cfcfd6c6bdbdbbbbb2a6af
bfc6bdab8f74707992b8d1d8cbab8d8b9db4b49d96a8c4cfd1bb8b727b9bb8cbcfd1d6c2
9d8b9bc6e1e4e1e4e4ddc4a69f9684797b828fb4b8afb4ad9f8d92949bb2cbbfa4b6cbc8
ad8b8da6afb4ab8f74697079849bbdd8e1e1dfd8cbbdbfb494827b8484746976a2c8cb00
009299abbdc8c2ab99a2afb2adadbdcdd1d4d4cbab8b796d6b7fabcfcfb28457392b2227
2e29304974a6cbd4cfcfbda2adb2afa8a4a6b4cbd4cdb49d9da8a6adb6b49f7d6d798486
8fa8bdc4c2b4a4927f8499a2a6a6a6a29694a2a8abadafa492898ba6c4cbbba49da4a48f
7270899da89f8f949ba2b2b6a8928b99b2cbd4c4b2b8b69f89747084abaf9d96969b9d9f
b4cfd6cbc2c4bfc4b89f999b9692949b9fadbfc8b6afb6bfc2bdb29f9da29984747484b6
e1ede6d4bfbbbfc6c2b29d96a2b2b4a49d999499998f8999ababa2a6b2afafa69686868f
9bb4cbcfc2b2a29fbbcfd6dfe1e4dfd4cdc4ab92868d9ba2adc8d8dbd4d4cdc2bdb2b2c2
c2ad8f7d6d62606d7f8fa4adadadadafada69f9d9f9bafc8cdbf9d766b82a8c6c8bdad96
9492848d969282828d8f84797d869bb8d4dfdbcdbfb8ad9d969da6a28d8da6b4b6b8b8c6
d4dbd4d1dbe1e6d8bbafafb4bdc6c6bbc2c8cbcbc6b8a8adc4d1c8c4c4c8cfd8dfd8c8ab
8f868fa2b8c8cdc4bbbbbbab84666d84a4bbc4c2b4a6abb2b2ada4a6b6c2c8cdd4c8c8d4
cbc8c6b2a49b9babbfc8c4bb9d7469708bb8d4dbcfbba6999ba8a6928b94abbdc8bb9679
84adcfdbd6d1d4c29f8d9dc8e4e6e4e4e1d8c2b2ada8927b72798badaba6b8b6a496a4ab
a8b2cbcdbfc8d4d4bb92869da6a899796d79898f929bbbdfedebebe6d8c6c2af8f7f8496
9d8d7b84a6c4c200008b94a6bbc2bba28f969b999ba8c8dbdbd6d6cda67b64667082a4bf
c6ab7b573d2924292e27222e5b9fcbd4d6d4bb9ba4abadb6c4cbcdd4d6cdb69b96a4a8b8
c6bfa27d707b84828dafc6c8c4af99847684a4b4bbbbb8b2adadb4b2afb2b6ab968d9bb8
cfcfb8998484847469728b9fa4998d92949db6bfb49f9ba4bbd4d8cbb4aba6947b6b6b76
898d8b8d92969696b2cfd1b8a6afb6c2b6928486868b8fa2b8c4cfd8cdbdbbc6c6b69f92
8d8986847d7d8fb8dde8e1cdb6afadababa8a69fa4afad96868b9fa6a69f9b9f9d867082
999299a6a89496a2abc2d1d4c2aba2b2c4cfd4dde4e6e1d1c4bbad9b8d949fa4adcddddd
d8dbdbd8d1b8b2c4c4b2947b6b626d89999fababa8a6a8b2bbbdbbb4adafbbc2b4a68f79
707b99bdc4b2998fa2ab948d8f8d7d76828d82706d7286a8d1dfd8cbbfb6a49294a6b2ad
947d7d8999a4afc2d1d8d1d1dbe1e6d1aba8b2afb4bbbdb8c2cdd6d4c6afa2abc4cfc4bf
b8afb8d1e1ddcbb2a4abb8bfc2c2b8ababb2b2a47f6669768da4aba49b9d9dafc2b8a2a4
c2d1d6d4cbbfbfcbcbcdc6a89486869bb4c8cbbd9b746b707f9fc4d4cfc8bbaba2afb4a6
9f9b9ba4afab927f8fbbdbe1d8cdc2af998fa2c8e1e4e4e4ddd1c6c6c8b8997f74798fab
9f92a8aba2a4bbbfb4bdd1dbd1d6dbd8c299828b9496846b728ba2aba8afc8e8f6f1f1e8
dbc6bdaf9b8b94a8af9f8d8fa4b8b200007d8fa8c2cbbba4969286828fa6cde1ddd8d8d1
ad7d606979848d9ba69f7f624732302e2e292024509bcbd8dbd6c29f92929fb2cbd1cfd4
d4c4a48d8b96a2b2c4c4ab7f6b747f828ba8c4cbc2a89282727fa6c4cfc8bdbdc2c8cdc2
b4b4bfbfab96a8cbd8d4bfa8928b84766d74899d9d948d8d898da4ada8a4abafb8d1d8cd
b89f928676747d868d8b8689929ba2a8c6ddcfaf9babc2cdc2a28b827d8694adc6d1d6db
d4c4bbc6bfafa6a6997f7b7f7f7d96c2e1e8e4d6c2ada29b9fafb6ad999492827b8496a2
a6a49d847064607f968d949da49fa2a6afc8d6d1c6b2abb8c6c8c4c6d1dfddcfbbada899
89929f9fa4c4dde4dddfe1dfd1afa2b8b8a486766d6d7fa2adadb8b2a69f9fafc4cbcdcb
c4bfbdb49b9292897f7f9bbdc6bba8a4b4bfab8f7f7b6b66747f726462667296cbdfdbcf
c4b6a292a4bdc8c4a682767f94a6b4bfcfd8d6d4d8e1e1cdaba6a69da2a4adb8c4cfd8d4
bda6a6a8afb4aba8a499a6c8e4e1cdbdc2cfd6d4cbb8a29496a2a2967f72706d79898f8f
9badafc8ddcbafb2d6dfe1d8c2bbbfc6cfd4cbad9686828fb2cdcdbd9d7f7979798bafcd
d6d6cfbda8b6c4bdbbb2a48f8d8d86869bbfd8dfd4c4af9f8d899bbdd8e1e1d8cbc4c8d4
d6c29f8974768b9b8d84999b9fadbfbfbdcfdbdbd8dddddbcdad8d7f84897b707f9babaf
afb8d4e8efefebe1cfbbb2b4afa2abbbb69f8d8b8d968f00007b92afc8cdb8a49b94847b
899fc8ddd6d6d8d1b4897079848272708299967954423d372b2b2224478bc6dfdfdbcdaf
8d828fa8c4cbc8c8c8b68f7f89969da4adb2a47f606472798294afbfaf9689867d89b2d4
dbcdc4c2c8cfd6c6b2b2c4d1bf9fabcddbd1cbc6b49f8b7d767d8fa2a8a69d897d828b94
9ba8b2b4b4bbc6c8b69b847f7d8fa4afafa69b949fafbdcddde1cbab9bb2d1ddcbad9484
7b849bb8cdd6d8d6cdbdb6b8a69fadb29f7d6d727986add4e6e8e6dfcdb2a6a8b2bfc6bb
9482898b96969499a2a296745b545979949992868996a6adb4cdd8d1c4afadc2cdc8b8ab
a8bbc8bda28f8d827b868f8d8ba6d4ebe6e6e6dfcba8a2b6b699766d6d748babb8bbc6c2
bbb4abadbdcbd4d4cbb2a2998d8d999f928da8cdd4cdc6bdbfc2b692746b62626b706962
64667294c4dbdfd6c8bba69db8d4dbd8bb8f79869fafbbbfc8d4d6d6d8dfdfcfb8a89b8f
969ba4b4c2cfd4c4aba4aba294928f8f898694bbddd8c6bdcddde4e1d6bda2928d928f86
7f7f7b7b7d828492a4b2b2cbdfcdb8bddde4e6dbbdbdcbd6dfe1dbcbb49d9299b8d1c8b2
998d8984899fbbcfd8dbd4c2a8b2c2c4c2bfb2967f798496afc6d1c8bdbbafa4928292b2
cfe1e1d1b4abb8cbcdc2b4a6847b928982899b9da6bbb8b2bbd8dddddfe1e4e1d6bb9476
797d79798fa6adafabb8d8e6ebe8e1dbcdb8afb6bbb6c2c6b2927b797274720000869baf
bdb8a699999d9b949299b4cbcbcfd4cbad948d92968262607496a88d64493d372e2b2729
3b6db4dfdfddd1b489798dadc2c4bdb8b6a27f7d96ababadb4b4ab896059647682899ba8
947f7d86869bc4dbd8cdc8c6cdd6d6c8b6b6cddbcba8abc6cfcdd1d8c8b49b7f798ba2ad
b8bfb492828b8b99a8b6b8bfbdabadb6b29d8d8b94b4c8cbc8bfafa6b4c4cfdfe6dfcbab
9fbbdde6d1af9489828fa8c4d4ddddd1bfb2a494848ba6a48d706b768499c2e1ede8e6e4
d1b6afbdc4cdcfc29b8692a8b4afa8a4a29d9b8b745b576b848b7b6d747f96a4adc6d1cd
c2aba6bdcdc6af9f99a4b4a284706b6b6d747672728bc4e6ebebe6d8c2adafbfbb997066
6d7689abbdbfc8c8c6c2afa2a6bbcfd6c8a28d969b9999a29b99abcbd4d1cdc2bbb8ad8d
7069666b727976767b7986a4c4d6ddd8cdc2b4b2cbdfe4e1c8a2848da8b6bfbdbfc8d4db
dde4e4d6bda89d969b9da4b2c2cdcbb49f9d9f92827f86867f8496b6cdcbbdb8c6dde8e6
ddc6b2a8a4a49f9492928f999f9d99a2aba8adbfcdc2b4bddbe4e8dfc4c2d1e1edefebe1
cfb6a29fb8c8b69b8d92928d99c2d6d8d4d1cbb49fa8bdc4c6c4bfaf8f7b8dafc8d1cfb6
abb8bbb69f828bb2d1e4e8d8b49b9ba8afbdc8bf9986928484929f9dadc2afa4b4d6dfdf
e1e4e4ddcdad8672797b767b92a4a8afadb8d6e4e6e4e1ddd4c6bbbdc6cbcfcbb4947b72
6d6d6d00008f9babafa6928b9bb4bdb8af9b99a4b4c6cbbd9b9bada8a284646686a8b499
6b4b3934322e2e2e34549dd4ddd8c8ab7f748fb4c4bdad9d998d797fa2bdbdc4cdcbbd94
625264849d9996948472707b89afd6ddd4cbcbcdd4d4cfcdc6c4d1dbcbaba8bdc8cdd4dd
cfc6a87f7289abb8c4c8bd9d96a8a6afbdcbc8cfcdb29fa4b2ada49fa6c2d4d4d4c6b6ad
bdcfdbe8e8dfcfb4adcbe4e8d6b29b94929db4cdd6dbd1bfa499927b6d7d948d7b707b94
9fa6c4e1efebe6e1d1b4b2c2cbd4d1c2a28d9bb8c2bfbfb8afa6a8a68f6d5b6070706464
7984898b94adbfc2b8a69dadbdb8a29ba6b8bdab8b7269696b7276747286b4d8e4e1dbcf
bdb6b8bfbd966b666d727da2bbc4cdc8bdab99898ba6c8d4c4a499a6a89d9294969499b2
c4d1cfb8a8a69d89797d899ba49d928f9494a2b8c4cdcbc8cbc6bdbbc8dbe1dfcba6848b
a2afb8b8bdcbd8dfe1e6e8d8b8abadafb2a49da6b6c2c4b69d8f948d847f7f82868fa2b4
bfbfb6b2bddbe8e1dbc4b6bdc2c8c6bfbbb4adbbc4bfb6b4b2abadafa8a2a6bbcfdfe4dd
cdc8d6e4eff4efe4d6c4ada2afb8a4928f96968d9bcbdfddcfc6b49d969dafbdbfc2c6bd
9d8492bbd6dbd1b4a6b8c4c2a4828bb6d8e6e8ddbd9f92929bb6cfc8a486847f92a6a49b
a8bda496abd1e1e1e1dfd8c8af8f76748484797989969fafadb6d4dfe4e4e4dfdbcfc4c6
d4d6d6cbb8a68f7f84847b00009499a6b2ad94869fc6d1cfc4a88d899db8c6b492a2bfb4
a2846b7296b6b69972503b343434302e325094cdd4cdbb9d76708badbbb29b7d797b7279
94b4bdcbd4d4c492574d668da89f92897b6d646d86b8dfdbd1cbcdd6d8cfc4cdd6d1d1cd
bda6abbdcbd4d8dbd1c6ad897484a6bbc6c8bd9fa2b8b2adb4cbd1d6d1bd9d9dc2c4b8ad
abb6c8d4d1c6b4a8bdd6e1ebe8dfd1b8b8d6e6e8d4b8adaba6abbdd6dbd6bf9d89898d7f
707486847b7989a6b2abb6d6ebe8e6ddc8adabbdc6d1cfbd998699b8c4c8cdcbc6bbb2ab
99796460646466748d998d7f828da4b2aba4a6b2b6a68f92a8bfc4bba284746d74899b96
8b9badbfcdd1d1cdc8c2bbb8b4926b707674748fafc2c6bfa8847474829bbbc6b6a6a4a8
a6a2948b8b868496b2cdcfb2a2a2948f94a8b8c4c6bdab9f9fa6b6c6c6c4bbb4bbb8afaf
b6c2cfcfbb997d8496a2afb8c4d4e1e4e4e8e1cbadb2bfc8c8ad9294abbfc4bb9b899699
968f84828f9d9b9fadb4b4adb4d8e6ddd6c4bdc8d1d6dbdbd8cdc4cdd6d1c6bdb4a8a296
898dabbfc2c8d6dbd4cfd6e4ebedebddd6c6af9fa6ad9d9296a49f8b8bb4d4d8c8b8aba4
ada49fadb4bbbdbda88d8bb2cfd6cba696abb8b49b848fb6d8e1e4d8bda6968b89a2bfbb
ab998b849fbbb2a4abb8a494a4c8dde1ddd6c6af9b827479898b827d828d9ba6a8b6d4e1
e6e8e8e4dfd4c8cfdbd6cbbdb6afa49ba29f960000a8a4adb8b49b92abcdd6d4c8ab8b82
9dbfcdbb96a4c2b49d7f70799dafa28b7966503b32322e2b324984b6c2bfab8b6b66829d
a89f8669646d6b748dadbfcbd1d1bb824b4b607d999482746b645d6684bbddd6d1cdcdd8
dbcfc6cbd8dbd8c6ada6abbfd1d8dbd8cfc6b69f898499b4bdbbaf9ba2b4ad9d99afcbd6
d1bd969dcfd1c6b4a499a2bfcbc4afa2b4cfdde4e4dfd1c2c6dde4e1cfbbb8bdb6b6c6d8
dbcfad8279828984767b8f92867d89a6b4a8a2bbdbe4e4d6c6b8b6b8bfc8c8af86768bab
c2cbcdcfcfc2ad9d8d7d7670696974899fa2968984828fa2a4afbfc8c2a282869badb4b2
a28b797489adc6c2b4b8ada6b6c6d4d8d4c8b49f9b89747d86847b7b92a8aba692746b70
7d92a8afa6a6a6a4a4a69b867b767f8fa2b8c4b8b6b6aba6b4c8cbcdcfcbb6a2a4b6c6c8
c8c4bfb6afaba49d9fa8b4bbab928696a4a6afbbc6d1dfe6e6e4d1b2a2afc8d4d1b49292
adc4c6bb9d8fa4a8a8a4948f9ba492899ba8b2b2b8dbe6dfddcdc8d4dde1e1e1dfd6cdd4
d8d4c6b4a696867b7d94bbc8b8b6cde1dbd4d4dddfe1dfd6d6cbafa4abaf9f8d8f9f9d8b
829bb6c2bbafb2bdc8bba6a4adb6b8bdb299869bbbc8bd9b828b9b9f92868fb2d1dde1d6
b49d8d7b72829999a8ab99869bb4b4b2b4b6a699a4c4d6dfe1d8c4afa4948482868b8984
848f9fa2a2b2cfe1e8edede8e1d8cbd1dbcbb6abafb6b6b6b6aba40000b8b4b4b4a8928f
adcdd8d6c69d7f829fc2cfbd9996aba89b868292adb29b8d89847252392b292e34405d84
9d9f8d705d5d708b948b76666d72697d9bb4bfc4cbc6a46b424754647972665d5959606d
89b8d8d4d4d1cdd4d6d4cfcbd4e1dfc6a69d9fb2cbd8dbd8d4cdc2af968b96a6ada89f92
9ba89f948b96bbd4cdab8496cbd6c8af9b868fb6c8c8b49d9dafbdc4cdcdc2bfc8d6dbcf
b8afb6bdbbbdc6cbbdaf926d6d797f7d747d969b8f8699b2bbab9fadc6cfcfc8c6cfcbbf
bbc2b69276768d9fb2bdc8cdcdc2ab998982867b6b69768d9fa2968d8d868b9ba8c2d6dd
d4b28d898f969b9f9f947f7b99c6d8d4cdc6afa2afc4d8dfd6c8a87f7b7b748292998d7d
7d8b8d8d8d8d8b86828fa6b4b4aba29fa4adaf9b797284929ba8bfcdcfcbc6bdc6d6d4d4
d4cdb6a6afc4cdcdd1d1cbc2b8afa29494a2b6c2b8a8abbdc4b8b6b6bbc2cfdbdbcfb499
96a6c2d1cdb49994adc4c6b8a4a4b8bbb4ada2a2adb299848b9fb6c2c8e1e8e1e1d4cfd8
e4e6e6e6e4d8cdc6c4c2b8ab9f8f76707d96bbc6b6b2cde4ddd4d1d1c8c8cdc8d8d4bbb2
b8bba4867f929696999fa2a4a6abbbcbd4d1c4b4afb6bdbbaf9d8d8fabc6c6ad8b7d8da2
a2928da2c2cfd6cbad9b897069798f96a8ab947f89a2adb6b6ad9d94a4c4d8e4e6dbc4af
adaba69b8f9294898996a6a6a4abc4d8ebf4f1ebdfd4c6c8cbb4a4a6b8c4c6c4bbaba600
00b4ada49b8d8289a8cfd8d1bd968694abc2c2ab928d999b9b999fb6c6c4ad9f9b998966
4029273239394057727f725b5254647d8b827272868d7d8fabb8bbbbbfb4865239404449
544b47474954647686afd1d1d8d8cdcdd4dbd6cfd1e1ddc29d949da8b2c6d4d8d8cfc4b2
a4a4ababa4968b828992969f9d9bb4cbbf8d748db6c6bfb2a2929fc8d1d1bd9d8d8b8d94
9fabafb8c2cdd4c4a89fa8b2bbcbd1bf96847462646d74747076898d8b96bbcbc8bfbbbf
bdb4b6c2cbd1d4c8b8b29b767089a6aba6a4afbbc8cbbdaf9b8b8b86766974868f928d8b
8f929dadbbcddddfd6bfa69b96928f9fada48d7f9bc8d6d4c8b8aba2abc4dbe1d8cfb686
7670728499a49d89848f94949fb4b6a2898fadc8cfc2a8969badc2bf8d7b8b929fb6d1db
dbd8d1cbcfdfddd4cbc6b8b6c6cfd6d8dddbd6cfcdbba28b89a4c6d1cbbfc4cfd1c6bdb6
afabadb4b6ad9d949ba2afbdbba8999dafbfc2b4adb4c4c6bfafa2adbfbfab8982a4c6d1
d1dfe4ddd8d4d4d8e1e6e8e6dfcfb8ada4a2abada6998f8d8f96a6ada4a8c2d8d4d1d6d1
bdb4b4b4d1dbc8bfbfbba27f748ba2afafa69b96a4b6c8d4d8dbd1bba8adbbaf9d949696
afcdcfbf9b869bb4b6a49fabb8c2c4bfafa48d706984a6b2b6a88d7d849fb8c4b69b8b89
99bbd6e4e1d1b8a8adb8bfbdada6a294929ba6ababafbdd4e8f4f4e6d4c4b6b2ab9996a8
c4d4cdb8a8a6ad0000968d8989898992adcfd1c2a88d96b2c4cdc2a28f929fa6ababb2c8
d1c6b29f9d9b7f5939272b373d3739495b62594b474b5d767f79707692a6a4abb4bbbdbb
af8f60403939373437343439425769727fa6cfd6dbd8cdc8cfdbdbd4d4dbd6bb9b9ba8a6
949fb6c6cbc6bdb6b2bbc6c2af927b747d8fa2b4af9da6b6ad84747f94a4afb6ab96a4cb
d4d1c4ab998d868999abb4bfc8cfd8c8ab9696a6bddbdfc6998276646066727982868684
829dcdd8d4cfd1d4c6b2bdd1d6d1cfc4a8947f707496b4b6a8968fa2c2d6d4c8af948b96
968484827b797b8694a8b6bdc4cfd4cbc2b6a8a29b9494abbbaf968292b6c8c4b6a6a4a6
a8bfd8e1ddd8cba88670708499a49d8992b4bfb6b2c4c6b28f8db2d4d8d4bda299afcfcf
9d849296a8c4dddfdddddbd4d6e4dfcdbbb8b6c4d6dbdfe1e4e1ddd8dbcba67f7994b8cb
c6bfc8d4d4cdc6c6c4bbafa49fa6a8a8a8a8adb2ad9fa2b8bfc4c2b6b6c4cdd1cbb6a8b8
cfcdb2897fa2cbdbd6d6d8dbd4d1d1d4dfe4e4dfcbab928f8f92a2a8a6abbbbfaf948b8f
929dafc2c8d1dbd8bfa29299bdd1c6bfb8ad947d7d9bb8bdb2a69fa4b2c6d4dbdddfcba4
8f9fb4a692898f94adc8cbbba299afbdb4adb8c6c4c4c8c8b6a2866d749dc2c6bda4847d
8dabc4cbbd9d847d8fb2d1dfd8c4ada4a8bbcdd4cbbfb4ab9f9fa6afb8bfc8d4e1ebe4d4
c2b6b4a894868da8cbd6c6a696a4ad000082747d94a4a29ba6b8b8a48b86a6c8d1d4c6ab
9699adbdbbafafbdc6b8a4949289694227202732373239494d49403d3d44546b6d666676
92abb8b8bbbfbfb69b6942393d393734302e2b324054666d7ba2cbd6d8d4cdc8cdd6dbd8
d6d6c8b4a4a4a48f767f94a4adadb6bfbfc8d6d1bb94747289a2b6bdad8d8ba2ad96827b
8496a8ad99848dadb8bfc2bdb6aba2a6b8bfb8bfc8cdd4c6a89496a4bbdfe6d4b49f8d76
6b708496abad9f928da6cfd6d1d1cfd1c6b8cde4e1d4bfab8d7b767d849fb6af9d867b8b
b8dbdbcbab897f99ada69d8b79727d94afbfc2bfc2cdcfc2b4a499948f8b8fa8b6ab8d7d
8496a6a8a4a6b4bbb4bbcfe1e1e1d6bf997974829296928ba8d4d8cbb6b6bbaf9696bbd8
dbd6cbb6a4b2cdc899869b9fb6cddbdddfdfddd8d8dfdbc8b2adb2c6dbe1e6e8e8e8e1db
ddd4af7f728296afb4b2bbcbd1cfd1d8dfddd1bdb4c2c8c4bdb6b4b2afa4adcbcdcdc8b8
bdcddbe1d8c4b6bdcdcba47d7f9dc8ddd6c8c2c6c4c4c4c6d4dddbd1bb9d89898f92999f
a6bbd8ddc4998692a2afadafc4d6ddd6bb94797f99b2bbb8ab96898499b8c4b8a6a8abaf
bdc8d8e1e1ddbb86829db4ab94827d8ba8bbb6ada8b2bdb29ba4c2d1cfcdcfcfbb997970
84b2cfcfbf9f7d7b8fa8bbc4c4b28d7d8fadcbd1c8b6a69fa6bbd1dbd8cfc4bbab9fa6b6
c2cbcfd1d8ddcdbbb4bdc2b292828babc6cbbba49ba8ab000079748bafc4c2ad9b94948b
7f92b4cfd4cdbfab9d9fb6cbc4ad9f999d9b8f867d6b502e1919222b302b323d3d373237
393b475b595259728ba2b4b8bdc2bdaf864b343b443d3b3d393734373b495b667496c2d1
d6d4d4d1d4d8dbddd8cfbdafa8a28f766d768994949bafc8cdcfd8d6bf9b847b96b6c4bf
a88b8ba4b49f8f898ba4b4a67d6b768b9db2c4c8c6bbb4bfcfcfbfb4b6bdc4b6a2999fad
bddfe8ddcbb49d82727d9dbdc8c2b49f9bb2cdd1cdc8bdb6aba8cbe6e4cfb6a2897b7b86
8fa8b49f8472727ba6cfd4bd967972869faba699898292b4cfcdc8c6c6cfd6d1bd9d8686
827b7f94a299827d868b9da6abb8cbcfbfb6c6dfe1e1d8c29d8689948f848492bbdfddc8
ab999f9d94a2c2d8d6d6d4c8b2abb2ad8d869ba2b6c8d4dbddddd6cfcfd4d4c4afabb2c4
d8e6ebebebebe1d8dbd1b48d7d8289929b9f9db4c8d1dbe4e8e4ddcfc2c8cfcdc4b8aba8
aba4a6bfcfd6cbb4bdd6e6efe4cdbfb4ad9f867b8dadcfddcfb6abada8b4c2c6cfd1cdc6
c2b6a69fa2a2999babc8e4ebd1a896a4bbc6b29db6cdd4cbb292767484a2bfc2a88b8996
adc2c2ab96a2a6a8adb4c6d8dbcba27d869faba2927f7b99b4b29b9bb2c6c6a48296bdd4
d4d1cdc4b494797986adcbd1c4a6897f8ba2b4bdc4bb99848b9db8bbada499949fb2c8d6
d8d4cdc2ab9ba2bbcbcdcfcdd6dfd4c6c4cdcdb6948696b2bfb8aba4a6b2ad0000707b9f
bfc8c4af998f94948f9db8c8c4bbab9da2a6b2c8c8b49679767d767269574230221e2932
2e27272e2e2b292e34373d4d4d424059728dafbbbfc4bfa6743d32404742424744424040
40424d5d667fa8c6d4d6dbdddfdfdfdfd1b8b4b4ab96867f7b7f8d99949bb6d1d6d6d8d6
bfaba28b94afb8b4a2949fb2b2a299928da8b8a879647089a4bfd1d1cdc2b8c8d8dbcfc4
b8b6c4b69d9dafbbbdd8e6e4d4bf9d79707fa4c2c4bbb2a2a6bbcfd1c8bda48d8492b8d6
d6c2b2ab9b847f96a6ada28d7f82847f9dc4cdbda68f7474899d9b928b899fc6ddd6cbcd
cdd4d8d8c29b7d7974696b7d8f928b8b8d94afbdc2cdd8d4bfb2bdd1d1cdc2ab9496adb6
9d7f849dc4ddd6b8998b8b8f96a6bfcdd1dddfd8c2a28f928f949b9ba4b2c4cdcbbfb8b6
b8c4c8bdadafb2bdd1e6ededede8dfd1d1c8b29b96998f86929b949fb8cfdfe8e8dbd8d1
c2c2c4c6bbab9d9d9d9d9babcddbc8adb4d6ebf6e8d8c8ab897b7d8fa8c2d8d8c4b2abab
a2b4cfd6d4c8bdb8c4c8bbababada2a2b4d4ebedd8b2a2afc6cbab8b9db8c6bfa68b7976
8bb2d1d1b49494a4b6bdb89f898f94928b8b9db6c4ab8d8d9daba6968d8489b2c8b89494
b2c8c8a27f8fb2cbcfd1c8b8ad9d8d7f849dbdcdc4ad99898d9fb6b8b6af94847f869b9b
8b89868694a8bbcbcfcdc8c4ad999db8c6c4c4cddfe8e6ddd8d8cfb4948da4bfc4b4a29b
a4afab0000697ba2bdc2b49b8f9fafb2a69da8b2a4968986969b9badbdb492796d695d54
504b443b322b32342b2727292724222229323942473d30374b74a6b8bdbdb6945d37394d
524d5054524b47494b494b575b6984abcbd6d8e1ebe8ddd1b89ba6af9f8b8d99948f99a6
9da2bbdbddddddd4c4bbbba4928f9494949db2b8afa89f928292a69f7d748496b6d1ddd8
cfc2b8c4d8dfd8d4c6c2d6c69f9bafb6a8b8cfdbcfbfa27b6d82a6b6ada4a49fafc6cfcf
c6b49482828fadbdb8afafafa2868bb2c6bb967f8fa8afa8adbdc2c8cbbd947679898d86
848db2d6e4dbcdcbd4d8d8d8c6a47f766b62647492a8aba29496b8cdd1d6d6cfbbadb2b8
ad9f9489899fbfc6a48699b8d1d6cda88d928f96a6b6c2c6cbdbe4d8b88d7b8ba4b2a896
8f9dadb2a4928f9babafb2a8a6b6b8b6c2dfefede8e1d6c8c2b2a4a6b4b49b899bb2a8a8
bbd6e4ede6d4d4cdbfb8b6b2afb2ada294949ba4c8d8c8a69fc2e4ede6dbcdab868692ab
c2d1ddd4b8b2b8b8abb4cfddd8c4aba4c2d4c4a8a2afa8abbddbe8e8d6b4a6b6c8c29b79
89a6bbb69b84797994bfd8d6b8999ba8b2b6ad9684848684827b849bafa296a6b6bbad9b
9292a2c6d4bf968fa2afb49d8d9fb4bfc4c6bdb6b8b4a2898299b8c2b8a89d8f8b949f9d
9289797676727d8482827d8294a6b2b6b6b8bbb8af9d9bafb4ababcbe4ebebe6dfd8cdb2
9292a8bfc4b8a4999fa49d0000707da6c4c8b6927f9bb6c2b89d92928b7f797d86827984
969684766657493d3d423d37323032302722242927221b171b2732373b392b27346094af
b2a8926942344259605d60645b524b5054524d525762748db8cdcbd8e1ddcbb49d8b9296
8b8292a8a89fa6b2a49fb8dddfdfddcfbfbdc6b89b7b72768babbfbdb2ab997f7074868d
8b9dabafc6d6ddd8cbbbb4bdd1dfdbd4c6bfd6cba6949da29294a8bdbbb8ab8f7689adb6
a8969296afc8d4d4cbb499929fb2bfb8adafb4af9d8496c8d8cba2849bbdcdcfbfafb2c8
dbdbbf8f70707d898da2c8e4e6dfcfcbdbdfddd8c8ab8d8274666982a8c2c4b8a29dbdd6
d8cfc6bdb2aba89f8f847d7d869fbdc4a28fb4d4dfd6cba694a2a8afb8c4cbc6c4cfd4bf
997b7b94b6c6b694848b948f7f767d8d9696948d94adb2abb2d6ebe4d4c4b8b2a8a6a6ad
bfbb9b86a2bfb8c4d4e1e6ebe4d4d4cdbbad9f9babc6cfbb9b929da6c4d4c6a696b2dbe4
dfddd1b69b9ba2b4c6d6ddcdababbfc8bbb2bdd1d1b89996c4e1d1b2a6afa69fadcbdfdf
cfb6abb6bfaf89707d9bafaf947f7b798fb6cfc6ad9b9da6ababa4928286929d9d8f8996
afada8bbc8c6b6a89da4bfd1cfb48f8686848b8d99b6c4c4bdb6b2b8cbc6ad8f8299b2b4
ab9d94897f7972706b66646b706d7b8f9b9282849ba6a6a4a6afb2aba49b9ba49f8f99c4
e1e8ebe6dfd8cbab898da4b8bfbbb6b6b2a8a200007b86abc8d1c49d7f8ba8bdbb9f8986
8d898489897b6b6d7479767260493b343434302e2e3234291b1b22292e241e1b1e242b30
32322e2732547f9d9f8b64423234475b64667072625250595d5950505764727da6bbafb6
c6c8b49b8b84827f7f869dafb2a6a6a89692add1ddddd4c6b6b8c8bd9b74646b8db6c4bd
afa4846b6970767f9bb8c4bfc8cdcfcfbba6a2adbdc6c6bfb4b2cbcbaf998f94928d94a2
abb4b4a4828badb6ad968989a2c2d4d6cbb6a6afc6d6dbcfbdbbb4ab9f8696c6d4cdad94
9fbdd1d6bb9fa8c8e1e4d4a672627492a6bbd4e4e6e4d6d1e1e8e4ddcfb494897d74799b
bbcbcbbda89db6d6ddc8bbb4a8a2968b7d7b7b7b849bb4b89992c4dde1ddd4b4a4b2bbbb
bbc4cbc8c4c4bba4897d869bb8c6b88f76767b747079898d897f7f7f869da8abb8d6e1cf
b2a29f999ba8b2afafa2867d94afb8d1e4e6e4e1ddd4d8d1bda48f8fa2cbddcba699a6b2
bfc6c2a496afd4d4d1d8d6cbbbb2aba8b4cbd1bfa6b4cddbcfb4a6b6c4af8b8db6d8d8bf
b2af99898fb4d4d8c6bbafadad9476697994a8ab8f7d797686a2b4ab9f9da2a8a8a49d8b
8294abb6bbb29f9fbbb4abbdcbc6b8b4a4abcbd4c29d84848270747f9bbdcbc6b49d9baf
c8c6af9486929f9f9b948b82705b5452575960666b70869fada48b8499a2a4a6a8b2b29f
8b8b94968f8692b8d8e1e6e4dfd8c6a27d7f94a4adb2bfcbc8bdb600008f8fa6c4cfc6a4
828294a6a692848da4a4999999968d8b7f76746d5d473730303032323234301b0b142229
302b272b2e2e2b29292b2b2b39577d999676523d37374759666d7b7b62525766695d5457
5d6670799bab999bbbd4c29d7f7b7d7f899ba6abada49b92868999abc4cbc2b4abb2bbad
8f74646986adbbb4a48d706679827d7d99bfcdc6c6c2bbb8a28d8d9ba6a6a6a6abb6c8cb
b8a49ba2a4968d96a6b4b8ab8989a4afa892848496b4d1d4c4afafc6dbe1e1dbcdbdafad
af9d9bb2bdbdb6b2afb4c4cdb296afcfe4e4d4a6705b729fbdcbd6e4e8e1d8d8e4e8e4df
d6bf9b867b7b8babc2c6c2af9d929dc6ddc6c2bfab99867d767270747d94abab9496c6df
e4e1dfc8b4b4b4afafbbc6cdcfcfc4b2a8a6a6abb4b6a6846d696b6b74869b9d94929699
969db2c2cddbd6bd9d9fa69b9dadbbb29f8676798492a6cbe1e1ddd4d4d8d8d1bfa8928b
a2c8dbcbaba4bbc6bfb8b8a4a4bbcfc6bfcbd1d4cdbfaf9d96abb6b4afc4dbe1d4af949f
b8af8f8d9bb2bfb8a899847f92b4d1d4c8c2bbb2a4897069768fa4ab9d94928d929ba4a8
adadadaba89f948484a4b6bdbfc6b2a4bdad9dabbdc2bbbda8abcbcfb2867d8b8f7d7b8d
abc2cbbd9f84849fbbb8a8998b86847f8489867d6249474b525d6b706b7086a2aba4897b
8f9da8afabb4b2947d7d898b8b868296afc2cbd4dbd4b8927b7f8b8f99adc4d4d4c6b800
00aba2adbdbfb499827d868b847b7b94bdc4b4a8b4bfbfbba4866d665b49373232323b3b
393b2912071222272b2b30373b34292727292b2e3b597b92896d60544b44475460667476
625962726d645d6262646d7d9dafa8adcbe1cfa882798294a4b2aba2a6a2998b898d897f
94a29d99969fa89f8d7b6962728d9b9684746972898b7d748dbbcdc6c4bbad9d8b82899b
a29fa2adbfcfcfc6b8afb8c2bda48f94a4adb2a884798b9b9d8f827f92afc6c4af9fafcd
dddfdfddd4c2afb2c2b8a4999bafc4cdc4b8bdc6b2a4c2d8e1ddc89b6b5b6b96bbc8d8e6
e8ddd4d6d6d8d6d6d4c4a2847b8696a8b2afad9f92898bbbddc8bfb6a694847d79726b70
76869ba4999bbddbe1dddfd4bb9f99999fb6cdd6d6d4cfc8c6c6c6c2b8b2a48676767d7f
828da2adb2bbc4c2b2a8b8cfd8ddcfb8a4adb4a89fabbdb69d8276767b7f8fb4d4ddd4c4
c4d1cfcbc6b69b899fc6d8c6a8abc8cdb8a4a4a6bbd1d8cdbdbbc2c8c6bfb29b8b9db6c4
c4cbd6d8cbaf928da6afa8ad9f92969f947b7686a2bbcdd1cfcfcfcbbb9f7f6b74869fb2
bbbdbdb8b2afb8c4c8c8c6b4a69d8b7d86abbdbdbfc6b4a2ada2969dafbdc4c4aba8c6c8
a679798f9d9696a8c2cfcfbb9b827d92aba499968b7b695d64767f795d4440475464767b
7472899d9d927f7f9babafab9ba2a28d8b89868b8d8679797f8b9fbfd1c8a689868f9494
9dbbd1dbd6bdad0000bbb2b6b49f8b7d7b7b8989746b7296c6d1c4b4c4d1d1cbb8966d60
5444373437373d403d3b2b12051422272b2e34393b3227292e2e2e2e3d57707d7b767b70
60595050575b666b62626d76706664665d59647ba2bfc8cfd8ddd1b896848fa6bbc4b4a6
a8a89d8f9baba6928d86828286929d9f94827064646d70707072727d9294897b7fa2bbbf
c4c2b2968b868ba2aba6adc2d6dbcfbdb4bbcdd1c4ad9d9fa8a6a6a28670707f8f8f8684
96afb4a6928fa4c8dddfdfdfdbc8afabc2bfa88982a8cfdbd1bfbbc2b8b6d4dfd8c4a67f
625b5d7499b4d4e6e6dbcfc8c6cbcdcbc8c2ad8f8492a4a89d949d998d8d99c2dfd1bba4
928b8b8d847670767b7d899d998fa4c6d4d4dbd6b6867d8499c2d8dfd8d1cdcbcbd4d8cf
c2bdb6998d949fa299929fbbcbcfd6d6c8b6bdcfd8ddd4c2afb8bfb6a2a4b4b8a68f847b
7b7d89a4c6d6c8b6b2bdc2c6cbbfa68d92b6cbbda4a4bbbfaf9996a6c4dbddcfb8a8a8af
b2afa6948fb4cfd8d6c6bdbdb6ab94899db4c4cdb8947f86826d768da6b8cbd1d4d8dbdb
d8c49b72707f9bb8cdd1cfcbc4c2cbd6dbdbd8c6a8947f7989b2c4bfbbc6c4b6b2a69b99
a8bbc6c2a8a6bfbd9d767d96ababa4afc8d8d6c8b4927d7f8d8982827d6b544d54697d74
593d343d4b5b6d7b7f84928f7b798299b6c4bfa6867f84849da496999486797272768baf
cbc29b8492969b99a2c2d8dbcfb8b60000c2bfb8a27b66626d7d969270626b92c6d6c8b4
b8cbd1c8b699746457493b3939373b3b373024120919242730343734322b2724272b2e30
3d52626d7b8d927f706d5b5257595d6060626d726d6b6b64574d5976a2c4d6ddddd8d4c6
a68d9bb6c8cfbba8aba69996b6cfd1c2b29d89848b969fa2998b827b7466606679848b92
a4adada29696a6b6bfc8c4ab9f9994a8ada4abbfd1cdbbabadc4d4d1c2aba6b4bbada6a8
997f707d8f9d9d9ba6b2a88b747b96bfdbdde1e1ddcba692a4ad9f847fa2cddbcdb4adb8
b6b8d4ddcfa6745d5d5d5d66829fbfd4d6d1c8c6c8cdcbc6c6c6bfa69499adad968b9694
8d9bafd1dfd1bfa4867f8d9b92827f8b8b848699927f86a4bbc6d4d4b889797b96c8e1e6
dfd1cbcbcdd8dfd6c8c2b69b96a2abada499a4c4d4d1d6dbd6c8c2c6d4dddfcfb4b8c6c2
aba2b2bdb6a28f7f82868fa6bfcdc4b2a6abafb8c6c2ad8f8499ada696929da6a49da4b6
cdd6d1bfab9d9b9d9b948f8d99c2d8dfdbbda49d9b9b948fa4bfd4dbc49d8482796d798f
a8bbcbd4d6d8dbe1e6d8b282767f9dc2d1d6d6cfc6c4cdd6dddfddd1b6927f8299bdc8bd
b4c2cdcfcdbfa68f96a6b4b8adabb4af9b868ba4b6b6adabbbd1d8d4c8a47f6d6b696260
60574b474d64797052322b3949575d6d8496997f626b8dafc4d1cfb48470747fa4b4aba6
9d9289827b79869db6b89986928f8d8b94b6d1d8cbbdc20000c6c8bd9d745b59647d968f
6d60698dbfd1c6b2abbfcdc2af947d746b59443d39323739342b22140e2024202e32322e
2b29221b1b222b323b47546482a2a6927d7b6459605957575459646d747f7d69544b5470
99c2dbdfdbd8dbd1b69d9fb6c6c8b29b948d8699c6dde1d8c6ab928b929fa6a49d99999d
9989767f9badababb8bdc8cdc4ada6b2b4c4cfc6bfb2a6aba89f9fadb8b4a49babc6d1cd
bfa8a8bdc6bdb4b6b4a4929ba8b2b2b2b4b6a27b64708fb8cfd6dddfd8c49979848d8b7d
7d96bfd6c4a8a2aba6a4bdd1cb9f6b64797d79747f8fa4afafb2bfcdcfd1d1cdcfd4cfb8
9992a8a68f848f928f9fc4dbddd4cbbd9f8d99ad9d92929d9f9fa6afa68b7b8da4b2c2c6
b48f7d798dbddfebdfd1cbc8cddbe1ddcbb6a28b8b9dadb2ada6afcbd6cfd8dfdfd6c2bf
d6dfe1d1b2b4c8c8b6afbfc8c2a68d8696a4abb8c4c6c4b4a49b96a2b4b8ab968d9ba6a4
998f949fa6afbdcbd6d4c2b2a8a8ada692848992a4c2d1dbd6b8a49d969fa6a8b2c4d6db
c29d94998f76798ba8b8c4c8cbd1d8e4ebdfbf947d829fc2cfd6dbd6cbc6cdd1d6dde1db
c29f8b8fa8c4c6bbafb8cbd6dddbc2998992a8bbbdb2a49fa29f9babb8b8b49f9fbfd6d8
c69f7d6959525252524d47444d62706952372b374b57545d7994967b5d698dadc4d6dbbf
866b727fa8b6adaba8abada89d8f8f9badb6a69992827d7f8da8c2c8bbb4c60000cfcfc8
a87b6059647d8d846d64708fb6c8c2ad9fafbfb29f8d84867f6b54493d30343939302419
1424241e2427272724221b1014202e34373b496089afb49f8d8974707462595754575b6d
8ba299725249546d96c2d8dbd4d6dfdbc2a499a6b6af9d8d847b7b94c2dfe1d8c6ab9296
a6b2b2a69d9fabbbbbab9fa6bdc8b8b2c4c4d1ddd6c2aba2a4bbcfd6cfc2b4a8a29d9b9f
a4ababadb6cdd1cdc4b6b8c4cbc6bfc2c8c4b6b4b8bbb8bdc2bb9d72607696b2c4cfd6d8
d1bd96767d7b7674798badc8bda8a49d8b86a6cdcfa67d7f9faba894848486848694b6d4
dbdfddd8dbdbcfaf897d929286848d9294a6cdddd8d6d8d8c8b2abb4aba29ba4b2c2cdcd
c8af9296a2a8adb2a892827b86a8d4e4dbd4cdcdd4dddfd8c4ab927f849fb8bbb6b6bbcd
d6d6dbe1e1d8bfbfdbdfddcbadb2c2c2b2afc2c6b89d8b94adbdc4c4c6c8c8bfa68b848d
9ba4a29da2afb6b4a8a2a6b2b8c4cfd6d4c6b4adb2bbc6b6998da2afafbfcdd1cbbdb2ad
a8bbcdcdc4bfcdd1bb9b99ada88476829fb4b6b2b4bfd1e1e8ddbd927b7d96b6cbd6ddd6
cdc8cdcfd4dde4dfcdab8f92adc4c8bbafb8cddde1e8d8b29b99adc6cdbba2a4b2b8afa8
a8aba29492adcbcdb699847660545762665d4d4957666b665740303447544d546d848b76
5d627da2bfd6dbc2927f898b9fa4a4afb8c2c4c8c6bdb6b4b8bbb4a28d7d828f9badbbb6
a8a8c60000d8dbd1b482645b6b869994827686a8c4cbbfab999fab9f928d92998d76645d
503934373730271e1b22222227201b202220140e17273237393d495d86adb4a4928d8286
8b7666646b645d6d9db8ab7d5b525b6d94bdcfcdc8cfdbd8c4a48d99aba292867f7b7b8d
b4d8e1d8cdad96abbfc8c2a89dadc2cfc8b8b8c4d1d1bbb4c6cbd4ddd6c6a88f9dbdd4db
cfbba699969692929fb4c4c6c6cfd4d4cbc6cbd1cfc8c4c6cdcfc8bfbbbdbfc6c8b68b69
647d9bafbfcdcfc8c2b49982847669666d7d99b6b8b4b29b827fa8d4d8b48d8fb2c8c8af
8f827676828fb2d6e1e6e1dfdfd4b89476768b928b8992969bb2d1dbcfd4dbe4e1cfb8af
b4afa8adc4d8dddbd6cbb2a6a6adadb4b2a289797b92bbd4d6d4d1d1d1d4cfc2ad9d8b7d
89a8c4c2bdbdbdc4cbd1d6d8d1bfafbdd8ddcdb4a2a8b4b4adadb6b8ab928ba2bbc6cbc6
c8cdcbc6b28f898d8d8f96a2b2b8b8b2a8a8b6c8cfd4dbd8cfc2b8b6b8c2bfab949bc2cb
bdc6cdcfcfcdc6b6b6cfe6ddc2b2c2c8ad8b92a6a88f7f86a4bdbfb4adb2c8dde4d1a87f
727989a6c4d6dbd6cfcdcdcfd8e1e4e1cfad8f92adc8cfc2b4c4d8e1e6ebdfc4b8b2b8cd
d6c8afadbdc6bda499998d898fa2bbc4b8a69b8f745d60767f7054505d70726452403030
405050525b6b706454546b8fb6cdcfbfafadafa28f899bb8c8c6c8d4ddddd6c6b8b8b6a6
8d8999a4a8bdc6bfb6b2c60000dfdfd8c49b6d62768da2aba696a4c4cfcfc4b6adadab9b
86828f948674707064493730302e2927241e1e272b24202424221b171b2934393d495466
849fa2998b8486949d8b76798676626d94b4a87f6b69697086a8bdc4c6c8c6c8c2ad9da2
ada899898984828ba8cddbd6d4b499b6cbd4cbafadc6d1d1c2b6bfd1d8d4bdb4c4cdd8dd
d6c29f8fabc6d1cfbda28b868d8f8689a4c4d4d1cdd1d6d6cfc4cbd4d1cdcbcdcfd1cbbf
bbc2cbcbc6af8269697994abbdc8c2b2a8a29b99967b605b64707f9ba6aba8998d9bc2dd
ddbf9996b4c8c8af8d797276848fa6cbe1e4ddddd6c4a284767d929b8f868f969fb8cfd6
cdcdcfdde1cfb2a4adb2b2b8cfe1e4e1dfd6bda69fafc2cdcbbb9d7f7689a8c2cdd1d4cf
bfb6b4a89486827f8dadcbc6c2c4bfafabbfcbcdbb9f9db6cdcdb6999299a2adbfc2bdbf
af9b94a8c2cdcbc6c8cdcdcdbfa4948d86848ba2b6bdb8afa6b2c6d6dde1e4dbcfcbcdc6
bfb6a4948da2cbcfc2cdd4d8ddddd1bbb4cde4d8bdb2c4c6a88d969fa4998b8da6c4cdc6
b8b4c2d4dbc49b7970747d96bbd1d6d4d4d1cfd1dbe4e6e1cda89292abc8d6cbbdcfdfe6
e6e8dfd1d1c6bfd1d8cfb8b2c2cdbb998b948d868b9fbdcdc6b4a89b7f6669848b745954
5b6b6b5b4d422e2b394d52524d504d4b494959769bafb8bfc6cbc4a8847d9fc4cfc8c6d4
e4e6dfc6afafb6ab92929ba6adc8d4cfcfc2c20000dddddbd4b8846d7986a2b6b8adb6cb
cfd1c8c2c4bba894746979827d7272767057473930302b2b2b1b1b29302e2b2e29221e1e
2027343d4954647689928b89898494a6a89b84899b866b6d869d967d797b76727d96b4cb
d1cbb8b6bdc2bbb8b6b2aba49b928d94a8c4d1d1d8c2a4b8cbd1cdb6bdd4d6c8afabbfd1
d8d1b49fb2cfdbd1c2a8928dadc4c8c2ab8f7d7d8b8f8b94b6d4d8cfcbd1d6d4cdbfbfcb
d1d4d1cdcdcbc6bdbfc6cdc6c4b699827479899fb2bbb6a4969dadb8b28f6959646b707b
898d868496bbd8e4dbc2a6a2afb2a6927d706d74828fa4c6e1e4dbd4c8b49b928b8d969b
92868d92a2bfcfcfbfb4bbcfd6bf9f949fafb8c2d1dfe6e6e1d1af9996b2d1ddd8d1bfa4
8b92a8bdc8d1d4c6ada8ab9d86797d7f89a4c4c4bdbdc2b2a8bdd1d6bb999fbbc4bfab96
8d8b96b4d1d8d1cfc2ab9dabc4d1cbc6c6cbcdcfc6af998b8682869bb6bfbbb4b6c6d8df
e4e8e8dbcdcdd6d1bb9d86848d9fbdc2bdd6dddfe1dfcfb6adc2d4cdc6c6cfcdb8a8afa8
a2999294a2bbcbcdc6c2c4c6bfab927b7070768bafc6cdd6d8d6d1d4dbe4e6e4cfa88f8f
a8c6d6d1c8d6e4e6e4e6e1dbdfd1bfcdd4cbb8b6cbd4b892849da49289a4c4d4cdbba68f
766670868b7d6b5d5757594d49443227304754544d49444240424b648494abc6cdcdb892
7986afcbcdc6c4cfe1e6dbbda2a2ab9f898b92929bbdcdcbcdc2bb0000dfdbdbd8c6a27f
767f9fbbc2bbc2cfd4d1c8c2c6b6967d62596b7d82746b7272645b493939322922191b24
2e303030291e191e222939506069727d84827f828692a8b8b8a89294ab997f7d94a29686
828279747f99bddbe1d1bbafb6c4c6c6bfb4bbb8a49b969badc4cfd1d8c6afb6bdbfbbaf
b8d1d6b69296b4cdd1c8a4869bc4cfbba28f89899db2bdbba88d797d8d999dafcbd8d4cb
cbd6d8d1c6bdb6bbcdd8d6cdc6c6c6c4c6c8c8c2bfbdaf9986848696abbbb8ada4b2c6cf
c8a6765b666d6b798d94827f9dc8e1e4dbcbbbb6b2a2846d696b6d747f8bb2ddebe6dbcd
bba89fa2a29d9b9b948d8d8fa2c2c8b89d8fa4bfc2ad948d99afbdc4d1e1e8e1d8c4a28b
8fafd6dfdbd6d1c6b2a6b2c4cbd1cbb6a6adb4a2847274797f8da6b2adb2c6c2bfd1e1df
c2a2b2cbc8bdb2ab9d94a4cbdde1ddd8cdb6a6b4c8d1cbc6c6cbcdcfc8b69f96948f8994
b2b8b4b2c2d6dfe4e8ede8d4c2c8dbd1b492868b94a2adadb2d4e1e1ddd6c6b4b2c4cfc8
c8cdd1cbbfc2c8b89f949da6a6adc2cdcbcbcbbd9f92897d74747984a6bbc6d8dfdbd6d8
dfe4e8e6d4ad8f92adc4d8d8d1dde6e8e6e6dfd8d8c8b4bbbfbdbbbfcdd1b8948fabb49b
849dbdcfcdbd9d7d66606979868b847057494744443d2b20273d4d504d4744403d404d66
849bb2c6c4b494767999bbc6c4b8b4bbd1ddcda88986948d7b7d7f7d7f9fb6bdc6c6bd00
00dfddddd6c4a88b747494bbcbc8cbd6dbd4c6bdb49d7d6d5d60768b8d7b696b7270644d
3d404032201b1e24302e2b2b241e1b202737526b7d7f7b7672747b828fa2bbc8c4b29da2
b6b29f9dabb2a28b827f747689a8c8e1e1cfbfb6b6b8c4cdcdc4c6b89b999b9dabc4d4d6
d4c4b4afa69d999dabc6d6b69294a4b6bbb4998494b6c2ad9286898d8f99a4a69f8b7b84
96a6afc4d6dbcfc6cdddddcdb8ada8adc4d6d6cdc8c8c8c6cbcfcfcbc6c4bfa8949499ab
bfcbcbc8c8cdd6dbcfab7b6069707289a8ad948d9dc4e1e4ddd4cdc6bba6826460696d70
7986b6e6ede4d8cfc4b2a6a8aba69b999b968f92a6bdb4947d89a6b8b4a292929fb4bfc6
d1dfe1d6c6b29b8b8dabd1ddd8d6d4d4cbbdbfc8cbcbb69d99a8b4a889747479797d8992
99abcbcbcfe1e6e1c8b4c4d4cbc2bdbfb4abbddbe4e1dddbcfbbadbbcbd1cdcbc8c8cdcd
c8b8a29ba4a29492a2a8a6a4b6d1e1e6ebede4c8b2bdd4cdbbb2ada6a6afafa4a4c8e1e4
dbcdc2bbbdcdd4c6bbb6b8b6b8c6d4c6a696a6afaba6b4c2c6cdcfbf9d94948f867d7b82
a4b6c2dbe1e1dfdfe4e6e8e6d4b29294adbfd4d6d4dfe4e4e1ddd4c8c4b6a6abb4bfc8cf
cfc2a28d94abb2997d8ba6bfc8bd9f79605960697d94997d59403b3b3d34221720344247
44403d404242506b89a4b6bba689726b7f9fb4b6ab9d9496a8b8ab8b70727f8279767474
7d99afbdc8c6b80000d6dbd8cbb29b89746479a4c6cdcfd6dbd8c8b2947f7670697694a6
a28b76707474604b4240443d2e27242b3430292924242427344d66747d827b7066697486
99adc6cfc4b2a6b2c6c6c2c2c2bba27b7272707b94b4cddfdbcbc4c6bfb4c2d1d6d4cfbf
a29996949bb8cfcfcbbfb6afa296969babc6d6c4adaba29d9b9b8d8696afbbaf998b929f
998f8d8f8d82829babafb6c8dbddd1c4c8dbddc6a8999ba6bbc6c8c8cdcdcdcfd1d4d4d6
d4d1cdb8a4a4b6cbd4d6dbdddddddfdbcba276667079829bb4b29d999bb8e1e6e1dfd6c6
b4a27f64627076767986b4dde4ddd6d6d6c8b2a8a69d92949b999296adbda6827692abb2
ad9b96a4b8c4c8cbd1dbd6bfafa69f9996a8c6d4d4d6d6d8d6d4cfcdc4b49d8b8b9fb2b2
a48d848d827b828694afc8cbcfe4e6ddcbc2cbcfc2b4b8c4bdbdcbdde4e1dbd8cfbbadbd
cbcdcbcbcbc8c8c8c4b69d99a8ab9d8f9294949299b6d6e4e8e6dbbfb2bfcfcfcdd1cfc4
b8bdb8a69dbfdfe4d6c8bfbdc4cfcdb69f949499a8bdcdc6ad9babb2ab9b9babbbc4cbbf
a4a2a6a48f827f89a2afbdd6dfe4e6e6e6e8e6dfcdaf9696a8b6c8cfd4e1e4d4bfb4b6bb
bfb8afadbbcbd4d8c6a6867f8fa4a892767686a6bdb8a27d62595d6679929b7d54393432
3430201720343b3b39393d474b4952667d9db2b29272646d84999f998d847f7d7f827b6b
626d7d7f7b898d8d9bb4c4c6c8bdad0000c8c8c2b4a296846d5d6486adcbd1d1d6d8cdaf
7f727f7f7b8fb2b8ad9d8b7b76745d4b444449473b34323434343234303030344260746d
666d7679706d768699b4cbcbb8a8abbdcdcfd1d6cfc29d70666b74869fbdd1dddbcbc2c6
c4b6b8c8d8dbdbcbafa2a29d8da2bbbdb2a6a6abadadada8b6cdd4c8bbb69f867f8b9696
9dabb4afa499a4bbaf947f7b7b7b8bb4bfb6c4d4e4e4d6c2bdcfd1c2ab99969fadb2bbcb
d1d1d4dbd8d4d6d8dbdbd8c8b2afc8dbdddfe1e4e4e1ddd4c2a47f707b8694afb6ab9d9d
9bb4e1e6e4e4dbbf9d8f796b72828b8b8b9bbfdbdfdbdbdfdfd4c2af9b89828d969492a2
b8b69d7f7d94a2a6a28f99b6cbd1d1d4d6dbcfada2a8aba49da2b4c8d1d6dfdfdfe1d8cb
b89d8d8d8f9db6cbc6ad9da8927b848ba2b8c6c4cbdde1d1bfc6cfcdb4949bafafb8c6d1
ddddd8d4c8b4a6b8cbcdcbc8c8cbcbc6bfb29994a6a69f9694928d868499b8d1d6d1c6b4
b4c4d4d6dbe1dfd6c8c2b8a69fbdd4d6c8bbb6bbc4cfc49f867b7b8999afc2c2ad999ba6
9f868294abb8c6bb9f9fa89d867f8d9dafb4bfd1dbdddfdfe4e1ddcdb49d96a2aba8b4c6
d6e4dfbf8f8ba4b8cbc8bdb6bfcbd1cfb289797b8ba2a692766d7492aba896827070767f
8b9692744d34302e302e1e1924343732323b44525b5452607492adaf997b7074848d8d86
848b8d8b7d6b6460626d7974769babafbfcfd6d1cdb8ad0000afaba6a6a69b7d5d576279
99bdc6c4cfcfc6a67b768f9494a4c2c2b6a699897d7662524b5057544b49474240424444
42444442496684796b6d7b8482828992a2bbc8c2ada4afc2cdd1d6dbd4c29f7970727989
a2c2d6dfdbcbb8c2cfc4adb2d1dddbc4a8a8bbbba4a2a8a29b969da2adb2afadb2bfc2bd
bbb4967f8296adb4ab9f9fa69d9badc8c4a47b696b748fbdc2b6cbdde8e6dbc2b6c4c4b8
ab9d9696a2a8b8cfd6d6d4d6cdcbd1d1d6d8dbd1bdb4c8dbe1e4e4e6e6e4ddd1c2ad8f7b
898d96ada89b969b99add8e1e4e6ddbd947f76797f8f9b9b9db4d1dfdbdbdfe4e1d8cbbd
9d7d767d8b8d96afbdab8b7b8696998f867f96bdd4d8d8dddfdfcfad9fa8ada89f9b99ab
c4dbe6e6e4e4d6c2af9d9ba2abadbfd6cbafa2ab947f899bb4c4cdcfcfcfcdbdadb6c6c2
a6867d8996afbfc6cbc8c4c4b29b99b4c8cdcdc6c6c6c6c4bdab9496a8a4a4a49d968b84
82899badafafad9fabc4d4dbe1e8e1ddd4c6af9fa2b6c8cdbfaba6b2bbbfb28f7d797d89
92a8c4c4af94827f7f74747f94adb8a889898b7f747b94a8b4b8bdc8d1d4cdcfd6d6c8ab
8d828d9da2999db4cfddcda27d86a8bdc8c4b8b8c2c6c6c4a68684828fa6ab96766b728b
9f968689999fa2a8ab9f866947322e292b27191b242e2e2b30404b5b66595259708dabb8
ad9d94929294928f9db2bbb89f79605d64666966729db4bdcdd8dddbd6c2bb00009b9994
a4b29f7957597089a4b6afa8bbbfb2947b7d8f9fa6abb6bfb8a89d948d7f6b5750596469
625d5d5b525454575d625b494b6b898982848d8f8f969fa4a8b4c2bfb2adafb6bfcbd1d4
cbb8a28982827f849dbdd1dfd8c6bbc8d8cfada8cbddd1ab92a2c2cdc6bfb6a29da4b2b4
b6afa6a4a2a2a2a6aba6928b99abc2c6b28f8489828babcbcdaf846b6b768fb6bbb2c4db
e8ebddcbbdb8b4ada8a2968f9ba4b4cdddddcfc2a8a2afb4bdc8d1cdbfafadc6e1e6e1df
e4dfd4cbc4b49b8b92867d8f928f8f8f96b4d8dfe1e4dbbf9674707b8699a6adafbfd4df
dbdde1e4e4dbd1c8af8b726b79899fb8bfa27d79929d947b6d7089abc4c8c8d6ddddcdb2
9b969fa6a69f8d92afd6e6e8e4e4d4bdb4adafb8c8c6c4c8b8a49da49d949dadc2cfd4d4
cbb8afadaba4abab9d8d7b7284abc2bdb6b6b8ab99868ba6bdc6cbc6c4c4c4c4bba89299
aba2a6ab9d948d8989898d969696948da4c4d1dbddddd6dbddcdab9ba4afc4cbb69d96a2
adb2a896848492999babc8c6b292766d6d6d6d74899ba29279706b696d7b8b949da2abbf
cfd1cbc6c8c4ab897479848b8d929dafbfbfa8847d94b6c6c2afa2a6b8c2c2bfab9da49b
9ba8ad94726d7689948d8494bbc4bfc2bda87f5b40322b2929271e202424222432425064
706254546486afc8c4bdb8b4b4b8b8b2bdd1ddddc492604d5457575d7499b4c2cdd8dfdf
ddd1c800009d99929fb49b74607492abbbbda696b2b8a689797982949d968f9ba49f9494
94866d5d59596b7d847d7f82766d6464747969525b74868b94a4aba2999fabab9f9da8b6
bbb6a8a4b4c4c8bfada49f9b99928d8b9fbbcfdfd8c6c8cfd6d1b8b8d4ddc8a28b96bbd1
d6d6cbb4abb6c8d4d1bfa69994928d999f948d94a8bbcbcdb68d706b6b7fa4cbd1bb8f79
7f8d96adb6b8c8d6dfdfd4c8bba69f9fa2a6968d9da8b2c6ddddc8ad8d848b8f99a4abb2
ad9d92add1d8cfcbcfc8bfb8bdb4a49b967f6d767d86898699bfdddfdbddd4b88d6b6976
849bb2c2bfc2c4cbd4dde1e4e6dfd6d1bb947464728fadc2c4b29999a49d897266667286
969dabc8dbddcdb28d798299a8a49296afcde4e8e6e4d1c2bbb6b8c4d6d6c8b4a49d9da2
adb6b4afb6c8cfc6afa2a2b6bfab9d999999826d7da2b6b2b4bfc2a89282828fa4b8c8c6
c2c4c4c4b8a2898da49da2a89b928f94929294969289898fabc4cfd6d4cfd4dfe4d4ad99
a4a4b2b4a4928fa2b6bfbfb4998f9fa6a8b2c2bfa8897472797970728292968d7f6d6262
6d797d7f848496c2d8ddd6c8c2b6967b7074797d899babada68f7b707b9dbfc8bda6969b
b2c4c2bbb2b6c2b29f9d9b8670747d827d7d849fc8cdc8cfc8b28454393029292b2e2420
2022222737495d7684705d545d82b2d1cfc8c6c6cdd6d6cbcbd8e4e6d1a25d3d424b5b69
7992adbfc6d8dfdddfddd10000a69d8f96a28670799bb4bdc4bd9d8dabb6ab927f7b7f8f
998d7b7f929b92928f7d706b695d6d8fa6a4a8ab9b826b6b7b7d6d64708282869dbdc6bb
a499a6a6928694afbfb8a6a6bbc8c4af9496a8b4b2a2999fadb6c4d8d8cbd1d4d6d1bfc6
dfdfcdad9499bbdbdfddcdb4abbbd1ddddcfb49b949992a4ab9b929bb4cbd6d6c69d7260
697fa2c2c6b292869ba499a2b8cdd4d8d1bfb4b2ab948f99a2a6968b9dafb2b4cbcdb89f
928d867f7b7d7f898f8f94abbfc4bbb2b2aba6a6b2b8b4ab9f948b847d7b828499bfdfdf
d8d8cdab7d6b70828b96b2c6c2bfb2afc6dbe1e1e4dfd6d4b89274697fa6bdcdd1cdcdcb
bd9679706d6969727984a6d4e6e4cdad7f646d7f929994a6bbc8dbe1e4dfcdc6cbbfbdcb
d8ddcbaf9f999699adc2bfababc4cbbb9b8d9fc6d4bda2949b9d8266799db6bbc4cbc2a2
867b7b848b9fbfc4bfbbbdbfb49d7f7d9292969d99928d9496999b968f86899fbbcbcfd6
d6d6e4e8dfc69f929b99a4ab9f8f92abbdcbd4cbab9da6a8b2b4b2a8947b70798b8b746b
7b8994928674645d697b86867d7486bddde4ddd1cbc2a2826d666d798da4ada894766669
7699bbcdc6b29fa4b8c4bdb6bbcdd6bf9d8b7d726d767f7b6d748db2cdcfd1d8d1bd8b50
342b24272b29221e2024272b39506b8b998672645b74a8d1d1c8c6cdd6dbd8cbc8d4dddf
cfa462424b64828b898b9dadb6d1dfdfe1e4d80000af9f8d8b8b767492b2c2c4c2ad8f84
a2b6b8ab998f96a6a8a29996a4ada49f927b707272697496b6b8bfbfab82646b76726670
828d89869fc4cfc6a68b94998d7f849baba8a2a8bdc8bda8a4abb8c4bdafa4a4a8a8abbf
c8c6cbcfd1c8bdcbe1dfd4bb9d99b8dbdfd8bf9f9fb6d1e1e1d8c4a69da49fb2b8a8a2ab
c4dbdfddd1af8269728ba6b2a89684899fa69296bbdbdde1d4b6a8a8a28d8b99a49f8f8b
9bada899a4a8a29d9fa29982706d707b8694a6b4bbc2bfb6a89d969dadb8bdb4a8abafa2
8f8484899bbbd4d6cfc6b48f6d6b7d929696a6bbbdbfb8b8c6dbe1dfe1dfd8d4b68d706b
8db4c2cfdbe1e4e1cb997974747270767686b4e6f4e8cba27964697282929bafbdbfc6cf
d6cfc4c6d4c8c8d4dfe4d6bfad9b8b8ba2bbbfb2b2c6cdc2a28996bdcdb499929b967d69
7da4c2cfd6cfb4897479868b8696b8bbb2adb2bdbdab8d828f948f8b8d8b8b8f8f929494
8d868fb2c2c6cbd1d4d8e8ebd8b48d899496a4b4b2a2a2b2bbcbd6d1af9da6abb4b2a494
8474708296967b6d76828d928d7b665d708d9d927d707da8d4e1ddd6d6d1b68d6960697d
8f9b9d9d94796969728fb8d6dbcbb8b2b6b8b4b2bfd6ddcfaf8f766966727b797282a6c6
cdcdd4dddbc89b54342b272e302720242b2e2e324054708b9f9d8f765b6699cbcfcbc8d1
d8dfd6b8b4c4cdcfbf9b69576d94a6a69f9d9b969dbdd4dbdddbd80000bba88d7d7d727b
9db6c2bfb499848dadc6cdc4afa4a6afb2adaba8b4bbb4ab9d86726d70707489abbdc4bd
a4725460666466829fada29499b6cbc29d848d9d9b8d82848b92969fa8b2aba6bfcbc6c4
b8af9f8d8f9b9fa2a6adb6bfc2bbb8cbddd8cdb89f94a6c6d4cdad8d8fa6c4dfe4ddcba8
969b9ba8ada8b2bbc8dfe4e1d8bb8f747f9dafad9986828fa4a28d8fb6dbdfe4ddcdbfb8
ad9496adb6a49292a2b2ad998f929dadb4b4a88f7970747d899db2b8bbc2c4bba89b999d
a8afb6b6ada6a8a8a29b968d8f9fafb8b29f897266697b8f999296a8b8c4cbcdcdcfcfcf
d8dddbd6bd96706b86a6b8cbdde8ebe4cf9d7d797b7f7d79798dbfedf6e8c896766d6d7b
8b9ba4adb2ada4adb8b2afbdcbc8cddde6ebdfcdbda486849dbdc8bfb6bdcbcbb49689a6
c2af9b949b9b84707d9fc2d6ddcfa87b6b7d96968d96b6b49f969fbbcbbfa696a2ab9b82
82828686827f868d898292b4bdb8bfc4c6cde1e8dfbf968b999ba2afbdbdb6b2b2bdcbcd
b29fa4a8a69d998d7d727992a49f8674747d898f8d82706b82a4ad9b7f707ba4cdddd8d4
d8d8bb8d665b62727f86868f998b7b706d84b2dbe1dbcbb8b2b2adabbbd4dfdbc2a48f79
646d7b828296b8cdcbcfd6dbdbd1af6d44322e394242393434343437405470899b9d9479
5d628bb6c8cdcfd4d8ddcda49db6c2cbc2a479667b9ba8afb6afa28d86a2bdc6c8cfd600
00c2af89727679849bafb2a89b84849dbbd1d6cdb8a8a2a4a6a8adadb2b6b4afa8997966
696b6d7286a4b4ad8d624d5459596d9bbfc8bb9d8b94aba2897f94abb2a8947f7b8da2a6
a2a6a4adcfd6cfc6b6ab997d849fad9f99adbbc6bfb4b2bfcbbdafa69f9296afbfb49686
8696b4d6dfd8c29984848289929fb4bbc4d8e4e6dfcba28292afbfb89f898fabbfaf8b86
abd4dfe6e6dfcfc2ad99abc8cdbba8abb8c4c4b8a49fadbdc2bdb4a499999d9292a6b6b8
b4bbc2bdada4a6aba6a8b2b8b49d8f9fadb4ad948482828f948970666966748996948f96
adc2d1d8d4c6b6b4c6d4d6d4c4a2796b7489a2bddbebebdfc89f827d7f8486847f96c6ed
f1e8cf9d7b707486949ba2a8a492868d9b999dabb8bdc4d1dddfddd6c8a882829fc4d1cf
b8adbdc8c2a892abcfc8b29fa6ad99797689a8c4d4cdab7d7089a6a28b8ba6ab947f8bb2
cfc8b4a6afb6a4867d7f86867f7b7d86847d89a6afa8adadafc2dde8e1cfad9fa8a49da4
bfcbc6b8abadbdc8c2b2adad927b847f726d829dada68f7d7d868b8b8b847b82a4b8bbab
92848dadc6d1d4d1dbd4af8970626b6d6d767f92a29d8f7d707da6d1dddbcdb6b2b4ada6
adc6d8dfcbab9d897274848f949fb2c4c8d1dbdddbd4b889573732405057504239373939
3b54768f8f84796b60647999bdcdcfd1d1d4c69f9bb4c6d1d1bf947b7f92a4b8c4b4a692
849badafb8cbd80000b6a8867686928d898f8b827d7686a4b8cdd4c8af998f8d99adbdbb
ada4a6a6a8a47f6966696b6969768b92826050595b6279a6c8d4c49f8279767274829dbb
c4bba6867999b2bbb8b8b6b6c8d1d1c8b6a69482849db2a6abc6d1ddd4bbaba6a49b999d
9f9fa4afb6a68b827f8ba8cfdbcdad8b7b7670747d8d9fafbfcddfe6e1d4af92a2bdcdc8
b49999c2d4bf8f7f9bc8e1e8ebe6d4bba49fb2cbd4c6bdc4cdd4d8d1bbadb4c4c8c4bfbb
c4cdc4a89bb2c2c4b8b8c6cdbdafafb6b2b4bbc2bd9d8499b4c2b8a2928f8d949f9b7f6d
6969748fa8ab998d9bb6cfdbdbcbad9bafcbd4cfbfa27b69667286add4e6e4dbcbad8d79
797d898f8b96bfe6ede8d8b68b727d8f9d9d9b998d79747989999fa6b4b8b6b6bfcbd4d6
cba882849fbdcfd6bda2abb8bbaba2bddbd6bfa6a8b2a27f7076899fbfc6ad84748ba89f
867b8b8f82747fa6c8cbbdb6bdb8a2867d848f94968f898282828996999699949bb8d8e4
e1d8c2b4b6b2a4a6c2cfcbb8a8a6b2c8cdc6bfb68f727b766d6d829da8a28f8489928d86
8984899fbdc8c4bbafadb2bbc4cdd1d6dbcfab968b8284796d768ba2afa492867f8294b4
cdd1c4b2b6bbad9fa6bfd4e1d6b6a28b7d828f9fa8a49da4b8cdd8dbdbcfb68f62423940
494b4b443937393b426282968d76696962626b8bb8cfcfcfc6c6bfadb2c6d1d8dbcfa492
999fafc2c6ad9b8d84a2ada6adb8c80000adaba29da8a88f706b66666d748699a8bfcdc4
a4867f8da4bbcbc2a88f8d8d94998f847b74695d5b606d848d705b69767f8ba6bfc4af9b
8d7d6260708bafc6c8bbab9289a6b8c2cfd1cbb8b2c4cfbda696948d898fa2afc4d4d8df
dfcbaf99928f949ba6b6c2c2c4b69f8b8286a2c8d8cdaf9482746d6d76848da8c6cfdde4
e1d4bba6b2bfcdcfc4a49bc8dbc6947b94c4e4edebe1cbad9b9da6b6c4bfc2cfd8dddfdd
c2abadc8d1cfcdcbd6dbcdafa6bbcbc8bdbdcfd6c6afafbfbfc4c4c4bd9b7f8dadc2b8ad
afbbbfbfc2b8967b707486abc6bda68f8ba4c4d8dfd6b6949fbdcbc2a88b766b66708dbb
dde4dddbd8c4926b727d8b8f8d92b4dfe8e6ddc69b828d99a29f968b7b706d74829dadb8
c2bdb4b2b6c2cdcfc2a48b8996adc6cfbfa69f9f9d969fbdd6d1bda29ba89f847b84929b
abb2a2827989968b7972797b726b7b9db8c2c2c6c8b6967f7f89949fadad9d89868f948d
8b8f9499a4bdd1dbddd8cbc4c4bfafadc4cfc2a8a29fa8bdc4c4bdad8d797d79706b798d
9d9989848f92867d82899db6c6cbc8c4c2c6cbcbcfd6dbddd8c8b2a6a49f9984747b8fa8
b2a4999ba49f969db8c6bdb6c2bd9f99a8c4d6e1dbc4a68b828b99b2c4b89b8b9dbfd4d8
d8cbaf8b70573d3b3934393b3d3b3d4459768d99927b7270645d6689b8cdcdc8bbb4b8bf
cbd6dbe1e6d4a69badafb6bbb696868486a2ada4a29ba20000b4b8b8bbbbaf8662646b72
7d898f8f9fbbcbbfa28989a4b8c4c8bb9d847f7d8496abab9d8d6d5b5d606d899d82748d
9b9b94a4afa48d8d92866b627294bfcfc2a89692969fa8bdd6dbcfb69db8cfb4968b9ba2
9d969fbdd4d6d1d6d8cdb49d999699a2b6cdd1cbcdcbbda4948d96bdd6d6c2a694847270
7d8d96afc8cbd6e1e6d8cbc4bfbfc4cdc4a69fcbdbc48f7994c6e6efebdbb69b999da2a8
b6b6bfd1dddfe1dfc4a4a4cbddddd8d6d8d8cbb4adbdc8c4bfcbd6dbcbadabbbc2c6c2b8
ab8d767f99a8a8adc4d8dbdbd6c4a489828da2bdcdbfad998694b4cfdddbc4a29ba2a49d
89767272727b9fd1e8e1dddde1cf996b747f8b8b8b92b2dbe6e6dfc6a496a4a2968f9292
897b797f8da8c2cfcfc4b8b6bdc6cfcdbdada499929fbbc6bdaba49b94929fb6c8c6ad8f
89969489929dabafa69d948b8b8f8d7b7070767469667b96abb8c4cdcbb28f7d849299a2
afb2a48f8d9b9d9294a2a4b2c2cdd4d6d6d4d1cfcdc6b2a6b8c4b69f9d9d9d9fa2abafa6
8d797f7b746d707f929486828f8b827f8fa4bdcdcfc8c2c2c4cbcfd4dbdfdddbcbb6adab
aba69f897476899ba4a8b2c2cbc4ada2adb6b6c2c8bb9992a4c2d6dfd6bf9f8684929fb8
d1c6a48996b2c2c4c4b89f82796644393230323d44474b5b768f9d9f997f70695d5b668b
b6c4b8ab9fa2b2cbd6dbe1e6e6d1aba2b2b4b4afa68f868b96a8afada89d9d0000b8bdbf
bfbdad8669747f96adafa296a2bfc8b4998d9db6c4c6bfa899949289899fc2c8bbad8666
6064748d9b8b92b6b6a89fa49d867479868674666d92c4d1bb96868d92898dabcbd6cbb2
a2bbc8ab8d8496a6a69d9fbdd4d4cfcfd1cbb8adb2b4a8a4bfd6d6cdcfd1cbb8a49292af
cdd6c4afa49b7f7f94a4a8adb8bfcfdfe6ddd8d4c4bbbfc8bfa6a2c2cfb6897696c6e1ed
ebd6ab96a4b2bdc2c2b6bfd4dfdfdfdbbb9694c2dde1dfddddd6c8b8b6c2c4bdbfd4dddf
d1b4a8b6bdc2bbad967f7276848b8fa6c6dfe4e4dbc4a48d8fa6b8c2c2b8af9d8b8ba6c4
d4d8cbaf9f9486766d7070747986a4cfe1dddde1e4d8af84798289827f8db2d6e1e1d4b6
a2a6b6af96868fa4a492898da2bfd4ddd6cdbfb6bdcbd4d1c4bdb8a496a2bdc6bfb8b8b6
b2afafb8bfb2998484868689969ba6ada49b9b9b9b9d9986726b706b5d5d728da2b4c2cd
c6ad8d828f999da2a8ab9d8d8b92928fa2bbc2cbd1d6d4d1d1d1d6d6cfc2a6949fa8a8a8
aba69b8b8694abab92797b7b79726d7b8d9282828b868b9db6c8d4d8d4c4b8bdc4cdd4dd
dfdbd4d1b89b9da4a8aba48d7b848f949fbbd4dfdbcfbdadabafbdcdcfbb9f929bb8d1d6
c6a68b8696a6afbdcdc6ab929ba8a6999b9d927b746b52443d3d3b3d444959728fa8b2ad
9d82695954596b8fadab96868294b6d4dddfe4e6e1d1bdada8a8a8a8a89fa4b2b8b2afbb
c6c2bf0000b8bdbdbdbdad8f797f94b6cdc8b8a6a6bdc2a68986a6c6cdc4b29ba4b8b8a8
949fc4cfc6bfa27b60667d94968b9dc4c6c2bbab896b64708692826d6986bbcbb496929f
997d7da2c6d1c4b6b8c8c29f7f768294a2a2a4bfd4d4d4d4cfc4bfc4cfcdb6a6b8d4d8d1
d4d4cfbfab9da2b2c2bfa89d9b94848da6b2ab9fa4b4c8d8e6e4dfd4bdb4bdc4b6a49da8
afa286768bb4d6edebd4afa4b8cdd8d8cdbbbdcfdbddd6c6a2868dafd4ddd8d8d8d4c6bf
c2c4c2b8b6c8dde6dfcdbfc4c8c2b2a6968476797f828496b8d8e6e4d4bd9d8992b2bfbb
b2b4ad9d8f869bbfcfd6cfbda899846d666d6d767f8fa2c4d8d8dde1e4ddc8a27b7d867d
7986adcfd6cbb49b99b2c6bf9f8996abad9d8f92add1dfe1e1dbcbbbbfcbd4d4cfcdc2a4
99a8c4c6c4c8cdcfcbc6c2c4bb9f8f949b8f827f8b8d929da4a69f9fa2a6a4967d6b6660
5b5d697f99adc4cdbf9f848492999b9fa2a29489827d7b8dadcbd6d6d6d4cfcdcdcfd6db
d4bf9f89898d9fb6bdb29b898292a8ab947976797d7b767b827f7b7d868ba6c6d6dbdddd
d4bfb6c2cbd4dde8e4d6cdcfb8928b8f9da6a29ba2b2afadbbd1e4e4d8c6b8afadb6cdd8
cfb8a4969fb6c8c4a689849bb6c4c6c4c8c6b8a4999689747b929b89796b5d524d4d423d
40506684a4b6b8ada296765450577096ada48672769bc6d8dfdfe1e1dbd1cdb8a29d999b
9fa2b8d1cdb6afc4d4d6d40000b8b8b6bbbfb49d847f96bbd1d4c4ab9fa8b4a88b829dc6
cbb49b92b2cfcdbd9f92b4c4c2bfab8462708d9d968b9bbfcfd4cfbb8f69606b84948974
6b86b4bfab9da6b8af8479a2cbd1c8c4cbd1c49d7b6d748da6afafc4d4d6d1c8bbadbdd1
d8d1bbabb6d1dbd4d1d1cfc2aba6b6c4c2a88682827d7f8d9da29f928999b8d6e6ebe6d8
bfb4b6b8ab9d9b94999686767b99c2e4e6cdb4b6cfdfe4d6c4b2b2bfc8c8bfab8f848d9f
bfcbc6c6cdcfc8c6c8c6c2b2a8b6d6e8e6dbd1d1d4c6b4ada68f7b7d82827d92b2d1dfd6
c6af96828badb6afadada8a29d8d94b4cbd8d4c4ab9684726b707686969b9db4cdd1d8dd
e1e4d8b48686968f7b86abc8d1bd9d868fb2cdc8ab92949f9b8d868ba6cfe1e6e8e1d1bd
bbc4cfd6dbd8c6a699adc2c4c6d1d8dbd6d1cdcbbfa49babb8a68674797d869dafada2a4
abafaba28f7966606469697994b2c8cdbb947d7d868f9294948f847d79727696b8d1dbdb
d6d1cdc8c6cfd8dfddcbad8f7f849fbbb8a4897b7b94afad9d897d828b8f8d84766d707b
848db6d8dddddddbcfb8b2c6d4dbe4ede8dbd4dbcba2847d8b969fb2c8cbc6c6d4dfe4db
c6b4adafb6c6d6d8c6afa6a2a6b4c2af92828fb2cbd1d1cdcdcfc8b4967f706b7494ada6
8d766d5d5959504d505b70899fb2adabb4b896665757749bb6b4997b7fabd4dddddbd8d4
cbc6cbbba6a49b8f7f89afcfcdb8b8cfd8d8d80000b8afb2bbc2bba68b7b89a8c4cdc2a6
9294abb69f868dadb49d848fb6cfcdbd9f92afb8afaf9b7d6b84a2a8998999bdd1d8d4c4
9b72626979827f7b7f96b6b6a29da8b8b2897da4cdd1cdcfcfd4c8a27f70768dadb6abb4
c4c8c2b2a296adc4c6bdafabb2cbd4cfc6c6c6b69f9fb8cbc8af8d79747b8f9b94898b7f
6d7babd6e4e8e6dfcfbdb4ab9f9fa49996998d767084abd4d6bdb4c2d8e4e1cba89da2ab
abadaba2998d898d969d9da6c2d6d4cfcdcbbfada4b4d1e4e4dbd6d8d8cdbfb6ad947f86
8f8d89a4c6ddddcbb29d8d7f849fa4a2a8a8abafaf9d94a6c8ddd6bda28d7f7472798baf
bdad969fb8c6d1d8e1e6dfc29994a69f7f84a8c8ddd1ab8b8babc8cfc6ad94897f797f86
9dc8e1ebede4cfbbbbc4cfd8ddddcdafa4adbdbfc8d4dbdbd8d6cdc6bba8a2afbfab8466
646982a8b8b2a4a8afb2afa89f8b6b6266666b7b96b4cbcdbb997d7479848b867d74706b
696b7ba4c6d6dbd8d6cfc6c4c8d1dbe1e1dbc8a47d798fa4997f6d6d799bbbbdbbaf9fa4
a8adab9b7d6b72828994bddddfddd6d1c6afadc8d8dfe6efede1dbe1cda48d868b8d9dbf
d8d1cbcfdde6e6d4afa4a8afbdc6cdc8b8afb2b2a89fa49d928d99b6cdcfcdcdcfd6cfb6
94767076829db4b6a6968d726d7066696664728499a6a4a8bfcbaf7b6260799bb8bda689
8bb4d6dbd1c6bdb6afafb2aba6a8a2896b7092b4bbafb6cdd4d8db0000afabafb4b6b4a4
8d7f8296adb8b6a28d9bbbc8b28f84929b8f8292afc2bdad9fa2bdb49b96847479a2bbb6
a699a4bdcdd1cfbd92695d6972747f96a8b4c2bba6969ba2998994b6cdcfcfd4d4d4c6a2
867976849fada6abb6bfbfb6a6969babb4afaba8abb8bfbbaba8a89d8f99b6c6cbbd9d7d
7486a6af9f867b6b5b6ba8d8dfe4e4e4d6c4af9f949da4968f928d796b799bbfc2adb2c6
dbe1ddbd8f8dabb8abadb4afa492847d79767f9bc6e1dfd8d1cdbba6a2b8d1e1e4dddddf
d8cdc2bba68d7f8b9b9b9bbddde8e4cba6898279798b8f8f99adb8bbb8a899a4cfe1d1a8
8b7f7b797989a8cdd8c4a6a8bdc2c2c8dbe4e1c8a2949fa48f96b2cbe4e1c4a49fb6cbd8
d8c4997d797d8d96a8c8dbe4ebe4d1bfc2cdd8dbd8d6d1c2b4b2b4b4bbcddddfdbd6c6b4
a29496a6b49f7b60575d7fafbfb8abadadafb2afa892705b5759697b8fa8c2c8b8967b6d
707f898472666260606684b4cdd4d8d8d4c8bdc2cbd1d8dbdfdfd8bb8970707472696974
82a2c2c4c8c6b8bdbfbfbbaf8f6b6d828fa4cbe1e1dbcfc8c2b2afcbdbe4ebf1ede1dddf
bf949b9f968d96b8d4d6cfd1dfebebd4afabb6bbc6c8c4b4b2b4b8b8a284828d96969faf
b8b8b6b6bdc4bfa88d7976849babafada6a6a48d8d947f7972697992a6adadb2c4cfb484
6d7089a6b6b49d848bafc8c6b6a69da2adb2a4969bada6896b66798d96969dadb8c8d100
009ba6ada4999d998b898994a2a6a29489a2c6d1bf997f7f828b99a8b6b8b2a29fafbfab
847b747284b2c6c4bdb4b8c2c6c6bda279595764707b94b6cbcdcdc8b8998984828dabc6
cdcbc6cdd4d4bf9d867b747f8da4bdbfc2cbcdcdbfa89babc4c6c2bdb8b4aba299897f86
8999b2bfc8c2a682768ba6af9f897462526096c8dbe4e6e4dbc4a68d848486847f848979
707d9fb6af9ba4c2d8dfd6b28486b4cdbfb8b8b49f948b7b727284a8cfe4e4ddd4c6af9f
a2b6cbdfe8e1e1e4ddcdc2b8a2897f949d9da8cbe1e8e4cba27b7979797f82828db2c4c2
bba699a6cfe1c88d6d6b727f8496bfdbdfd1c2c4cdc4ada4bbd6dbc6a6929fb2adb4bbc2
dfe4cdb4b4cbd8dbd8c89d848494a2afbdcdd1d8e4e1d6cdd1d8dfddcfcbcbc6bdafa8a6
adc4dbdfdbd1b4968279849ba692745d545d82b4c4bfb4b2ababb2afab997657494d6072
8296b2bbad9479696b7b8b8d82797064647094c4d4d1d1d1cfc6bfc2c8cfd4d6d8dbddcf
ab84695d5b6472828fa6b8b2b6bbb8c6cbc6bfb49669627992a8cbe1ddd8cdc6c2b6b8cd
d8e4edf1e6d8d1cbad92a2ab9f8b89a4c6d4d4d6e4ebe6d1b6b4c4cfd6d8cfbbbbc2bdb4
997b7989969fadb4ada4a4a49fa49d8f7f7b7d8ba2aba2928b99a49da6ab8f7d7272829f
b8c4c8cbcdcdaf867686a6b8b29b847b8499a29b928f94b2c6c6b2999fbdb69b7d707476
7b8994999dadbf00008d96998d868f96929299a29f96897d7f99bdd1c29d7d76768fbbc8
c4b6ada8afbbb69d7d70747d8db2c8cdcbc8c6c6bfb29d826454576272829dc2d6d8d6d6
cdab8b7984a6c2cdcfcdc8cbd1c8ad8f7f797b898fa8d1d4d1d4d1d4cbb8a8b6cfcdcfd1
cfbda8a29d86747d8694a6b8c4cbc29d8286999b8b7d7670625b7094b8d6e1dfd6c4a689
746d6d7b848d8b7b707fa2b2a28989a4bfcdcbad8484abc8c2b6aba29699967d70768fb4
cfdbdbd1c4af9f9da4adbbd4ebe6e6e6dfcdbfb89f86849ba6abb6cddbddd6bb8f6d748d
998b7d7682a6c2c8b89b8fa8d1e1c4846462708f99a4c6dddfd1cbcdd4cda88b96b6c2b2
9d96afc8c4c2b8afcfd8c4b2b8cfdbdbd6cba88f8999abb8c4d1cfcfdbdfdbd6dbdfe1df
cbbdbfc6bbada6abb8c8d4d6cfbf9d7f706d86a6af9474625d698bb6c4bfb8b6b2adadab
ab9d7d59474b546476869b9f9689726064748b9b9b948679768bafcdd4d4d1cdc8c6c6c6
cbcfd4d6d6d8dfdfcbab7d5d596476898f999f9699a8b8c6cbc6bdad8f6b606d89a4c6d8
d8d4cdc2b6b2bdd4dbe4f1efdfc4af9d9499a8ad9d847d94bbcfd8dfebe8d8c2afb4c4d4
dfe1d6c4c4cbc4ad9482767b8da8bfcbc2afaba69fa6a89d8f8b8b8f9fa69d867d8fa8b2
b2a8927b6d7284a4c2cdd6d6cfc6a889869bbbc4ad867074828d8b7f7f8494bbcfcdbfa4
abcfcfbda48476767f9fb2ad9d9fb80000a69686828d999fa2a4a8a699827474829dbfcd
bb967b797999cbd1c6b4afb6c6c8b29b8d82828694afc8d4d4d1cdc8bb9f8474665b5960
6d7d8fb8d8e1dfdbcfb2928499c2d1d1d4d4d1cfcdb89b8272707b8f929fc8d8d8d4cfcf
cbbbadb8cbc6cfdbd6c2b4b4ab927f898d96a6b6c4d1d8c2a296a492797d8b9489796460
799fc2cbc4b8a88b7066728299a2967d6d7694a49d897b849db2bfb49992a2bbbfab928d
8f9b9b8279829dbdc8c4bdb2a2929299a2a4adcfefebe8e6dbc6b4ab92827f94afbfc6d4
d4c8b696766b7da4b8a689767b94b2bdaf8f89add6e1c68d6962799fa8afc8d8d8cbc6cb
d4cda88f949f9f928b96b8d1cdc2ab96abb6a6a4b8d6ddddd8cdaf8f7d899fadb6cdcfcf
d6dfe1d8d6dbe1dbc4afadb4ada6afbbc6c8c6c4b69b8b7f797692bbc4a27d706b7696bd
c2bfb8b4b2afa8a6a69b7d60545962707b82847b726b5d545d728da4ab9f8f898ba8cbd1
d1d1cfcbc6c8cfcdcdd6d4d4d8d8dbddd6c69f725d647d8d8d847f8692a4b8bbb6b2ad9d
826d646d86a6c2cfd4cfc4b8adadbbd1dbe6f1edd8b694828494a6a696827689afcbdbe8
eddfc6aba4afc2d1dfdfcdb8b8c6bfa2897d707286a8c6d6d1bfb6adabc6cfc4b4a4948f
9fafaf9b92a8c8cbb89f8d796b748dafc4cbd1d1cdc2ad9da2afc2c6ab86747f99a6a292
7f7d8fb6cdcdc4abafd6dbd6c29476768fb6cbc2aba6bd0000c4b4968b9fa4a8afb4ad9b
866d6b7b94b8cfcdad89767b7f9bc6d1c8b8bbc6cfc6ab9b9f998b828da6c8dddfdbd6cf
bd9f84766b605d646d7b96bbd4dbd8cfbfa48f8fabcddbd8dbdbd8d1c6b2967966647282
828db4d1d8d1cdcbc6b4a2a8bdbdcddfddcfc6c8b6998d9fa2a4adb6bdcddfd6bdadb296
767f9dadaba88b6450648ba6ada89d8d79727f8da4afa4846d748b9b9d96827d8ba2b4bb
b4abb2c2c8b89f8f929f9b898692a2b6b8a8948984828996a4a8b6d8efebe6e1cfb69f92
827b7d8db4c8cfddd6c4a88472768bafc6bda896949ba29f96868bafd8e1cda2766d7f9b
abbdd4d8d4cbc6c4c6bfa69fa89d8f827f8ba6c4cbb894797d898b9bc2dfdfddd6cba882
6d768b9babbfcbcfd8e1dfd1c8d1d8cdbdaba2a4a8adb6c2c8c4b6af9d82898f867f92bf
d1b492847f8299bfc4c2b8ababadaba8a2947d727076899ba29482706259524d597692a2
ada4928b92afcfd1cfcbc8c6c4cbd1cfcdd1d1d1d6d6d6d6d6d1bd9b7b7b94a499847f8f
9ba6b4af9f928d82767974798ba8bbc2c2b8afadadb2bbc8d4d8dddbcdad8d7f8da2aba4
94827482a2bfdbe8ebddbfa2a2abb8c4cbc2afa2a6b4ad927b726b7992a8b8cbd4c8c2b8
b8cdd8d4c6b29d94abbfbfb2afc6ddd8c2a6927f7482a8c2c6cbcfd4d1cbbfbdbfb6b8bf
b49b8b99b6c8c6b28d7686a2bbc6bda8abd1dfddc899797d9fbfcfd1c6bdc40000cfc8ab
9fb6b6b6bbbbab8f7966667b9fc6dbcfad86797b7d8bafc8c8bfc8d4d6c29f949f9d8f7f
8299bfdbe4e1dfd8cbb49984726260727f8fb4d1dbd4cfbfa8948b9dbbd4dddfe1e4dfd1
c2ab9276696d74767686abcdd6cfcbc2b69f8d94a6b2cde1e6ddd4cfbb9b8fa8ababafb6
b4c4e1dfcdbbb6997982a8bfbfbda4794d506d8b9b94898b898d9499a6b2ab8b747b8999
9fa296898999adbfcbc6cdd8d4cdb69b999d9d969996949d9d928b8f948f8d96a6afc6df
efebe6d8c4b6a2928d868294b6cdd4e1dfd4c2a289848fa6bfcbc6bfbbb2a492868496b6
d8e1d4b6998d8f96a4c2dfddd4c8b4adadb2b2bbbda692827b8496afbfb28d6d69747f99
c4dfddd8cdb89270646d7d92a8b8c8d1d6ddd6c4bbc2c6bdbbb2abafbdc6bfbbbbb8a89b
8d828f9b968d99bdd8c4a4948f8996b6bfbfb6ababadaba694848282828ba8bdbdab9482
766b5b5054748992a8a4948b8ba6c8d1cdc6c4c4c6cdd4cfcbcdcfcfd1d4d6d6d8d6cfbf
aba6b4bfb49b929da2a4aba4927f76727684847f8ba8b6b4af9f969babb6bbb8b6afabb2
ad9b8b8ba6c2c2ad9484767d96b6d4e6ede8cfafababa69f9b9694949ba4a29992867b89
a2ababb6cbc8c6c4c6cbd1d4cdc2ab9db6cbc6bbc2d6e1ddcdb8a2897d8fb8c8c6d1d6db
ddd8d4d4d4b8adbfc2b2a2adc4d4d8cba27b82899badada8afc8d4d4bf927b8bafbfcbdb
ddd6cd0000d4cbb6b6c8c4c2c6c2ab897266697da4c8dbd1b496867b72768fb6c2bfcfd6
d1b88f86999d94827b8db6d8e4e4e1ddcfbba694766062798fa6cbdfe4dbcdb8a28f8ba8
cdd8dddfe4e8dfcfbda68b767684897f7984a2c2cdc6bdaf9d89848994abcfe8e8dfd4c8
af948b9b9f9f9fa6a8bde4e1d1c4b8997982adcbcbb4895d4b5b7b9496867d92a8b8b6ab
adb8b499868686949da4a69d949db2cddbd8dbe1dbcfbba6a2abafa69d948d99999299af
bdafa29fabb6cddfe8e8e4d6c6c2b4a29d928692adc6d4e4e8e4dbbf9f8f999fafcbd1d1
cdbdab968692adc6d6dfd8bfb2aba8a4a6bfe1e1d1b89b949fb4c6d4d6c2a68f828d9faf
bdb696726970768bb2cfd4cdb8997464646d76899fafc4cfd1dbd8c6b2afbbbfbfb8b4b8
c6cdc2aba6afa48f828696a2a4a4a6bdd6cdb29d968f8fa4b4b8afa8a6a49d9279708286
828db2c8c4b49d8f89796454546674829fa294898299bfcdcfcdc8c8cbd1d1cbc6cbcdcd
cfd6d8d8dbdbd8d4cdc6c8d1cbb49da2a49d96897d7272727b8b897f829fafafa8948d99
adbdbdab8f7b7b868b898b9dbdd6d8c29f82747689a8cbe4ededdbbdb4afa48f868b9292
9499a4b4b8ad9da2afb2a8afc2c4c4c8cdcdd1d6d6cfb49bb4cbc4b4bbcfd8ddd4c2a88b
7f94b6c6cbd6dbdddfdfdddbd6b6abc4c8c2b4b8cbd6d8d4b28d867d8496a8b8bfbfbdbb
ad8f8499b8bfc6d8e4e1d60000cfbfb6c2cdc6c6cdc4a279696d798ba8c8d8cfb2998b74
69697996afbfcdd6cba8867d8b8f897b7992b8d6e1dfddd6c4b2a89b76595d728dadd4e1
e1d6c4b4a4948fadd6dddddde1e1cfbbb4a28276829ba2947f7b899dafb6afa69b949294
9db4d8ede8dbcdbb9d8b8684898b8f9296b6dfdfd6cbb692747fa8cdcfab6b4450698da6
a28982a6c6d6d1c6c2c4bda4948f86898d9bb4b8adafc6dde1dfdfe4ddcfbfb4b2bdbfab
998d92a8b4adabc2cfbfafabb4bdcfdbe1e4ddcfc6c8bda4998f8b8b9bb6d1e4ebebe4cb
ad9fa8a6abc8d6d8d6cbbb9f8ba4c8d8dbdfd8c4b8b6b8afa8b8dde4d4b6968fa4c2d6e1
e4d6bd9f8b94a8b8c2bba68b7b767686a8c4cbc4af8f72666d767f8996a2bbcbcfdde1d4
afa4b2c4c6c2bbb8c4cbbb9d99a8a6948694a8a89f9fa4b6cdcbb8a6998b89929fabada6
9f947f706264767f7b84a8bdbbad9d948b766257575d667b969f92868294b4cfd6d1cfcd
cdcfcbc4c2c8cbc8cbd1d6dbdfe1e1dddddbd8d8cdb4a2abaf9f7f70696972797f847f79
7b92a4aba69494a4b8c8cdb6896b6d74828b9bafc8dde1cfa67f6d6d7996c2dfe8ebddc8
bbb2a8999ba8ad998f96a8c2cbc2b2abafb2adb4bbb2b6c4cdcdd4dbd8d1b494adc2b49f
9ba8b6cdcdb89d7f7689adcbd6dbddddd8dfddd6cfb4adc2c4c2b8b8c8cfcfcdbb9d8674
768dadc4c6bfb4b2af9b92a4bdc4c4cfe4e6db0000b8a6adc4cdc4c4cbb689626b8499a4
b4cbd6c69f84796b66666d7da2c2c6cfc6a68b7f7d79706b799fbfcfd8dbd8cbb4a8ab9d
725257647fabd6dfd8cdb4a8a29492add1dbdbdddfd6bfadab997b72829da8a289747279
8da6b2b8bbb8ada6abbfdde6d8cfc2a88d847f72798b9b9994abd1dbd6c8a482707b9dbd
c6ad866964728b9fa29292b4cfddddd6d1cbbda4928d8f867f94b6c4bfc4dbebe6e1e1e6
ddcdc2c4c4c6bb9d89828dadc6c6bbc4cbbba8adbdb6bbcbdbdfcbb4b8bfb89b86868d8b
92a8c8e1ebe6dfcfbbadada4a2b6cbd6d8d4bf9f8ba2cbdfdfdfd4bfb6b8bbaf9fa8c8df
dbc29f92a8c8d8e1e6d6b6968b94abbdc6c4bdb299848499b8cbc6bfbbab8f848684898f
949badbdcbdbe1d8b8a4a6b4bbbdb8b2bfcbc6b2a29fa49694adbbaf94898fa6b8bbb6ab
8f7f82898f9fafb2a88f70625b5b666b6b748fa8afa89d968d7666626060647692998b7f
8b9fb4d1d8d1cfcdcdcbc8c4c2c4c6c6c8cdd1dbe1e4e4e4e1e1dfd6bfa6a4b4bda67d66
66728492928d8684848694a2a2969badbdcfd6c69d7b74768496abbbcfdfe4d4ad82706d
748db4d4e1e6dfd6c6af9b99a8c2c29f8d94a6c4cfc6b4aba8abababa6969fb4bfc4cdd8
d6c8a68fa4ad9b89848fa2afaf9f8979707da6cfe1dfdfdbd4d8d8d6cdb8adb6bbb6b2b8
bdbbb8bdbba47d666982a6bfcdcfcbcbc4ada6b4c6c4bdc6e1ebdf00009b94a2bbc6bbb6
bba6795d769bb2b6c2cfd4bd927474726b6264729fc6c8c8b89d8679726d6b6b7fa8bfc4
c6c6bfb2a4a8b2a272505b6b8bb6dbdfd4bfa49b9b999bafcdd4d4d4d6cdbfafa69d8b79
7f99a8a48b74708299abbdcbd1cdbdb4b6c4d8dbcbc4b49b89827b72768da4a6a8b8cfd4
d1bd8d7472798fabc2c2b6997b79848f9b99a6c6d4dddfddd4c8bbab9f9fa494848da8bd
c4cde4f1ede4e1e4dbcdc6cbc8c4af89797b8babc8cfbdb4afa69dafc2aba4afcbd8bd9f
afb8b4a4928b8d8b8f99afd1ddd4c8c4bdb2a69b9294abbfc8c6ad8f8994b6d6dfd8c6b6
b4b8b49f8d94b8dde1cbab99a8c8d4dddfc6a2898d99a8bfc8c8c8c6a88d8fabc6cbc2bf
c2bfb8b6b29f928f999fa6b4c6d4ddd6bfb6b6afa4a2a6a6bbd1d6cbb8adad9999bbc4b6
967d828f929fafab8470707b89a2bdc6b89470625d60696660647b9bafb2a2948d7f746b
64646b7d9496867f8da2b2cbd4d1cdcbcbc8c6c4c4c2c4c4c4cbd1d8dddddfe1e4e1dbcb
afa2a8b8bfab8b7b7d899fababa49d928479849daba8a6adb6c8d1c6a68476798496adbd
d1e1e4d4b28b7670768999afcbdbe1e1d1a884899fbbb899898d9dbbc8c4b2afb8bfb4a2
969296a2adafb8c6c2ab8d899b9b867f89a6b49f8f8d847b747da2cbdfe4e1dbd4d1d4d1
c8b6a8afbbbfc2c8bba8a2adb4a2796062769bb8cddfe1ddcdb2afc2cbc4b8c8e1ebe400
008b929babb8ad9d94866d5d749dbbc2c8cfcdb28b798284705b5d6d9dc6cdbfa4897469
62646d7989a4b4b4ab9f8d828da4b4a674576986a8c8dfddcbad9d9ba4afbbc6cfcdc2bb
bfc4c2b4a8b2b2998b94a296847d8fadbfc2c6cdcfc8b8bbcbd1d8d8d1c8b49f948f8b7f
79869ba6bdcfd1d4cfb6866d70798dafcfd4cdb28f7d7d86949fb8d8dbdbdfdfd1c4bfb8
b4afafa294929db2bfcbe4f4efebe8e6dbcdc6c8c8c6af84747b869fc4d1b89b8d949fbb
c6ada2a2b2c8b49fb8bdbdbbb4a89b928f8b8fabb6afa8a8afafa69b928692a6b4ad9486
949da8bdcfc8b6b4bfc6bb9f868fbfdde1d1b4999fc2cbd6d4b299949ba4b2c2c4c2c2c2
a68f99b2c6c6bdb8bdc6d4d6d1c4a8969dadb6bdc8cfcbc2bbc6cdb692828994b2cdd6d1
c8c4b89d9bbdc4b6947f8d8f76849da282645d6d8bb2d4d8c29469606b79847969667b9d
b6b6a28d8b897d7072747984999d94898f9dabbfcfd1cdc8c8c8c6c6c4c2c2c4c4cdd1d4
d6d8dbdde1e1d4b8a29ba8b8b8a89d9b9fa4afb6b6ab96867d7689a8bdbdb4ab9fa8b6b4
947672748296afc2d4e1dfcdab89747076848489a4cfe6e8d6a47d7f92a6a8948d929fb2
c2bfabafc8d6c6b2abafa6a2a8a2a8ab9d86797f8f928b8d96b2bf9f898b8b847d89a2bf
d6e1e1d6c6c4cbcdbfa69dafc8d4d6d8c29f8b96a8a2846b627292abc8e6e8ddc4a4a4bb
c4b8afc2d8e4dd00008f999da2a89d86726b625b6b8bafc2c8c8bfa27d76898b72575b70
9bbfbda889706459505972868d949694897b6b627699ad9f79647699b8cfddd6bb9696a2
b2c8d6d8d4cdb6a2abb8c2b6a8b6c4b4a8a6a28b8296bdd1d1cdcdcbc2ad9dabcbd6dfdf
dbcdb6a49ba6ab99827f8f9fbdcfcfd4cbb28b706d7d9fc4dbddd1b8947d767b899fc4df
e1dddfdbcbbfc4c4b8aba8a6a4a6a4a8adb4d6edefefede8d8cbc4c8cfcfb88d79797b89
abc2ab8b829bb4cbd4c4b29f9da8a8adc8cdcbcbcbbfab968b84828d948d8992a4b2afab
9f8d8b99adaf9d92a4afaba6b4b2adbdcfd4c8b29499c6dde1d6b4948fadbfcdcba6999f
a8b4bfc2b4adb2b6a49296a8bbbdb6afb6cfe4e6dfd8bfa8a6bbcbcdcdc4ad99abc6cdb4
89767d828dafd4d6d4cdb8a4a2b4bdb6a294a4a68b7f868d7b66607299bfd8dbcb9f6d64
79949b8d74708babb6af968b9492827b86867d8296a29b8f8f969fafc6d1cdcbc8c6c6c4
c2c2c2c2c6cbcdcfd1d4d6dde1e1d1af9294adb8b4a8a8afb8bdbbb8ad9982797b7b92af
c2c2bbab8b828686766b7279869bb2c2d1dbd6bf9d7f74747b8282849fd1ebe8d4a88b8f
99a4a2999ba8b4bdc4bfa6a4bdd4cfc2c4cdc4b2adaba696847d7f828b8f99a4a6afb89d
8d8d8d868da6b4c2d1e1e1cbafadbfc6b69b94b2cfdbdde1d1ab848499a6a2867070869f
c4e4dfcfb89f9ba8b6aba2abb6c2bd00009fadada29d94827474665d64748da6adb4ad94
706b7d7b6959647b99a496826b5d5d575057748d8d7f726b64625b576984968d827b89a8
c2cfd1c2a48f949da8bfd4dbd4cbad8f99afc4bda2a8bbb4bdbbab8d8badd4dbd6d6d4cb
af928694adc8dbe1ddc6a899a2b8bfad8f86929bafc2cdd1c8af8f747086afcfddddcdab
84706d747fa2cde6e6ddd6cdbfbbc6c2af9d9ba2adb4aba6a2a2c4e1e8ebe8dfcdc4c6cd
d4cfb68f7f7f797684948b7d849fb6d1e1dbc2a49ba2afc2d8dbd8d8d4c6ab8f86868999
96847986a6bbbdbbaf998992afc4bdadafb4ab999d9da4c4d6d8cfc2a8a2c2dde1cfa486
8699b4c8c2a299a6b4c2c4b8a6a4b2bbaf998f9dadb6b4afbfdbe6ebe6d8cbb6abbbcdcf
c4b4967f94adb29d7f747b70698dcfdfddd4c4b4a8abbbc6bdafb8bda68f82868984797f
9fc2d1d6cfb486707b969d8d797d9bb2ad9d8b8f9d8f7d82928b7b7d8d96928d8f96969f
bdd1cdcdc8c6c4bfbdbdbfc2c2c4c6c8cdcdcfd6dfe1d1a88b99bbc8bbadb2bfc8c8bda8
96897d7b7d7d8ba6b8bdbbad8b7064666d79868d969fa8afc2cfc6af9b92898482898b8d
a8d1ebe6d1ad96a2b2b6ada4b2c2c6cbc6b6a29fb2cbcdcbcfd6d1c2b4bbb69d929faba2
99949badb4bbc2b2a29489869dc2cbcbd1ddd8c2a6a6b4b8a89496b4d1dddfe6dfbd8b7b
86a4b6a28479849bb8d4cbc2bfad9fa4b8b6a69692948d0000a8bbbdaf9d8f8989847269
727982898b94998b6d6062605b5d7284928f7d6d605b6260575264767666524b47474950
5b6b767d8f9494afc2c8bd9d898b8d8f96a8c8d6cdbf9d7f869fbbbda69da4a6b4b8ab94
8fadd1d8d6d8d4bf9d86898f99b4cbd8d4bb9d96adc4cbbfa4969b9babc2cdc6bdad8b72
6d84a6c4d4d4bf9976666d7b92b6d8e6e1d8cdc4bdbdc2b8a48f8f9ba8ada29da8b2c4d8
e8e8e4d4bbb8c2cbd1c4a68d92998b7b7072767f8d9da8c6e4e6cdada4b2bfcde1e1dddd
d6c4a89492969daba2847692b6c8cbc4bba8929bc2cfcfc4b8b2a494969ba8c2d6d8d1c4
ad9fb2d1d8bd947f8999bbc8b69292b2cbd1c6b6b2b6bfc6bfa89496a2abafb6cde1e8ed
e6d8cfbba6adc6cdbbad9682868f8b7b707070625982cde4e4ddd1bfadadbfcdc8bbbfc8
bba89296b4b89f8d9fbbc8d1c8b48f6d6b7d827d79869ba2998d898d8f84797d8d867679
7f827f848f999296b4cfcdcdc8c2bfbdbdb8b8bbbfc2c4c6c8cdcfd4dbdfd4af8d94bbc6
bfb2b4c2cbbfa88f827d7f8284868fa2b4b8b4a2826d646674899b9f9d9b9994a4b6ada2
9faba8998b92969db2d4e8ebdbb69dadc2c2b4b6c8d1cdcbb8a6a4adbdcdd4d6d6dbd8c8
b8c6c6b6adc4d4c4b6a49ba4b4c6d1c8b69f898ba6c6cbc6c8cfc8bbafabada8968d9bb4
cddbe4e6ddb88b7d8299bbb69d8b92a2b6c4bfc6cdb8a6afcbd4bfa49284760000a2b4b8
b6ad969296867674828f94928d8f948f765b5052576b86949f9d866b5b60626054474952
54493b3734373b47526070849da299a8bbbba484767d868992abc6d1cbbd9b7b7d96afbb
b4a28d8b9fada6998d9dbbcbcfcfc8af8f8b94999fbbd1d6cbb4a4a4b6c6cfcdb8a29999
adc4c4a89d9d7f706d768ba8c4c4ab8974667086a4c8dfe1ddd4cdc8c8c6bba89484848f
999692a4c2cbcfd6dfe1dbc6adabb8c6cbb69b94a4b2a8927d8296a2a4a49db2d6e6d1b2
a8b6c4cfdfdfddddd6c4afadadadafb29f827b9dc4d4d1c8bdab94a4cdd1d1cdbdab9b99
a8b6bbbfcdd1c8b49f9bafcdd1bd9f8f8f9fc4cfb48d8db8dbdfcdc2c6cbc8c8c8bb9f94
969fa8bdd8ebedefebdbcfb49ba2bfcdbdad9d948f8f84706b7272645d89cbe1e4e1dbc6
b2b6c2cbc2b8c2cdc8b8a2abd1cfad8f99abb6cbc2a88b6b62696d7076848d928d898482
7f7d7b7f827b747676726d74848d8992b2cdcdcdc8c2bdbdbdb8b6b8bdbdc2c6cbd1d4d4
dddfd8bd8f829dabafadafb8bbab8f7d7b828d969b9fa8b4b8afa4967d706d6d798b9da2
9b8f847f89948d8f9db2b8ad9d9ba6b2b8d1e6ede1bda6b4c4c2b6c4d1d1c4b4a6a6b8c6
cbcfdbddddddd4c4bbcbcfbfb6cfdfd6cdaf9499a8bfcfcdbda69ba6b6bbb2adb8c8cdc4
b2a8a69f8d8999afbfcfdfe1cfab8b868b99bdc6b69d9fb8cbcbcdcfc8b4a8b8d6dfcfb4
a2897400008d9da4b2bdaba4a48d7b798da2a69d9b9b9f9f866654596482a8adafab8f66
525d5b54473732373b37302e2e3034425266798da8ab9da8b6b2967669727f82869dbfcf
cbbf9f7d7d99b4bdb89f7f74869b9b8f868b9da8adb6c2b6a4a4a8a6a8c6dbd6bdafadb4
bdc6cfd1c6b6a69da6b4af8b7d897d7f828292a8bbbda27f7269748ba2c2d8e1ddd6d1cf
cfc2a28f847b7d8b8d7f89b2d6d8ddd6cbc6c2b6a6a2afc2c8bfab9da6b2ad9d99a8bfc2
b4a299add1e1d1b2abbbc4cbddddddddd4c4b8bfc2bfbbaf947d829bbbcfd1cbb89f8d9d
bfcbcbc6bda899a6c6d4cfc4c2c4b69d8d9bbbcdd1cfbda8999dbdcbb4928fb4d4d8c8bf
c8cdcbcbcfc6a8928d9bafcde4efedede8d8c6ab99a2bdc8b8a8a4a6a8ab9d827986927f
748dbfd4dfe4ddcdbdbbbdbdbbbdcbd1cbb8abbdd8cba48f99a6b2c6c4b4997669707272
768284898d8f8b8482868d8b7d7472747066606270767b89a8c6cbcdc8c4bfbdbdb6b6b8
bfbdbdc2c8cfd1d6dfe4dfcb9b7d868f9da4adb6b4a2867b8292a2abadadb6c4c2a89694
86746d797f8b969992847b7b828d999da4b4bfc2b4abb8c4bdcddfebdfc2afbdc2bdbbc6
d1c8ad9fa2b2cbd8d4cfdbddd6cfc2b4b4c8c8b4abc6dddbd6af8b96abbdc4c2b2a6b2c6
cdbd9f9bb8d8e1d4b8a49f9b8d868d9da4b4c6c8b49b928d8f9db8c6bfadb4cbd8d6d8d1
b8a4a2b8d4dbc8b2ad927600007f8296b6cbbfb6af967f7d92a4a69d999da6a48d766b6d
7b99b6b4aba28b664d54524b3d2b24292e2e2929292e344054667486a2aba4b2bdb69476
707b7b797b86abc4c6bfa2827f9dbbc6c4a8866d7482898989929fa49da6c8d1cbc4bfb6
abb8cfcfb4b6bdbfc8c8cbcdcfcdbfaba29f99867b8496a4a6a6b6c4cbcdab7d6d708299
a6b8d4e6e1dbd8d4cbaf8d86847f84928b7484b4dbe1e4d6bda49da8afabb2c8cfcdbda4
9d9d9494a8c6d1d1bfa29bbbdddfcdb4b2c4cbcbd6dddfd8c8c2c4cbcdcbc2ad92848d99
a8bbc2bba8948d99afbdbbb4afa49fb6dbe1d1bdb4afa48f8294b6c6cdd4cdb89f9ba8b6
ad9994a6b8bfbbbbc6c2bfd1d8cdab8f899dbfdbebf1efebe1cfb29d9ba8bbbfb4abadb6
bdc2bba68d99afa28f8b9fbdd6dbcbc4c4bbada2adc6d8dbcbafabc2d4c6aba4a4abb6c8
cbc2ab8672767b7b7d89898d99a29f948f999d927d747674695b54545b646d7b99bbcbcd
cbc6bfbdbbb6b4b8bdbdbdbfc6cbd1d6dde4e4d6af8f8b8f999fa8b6bbab867d8fa2abad
abadb8c6c6ab9699968274848989898f8d86848d9ba8b8b8b8c2cdd4cdbbc4cbbdc6d8e4
d6bdb4c6c4bdbbbfc4b69d9fabb6cddddbd4dbd6c4ad968d99afaf9b94afcfd6cda486a4
c2cfc6b29d9dbbd4dbcbafadcde6e8d8bd9f92928d89898f92969d9b8b8284848d9badbd
bbafbfd4ddddddd1b8a296a6c4d1c6b4b29b7f00007d82a6c6cbc4bbaf9484899b9f9f9b
969da29d8b8284848da6bdb49f8d7d64504b4d4b39271e22272722242b30323947596972
848f99b8c8bf9d868b968b827f8299b4c8c6ab8f8fafc8d1d1bf9b74707d8da6b2b6bbb4
a8abcfdfdbd1cdc4b2a4b8c4b4bfc6c2c2bbbbc6d4d6c8ad9f9f9b8d899bb4bfbbbdcdd6
d8d8af7b6d799bb4b6c2d8e8e6dfd8d1bda49b998f8692998b727da6cddbd8c8b2928da8
b8bbbfd1d8d6c4a6968d8289add1d8d8c4a29dbfe1ddc6b4bdcbcbc4c8d4d4c6b8bfcdd1
d1cdbfab9b92949fafbdbdad998d949fadbdb8ab9f969db8dde4cfb2a6a29b968689a8bf
cdd1cbbbaba6a2abb8b8b2a4a2b8c4c4c8b8b6d4ddcba689829bc4e1efefede8dbbd9b92
9fa8b2b2adadb4bfc8cfcfc2a4a2bbbdaf9992abc4c2a8a6ada89992a8cddfdbc4a8a8bf
d1d1c6bbb2afb6cbcfc6ad8974747d8994a2a29fa6b4b2a49da8a48d7d797f7966524949
4d5b6b7289abc6cdcbc8bdbbbbb8b6b6b8b8bbbfc6cbcfd4d8dfe4dbc4a696999d9fa8b4
bfaf897f94a2aba8a4abb8c6c4af9d9fada2929b998f8486868b9bb2bfc2c4c6c6c8d1df
ddcdcbc2a8abc6d6c4aba8bdc2bdb6b6b8afa4adb4bbcfdbd8cdc8c6b89d7f72798b948f
898fa8b6a88b8dbbd6dbcdad8d8bb4cfd6cdc2c8dbe4ddc6ad9489898f969b9f9f9d947f
727072748292999d9b9fb8d1ddddd4c8bba48f96bbd1cfc4b69f89000089abc6cdc2b6ad
9f8b828fa4a29b9b9b9f9b8d848b94969fb4c6bb9f82725b49474d493729242929272022
2e302e32394d5d6469728db6cfc8b2a2a2a499928d8492b4d4cfb8a4afc4d1d6d6c8a479
7484a2c8d6d1c6b6a8afd1e1dbd1d1cfbb9da8bdb6c4c4b8a4969db4c8cfbda49fa89f8f
92adbdc4c2c2d1dbd8cb9d70708bb4c8c4c8dbe8e8ddd1c6ada2b6b6a89ba4a48d707b9b
b6c2b8a8998d99abb2bfcfdbdbcfb899928f848bafd1d8d8c49f96bbdfd8bbadc2cbc8bd
b6b8b6afafbfd1d4d1cbc2b6a89da2b2c8d4c8b49f999ba2adc4c4af998f99b6dbe4d6bb
a49d9d9b89849fb6c4c2b4b2b2a8a2b2cdd6cbafa2bfcfcbc6ada8c4cdbd9b8b869bc6e6
efebe4e1d1ad9696a6aba69fa4adb8c6cfd1d1c6abadc8d1c8ad969dadab998689928f99
b4cbd4c8b4a6afc2cbd8d8c8bbb6bfcdcbb8997d72747f9bb4bdb6ababb8b6a8a2aba289
7d7f867d644b44474d5969707b99bfc6c6c6bdbbbbb8b4b4b8b6b6bdc8cbcbd1d4dde1df
d4b89f9fa4a4abb6c2b68d84949da8a49b9dabb6b4ada4abbfbbafb2b6ad947f7d92b2cd
d4cfcdcdcdc6cbd6dbcfc8b28b849db2a48f8fa2b4b6b2b6bdc2c2c2c2c4cdd4cfbfafb2
b8a8866d707f949b8f7d7f8d7f7692c6ddddd1ad867f9db4bfc8cdd4dbdbc8a88f8d8b89
94a4b2b4b4b4a6897066696d797f7f7b7d8da6c4d1cdb8aba6968692bdd4d8cbab8f8600
009bcddbcdb69f928986848d9d9f9d9da2a4927f899ba4a4adbfcdbf9b76645040404947
372929302e271e2032322e3440546464647294bbd1cfbdb2aba29996928699bfd6cfbdb4
c4cfd6d8d6c6a27d768babd6dfd4c6b2a6b4d6e1dbd4d1cfbda4abbdbbbbb6a6897d89a4
b8b8a69299a89f9299afbbc2c6cbd1d1c4ab846d7699c2d1cdcddbe4e4ddd1bfa29fc4cb
c2b8bbb696768badc2cbc2ad999299a2a4b6cbd1cdc6bba294949294a8c4cfd4c6a292b6
dbd4b4a2b6c6cdc4af9d999ba8c2d1cfd1cfcdcbb6a2a6b8cdd1c4b2a8aba49ba4bfc2af
9d99abc6dfe6e1d4b6a6a69d8f8ba2b2b4a28d929d8f94adcfdbcfb8adbfcfcbbb99899f
ada899928da4d1ebefe6e1e1d4b4a2a2afb4a4969ba4b2c2cfcfc8bba4b2d6ddd1ad8984
8f9994827d8f92a2bfcbc2b4b4b2b6b6b4c8d4cbbfbfcdcdbfa28679767686adcbc8b8a2
9babada29b9b92827f828276604d494b52576069728fbbc6c4c4bfbdbdb8b4b2b4b4b6bd
c6c6c8cdd4dbdfdfddc8ada4a6abafbfc8bb998b949fa69f948f9faba89f9fafc2bfb4b6
c4c2a8898499b6d4dbd6d8d6cdbdb6bbc4c8c6ad84747982827f8696a8afb4bfcbd4d8d4
cbc6c8cfd1c6ada8b6ad8f706b7f9fafa2897d7f727296cbddddd1a6847f8f9dafcbd6db
d8c8ad8f868f928b96adbdbdbfbdb69d7d6d747d84827979828fa2b6c2bbab9f9b867d8f
b4d1d6c49476790000a4d6dfcdaf8f82848686898f999d9fa49f8b7b94abadafb8c6c8b4
8960574b3d393d3b3029272929221b20302e2e40597b8b7b6d769dc4d4cfbdbbb29f948d
8684a2c2cdcdbfbfd1d8dbd8d4c29f7d7f99b8d6dbd1c4afa4b4d6e1dbd4cbc4b6abb6c6
bdad9b8d7d89a4b8bfb29b8b92a29f9496a6a6b4c4cfcdb69f998b7b7d96bdd1cdcdd4d4
d4cfc6b2999bbdcdcbc4c6bb9f8da8c8d6ddd8c8ad999babada8a8b2bdc8cbbba4999b94
96a4afbdb4998fabcdcdbba4a6bfd1c8a68f8f99a8b6bdbfcdd6dbd6bb9f999fabada8a2
a6adab9f9bafb8afa4adc8dde8e6e1ddcbbdb6a69492a4a8a28d726d727489a2bdcdc6b6
b8c2cbc6ad89747f99a8a69d96abd4e8efe8dfdfd6bdadafbdbda489868994a8b8bbb2a2
96afd8e1cf9f726d797f8984869294abcdd1bbabbfc4bfb2abb6bfbdbdc6cfc8af948b86
7f7f96bfd4c8af8d84999f9489898b86847d746962574b4d52575964748dadc2c8c6c2bf
bdb6b4b4b4b2b6bdbfbfc6cfd1d6dbdddfd1b6a4a6afb4c4c8b69f92969b9b949299adb8
af9994adc2bdadb2bfc4af999db2bfd4d8d8dddbcfbda299a8bfc4af8b747079828d96a4
b2b8bfcbcfd6e1dbc8b8bbcddbcfb2a6afa89b7f6d7d9fb4af9d8b7f6d729dcdddd8c696
82898fa4bfd6ddddd4bb9d8b8f9f9d929bb2c2bfbbb8b4a89282899299968f94a2ababaf
bbbfc4c2af8d8494a8c2c8b27f69760000a4c8cfc4af998d8b8b8d89828d969d9f948482
9fb4b8bfc6c8bfa67952504b4037323230292220242220242e2b2b44709fb29d7d7d9dbd
cdcbbfbdb49f8d8482849bb2bfcbc8cddbdfddd6cfbf9d7f89a4bdcfd1d1cbbfafb2d4dd
d6cdc2b8b2b6c4cdc2a68d7f7d99bdd1cdb89d8d9dafa6948f9996a2bbcfc6ad9fa4a48f
8294bdd4cfd1d1c2b6aba2968f9bb4c6c6bfbdb4a8a6bbcfd8dfdfd4b89dabc8c6ab8f99
bbd4d4c6b2a69d8d8486899292868ba6c4cdc6b2abcbd8c299848994a29d96a4bfd4dbd4
bba2968d8b8f94999b9d9f9b99a8b6b4abbdd4e4e8e4dfddd8d4cbb2948b94948d7f6b60
647694a4abbdbfbdc6cbcbbfa484727da4bfc2b4a6adc6e1edebdfdbcdb6b2bdc8c6a27b
70727d8b969992898ba4cbdbc89b706d707692a2a49d99b4d4d4bdafc2c8c2b2afb4b4af
bdc4bdb4a4968f8f8b8ba4c6d4c6a6847f94998b7d7f8f948d827266645b505254595b69
7d8fa2bbc8c6c2bfbdb8b6b4b2b4b6bbbbbfc6cbcfd1d6dfdfd8c2abadb8bdc8c2a68b84
8b8d8b8b92a4bbc6bf9f8f9fb4b2a6adb4b6a8a2b6cbcbd4d6d6dbdbd6c6a28d9fb4b8a8
8f797b8b9da6abb4c2c6cbd1cdcfddcfb4999dbdd1cbbdb6b4abab997b869dababa29282
7689afcbd1cbb48b84969dbbd4dddfdbcbb49d96a6bfb8a2a2b2c2bfb6adaba6998d8f9b
a4adb6bbc4c6b4b2c2d1dbdbcba28f9696a2a4927269820000b2b6b2afafa69b94949486
7b7f8b949b8d8292adc4c8cbcdc8b692664b494940393230302b27242727272b37322e42
74a8bfad8b7f9bb8c6c8c6c4b49b8b8b8f9299a2b2c8cfcfdbdfddd4cfbfa28994a4a8bf
cfd8d6cfbdafc4d1d1c8c2bfbdc4d1d6c4a284797b9bc4d8cdb49d99b4cbbfa492948d99
b6d6cdc2c2bdb49b848fb6d1d4d8d1b8a69284848d9db4c2c2b8b4b8bbb6c6d1d8ddddd1
b8a6b2cfd1b8999fc8e1d8c6bbb29f8b8286867d767b8bafcdcfc6b6b6d1d8bd8f7b7f89
94897f8ba4bfcfcdbdafab9d8f8f9499968f92999da8b6bdb6c4d4dfe8e8e4e1e1e1d8c2
a2897b7676746d696d7d9daba8b4bfc8cfcdc8b89d827482b2cfcfc6b8b2b4cfe1e4dfcf
b69fabc4d1cfaf8670707b8b948f867d829bbfd6cda4766d7284b2c4c4b49fb2d4d1bbaf
c2cdc2adb6bdb6adbdc2b8b8b4a694928d8da4bdcdc4ab928d9996867b8692948f7f7069
666054575d5d5d6d828d94b2c4c6c6c4bfb8b6b2b2b4b6b8bdc2c4c6cdcfd4dbdddbcbb6
b6bdbbc6b8967b747b7d7d8492a4b8c8c4a2868da2a8a4a6a2a4a2a2bbd1d1d4c8bfcdd6
d8cfb2a4abafab9d968d8f9dadafb2b8bbbdcbd8cfc4c4bba284869fb6c2cfd1c6b8b8ad
8f99afb8af9f928992adc4c8bfb6a6898ba4b2cddbddd8d4c6ad9da8c6d6cdb6abb4bdbb
b6afa69b8d868b96a2b6cfcfd1cfb6afbfd1e1e6d8b4998d7f797674707b9b0000cbc6b8
b8bfb4a69f9f8f796b707b868b898da2bdcbcdc8c8c4b2845947444949473b323030302e
2e2e2e303b3b344070a2b4a68689afc6cfcfd1cdb8998d9babada8a4abc2cbc8c8cfd4cd
c8bda6949b9d94afcfdfdfd6bda2a8c4d4cfcbcbcbc8d4dbc69d7b747694bfd8c6ada4af
cbdbd1b8a4968b94b8ddd8d1d1c8b6998486a6c2c6cdcdbfb4997d7b8ba2b4c2c2b6b6c4
c4b6c4cfd4d6cfbda69da6b6bfb49fa4cfe1d8c8c4bb9f8b86929484727999c2d4cbbdb8
c4d4d4b689797f868b86848b94a8c2c6c4bdbba6928f949f9d8f969d9b9bafc4c4c8d1dd
e8ebe8e8ebebe4cfb28b69646b747d848992a8afadb4c2cdd1d1c8b28d797984afcfd6cf
bfafa6bbc6c4c4ad96929fbfd6d6c4a68b76829faba6947f7d9dcbddd4af7d6b7496c4d1
cfc29fa4c6c8ad9fbbc8bdadbbbfb29fabbdc8d1c6b29f998f8996b4cbcbbda4999b8f7b
79868f8f8f7d6d6b6962595b6060606d797d84a2bdc8c6c2bfbbb6b4b4b4b4b6bdbfbfc4
c8cdd1d8ddddd6c2b2a8a2ada4897d797674768292a4b6c4bf997d84969f9d9d969b9fa2
bdd4d4c8ada2bdd1d8d6c2b4b4af9f9299a4a6a2aba8a8afadafbfd6cfbbabada286828b
9fbbd6dbcbb8b6b29fabc4cfc4b4a69dabc2cbbba69b968696b6c2d1dbdbcdc6bd9f99b4
d4ddd6c6b6bfc6c2c6b699867f7f828da4c4d6d6d4cdb6afbdd1e4ebe1c4ab967b6b6974
8494ab0000d1d8d4d1d1c2b2a89b7d625b697679798294abbfc6c4bbb4afa27d5b4b5064
7676573b373b3b3734303237403b3949627f8d897d99c6cfcfd1d4cfb69996a6b2b2b6b4
ababafb4b2b8bbb4afada89d9b8f89a8cdddddd4b68f8fb4d1d4d4cfcdcbd4ddcfa8847b
7b8badc8b6a8bbcfd8d6d1c6bba894a2c6dfdfd8d6c6ad968b7f8b9ba2b6c8cfc6ad8f7f
8ba2b4c4bfafabb6b6a6abb6bdbbb29d8b94a4aba8a29b9dc2dbd8cdcbc2a28f8d999686
798bb4d1d1c6bdc6d4dbd1bb9b84828b8b898f9ba2afc6d1cdc2b8ad9f99969fa49d9b99
928fa6c4cdcfd6e1e6edf1f1f1efe8d6b68b6262727b899db4c4c4bbbbc8cfd1d4d1c6a8
82747b84a2c6d8cdb89d8d9b96868b868696a8c4dbdbcfbba2828bafb8bba88682a6d4dd
d6b689747fa4c8d1d1c69f96b2bda68d99adb8b8bdbbab9299b6d1d8c8b8b2ab998692b4
cfcfc4ab9b9b897476848d8b8f7d6d6b6962595b6069707272707694b6c8c6c2bfbbb8b4
b2b4b6b8bbbbbdc2c6cbcfd6dbdfddcdaf99969d96847f7d7972768496a4b2b8ad8b7982
8b8f8b8689929ba2b6cbcbb29492afc6cfd4c6b6aba8998d9badafa2999499a4abb2bfcf
c8b2a4aba8948d8999b6d4d4bda6a8b2b2b8c2c6c6c6bfafb2b8bba894898486a2c2cbd4
d8d1bdada28f94b2d1dbd8cdbfcbd1d1d4b88976797f7f89add1dbd8d6d1c4bbbfd4e4eb
e1c8b8ab8b747b9ba6a4ad0000c4dddfdbd6c8bbab8969575b72898b7d7d8d9fb2b8b2a6
998b7f74645d6b8fa89d6d443b4749423b34373b4044597470707472749bcdcdcbcdcdc6
a68692abb2adbdbf9f827f96a4aba69b8f99a29b8f8289a6bfcbcdbf9d7d7fa4cddddbd1
cdcfd4dbd8bfa28f7b7d96ad9d9dc4dbddd4d4cdc8b69babcddbe1dfd8c8b2a29b7f7986
8da4bdcbc6bfb49f99a8bdc8bda6a4a8afafa8a2a2a6a4968ba2b6b6a89b969dabc4d4cf
cdbd9d8d8d96928b8da8cfddd4c6c4cdd4dbd4c8b6a2999d8d8b99a8adb8cfddd6c4bbbb
b8a8999dafab9d8d868299bfd6dbdfe4e4e8eff1f1efe6d4b284646b7d8286a2cbddd4bf
c2d6dbd4d8cfbf9d7f84999da4b8cdbf9b7b747d76646b7b8fa2b6cfe1ddcdb4948496b6
bdc2af8b86abd6ddd8bd9999abbbcbcbc6bba29babb4a8897d9bb8c4c4bfb29fa4b8cdd1
c2b8c2bba28992bbd6cfbd9f8b867d72747d8686827066696b665d5d6679847d726d7089
adc4c6c4c4bdbbb6b4b2b6b6b6b8bdc2c8cbcfd6dde1dfd6bda8a6a699867f7f7f7d7d89
99a2a6a28d7d7d898d8679747b89969fafc4c6ab8b8699a6afc4c8bba29b969db4c2c2ab
897f92a8b6bdc6cbb8a29ba4a69b948f9fbdd1cbad9ba6b6b6b4adabb6bfb6a29da2a49d
92847b829dbbc6cfcfbfa89992929dadbdcbcbc2c2cfd6d6d6b88d7d7b7f7d89b4d8d8d6
d8ddd1c2bfd4e1e6dbc2b8af8f8299bdbdb6b60000b4d8e1dfdbcfc4ab7b605b667f96a2
968b868b9da4998b7d72707b79748da8b6a4764939474b4439343437405784a49484827d
7b9bcbcbbfb6b6ab8b7282a2b2b8cbc89f70627f9fa69984747f8f8d868696a49f9da692
7b727ba2cbdfdbd1cdcfd4dbddc8b4a27f7b929f8b89b6dbe4dfdbcfc2a48b9dbbc4d4d8
d1c8bdb29f82829ba49fa2b2b8c6cbb8adb2c4c8b8a6afb8c2cdc8bbb2b4b6a494a6b6b6
ada8adada4b2c4bdb2a4968d8b8b8b96a8bddbe4d8c4bdc4cdd1d4d1c8bbb8bd9f8f9ba8
abb2cbdbdbcbc2c4c4af9ba8bdaf9279767b99c2e1e4dfdfd6d8e1ebede6dbc4a47d6b76
827d7b92bfddd8c6bfcfd6d6d8c6ad948da4bfc2b4b4bba6826b7b8b897b768296abb6cd
e1d8bf967b7f99afb4bba88486abcfd6d4bb9fafc8d1cbbda694999fa8b2a68b82a4bfc4
c6c4bdb6bfc6cbc8b4adbfbda88f92b8d6cdb6927b7672706d747f827466646d726d6462
707f8982746d7282a4c4c8c6c2bbbbb8b6b4b4b6b6b8bdc2c4c8cfd8dddfe1dfcdbdb8b6
a48984868d948b8d9b9d9b8d7b7b8b9fa6927b7f868f96a4bbd1d4bb9482898b94b2c4bd
a2949bb6cfd8d6bf928499adbbbdbbb4a28d8b969f9f9d9fafc8d6c4a49fafbbb6af9b8d
9faba48f8f9ba49d8f82797f92a6b4bdb8a89f9999a4aba69da2a4abc2d4ddddd4b89996
998f7f8fb8d8dbd8dbdfd6c2bfd4ddddd1bbafa48d8da4bbbdc2c80000bdd6dfe1e1d8c8
a87b666974849bafb29f867d898b7b70696b768b8f94adb8bbab8957373d47443d343439
40628b9f8f8d998b8299c4bf9f82827f70626b89adcbd8d1af7b69829696846d60697b84
8f9ba6a489747d6d667282add1dddbd1c8c6d1dbd6c4b4a68b869ba4948db2ddebe6e1cf
ab82798699a6b6b8b6bdbdad927f8dadb49f8d9fb2c4cbbdb4b6bdb8a6a2bdcbd1dbd6cf
cbc8bba28d96a8b2b8c2c6c2afafb4a4948b8d8d8b84869fb8cbe4e8d6b8abb4bfc4cfd8
cdc8cdcfb29fa2a6a2a6c4d8dbc8b6b2ada2a2b4bda27f70767f96bddde1ddd4bbbbd1e1
e4d6c2b2a28d7d7d7d76727da6d6ddcfc2bdc8d4cfaf999da4b8cdcdb6adb49d84829fb2
b29f898699abb8cfdfd6bb99898f9da6a6a6947682a6c4cbc4b2a2a6c2d1c2a889798ba6
b6b69d848babbfc2c2b8b6c2cfd4cdbda8a8bfc4b89d8fabc8c6ad8b7974726d6b727b7d
726b727d7d70666b727d867f7672767d9dbfc6c4bfbdbbbbbbb6b6b8b8b8bbbfc2c6cdd4
d6dbe1e1d8cdc8c4ad8d8d929da6948b999b928482869db6b69d8996a2a6a4abc2dbdfc8
9f84898992abb8b29b8fa6cbdfe1ddcda699a4afb4b2ada2998b848f9fabafb8c8d8dbbf
9da6b4bfc2bfa28496a8a6999fafb2a28f7f7b848d99abb6b4adaba8a8b2b29f868294af
c8d8dfddcdaf9fafbba8868fb2cdd4d8dfdfcfbdbbcdd4cfc8bdaf9b89929da2abbfcf00
00c4d6dde1e4dbc6a88d7d7f898d9bb2bfab86727270646060667494a8b4bdc2c4bda46d
3b37404444404249526979746d849b8b79829f9f7f5b57595b5b607babd1ddd1b68b849d
a28f7b72626474869dadafa482696d66667489bbddddd8cfc4bfc6cdc6b6a89d8b8d9faf
ada6b6d8e4dfd6bf9976798292a2a69d94a2a69b868294adb4a49badb6c2c6bdafa6a69b
8d99bbd1d8d8d1cfcfc6af927f7f8fabc6cdcdc8b8afa88f827f8289867f829dbbcfe8eb
cfa69ba8adb8cdd6c6c8d4d4b6abb4b29fa2c8d6d1b48f868f96a8b6b294797682828dab
cbd4d4c4a6b2d6e4ddc2ababada494827b7b767da4d6e4ddc8b4c2d1c29f92a6afb8bfbf
afb6c8b6a4a4bdc8c8b899868da6bfcfd4cfc8bdb2b4b2aba2947f74829db6bfbdb6ada4
b2bfa49482728bb6cfc6a2868fa2b2b4ad9d9fb8cfd6c6af9da4b8c8c4af9ba2bbbfa489
7d7b7670707b848479747d8682746b7072767b7d7b797b8299b6c4c4c2bfbdbbbbb8b8b8
b8b8bbbfc2c6cbcfd4d8dfe1dfd8d1c2a894949da8ad998d99998b828b94abc2b8a69ba4
afb6b6b4c6dddfc29682898986949d99898ba4cbe4e6ddcbb2afb6b8b8b6b4a6a29b8b92
a4b4bbc8d8e1e1c29da4afbbcbcfb48f99a4abadbbc6c4b69d8f9494949db8cbcbc6c4bf
b8b4ab967b7994b6c8d4d8d1bfa49bafbba88d92a6b6bdc8d1cfbfafafb6b4b2b8bfb294
848d9692a4c2d10000b6d4dde4e8ddc2a2928b929f9d9da8b8a8867066646062666b7294
b8c6c2c2c6c6b8844b424952595b5b62707266545b84a292725d606964524b4d59606079
a8cdd4cdbda2a8bdb6997d746664708dadb8b2a4846b6969697089bddddbcbbdb8b2b4b8
b4a28f8d8d96a6b4b4adb4cfd6c4ad9b8d82868d9dada48b797f84827f8499afb2a4a8c4
c2c2c8c2a68b89847f89a2bfcdc8c6cbcbb69b82767b8ba6c4c6c6cdc8c2af8b7d7b7b7f
7f7f899fb8d1e6e6cda299a6a8b6c6cbb8c4d6cfafa8b8b6a8afcfd6cba47470869db6b8
a88f82848b898da2bbcdcdbba8bbddebdbb8a2afb2aba4897b7d767fa4d4e6e4cfb8c4d6
cba88f99a4a29ba4abc6dbd1b6abbfcdcdbd9d82798da6b4b6c2d1d8d1d4cbb49b867f89
929da8b2bdbdb4abb4b6927f767292bdd6cfb699949ba49d8f8b929db4bdb6a69b969fb6
c2bbafabb4b69f8b8d92897b7b86928f8484898b867d76706b696d797d7d828b99a8bfc6
c4c2bdbbbbbbb8b8bbbbbbbfc2c6cbcfd1d8dddfdfdbcdb29b8f94a4b6b69d8d948d8482
8f9badbbb4ada8a6afbfc8c6cfddd6b68d7d868479797f827d869fc2dde1d6c2b4bbc4c4
cdcfc6b6b2a8969fadb6c2cddbe4e1cbada2a8b8cbd4c2a8a8a2adc6cdd1d4d1b8a8ad9d
96a8c8d8d8d4d1d1c6ab9282767486a6bdc8cfcbb294868f9da29da4afb6b6afaba8a69f
9b968f92a4afa48b84929994a8c4cd00009fc8dbe1e4d8bb968d92a2b4af9d94a2a2927d
7266607276727999bdcdc6c6c6c4bd926264727b7d7d706d7b6b54505b8db6ab7f4d3b49
54525054606462769fb8c2c4c6bfc4c8bb9b796962627092afb8af9f89766d72706d7fad
cdcbb8a8a4a2a8aba28d7f8499a4a6ada69fadcdcfb692848d928f94a4ad9b7b66697072
76849fb6b2a4b2d1cfc8c8c4ab8d897f7b7b89a6b8b8bfc6bfa4897d7d8496adb8bfc8d4
d4cfbb968684848f96999fa8bdd8e6e1cbafabb2b4bdc4bdadbfd1c2a2929fabb8c4d1d8
cba47b7d8f9db4b29f8d8f99998f8da2c2cdc6bdb8c2d6e8dbb69badb2adab86767f7b84
a6d4e6e4cfbbc8dfdfc296828b867b8ba8cddfd4af9db8cbcdbfa47f69748b9fadc6d6dd
dddfd4b28d7f8d9fadafa8a8adada8adbbbb8f70646b8db4cdcdbda492999f998b92968b
8f9da8a49f948b99afc2c4c2b8a8948f9fafa48f8b8d96968f92948f8b89827264606672
7b7f868d929bb8c6c4c2bdbdbdbfbbb6b6b8bbbdc4c6c8cfd1d6dbddddd8c6a68d8b94ad
bfbf9d84827d7f86969da2a8b4b6aba6b8cbd1d4d6d6cdbd9d84848276747d82828fadcb
d8dbcbb8b8c2c4c2d6dbcdbfb8b6adb8c2c4c8d1dde4e1d8c2a29fb2bfc4bdb8b6a6afd4
d4d4dbd8c4b4af9992abcfdddddddbddd1af8b797976849db6c4c8c2a68979798b9dadb6
c2c8bfa68d8994968d8b899299998f868b9fa296a2b8bd00008bc2dbdfdfcfb294929db2
c2bfa48d96abad9d9279667d847d849fbdc6c6cbc8bfb6947684949b9b94765d6657494d
5b8bb8b486503b44525459595d6062799ba8b2bfd1d1cdc4b494725d5b647696adb2a692
8d8d84867f707499bdc6c6b8ababb6b69d897d89abb4ada692899dc4d4c6a6929ba69b99
a4a8997966646d727986a6bdbbb2bfd8d4cbc6c6bbab9f897f848696a6b2c2c6bb9f8d8f
928f9bb2bbc6d1d6cfc8bb9f8d8fa2b6b8b4b6b6c6dde6dfcfc2bdb6adb6bbad9bb6c8b4
948292afcbcfcfd6cbad96a4a8969d96898296a49b8f869fc4c8c8d4cfc2c4ddd8b6929b
a8ada67b69767984a8d6ddd4c6bbcbe1e6cd9d797b797284a8cbd6cba69bb8cbcdc6af89
6b7696b2c2d6dfe1e1e4d1ab8b899fb6cbc2ada49b92929bb2b4926d5d6d9bb8bfbbb2a6
a2abafa4999d9f8f8fa4b4ada69982829dc2cdcbb699868fa8b8b4a4948f94948f8f9494
8d8b8472646066727b86928f898dabbfc6c4bfbfbfc2bfb8b6b8bdc2c6c6c8cfd4d6d8dd
ddd8cbad928f9bafbbb8967974767f8d999b9294b6c2afa6c2d8d6d6d6d6cfcdb69b9696
8b7d828989a2c6dddfdbc6b2b4b8b8b8cdd8d1c4c2c4c6d1d8d4cdd1dde4e1ddcb9f8f99
a2a8afb8b6a4abcdcdcbcbc6b6a8a28b8ba6cbdfe4dfdfe1d8b89482848694abbbc2bdb2
998d8b828696adbfcbcfc8b2968b8f94928d9bada88f8289929f9f928f9fa400008dc8e1
e4dfcfb69d9ba4b6c6c4ab929bb8c6bbb2947d8d8d868b9fb6c2c6cbc8bbad96868d999d
9b94765d62574b4d527092946b42393d4957625d595b627d9dabb4c4d4cfb8a6a48f725d
627d949fafb4a4949ba89f9b8974769dc6d1d4cbbdbbc8c8ad8f7f94bdc4b4a6867b94c2
d8d8cbb4b6bfab9b9fada484666272828b92a8c4cbc2c4d6d4cbc2c2c2bfb6998d969494
96a4b6bfb49d99a4aba2a4b6c4d1d8d8cfc8c2ab8f92b6c6c8c4bfc2cdd8d6cbc4c8bfa2
8b949f9999b8c8af8f829fc4d6d1cdcfc6b6b4c2bb998270666d848f847b7992bdc6d6eb
e1c2adc4cdb2868299ada6795d6466749dc8c8bbb2b2c6dbddc8a68b7f79747f9fbbc2b6
a6a6bbc8cbc8bd967486abc4cbdbe6ebebe8d6af9294b4cfd4bfa49f9b948d8999a68f72
6482b6c6b2a6abbdc6c6bdad99a4a89496b2cbc6bba4898ba6c2c8c2a889767f9fb8b8a2
897f7f7d7b7b848d8b827b746d66697989949992868699b4c6c6bfbdbdbfbdb8b8bbbdc2
c6c6c8cdd1d4d8dddbd6cfbba294a2a8a8a289797679899ba6a6928db4c2b6afc8dbd8d8
dbdbd8d4c6b4b2ad9979767d8bb2d4e4e1d6bda29d9fa6b4cdd8d1c2c4cdd4dbdddbd1d6
e1e4ddd4c29484898fa4afb4a8969bb4b4aba29f99928d7d86a8c8dfe4e1dfe1d8b69489
8f94a2b4bfb8a6948b8f92848292afc8d1cdc6bfb49f94949696afc6c29f8f999f9f9f9d
8b94a20000a2cbdfe4dfd6c2ada8abb8c6bda6949fbbcdcbbda2929d96898694b2c8cbcd
c4ada49d99948d8b8d89827d7d695247424d5d624d3730304054645d575964829ba4b2c2
cbbd9b898f89766b76a8c4bbc2c6b6a6afbfb6a286767ba4c6cfd1c4b8bfcfd4bb94829f
c2c2a899847d8fbbd6e1dfd4d1cfb8a6a8b8b496706479949d9fb2cdd6c6bbc6c8c6bdb6
b6bbb6a29da49b948f99abb8b29b9fb6bfbbb6bfcddbdddbd6d1cdbd9b96bdc8cdcbc6cb
cfcbb6a4abbdaf92848b9496a8c6d1b89f96b2d4dfd8d1c8b8b2c4cdc4ab8b6b59627279
74706d84adc4dbefe8c49da2af9f7974829492766262627094bdbda89da6c2d6d6c8b49d
847b76798b9da6abb2b8b8c4cbcfc69d7b8babc2cbdbe4ebefe8d6b48d94bfdbcda894a4
b4b29b828492867d829dc2c4ada4b8d1d6cbb69d869da68d94bbd8d8d1b6969db2c2c2b2
96796b7294b8bb9b746666646466798b8b7f797670696b7d949f9b9289868da8c2c2bdbb
bfbdbbb8b8bbbdbdbfc4cbcfd1d6dbdddddbd4cbb2969b9b8d8479797d8496adb8b8a48f
9fababb2c8d6d8dddfe1ddd6cdc6bdad8f6d697084b4d4dfdbc8a486848d9db4cdd6cdbd
bfcfdbdfdfdddbdde1e1d1c6b48b828b99b8c6bfad8d7f8d948f8d8d847b79768bafcfe1
e4dfdbddd6b8998d94969ba6b2a68b746d767b76768bafcdd6cdc4c6c2a68b899299b8d1
cdb4a6abadadb4b8a2a8b80000a8c6d4d8dfd8c6ad9d9fadb8b4a6a4b2bfcbcfc4afa4af
af9d8b99bbcfd1cdb89f9fa2a6a48d7d898b8b8d8f7654444047576969523227344b5b59
50597294a4a6b2bfbfa88f86847d74768dbfdbd4d1cdc2afb8c8b89b7f767992abbbbdb4
abafc2cdbf9d8694ada692897f7d8babcddfe4dfddd4bfadadb8bbab8b707f9fa8a8bbd6
d8bd9da2b6c6c2b4a6a4a6a8adafa49999a4b6c4c2b4b8c8cfcbc2c2d4dfdfdddbd6c8b8
9d9dbbc8cbcbcdd1cfbfa8a4b2af9f929da69f99afc8d4cbb8abbbdbe4e1d6c4b2b2cdcf
c8bfa87f66747f8684746d7fa6bbd4e6dfbf9f9fa28f74727272767b79706d7089b2b6a8
9dabc6d8d8cfbb9f847674727d8694adc4c8c2c2cbcfc29d7f869fbbcfd8e1e8edebd1a6
868fb4c6b29496b8cfc4a27f7b8692a4b4bbc2b8aba8bbd1d1c2a4867489928294bfdfdf
dbc29d9fb2c2c4b28f6b647494b6b89d74605d6060647b928f847b726b666d84999f9692
8f89899bb6c2c2bdbfbfbdbbbdbbbbbfc4c8cdcfd4d8dbdbdfdfddd4b89289867f746d72
7f92a6bbc8c8b2928b929dadb8c6d4dbe1e1dfd6d1cdc6a88472697082a8c4cdcbbf9f7b
7b899db4cdd4cbbfc4cfdbe1e1e1dfddddd6cbc4b89682829dc8d6cdc2a2847f868f9496
8676797d9bc2d6e4e4ddd8d8d1bba49da29f96949d997f6460667076798fbbd6dddbd8d1
c4a27b76868fafc8c8b6b4bdbbbfcbcbb4b6c200009bb2b4bdd8d8c49f7f7b8b9fadb6bf
c6c2c8d6cdbdb8cbcdb69dadc6d1d1c2ab9b9d9fa4ab8d7b898f8d8b8f765b524b5b7da2
a4896242373d4949496494b2bbbdbfc4b8998b8b7f76727b9bc6ddd4c8bbb2abb6c2b28d
74746d70829ba6a49d949db2b6a68b8494968d8b7d7b89a2c4dfe8e4ddd4c4ada4b6bfbb
a2828da8afafbbd4d4b28b8d9fbfcdc2a8a6bbc2c2bfafa2a2b4bfcbd1d1d4d6d6d1c6c2
d4dfe1dfd8c8b2a69da2b2c2cbcfd1d4cbbdb8c4cdbda4a2bbbfa88fa2bdcdcbbfb2b8d8
e4dfd1c2abadcdcbc6c6b28f7d99a2a29b7f6d7da2bdcfd8cbb4a6ada88f7474726b768b
9282766b7da8b8b4afbdcfd8d6d1bd9d84746d6d72798badcbd1c8c6cdcfbd9d848694af
cbd8e1e8ebe6c696848b9da69d99abcbd8c69f7d798fb2cfd4c8bdaf9f99abc4cbbd9974
626d797686b8dfe4e1cba8a2b2c2c2b6967064728fabb29f7f695d5d5d60768f8b7f766b
66667286969b9694928b828ba6c2c4bfbfc2c2bdbfbfbfc2c6c8cbcdd1d4d6d6d8dbdbd1
b48b7b7d84797070829fb6c6d4cfb6928b9babafa8abbdcfd6d8dbd6d4d1c69f7f7d767d
94adb6b8c2c2ab8d868d9fbbd1d4cbc8cdcfd4ddddd8dbddd6c8c4c8cbb2867294c4d8d4
cfbda69694999b998b82898fadcfd8dfdfddd8d6d1c4b2a8adafaba6a69f86696b767f89
8da8cfdfe4e6ebdfc294706d7b82929fa8b2c2cbc4bfcbcfb8b6bb00008f9b9294b6c8c4
ab8b767b92adc4cdcbbfbfcfcfc6c8dddbc2adbdd1d4cdbba89d8f8b92968276848b8682
867969625d79a6c4c2b2996b47373b40496da8c6cbcfcbc8b89b8f8b7b74727b96c2d8d1
c2b2aba8b4bfaf896d70696269829296928b8b99a49982798f999994827d899bbbd8e8e6
ddd8cbb2a6b8c2c4b299a4b6ada6a8bbbda68d8d9bbdd4cdbbbdd1d6d4cdc2ada8b6bbbf
c8d6dbd8d6d1c6c4d4dbdbd4c6afa2a8adababb4c6d1d4cdc4bbc6d6dbc8b4b8d1cfab84
8dabbdbdbfbdbfcfd8d1bfb49f9db8b8b8bba89294b2bbb29d7b6b7ba4c8dbd8c8b4abaf
a489707274747f969f8f848496afc2c2c2d1dbdbd4cfc4af997d6b6b6b7289b2c8cdcdd4
dbd6c6a68b898fa8c6dbe6e8e4dbb8929292949fa6afbfd4d6c296797996c2dbdbcdb6a2
928da8c6cfc499645459626476afdfe1ddc6a8a4b2c2bfbba47f69698299a6a28b6b5957
595d70898b82766d6d7076828d928d8d8d867d849dbbc6c4c2c2c2c2bfc2c2c2c4c6c8cb
cfd4d1d1cfcdcbc2ab92848b928b7b7484a8c2cfd4c6ad949bb2bfb8aba2a8bfcfdbddd4
cfcbb48d76828999afc2c4c2c8c4b6a49696a8c6d4d1cbcdd1cfc8cdc8c6d4ddd4bbb6c4
cdb8866986b4cdcdc8bdad9f9da29f9489899499b2cfd8dfdddbd8d8d8d4c4b4afb6c6cd
c4b494767b868f9da8bfd8e1e6edf4e8c28d70707b84847f8fb2cfd1bfb4bdc6afa4a800
00929b92828db4cbc4b4948292abbfc8c4b8b2bbc4c6cde1ddc8bbc8d8d8cbb6aba48b84
8f8d7d70797f86847b7472727294bfcdcdc4ad74443437475270abcdd4d6d1c8bdab9d8d
76706d7082afd1cfcdc4b8b6bfc6bf9b7b74726d6670798b9b9d99969689767289969b9b
89828d9fb6cfe4e1dfddd1bbadbbc2c4b6a6afbbab94868d92948f949dbbd4cfc4c4d1db
dbd6cdb8afbbbbb4b8d1d8d6d4cfc8c4cdcdc4b8b2afb6bfbdad9b9fb8cdc8b8aba8b2cb
d4c6bfcddfd1a67d849dadb6c8d1cdc6c2bbafafa89f9d9b9da2a2a2abbdc4b492766d82
abcfe1e1d8c4afa28f796b727f8992a2a299a2b2bdbfcbcdcfdde4ddd1cdcbc4b8967674
707086afbdc4d4dde1e1d8bda29f9fadc6d6dfdbd1c8b2a2a69f9dafbfc8cfd4d1b68d74
7692bdd6ddd4c2a68f92afc8cfc69b64545054607bb4dddbcdb29ba4b8c4c2bdad8b665b
6d8299a28f665254575d708b948f847f7d7f7f7d7f827d828b8b84869bb4c4cbcbc6c6c4
bfc2c4c2c4c6cbcdcfd1cfc8bbafaba6a4a4a2a6a8a28b7d8bb2cdd8d4bba4a2adc2cbc4
afa2a6b8d1dfe1d1c6b69476707f8fa2b6c6d1d6d8cbbba69294afcbcdcbc8c8cfcbbdb6
b4bdd8ddcbada2b2bfad82697d9fbbc2bbb2adada8a69f8d7d849ba2adc6dbe1dfd8d6db
dfe1d6c2b4b8cbd6d1c29f7f848f9db2bdc8d8e4ebf1f8ebcb997474848f8f8b96b8cfcf
bdb6c2c6b49b9400008d968f7b7fadcfd4cbab8d8fa4b2afaba49b9ba8b2bfdbddcfc6cb
d6d4bfaba8ab9d9ba29b826d727d969d867270767fa2c6cdcfc6a4623732374b596d9dbb
c8d4d1c2afab9f8f7d767269729bc8d4d8d1c8c4cbd1cdb696827b72696b7696b4b8b6b2
a4927d7682929fa28f8b9bb2c4d6e4e1e1e1d4b8adbdc6bfada4a4afb29f897b76828f94
99adcbd1cbc6d4dddfdbd1c2b8c2c6b8b4cfd8d6d4cfc8c4c8c8bba8b6c8d1cdbfa48b94
abb4a49b968d8b9badabb6d1dfc496797f929fb4cfd6cbbfb4afb4c2c8bb9b8d8d96b2c2
c8cbc4a884767689afd1e1e4e1cfb8a48b7472869fa6a2ababa6bdcdcfc4c6cdd1d8d8cd
c4c8cbc8c6b49f998b797996a8bfdfe1e4e8e4d1c4c2b6b4bdc6c4b8b2a8a8afada2a2b8
cbd6d8d4c8ab7f666986b4cfdbdbd1b69b96a4b8bfb48f645b5759698fc4ddd4bd9f92a4
b8bfbbbbaf8f6452607289948662525960667b949d9b94928f867b707072707d8b8f8989
94a6c4d1cdc8c4c4c4c8c6c4c6c8cbcdcfcdc2ab968f8f96a6b4b8bfc2b4998999b8d4dd
cfad99a6b8cdd8d1b8a8abb6cddddbcdb69b7d7070798999a6bbd1dfdbc6ab928692afcb
cdcdcbc4cbc4ada4a8bfdbd8bd9b8d9ba69b7b66708dabb8b8b6c2cdc2ad9982767f9dad
adb6d8e1ddd4d1d6e1e8e1cfbfbdbdc2c8bfa4868d96a4bbc6cbd4e1ebeff6e8cda47b76
898f96a2b8cbd6cfc2bfc8d1cdb29400007b827d7076a4cfdbcba88f929d9b8f89868482
8996b2cfd8d6cfcdcdc6b2a4a6afb2b4b4a686707986a2af9f82747b7f9dbfc4c8bd9966
4439394454697f8d9db6bbad9b9d998d8f928b7b7496c4d4dbd6cdc8cfd8d4c4ad967b6d
696b89afc8cbcbcbbda6999492969d9b9296adbdcddde8e6e4e4d6b8abbdc6bdada89f9f
afab997f7684949994a2c2d8d4cdd4dbdddbd8cfcbcdcfc4b8c6cfcdc8c4c4c8cbcfbfa6
b6cfd6cbaf948b9dafa89494998b7d7b7f849fc8d6ad7f767f8d9db8d1d6cbc8c6c6c6cf
d8cfad9d9ba4c6d4d6d4bf9976727b89a4cbe1e4e1d4c4b6a6948fa8bdbba6afb6b4cbd1
cbbdbbc6d4d4c6b2a6b6c8cfd4d1cdc2ad8f79869dbfe1e8ebebe6dbd4d4c2b2a8a29992
92929daba8a2a6b8cdd8d8cdc2a2725b5b749dbfd1dbd6bfa69f9fa8a89274605b5b5b6d
96c4d6c8af9b949dafbbb8bbb294705b62748d96866b5b626b76869da2a29f9d9b8d7669
666b707f92968d8b929dbfd1cfcdc8c6c8cbc8c6c8cdcfcfcbbda2897f848d9bafbfc4cf
d4c4ad9b9fb4cfd8c89f899bb8cfd8d4bfb2b2bfcfd6d1cbbfa88f7b72798d999db2cddf
d6bb9984849bbbd1d4cdc6bfc4b89d9da6b8d4cdaf8f7f8d9b8f79666984a2b2b8b8c8dd
d4b89476727f9bb4b2afc4cbc8c6c8cfd8e1dbcdc4bbada4b4b4a48f96999bb2c4cdd4df
e6edf1e6cba4897f828996b2d1dbdfd8cdc4c6d1d4c4a20000646666697fadcfd4bd9d8d
969d968b7f7d79707082a6c8d6d8d6d1cbbba8a2a8b4bdc2c2b28f7b868da4b6ad8f7f86
849bb4b6b8b4a6947b604b495766747684a2aba49f9f948d9da6a48f7f99c4d8dbd4cfcf
d6d8d1c6b69f7b69646b96c4d6d4d1d1c8b2adb4ab9f948b8d9fb4bfcdd8e1e4e4e1d6bd
adb8c2bbb2b8ad9d9b998f828499aba89494b4d6dbcfc8c2c6cfd8d8d6d6d8cfbba8a8ab
a4a8b4bfc2c4b49da8bfcbbd9b828ba8bbb4a4a2a292827976768fbbc8997074849badc4
d8d8cfd1d8d8d1d1d6cdb2abadb4cbd4d6d4bd8f66697d8fa2bfdbe6e1d8cdbfbfbbafb4
bdb6a2abb6b8c4c6bfb8b6c6dbddc6a699a4c2dbdfe1dfd4bb998692a6bfdbe8ede8dfd4
cfcfc4af99847f827b7f92a4a8a8afc2cfd6cfbdb29b725d596482abc6cfcbbbafababa6
99765d595b5d5b6492bdcdbda89fa2a8bbc4bbb4a8967d6b6b829ba494796466747b8b9f
a6a4a4a69f8f7d6b6669708499998f8f99a4bdcdd1d1cdcbcbcbc8c8cbd1d1c8b69d8479
798494a4b6c2c2cfd6c4b29f969dbbd1c49f8492afc6cfcfc2b4b4c6d4d6d1d1d1c6ab86
747d9ba8a8b6cfdfd4bd9f8f8fa6c4d4d1c6bbb8b6ab969ba2b2cfcdb496828d9d8d7969
697d94a2a4a6bbd6d1b8927976869fb2b6afadb2b4b2b8bfcdddd6cbc2b8a499a4a69f9d
9b8f869bbdd4dbdfdfe6ebe1c8ab99867b8694b6dbdfdfdfd6c2bbcbcfbd9b00006d5b62
7b9dc4d1c4af99929b9da2a69f8f7b6664769bc2d6dfe1dbc8af9999a6b2bdc6cbbb9989
9494a8c2bba492948b8f9da2a2a4adb6af9270606d7f8b99abb8bbb8b4ad9f99a6afab99
8492bdd8ddd6d6d8d8cfc4bdb2926d5d5b6699c6dbdddbdbd1bfb8bdb2a48f8494abb8bf
c8d4dbdfe1dfd4bba4a8b8bbb6bfb69f89827d7b8dabbbad928ba8cbd1c2afa8abb4c6d1
d6d6d6cbad897d868d94999d9d998d848fa8b8b29f8b8ba6bbbbada49b8d827b76748bad
b894767b8fa8b4bfd4d6cdcbd4dbd4d1cbbba8afb4afbbc4c8c8b68b606484a2b6c6dbe6
e1dbcfc4c6c6bba8a49f94a4b8bfb8b4b8bbbdcbdddfc8a699a2c2dfe6e4e1d8bb9f999f
abbbd4e8ede1cdbbbdcbcbbb9f847b746d7282969dadbdc8cfcdbda49f997964595d7499
b2b4ada8a8a8a6967962595b5d605b6084abb8afa8b2bfcbd1cdb49f9d9f92746b86a2a8
997d6b6b7b7f899da6a6a6a69f8d7b706d6d748696948f94a2abbbc6cfcfcfcbcbc8c8cb
cdcfcbbb9b827672748499a8b4b6b2c6d6c6af9d928dadc8bd9f898fa4bfd1d1c4b2abbb
cdd6d4d4d6d1b88d707694abafb8c8d4cdbdb2a89ba6bfcfc6b4adafab9f9f9f9fafd1d6
c6a88d929f928476707b89949494a4c4cbb89d8f868ba2b2b8afa2a8afabb2bbcbdfe1d8
cfbfa694969da8b6ab927f8fbddbe1e1dddfe4dfcdb29b867d868dadd6dfe1e4ddc4b4bd
bda68400007f697494afcfd6c6ad9b9b9f9db2c6bfa8866966769bc6d6dfe6dfc8a88d96
a8adb8c8cfbfa2949f9dabbfc2b6aba48976797f828292abb8ab8f7f8b9fadb8c6c8c8c6
bfb8b4b2b2afa8998b99b8d1d4d1d8dfdbc8b4b4a88464575b6b96bdcfdbe1e4ddcbbfbb
ab9b8b8ba6bdc2c2c2c6d1dde1ddcdb29d9fb8c4bfc4b496797272768ba4ab9b8d94afbd
b6aba8ababa8b2c2cdcdc8b89b7d798492928b868984767282949fadb8b4a8b2bbbbb2a6
96867f7d7b7d94b2b8a68f8f9fadafb4c4cfc8c4d1ddd8d6c6ab9fa8a48f929fafb4a47f
5d6084abc4d6e1dfdbd6d4cfcfcfc2a4949496adc6cbbbafb4bbc2c8cfcdb89f999fc2e1
e8e8e4d6c2afa6a4a8b6cfe6ebdbbba4a8bdcbc6af8f7466666b79848fb2cbcdcbb8a28f
8f8d796052576682948f86848b928b74595254595959575b76929fa2afc4d1d8dbc8a28d
9bada47f6d89a4a699826d6d828b8f999b9d9f9f96847976797b7b828d8f8d96a6adbbc6
cdcfcfcdcbc8cbcdcdcdc8b28f7674747b899ba8afb2b6cbd8d1c4af9b92adc6bba49499
a2bfd6d4c8ad9babbfc6c4cdd1cdb68664708b9fa4a6b6c4bfbbc2bf9f96a8b4ab9d9da2
9d9daba8a6b2cdd6c6a68d8b94928f8b8b949d9d968fa2c2cfc8bbaf9b8f9db4bbab9b9d
a8adb6c2d4e6ebe6dbc8af9b96a6bdc6bd9f828db6d6e1e1dddddfe1d6b899848489899f
c8dde4e6e6d4c4bdb2997f00007d7284a6c2d8ddcba8999d9f9fbbd8cdb48b66647ba4cd
dbe1e8dfcdaf969dababb8c6cdc2afa2a29d9dabb8bbbfbb947062626d76849db8bfad96
94a2b4c2cbcbcbc8bfbfc6c8b6a294929db2c2c8c8c8cfdddbc8b2ad9f7f6459606b8da8
b6cbdde8e1cdbfb8a48f8da2bfcdcbc4b6b2c2d4dbd1bbada6a4b8c4c4bfa88b79727072
8292948f8fa2b4b2adafb4afa8a8b6c8d1cfc6b49b8b89949d998d8d99998d82868b92a6
c2cfcbc4bdb8b2ada69992969b9ba2b2bfbbada2a6b2bbbfcbcdc8c8d6e1dfd8bd9d9696
8972768da6ad96725d6486abc4d6dbd1c8d1ddd8d6d1c49f8b94adc2d1d8cfc6bfbfbbb8
b2a8a29d96a2c4e4e6e6dfd1c8bdb2aba8afc2d6dbc6a28b8fa2bbc4b2927060646b7279
86b2cfc8bb9f86827d766b594b495464706d625d66706d5d545254544d4d5460747f8da2
b8cdd6dbd8c29489a2b4af8f7b8d9fa296847274949d99968b8484867f797d868d8b8282
898d929dadb4c2cbcfd1cfcdcfcdcdcdc8c8c6b6997f7d7f8994a4abadb2bfcfdbd8d1bf
a6a2b6c6bbaba6ababbfd4d6cfb299a8afa8a2afb8b2a6846d76969f8f8fa4b8bdc6d1cd
af94929f968d8d8b8f9ba8a6a2adc6cbb89b8984868f949ba8b6bdb6a496a8cddbdbd4c2
a68f92a8afa6a29999a2a6b8d4e6edebe1cdbdab9db4cbcdc6a68b96afc8d8dfdfdbdddf
dbc4a289868d8f9bb8d8e6e8e8dfcfbfaf96840000706d86b2d6e6dfc69d8b929fabc4d6
c8ad8666627da6c6d8e4e8ddcdbdb4b8b4a8b2bfc6c2b4a69d8d868fa4bbcdcfb289665b
728b9bb2c6cfc4a28b99b4c6c8cbcdcdc4c6cfcfb48b768bb2c6c6c6c6bfbbc8c8b8a6a2
94796964666b7d8f9fbfdbe6ddd1c8bda6949dbfd1d6d1c2ad9fa6bdc8c4bbbbb6a8a8ad
b4b8a6928f8d827986929499a8b8b4a6a8b6b6a89ba2b6cdd6d6d1c4b4ada4a2a69d9499
abafa6a4a8a499a8c4d1cdc2b4ada8adb2b4b6bdbfb4a6a8bfc4bdafa8bfd1d4dbd4c6c6
d6e1dfd6b89d998d79697494b2b89972646d8dadc2cdcbbdafbdd1d6d1cbbb968696b8cf
dbddddd8cdc2afa49b8d8b8f8fa4c8e4e4d6cdcfcdc4b8ada6a6adb8b8a68b7b8294b2bd
af967966646b72767d9bb4af96796d706b605d574d44474d525047444954575960646460
57545b6b797f8babc2cdd1d4cfb48b8fadbfbb9f8b92968d7f79747fa2a8a29986746969
69748b99a29f8f84848d9ba8b4bdc4c8cbcdcfcfd1cfcdcbc4c2c2b8a28f8d92969fadad
abadb8cdd8d6cbb8a8afbbb8a8a4abb4b4bbc8cdc8b4a4b4af968289969da69b86849da2
898ba2bdcdd6dbdbc49f92a6a49b928989949d9b9babbfbda88f827d8499a4adbbc4c8c4
b2a2adcfdfe4dbc4a4867f929fa6ad96848989a2cbe6ede8dfcdbfb29dadbdbdbda89ba6
afbdcfdbdddbd8dbd8cbad928b969694a8c6d4d8dddbcbb4a48f890000747086b6dde8e1
c4967984abc4cfc8ab927f706b7d9db4cfe1e4d6c8c8d1cfb8a2a6afb4b8ab968479797d
8db8d8dbc69f745b79a2b6c6cdd1c8a68b96b8c6c4c8cdd1cdcbd4d1b4866d89b6c4b8b6
b8b2a6ada899929b947974767670747f99c4dde4e1dbd1c4a699abcbd1cdc8bda68b849b
adb4c4c8bfa6999badbbb4a8abb2a692999d9ba2bfcdbb9d99adb6b2a6a2a8bfd1d6d8d4
cdc8bbadab9d96a2b6b8b4bdcdc6b2b6cdd4c2afa4a4a4a8b4c4cfd4d1bfadadc2cbc6b4
a6c2dbdfe1cfb6b4c4d4dbd6c4b2a89479697da8cbc499706d7692adbdc8c6b69d9db2bd
bfb29f928d96afd1dddbddddd8c6a89992827d7f86a4cde6dfc6bfcdcbc4bbab9d9699a6
afa4867b8292a8afada6947f747d827b7b8294927662605b595250494240424442403b39
424d52596b7b7f7974696266707989a6c2cbc6c6b89d8999b8c8c4ab94948d7b696b768b
a8ada69f927b625b607996a4a8a48f7f7f92a6afb6bfc4bfbbc2c8cfd4d1c6bbbbbdbbb2
9d8f969fa2a6b4b4aba6afbdc4c2b6a69fb2b6a48d96adb6b6b4b4b2b4b2b6c6c4a67d7d
94a8b4ad9989a4a286899fc4dbddddddcfafa2bbbbaf9d92949b9fa4a8b6bfb69b827472
82a6bbc4c8cbcdc8bbb2b8cddfe1d8c2a28b8b9fadafab8d79797d9dc8e6ede6d8c2b6ab
94949d9fadaba4a8adb2bdd1ddddd6d6d6cfb89d949f968b94a4afb4c2c6bfa692828b00
008b7d92bbd8e4dfc28b7082b2cdcdb282727674727b8fa6c2dbe4d6cbd1ddd4b294949d
a6b4a482696d797b86b4d8d6c49d745b79a8c4cbcdcdbfa28b92adb6b6bdcbd1cdcbcdcf
bd967b86a2a28f8b8f9694998f868d9d9982848d8f7d727696c8e1e6e4dbd1bfa69fafc4
bdafadab997f7d869bb2c8cdc2a699a2b6c4bbadadb6af9d9f9b949fc4cdb2948da8c8cf
c4b2a2b6d1dbdddbd6cfbfafa6999299adafb2c4d6d1bfbfcfd8c6b4adaba4a2afc8dbdd
d4bfb4b2b6c4c4ad9bb2d4e4e1cbaf9fa2b4cbcfcbc2b496766b89bdd8c69470747f9baf
bdcdd1bd9f92999da4998d9fa4a4b6d6e1dbdfe4e1cba89694867d7b89a4c8dfd4bbb4c6
c4bdb4a292868da4bbb49482848b96a2abb2b6afa4a6a4948684929276605b524d443d37
373b42423b37323742525b6b849296948f7f6d605d667689a4b2adada49694a2b8cbc2a4
8f8f8b7666647996b2b4afab9d7f645b607492a2a49982798299adb4b6bbb8afa4a6b8cb
cdc6b8afafafa89b898999a6a4a4b8bdb2a4a2a2a4a8a8a6a8b6b2967d869fadb6b4aba2
a8b4c2d1d4b68689a4b6bdab8f82999f8f92a2c4dfdddbdbcfb8b2c8bfab9b99a6afb2b4
b6bfc4af8d72666b82abc6cfcfcfd1cdc2bfc6d1dbd8cfbda69ba8c4cfc4ad8f7f7b82a6
d1e8e6dbcbb8b2a48b89929dabada8a6adafafc8d8d6d1d4d6cfb69d99a29d9494999fab
bfc6bfab8b829b00008b869dbfd4ddd6b88472849db6b2926b667274797f8fa6bdd6e6db
d1d6ddcfad8d8996a8b8a67d697686827fa2c4c6b292746072a4c8cdcdc8af927d7b8689
899bb4bfbdb6bbc6c4a88d8d8f84706b6d76828d8b8996abab99949da4927d7fa2cfe8ed
e6d8cdbfb2afb6b6a294999d9d999692a2b6bdc4bda6a4afbdbfb4a6a2a6a49d9f968d9d
c2c6a68b8bafd8ddd4c2a6b6d1dddfdbd1bda89b968f848292949bb2c6c2afbbcbcfc8c8
c4b8a296a6cde1e1cbafa29d9fb8b69d8d9fc4dbd8c8b29d929fbdcbcdc6b6926d6689bd
d8c89f7f8496a6b2c2d6d8c29f92969499969db8bdb8c6dde4dde1e6e1cdab9ba299867b
899bb2c6c6af9babafada69b8b828da4bdc6b29482868d99abbbcdd1c6bfbbb2968b969f
896b594d4b4742393234373732302e303b5062798f9da4a69f8f796250505b64747f8694
9fa4a29ba4b8a8928b8d826d6264799bb6bdb8b29f7f646066748694968b7b7984949fab
afadaba2948b99abafadadbbbbad99868694a8b2a6a2b6c4bda89f928b99afc2c8c8bb9d
7d7d8b9bb4b8afa4a8b8c6d4d1af828babbbbd9f7b707d96a8a6adc4dbddd6d1c6b6b6c6
b49b94a2b8c2bdbdbfc6c4a87f6660697fa8c4cfd4d4cfc6c2c6cfd8ddd8d1c6b2a6b6d1
ddd1b89b898486afdbe1d1b8b6bbbba68b8da2adb8b4afb2bbbdbdc8c8c4c4c8cbbd9f8d
94a2ababa8abafbfd6d6cdbb9692b40000748299b6cdd4c6a68b868b86898272666b7476
7f8b99a4b6d1e6e1d8dbddcfad8f8d9dafbda87f6d7f9289798299a2a29b8d797ba6d1cf
cbbfa284695b57575d708b999999a2b6c8c2ada49d927b64606b798b96a4b6c6c6b69f9d
a494868db2d1ebf1e8ddd1c6bdb8bbb8a6928f99abb6afa2a6b4a6a8a89fb2c2c6bfb6b2
afb2b2afaf9f94a2c4c6a88f94bddddfd8cdb4b2c4d4d8d4c4a686797d7f79747b7b7d8f
a4a49dadb4b8c4d1d4c4a68f9fcde8e4c29986899bb2a68d96afcddddbcdbda8969db6c2
c2bbaf92726b89bbd4cbab8d92afbbbbc6d4cdad928d9dabafabafc2c8c6cbdbe4e1e1db
d1c8b2a6aba492848f9ba4abaf9f8d949da6a49f969299adc8d8cfa8848694a4b6cbd8db
d1c6bfb89f8f9bab92705d5759595442302b29292b2e3032394452626d7b94a8a48f7057
47474d545b66768b9fa8a494949f968f928d766260667996afb6b4ad9276646676828989
86827b7d899292969f9d9d96897b7b8696a4b2bfc4b4968b99afbdc2afa2afc4bda4a694
8492b4d1dbd6cbb69b8d868fafb8ada4abbbc8d1c2997489adbdb68f6962799fbbb8bbc6
cfcdc4bdc2b8b6bba48989abc4c2b6bfc6c4bfa8866960697fa4bfd1dbd6c6bdc2cdd6dd
e4e1ddd4b8abb6cdd8cbb2968d8f94b8ddd8b89fadc2c8af8f99b2bbc2bbb8c6cfcfc6b8
afafb4b8b4a694868fa8b8bbb4b2bbcfe1e1d6c29992b60000697f96abc4cdb89b9da69d
82726b69707d848284929d9da8c6e4e6e1dfdfd4b494929fafbba8826976898270707b8d
adb8ab9699bbd6d1c4af8f6d4d403b4049576d7b7b7f8babd6dbcdbfb6ad926b626d7f9d
b2c6d6dbd8cbad9b9489828dadcde6efe8dfd4c6bdb8bdc6ad8f8692adbdbb9f9ba6998f
868bafcbcdc4c4cdd1d1c8bfbbada6b8cdcdb49da4c6dfe1dbd1b8abb8d1d8d4c6af8b74
7b79767b86847d869ba8a8ab9fa4c4dde4d1ad949bc2e8e6bf998d9fb4b69f94afcddfe4
e6ddc8af99949da8a8a4aba6927b92bbd4cdad8d92bdcfcdcfcfbf9d928fa6c8cdc4bdbb
c8cdc6d4e4e6dfcbbdbfbbb4afa6928ba6b6b4a49d9fa6adadb2b4ada49da8c6dde4ddbb
948fa2b2bfd8dfdbd1c4b8af9d929da889645d66726d604b392922242b2e3237393b4044
444d6b929b82604b42444d5964727f8b99a29d99999d9f9f9b8b6d5d646d7b8b9da8ab9f
846d6b768d9b9b9289827b7f8f9b99928f8f8f897d72727f96b2bfc2bdad9d9dafbdc2c8
bdadafc2b89da2968692b6d4d8d1cfcbb49f8b89a4adabadb4c2cbcbab7d6b82a8b8ab7f
5d648db6c8cdcdcfc6b8a8adc2c4bbaf947f8db2bfb8b4bfc4bfbfad8d726b7284a4c6db
dfcfbbb6c2cfd8dfe4e1ddd4c4b8bbc4c8b6968d9dabb4c6d8cfb2a4bbc8c6ab8b94adb6
bfbfc6d4ddd8c4a299a6b2b4b2ab9b8f96b6c8c8b8a4b2d4e6e4d8bf968db40000628296
a4b6c2ad8f9baba27f7070768ba6afa296999d9496b2d6e6e6e1e1d6bd9f999fabb4a47f
62667979696d7b94c2c8b29fadc8d4cfbda27b543b37373b404d626d6b6d7faddde4d4c4
c2bfa47666728bb4c8d4dfdfddd4b699847d7d899fbbd4e1e4ddcfc2b6b4bdc6af92868d
9fafb2968d9da2947b769dc4c8bfc8dbdfd8cfc4b6afb6c6d4d1bba6b2cfdfe1dbcdb8af
bfd8dbd8d6c6a68f948d848ba4ab9d99abbdbfb89f9dc2dde6d4af999db8e4e6c6a6a6c2
cfc2a8a6c4dbe4e6e8dfc8af998d898b8b99b8c8bb9d9fbfd8cfad8b94c4ddddd8c8b49d
9494afd6d8cfc6bbc6cdc4d4e6e8ddc6b8bfc6c8bb9f8992b6cdcbb8afbdcdcdc8c2bbb2
a8a4b6dbebe4dfcbb2a6adb6c2dddfd1bdb2adaba296999b79575b727d746b5b442b2227
2e3237373739393b3b3d4d6979705b524742495970868f898b9499a6adadafb2a889695d
66747b7f8ba2afa489797f8da2ada8998d8982848f9faba69d998d7f767276829dbfd1cf
c4b2abb4bdbdbdc8cbc2bdc2b8a29b948b92b6cdc8bdbdbda48f7d798b96a2b4c2cbcdc4
9b70667492a49470576da6cbd4dbddd8c4ab9dafcdd1bf9f868ba2b6b6b2bbc4c4bdbda8
8b767b8696b2cddfe1cbb4afb8c6d1dbd8d4d1cfd1cbbfb4b4ab8d94adbfcdcfcdc2b6bb
cfcfbfa286828fa4b6c6d4dbdfd6b8928da2afbbbdb49f929fc2d4cfb69ba8cfe4e1d6bf
9b9dc4000057708494a4af9f8996a89f82747989a6c6d1c4bbb4a8998d9dc4e1e6dfddd6
c6ab9d9da8af9f7f6d7989826d6d7f9bc6cbb2a4adc2c8bdab8f644739393d3d3d425057
596b8fbfdfe1cfc2c4c8af7b66708dbdcfd1dbddddd4b4927f7b7f848fa4bdd4dbd4c4b6
adafb6b8b2a28d7f869ba29999a8ab9d82748db4c4bdc2d4dbd6cbbdadadbbc6d4d1bfa8
b4cfdde1d8c8bbbdcddddfdfdfd6bba8aba4999db8bdada4b2c6cdc6a499bbd6ddcdb4a2
9dafdbe6d1b8bfd6d8c6afb6d1dfe1e1e4ddc8b2a696827b7b99c8dbd1bbb2c4d4c49f86
9dcde4e1d4b69d948b8ba8d4dbd4c8b4b6bfc2dbe8e6dfcbbfcbd1d6c8a28d96a6bbc2c2
c6d4dbd8d6cdbfb4a8a8bddfede4ddcfc2b8b6b8c2d6d4bda299a6b4b4a4968d6d52576b
6b62665d442b292e34393d393237393b403d424b52575b5b4d42475b7994a299949ba8bb
bfb8b8bfb69470606974797b8dadbfb49b929da6b2b4a8968d8d8d8b92a6bbbdb2a8947f
797d7d829dc6ddddcbb6b6c4c6bbbbcbd1c8c4c6c8bbab9d8f8da6b4a69999967d70696b
7d8b9badb6bdc2b696797072828b79605979b2d4dbe1e4ddc4a28fa8cfdbc49d8699b6b8
adadc2cbc6bdb89f84828d9fafcbd6dbdbc6b6ada2adc2cfc8bdbdd1d8cdb6a8a6a28d9b
b4c4d1cdc2b6b8c6d4d4c6ad947d7689a6c4d4d8d4bd9b8d9badb6c6c8b49992abcdd8cd
b6999dbfdbddd4bfa4b4d6000057667d9bb6b8ada4afbbb2947f849db8d1d8d1cfc8b8a2
929bbfdfe4dbd4cfc6b29d99a6af9b828999a2968d929ba8c4c4ad9b8f969b8d84744d40
403d40403b373b476292bbd1e1dfd4c8cdd1b87f646b89b6c4c6d4dbd8cbab96928b8986
899bbfd4d1c8b49d999fabb2bdb899767996a6afb8bda894847f92adbbb2afbbc8c4b4a4
9ba2adb8cbcdbda8b4cfdfe1d8cbbfc2d1dfe4e4e4dbc6b6b6aba4afc2b8a29dadbfc4bb
9b92b2cdd1c8bba496a6cde1dbc8c8d6d4c2b6c4d6e1e1dddbd6c8b8b2a4867982a8d4e1
d8c8bdc4c6a88b86a6cde4dfc29b8482828ba8c6d1cbbba49fabc2dde6e1d8c6bfd4dddb
c8a496968f8d96abbdd1d8d4d6d1c8bbada6b4d8ebe4dbcdc8c6c2bbbbbfbbab968fa6bf
bdad967f6b5b595d52444b50422b2b30343b3b3934394042423d42474042505750474964
8299a6abadb6c8cfcbc2bfc6bf9b746269747b86a2bfcbbdaba8b2b4bbb6a696969b968f
96adc4c6b49d897d7b828286a4c8dfdbc4abadc2c6bfbfcbcfc8c6cbd4d6c4af99899499
8b868d8b7069697486949b9b92949fa6a294827b8284705d5b7bb4d6dde1e1d8b88f7b8f
b8cdbf9f8b9db8b6a6a6bfcbc6bdb2967f849bb2c2d6dddbd1c2b8ab8d92abbdc4bdbfd1
d4bd9f96948b899badb4c4c6bfb8b8bfcbcfcbbda6847082a2bdcbc8af8d7d8dabbdc4d4
cfaf9494b6d6ddcfb4948da4c2cdcbb8a8bfe10000747689afcfd4cbc6c6c8bb9d8489a6
c4d4d8d4d1c8b8a69da6bdd8dfd8d4d1cdbda4969da89686949fa6a8b8c4bfbbc2b8a48d
705d5d5957504240423b37373732374b7dbdd6dbdfd8cfc8cbd4c48f6b6986a8b6bfd4db
d1bba4a6afa69d999fafcddbd1c6a884828b9bb2c6c29d747b9fb6c4c8bfa48d868fa4b6
b8a49699a2a2968d8686868fabbbb4a6b4d4e4e4d8cbb8afbfdde4e4e6dfd1c6bdaba4b2
c2a68992a2afafab9d96a2b4bdbdaf9289a6bfdbe1d1c6c8c6ada8bfcfdbd8cfc6bbb4b2
afa6928294bfdbe1d8cfc8c8bfa28994b6c6dbd8ad867b848da4bdc2c2bbad9994a2bdd4
ddd8cdc2c6d6dbcdb2968f8f8279849fb2c2c4bbc2cdc8b2948294cde4ddd4cdcfd1cdc2
b2a8abab9b92a2bdbdaf9476645d5b54443737403b29292e32393b3939424b4b47404042
393b47525b5450647f96a2a2afc6d6dbd4cbc4c4bd9b7d70727b8294b6c8cbc2b4b4bdbd
bdb4a49da4a89f999dafc4c6b29284848282828fa8bfcdcbaf9b9fafbbb8bbc6cbcbcfd4
dfe4d4bb9d86929b8d848f9682827f82929fa4967d748296a6a28d7f828472626076a4cb
dde1dfc89b796d7b9bb2af9d96a4b6b4a6a6bbc8c6b6a48b797d99b6c8d1d8dbd4c6bfb2
8d7f8b9fbfcbc8c6b89f827d7b7682929da4b2c6d4d1c6bdbdbdbfbfb48f7b92b2c2bfaf
8b70748fb4c6c6cdc6ab9da4c2dde4d4b49692a6bfc6bdafa6c2e10000948992b6d4d8d1
cbc6c6b28d7b86a4c2cfd4d4cdbfb2afadafb8cbd6d8d6d4d1c8b69d94998d848f969db2
d4d8cfc6bbafa4967250403d42444b4740393032373437548fc6dbdbd8cdc6c6c8d1cba4
7d748b9fafc2d8dfcfb4a4b4c6bfb6b6c2c8d1dbd8cdaf8f868694b2c4bf9d7982a4b8c6
c6b69f96969db2c6c8b294868d9494897b706b7084a4b2a4b4d4e4e4d8c8b299a4d1e1e8
e8e6dfd1c2a8999fa68b768da8bbbdbdbbafa296999f96828299adcfdfcfbdb6b2968fa4
b8c2bbafa296949ba2a49d96afd4dddbd6d4cfcbbfa899abc8c6d1cd9d848ba2afbfcdcb
cbc4b49d969fadbfcbcbc8cfd8d6d4bb94827f7f797f9dbfc4bba68f9baba48962506dad
cdcbc8cdd8dbd8c8b2a2a8ad9f9496a6afa88b645052524439322e322e24242b32394042
424b50524d40393934373d445960595b748f9996a2c2d6ddd8d1c6c2b8a69686797d869f
c4c8c4bfb8bbc4c4bbafa4a2a8aba2a2a8b2c2c6b69b9296968f92a2b8c2bfb29b8f94a2
abadb2bfc8cfdde6ebebdfc29b899ba4927d8294999f998f929fa696796b768b9fa49689
86826d6466708db6d4ddd4b2826d6d7999a6a6a29fa8b2aba6adbbc4c2af9482797992ab
b8c2cdd6d6cbc6bb8d74768fb6c8c4b29b86766b6b748494a4b4bbcfe4e4d1bbb2b2b6bb
b6998296b4c2b49b79697ba6cdd6c8bfb4a8afbbcbdbddc8a694a2c6dddbc6ada4bbdb00
00a29996b6d8dbcbbdbdb89b746b798fb2c2cdd1c6b4a8afb2b2b8c8d6d8cfd1d1cdc4ab
8f847d7d7f8992b2dbdfd4cbbbb2ab99704434394249544d42373437373737548fc4d6d4
d4cbcbcfcfd4d1b68f82949fafc6dddfcfad92afd1cbc4c6d1cfcfd4dbd8c8b2a69da2bb
c8c29f828299adbdbbada4adb6b2bfcfd6c6a4929fafaf9d7d69666d86adbba8b4d4e4e1
d8c8ad9294bfddebebe8e4d4b8a28d827f7984a6c4d1d6d8d4c4a6827984898f8f8fa6c8
d8c8b2a2968d8f9ba49f96948f867f8b9faba8afc6dbdddbd8d4c8c2b8aba2b4cfcdcbb6
8f8492a4b4c2cdd1d4d4c4ab9fa4a2a6b4bfc4d1ddd8d1b48979797b7f94bbdbd8c4a27f
82867b6b575469869da8b2cbdfe1e1cdad99a2ada4a29992969982543d42473d34322e29
2424242b323940474b4d4d504d4239342b2b292b4254545069898f8f9bbbd8e1dbd4cfcd
c4b8ab8f707484a4c6c2b4b2b4b6b2afa8a29b94969fa2abb2b4bbbdb4a29fa4a4a4a6b6
cdd6c6a68f848da4b2b2b2bdcbd4e1edede6e1c4998b9da68f76748fadafa29489949d92
7f74798ba2aba89f998d706666697ba4cdd6cdb28b726b7fa2afadada69f9d969ba8b8c2
c2b2927d767f99a8a8b2bfcfd4cdcdbd8f797d8fabbdc2b4a4968670708494a2b6cbcfd8
e1e1d4bdb6c2c2b8b2998694a6afa68f766d89c4e1e1d1bbafb4c2cbcbc6bda88d8badd6
e6e6d1b6abb2cf0000a4a29fb8dddbbda4a89d7d66606976899bb6cbc4afa6abafadb2c8
d8d6d1d4d6cbc4af9282868b827f86abdde1d6c6b6afa89460322e3940445050473b3d39
3030344d84c2d6d4d4cfcfd1d1d8d6bd998b9fa8adbdd6d6c6a282a6d1d1cfcfd4d1cfcf
d1d4cdc2bdbbbfc8cfc6a6847d8d9fa8a49da8bdc4b8b8c8d4c8ada4bfcbc6af8b6d667d
a4c2c2afb4cfdfdfd6c4a28f92a8cfe4e8e8e1cdaf9b826d707b9dcbdddfdfe4d8bb9b82
7b849fb6b4a4b2c8d1c2a6897b8da2aba89b949fa696828fa8b8b4b8cbd8d8dbd6cbbdaf
a8a4a4b8d4d8cfaf7f7b828492a2b8cbcfcbb8a2a2a69f999fafafbfd1d4d1b48b7f8b99
9da6c4e1dfcdad8d868d8d897d7f8b8d8b8d9dc4dfe4e4cda68f99abadafa28d82867b4d
3939403b34302b292729272e374249525954525049423930242022273440444b627d898f
9fbdd6ddd6d1d4d6cfbfab89646b7d99b8b4a6a6a6a49b94999f9b8d868d9fadab9f9fa2
9d99a2adadadadbbd1dbcba2867b8bafc4c2b8c4cfd6e1e6e4d8c8a8898b9fa48d767499
bfb8a6998f999f998d828494a8b4b6b4b29f7b69645d6d94c2d1cfbda27d6b7fa4bbbdb6
a896867d7d94b4c6c8bb96797284a2afafb4b8bfc6c6c2ad8d8b999ba4b8cdcfc8bba47d
7992a4b2bfd1dbdfddd6c6b8c2d1d4bfa88f8fa6b2b2a8947d748fcde6e1d6c4bdbfc4c8
c6b6a48f8289a8cbd6d1c4b8afadbf0000ada8a6bddbd6b69b9b967f70696b6d747d96b4
b8b4ada6a4abbdd1d8d1cdd1d4c6bba6928b969d928482a4d6dfd1bda2949286572e303b
4447504d47404034272e344772b6d8dbd8d4d4d4d4d6cfad8d8da6ada29dafb6a88b7999
c6d1d6d8dbd4cdc2b6b6b6b6c4cdd1d4d4cbab7f7486949d9da4b2bfbdaba2afbfbbabb2
d1d4c8b69679799fc4cfc6bbbbc8d4d6cbb69d928f99bddbe4e6e1cba6927d6d7284afdd
e4e4e4e1cba892928f99c2d4d1c2bfbdbbb29d827692afbbbdbdc2c4bfa48f9db8c6bfb2
b6c2c4c2bdb4a69284869dbfd8dfd8b4797074707b8496adb4afa29ba2a89d8d8d9999a4
b8c6cbb69696abbdb8adbfdfddcbb29fa2afbbb8aba2a4a49b8b8bb4dbe1ddc29b84899b
a8a694796b696044343232302b272024292b2b2e394d595d5d5b5b5950423934292b3940
403d42495d728292a6bfd6d6cbc4cfd6cdbd9f7b6469748496969babadaba6a2a4a8aba6
948b9da69b847f86898b9ba8a8a6a4b2c6d6c69b7f798bafc6c6bbc2c4c6d1dfdfc89f7b
76899fa28f7f8bafcbbba29ba2b2b4a2928b929dafbdc4c6c6b48f72625b6484afcbcdbd
a4827484a6c4cdbdad998474748badc4cbc2a27b6b829ba8b2c2bbababb4ad948696a6a4
a4bbd6d8d6cdb68682a4b4c2cbd4dde1d8c6b6bbcfdfd6b8928299bdc8cbc4b2997f86bb
dddfd6cfcbbfafadbbbbaf998b8da6b8b4a8a4abafadb40000ada8a8bfdbd6bfaba4aba4
8976747d868994a8afb4b2a6a6bbd6ddd4c8c6cdcdbdab968b8fa2a4968b8ba6cfd8d1bd
927066624d393b3d42474b4b4747402e2437495976b2d6ddd8d6d8d4d6d1bb897989a2a8
9279797d79696b82a4c2d4dbd8cfc2af9d969badc6d8dddbd8cba8827f99a4adafb4c2c8
bfa4999ba4a49fb4d4d4c6b2998492bfd8d8cfcfc8c2c2bfb2a4a89d8b8fb2d4e1e1ddc6
9f928272768db6dbe4e4e1d4b8998d9499a8cfddd8d4c8b29ba4a4927d8dabbdc4d6dfd6
c8a899afc6cdc29f969b8d8986867f7469749fc6d8e1ddbf866b6b76929fa2a2a4a6adb2
b6b8a88f828b94a2abb2afa29bafc8d1c6b2bdd6cbb6a6abbbcdd4d1cbbda89d998f84a2
cdd4c4a486797d8994927d62575247372e27201e1914121b24292e2e3747545954596060
503b373b343b494d4742474b596b7f94abbfcbc6b4afc4d1cbbb997b7072767d8b92a2bb
c6c8c6c4b6adb6bdaf9da6a69b89828f9f9d9994928d8d9bb2c4bb9d8f898fa6bbbfb6af
a6a4b4d4ddc28b6970869fa2948b9fbbbfad9699afc6c2a89696a2a8b6c6cdd4d4c6a47b
60606b89afcbd1bd997b768ba8c6d4cbb89f8d7f7f92b2c6cbc8b88f707b8f9fb2c6bb9f
96a8a88f868b94949fbdd4d1cfcbb2898db6c2cdcbc8cfd8d6bfb2b8cfddc89f847d9bc4
d4d8d4c6b29484a2c8d8d8d8d6c6a296adc2bfafa6a6b2af9b8d8fa4bbb8b200009d949b
b8d8d8cbb6a4afb4997f7b8fa2a6adbbbdb8b4afb8cddfdfd1c6cbcbbba292898292a6a8
94929db6d6dbd6cba4724d474240403b393b3d444b4b3d2b2e4d6b7f96bbd6d8d1d1d6d8
dbcdad7f7282999d84645d5b5957627289abcbd6cdb4a49d948f8fa6c6dbdfdddbcba88b
9dbdc4cbc6bfc4cbc4a69da4a69d9badc8cbb89f8b869fcfdfddd8ddd1c4bdaf9d94aba2
898da8cddfddd8cbaf967f74798dabcbe1e6dbc4a48d8b94a2b6cfd6d8dbd1b69da4a89d
8b899bafc2dbe4dbcdb6adbdcbcfc299827b6960626969666476a8cdd6dfdfcba2726486
b6cfcbb8a8b2cbd1d1c8b49b8b94afc2c4bda6969fbdd4d4c2abb4c8b69f9db2cbd6dbdb
dbd4b6927f84849fbfbf9d7d79747f8b8d948b725d574d393029221b12090509192b3434
323b44494b52595444323037373d4449444449495260768fa2adafadabafc2cbc8bb9d86
84827f8299a4b2c6d4dbd8d4bfb4bbc2bbababa8a2968fa8c4bf9f7f7974767f92a6afab
ad9b8992a2a89f928b8f9fbfcbb48669728ba4a696848b9b9f998d96b2c6c4b2a2a6b2b6
bdc6cdd4d4c8a87b5d647696bbcfd8c89d76748fb2c6cdc6b49f92898b9bb6cbd1d1cba8
7f768499a8bbb29f9fabad9d8b7d7d89a4c4d6cfc8bda4828fbbc6cbb8a4a8c2cdbdafb6
cdd8c4a296929db6cfdddbcbb6a29ba6bdd1dddddbcfa899adc4c8c4c6cbcbb6948696b8
d4cdbb00007f7b92bbd8dbcdb28f9dad9b84849dafb4bdcdcfc6bbb8bdcbdddfd4cdd8d1
b899847b7989a4ab999fafc6dbddd8cfb886504444423b34343737404b49342e476b8699
abbdcbc8b8b6c2cfd4cbb292797b8f927d6964544b5262748badcbd6c496848d8d8b8ba2
c6dbdddddbcbab99afcbcfd6d4c8b6b8bfb4b2b8bfb4ababada28f7f7682a6d4dfdddbe1
d8cbc4af968d9d9b8d96adcddddbd8cfb48f76767d8fa6c2dde8ddbd99828494a8bdcbd4
dbdbcfb69d999999968d96afc2d4ddddd6cfc8c6c8cbbf9b84847b70666666696d82adcf
d8e1dfd4b8866989c2dfd6bda6b6d6d8cfbfab9f9badcfdbd8d1bda8a4c2cfc8ad96a2bf
bfb2abb4cddddddfdfdbbf8b728294afbfb4866b7272828f99abaf9b766b6449423b3027
1b1205000e24343432343940474b4940342e2b2e303740474b4b4b505762707f86868da2
b8c4c8c8c8bba492928f827f96abbdcfdbdfdfd8c4b8bfbfbdb8afa4999294b8d8d1ab7f
726b7076849dafb4b6a28984868d8f949da6adbfbfa47f6b748da6a68f7469747f848496
b2c2bfb2a6afbfc4c6c6c6cbcdc2a47b646b7692b6cdd8d4b4867696bbc6bdb4a69b8f89
8fa6bdcdd1d4d1bd9676798b9ba8a8adb6b6ad9d9286899dbbd4ddd1bfa88d7684abbbb8
9d7f829badafabb6d1ddd1b8abadaba6c2d8d4b8a29fadb4b8c6dbddd6cbafa2abbdcfd8
dbdfddc4998ba6cfe6e1cb00006b6d92c4dddbc49b707692968b8da4afb4bfd1d1cbbfb8
b6bfd4dfd1c8ddd8c8b4967b7082a4b2a6abbfd4dddbd6cfbb8d5d524d47403737373439
3d3d323d62849da8b2b8b8ad948fa2b6c4c4b69b7f7b8d9b9b8d79594750668bafc6d1d1
c2967d7d827f849dbfd1d4d8d6c2a299adc6d1d6d6c6a4a2bdcbcdcfd8cfbda289726664
667ba2c8dbdbdddfd6c8c2af947f8b9299abc2d4dbdbd6cbad826d747d92a6c2dfede4c8
94748292a8bdcbd4d8d4c6ab8d7f84929b969fb2b8bdc8d4d6d8d4c4bdbbaf968f9da494
766666727989a6c4d4dddddbc8a48492bfddd4b49ba6bdb8aba29999a4bdd8ddd8d8d1bb
a6b8c4b89d8da2c2cfcdbdb2c6dbdfe1dfd6b889768fa2b6bfaf867279768494a4bfcbb8
947d6d524d493d2e221909020714242b2b2b323b42474037342e29292b3440495052545d
6974766d6666799dbfcdcbc8cbbda89b968b7b768dabc6d6dfe1dfd8c8bfbfb8c2cbbda2
8b8692bbddd6b68d7b7279848ba4b6bbbdaf9b8b7f8299b6cbcfd1d6cdad846d72849996
826b626b72727b96b2b6afafabb6c8cfcbbfb8b8b8af99827674748bafc6d6d8c6a28b9d
c2cdbfafa29d948996b4cdd4d1d4d1c8a67d727d8fa2a8b2c2bfa8949699a6bfd1dfe1d4
af897266728ba4a28d7676899b9f9db2d4dfd6bfb8bfb8abc2d1c49f8b94a4ababb6cdd1
c2afa4a2a2abcbdfe1e8e8d1a694add4e8e8d60000626b8dbfdbd4ab76525470898f96a4
adb4bdc8cbc6b8b2b4bfcbd4cdc8dbd8cdc4ab867084adbdb2b4c6dbddd8cfc2b4967972
6050494239302b29303d4d64829dadb6bbbbb8ad9f9699a6b2b8b49d8b8696abb6ab8257
445074a8cfd4d1cbbfa486797b7d849db4bbb8bdb8a68d8d9fb8cfd4cbb4969bbfdddddd
e1d6bf9979645d626b7b94b4c8d6ddddd6cdc4b6997b7f8d9fbdd4ddd6d1cdc4a6827076
7d8d9db8ddebe4cf99728292a2b2c2cfcfc8bfa4847684969b999ba2a4a6b2c4c8cdc6b2
adada2999badb6a8866b6b767f8f9fadb6c2c8cbbfa89fafcbd6c4a28f9294969da29b94
a2bfd8dfdfdfd8c8b2adb8b69b8fa2c2cfd1c4b2b8cbd8dbdbcfb2948d948f99a4a48d7f
827d8d9da8c8d4c6a4866d525050422e201b1009070e171e2224293240443d3739323032
323944505257607084928b6d60646b8fb6c4c2c4c6b4afab9f86706b84afcddbe1ddd6cd
cdcbbdafbdcfbf997b7f94c2e1dbc6a88d828b9496afc2c2c6bba8927f84a4cbdde1e6e1
d6b68b7679767d7b747070706b64708fabadabb2b4c4d6d8cdbbafa69b928d8984827d94
b6c2d1dbcfb89fa2c4d4c6ad9b99968f9bbfdbdbd6d6d4cdb6947f82929b9da4afad9b8b
8fa2bbcfd8e1e6d4a4766b646b84a2a896827f9bb2a696a8d1ddc6adb6c2bbadc4d4cbad
948d8d8f94a6bbb69d898b999da4c2dde4edebd4a694abcddde1db000064708fbdd6c694
5d5052607b8d9b9fa4a8afb4bbb4a8a6b2bbbbc2cdd8dbd6cdbfab897282abbfb8b8c6d6
d6d1c2b2a8998f947d6059574224202234597f99a6b4bdc2c6c6c4c4c2ad9999a2ababa6
a29fa4b2bba8745047547fb6d4d1cdcbc8bfa68d84828d9fada8998d86827b7f92abc2cd
bfa28f96b8d8ddddddcdad8b7b696269747b8499b4cfdfe1e1dbcfbf9d7979829dc6dfe1
d1c2bfbba484767d7f899bb8d6e1dfd1ad89848b929babb2b8bfbba27f7b8da6b2af9d8f
949babc2cbcbc2adadafadafb2b8bbad8d7476828d9ba4a299a2a8a4948d9fbfcdcbb48f
8d8d8ba6b8bbb29f9fb8d6dfdfe4ddd1bfabb6bda299a4b8c2c8c8bdb8c4d1cfd4d4c4ad
a29b7d748296948d8b828d9dadcfdbcbad8b7260574d402b272920171012191e27302e30
3b423d393b34393d393d495052576986a2ab9d79696d6986a8b8bbbdbfb4bfc8b8967469
82b4d6dfe1d4c6c8d1cfbbabb8cdb88f7482a6cfe4e1d8c2a2928f949db8c8c6c6c2b292
7d84a6cfdbdde4ddcbaf9996947972747b82847966606b869fa8adb6bbcddfddcfc4bdab
94898d8f8d8b86a2c2c4cbd4d4c8b4adbfcfc4a68f94a29da4c4e1e4dfddd4cbc4bba296
9b969999928b86868f9db4cdd8e4e6d1a67d76747d96b2b8a69292abb8a899a6c8cbaf94
a4b8b8b4c4d1cdb6a49482767b929b94827b7d8d9b9fb4cbdbe4dbbd948da8bfc6cfdb00
00707b9bbfcbb2825b575b64748b999b9b969499a4a49d9b9fa2a2afcdddd8d6cdb69d7f
6b7492adbbbbbbc2c8c4b6a8968b8f9f8f6b54544227272e4b7da8bfc4c6c8cbcfd6d6d4
cdb2968b949fabb8bdbbbbbbb6996d524d5d84b4cfd1d4d6d8d1bb9d898694a2ada48d79
706d70798b9dafc6bb9b8d96b6d4d8d6d1b8947b7b6d666d72727284a8cfe1e4e4ddc8b8
9974707492c4e6ebd6b8aba69b897f827f869dbbcfd8dbd4c2a48d86898d9699a2afb49f
84869dbdd1cdb4968d9bb8d1dbd4c6b8b6bbc2c6c6c6c2b292747d92a2adab9f96a4a896
7d82a4c2c6bda47f7f8d9fc2cbc6bdaba2afd1dddbdfdbd6cbafb2b6a6a6adb4b2bbc8c8
c4cbd6cdd1dbd4bfb2af9d8682949da29b84849bb8d8dfd1b89279705b47372e30322e22
1919203244524d474d50493d3d3b3d403b3d4752575d6d8fabad967d7270667fa2b6c6cb
c4bbcdd6c2a47f7289bbdbe1dfcfc6d1d8cdb2adbfcdbd967d92bdd8dfdfdbc6a28d848b
a2bfcbc4c4c2af8b7b84a4cbd4d4d4c8b6abafb6ab867276828b897b69626b7f9dadb4bb
c4d4dfd6c8c4cbc2af9d94928f8b89a4c6c8c4cbd8d6cbbdbbbdb49f9babb6abafcde4e4
dfdbcfcbcfd4c2ab9f9b9f99827b8499a49fa2b6cfdfd8bfa2897f8da2afb4ada29da8af
aba2a6b8cbc6ab949dadb6bbbdbdb2a29d967f6b6b7b8286868284929fa2a6b2c4d1c6a4
86869ba6adc2d800008d9bafc2bd9d745b5b6970748b9fa6a4998d8d9da69d8f8684869b
bdd6d4d1c2a48d7669728dafc4c6c2bfc2c2bdb2998992a2966b42393730323b649dbfcd
d1cfcdcdd4e1e4ddcfb2927d86a2bdcdcfcdc8c2ad8b6d59596989adc6d1dbdfdfd8bb9b
8f929dadb8af99867d7974768499afc6c4a89dabc8d4d1cdbd94766b6d6d727b7976768b
b6d8e4e4e1d6b8a88f746d7494c6edf6e4c4a28f929294948f96a4b2c2cdd4d4cbb29484
899dafaba6b4bdb6a299afd1dfdbc6a892a6cbdfe1d8c8bbb6bfcbcfd1d1cdc2a4828496
abb8b49f94adb6a49296b4c6bfad8f696d8bafcbcfc6bdb2abb6d1dddbdddbdbd1b8afb2
afbbc2bba8afc4c8cbcfd1cbd1dddbc8bdc4bb9f868f9fafa88f89a6cbdfe4dbc2947470
593d3032323232271e223957707b7f7b746d5b4d4d474040404454697270748ba29d8672
6964607694adcdd8c8b2bdc6af967f798bb8d6dbdbd1cfdfdfc6a8b6cfd6cba2899fc8db
dddfd4b68f7b79849bb8c6c2c4bfa886828fa4c2cdcfcfc8bfb8bfc4b289706d797d7972
69666d7f99a8b2bdcddbe1d4c2bdc8cfcbb89b8b89848fabc6c4c2c8d6dbd4c4afa6a8ad
b6bfbdb2bdd6e4dfd6cfcbcfd6d6c4a6929494867b7692b8c4b49fa8c4d6cdad9489869d
b2b8ab9994a4afa89ba2bbcfd4d6c6afadb6bfc2bba892898986766d6b727f96a4a2a2ad
b6afa8abbdd1cfb292848994a4bdd10000a6bbc6c4b69476696b7b82849bafb8b6ada2a4
b6bdab8f7f7d7f94b6cbc2b6a48b7f767284adcbd1d6d4d1d1cdc6bda489899689603b32
34343740669fc8d8d8d4cfcdd6e1e8e4d4ad867982a8cbd6dbd4c8bda6846d62667692a8
bbcdd8dfdfd6bda8adb2b6bdc8c4b29d8f897f7d86a2c4d1cdbba6b6d1d4cfbfa2765d5b
6074898f8d8b96afcbd8dfe4e1d1af9d8b7b7b89abd1eff6ebd4ad928f99a2abb2bbbdbd
c2cbd1d4c8af948499bbcbc4bfc8cfcfbba6bbdbe4e4d6bda4bbdbe4e4ddd1bdbbc6d1d6
d6d6d6cfbb9b898699abab998fa2aba2949db2bbb29f84666982a8c8cfc6bdb8bdc8d4db
dfddd6d6d1b8a8a6afc6cbb4949fbbbfcdd1cfcfd8e1dbc8bfc8c29d797f99b4b8a296ad
d1e1e4dfc8966b604d3d393937322e24222e50768b8d9d9f8f7f6d625d5449444952647b
7b767d92998f7f7062595b72899fc8d8c4999ba69284767b92bbcfcfd6cfcdd8d1b8a8c2
d8ddd1a88da4c8d8d8d1bd9d7b70798694a4b4bdbbb29d8b99adb4bdc8d1d8dbdbd6cdc4
ab86706b706b69696d747b828b929dafcde1e4d4c2bdc6d1d1bb9279797f9bb6c2bdbfcb
cfd4d1bf9d94a8c2cbc4bbbbc6d6ddd4c8c4cbd6d6c8ad8d828982706b74a2cdd4cbb6ab
c2d4cfb6947f849babada49b9ba8afa292a4c4d6d8ddd8c6b4bfcfcfc6ab8d847f7d7972
727689abbfc6c8cbc8bba8abc6ddddcdb28f8699a8bdcd00009dc8d8cfbda4948b848d96
9bb4bfbfc2b8b2bbd4d6bb96828289a6c6d1bda896847d797f99c4d8d6d6d8d8d8cfc8c2
a87f6972695242393b3d42476092c8dddbd8d4d4d8dfe4e1cda27d7b7f9fbfcbd1cdc2b6
a48d79797d8494a2b2c6cdd8ddcdbfbfc6cdcfcfcdcdbfa4948d89898fafd8ddd1c2abb2
cbd4c4ab8d6d5954698da4a69f9badc6cfcdd1e1dfcbaf9d928992a4bfddebede8dbbb99
9294a4bbcdd4d6d6d4d1d4d6c8ad968da6c8d1cdc8d4d8d1bba6bddde8e6dbc6afc6dfe4
e4e1d6c2b8bdc8cfd6dbd8d1c4a8897682a2a89b8d898b847d94adada69d8f79727b9bc4
cfc6c4c6cfd4d6dde1dbcbc6c8ad9b99a4bdc2a4868fa6a8bdc6cbd8e1e1d4c6c2cbc69b
707fa2bdbfa48f9bbdd8ddd1bb966d594d4b4b4b443b2e242434597f8f8b9ba69f94897f
746d60504d546672696d848d8b86867b695b5b6b7992bfcfb27f76827b747284a8c8d4d1
cdbbafb4aba2a8c2d4d8cdb29fa6bdc6bdada29484848f9b9b9299abab9d8f96b2cbcfcb
c8d1dde4e8e4d4b89982797674706d76868d8f8d84828ba2cbe4e1cfbdb6bbc6bd9d7d70
7689a2b2b6bdc2c6cbcbc4ab8686a6c2cdc6bbbdcbd4cfc6bdc2cfd4c4a88b797b8b8674
6474abd8dfdbc2abbdd4d6cba6827b8d9b9ba2b2b8b6bba68d9dc2d8d8dbdbcbb2bfd6d4
c6ab968f8b847f7b797d92b4cbd6dbdbd4bfa6a8c8dbe1ddcda899a8abb6c8000094cde1
dbcdbdb6ab9b99a4b2c4c6c2c4bbb4bfdddfbf9b868999b8d6ddcdbdab9689828ba8cfdf
dbd6d8dbd8cfc8bfa87f5d5d544b474449525052608bc6dddbdbd6d6d8e1e4ddc4967b7f
829bb6bbb8afa8a8a69b8d99a29b9b999fadbbcbcfbdc2cfcfd4dbdbd1c8b89b9699928b
94b8e1e4d8c4adb2c6cbb49986726266849fafada69fa6b8c2bfc4d6d8c8b29f9494a2af
c6e1e6e4e1d8bfa2948da4c6d8dbdbe1dfd8d6d8cbb4a89fa8bdcdcbc6c8cbbfaba6bbd6
e1dfcdb6afc4d8dde1ddd1b6a29ba4b2c6d4d4d1c6ab847489afbba88f7f79747b9bb2ad
aba49f998f94a8c2cbcbcfd6dbdbd6dfe6dbc6b4aba49f9da8bfc4ab96969b949da4b4d6
e1dbcfcbcbcdc49b7b92b2c4b68f767f9bbbc2af927f72605d6062625d503b292439608b
9d9ba4afb4b2a6998f8f7b5d5454626d667084847f84928974605b626d82adb69b7d6d6d
6d6d7999c2d6ddddcba8949b94929db2c2c4bbb8bbb6ada49b929fa69da8b4b8af9b8f99
9f9996adc2d4dbd4cfd4dbe4ebe8ddb89284827f7d7b7f8fa4a29b94898b96abcddfdbd1
c4b6afb2a27f747489a4ababafbdbfbbbbb8ab8d797f99b4cdcdbdbbc6cfc6bdbbc2cdc6
a682706b74898f826b79afdde6dfc4a6b8d4ddd8bf997b7f898da8c6cfc6cbb48d8db6d4
d1cfcdc4adbdcfc6b49f9b9d9b8f84848b96a8bdcdd6dde1dbc2a6a6c2d6ddddd4b6a6ad
a4a6b8000094c8dfdfd8cdc6bdada2abc6cfc8bbbbb4adbbdbdfc6a68d8da2c6d8d8d1cd
c2ab998b94b6d8e4ddd8dbdfdfd4c6bdad8f726b5b4b4d526069625d6486c4dddbdbd6d8
dde1e1d6b88b727f8ba8c4c2b2998f9fa8a29fb6c4bbb2a29ba6b6c2bfbdcbd6d4d6dbd8
cfc2ab99a6afa699a2c6e4e6d4bba8b2c4c6ad8d7972727f9ba8a8a8a8a29b9fa6b4c4c4
c2bfb69f8f94a4b2c8e1e8e1d8d6c8b4a29bafcfdfdddbddddd8d1d1c4bbbfada2a6adb4
b2ada299969fb6cbd4d1b69999adbdc4cfcfbf9f89868d92a2bdcfd1bf9d7f7994bbc4b8
a89b928d94a8b2a8a29f9d9b94949db2c6d1d6d8d8d6d1dde6ddcfb2999fa4a8bbcfd1c2
b8afa28f8b899bcbd6cdcbcbcdcfc4a696a8bbbda276697b96b2b69b74666d6d70727474
72664d322b426b99afb4bdc4c8c8bba4969686645754606b6d7d8f8b848da2997d645d64
6d76929d9da2967d6d7686a8d1dde1e4d6b49ba2a69b9299a2a8b6c6cfc6af9f9994a6ad
a6b6c4cbc4b2998d999fa8c2cfd6d6d4d1d4dbe1e6ebe4bf968b8b949b8f8f9daba89f99
949dadb8d1dbd8d8d6cfbfaf947b747b96b6b6b2b6bbbdbdb6a2897b798496b2cdd1c4b6
b6bbbbbdbfc2c6b899746462697b8b84727fa8cfdbd6bfa8bbd4e1dfd1b6927f7b849fc4
cfcbcfb88d7da2c8cdc6bfb8a8bdcbbda296a2aba89992a4b6bfc4bfc6d1dddfd8c29f99
b2c6d4d6c8ad9fa49fa2ab00008dabcdddddd6cdc2b4a4a8c2c8b8a49b999fb4cdd8cdb4
968fadd1ddd8d4d1cbb8a6999dbfdde6dbd8dbddddcfc4c2b2967d746050525d76847d74
6d82b8d6dbd8d6d8dddfddcba67b6d7f94afc2bfab948d9b9f9fafcbd6cfc8bbb2b8c4c4
bdc8d1d4d4d4cfcbc8c2b2a8b8c4b8adb6d4e8e4c8aba2afbfc4b289666d7b8fa8adaba8
aba89d96a2bbc4afa8b6b89d8d9699a4bddde4ddd1cdcbc6bbb4bfcfd1d1cbc8cfcdc2bb
b6bfc4ada2a69b999b96847b8696a4afbbb69f827b8b9dabb8b6a692898d9289899fbdc8
b48f7d84a2bfc6bfbbbbbbb4aba2968984898b898984869fbdcfcdc2bbbbc4d1dddbcfb4
999fa8b2c8d8d8cdcdbda28d8b8b94bbc2bbbfc2cfd6cdb6afbfc4b28d727999bbcfc8a6
7466767d8282868684795d3d324b74a2bdc6cbcfcfcfbda28b8b7f695d6b7970798b9b99
9babb8ad8b70748282797d99b8c8c29f797f96b4d8dfe1e1d4bba6b2c2b89b8d8fa6c8d6
d6d1c4b29f99abb8b4b6c2cdcdb8998494a4b2cbd1d4d1d1d4d6dbdfe4e4d6b8999494a6
b6a4928d92999fa8afb8bdbdcbd6dddfe1dfd4b8967d76849fbbbdbbbbb8c2c6bb94797d
899badc2d1d8d1c2b2abb2bfc2bfbfb8a484665d66707979747b8fa8bdc4bbb4c6d8e1e6
dfcfb4927d7f94b4c2c4c2a6847f99bbc8bdbbbfbdcbd4c6a899a8b2ada2adcbd8d6cfc2
bfc8d6d8d1c2a49296a8c2cdbfa4949ba6b4af00008f8fa8cbddd8cdc2b29f969fa69f92
828296adb8c6cdbba4a2bdd8dfd8d4cfcbc2b4a4a6c4dde4dddbd8d4c6c4c8c4af96826d
5d52576d8b9f9b8d7b7b9dbfcfd1d1d4d4cfc6b4968689969fabb2ab9b969fa29696b6d4
ddd6d1c8c4c8cdcdcdd4d6cfcbc8c6c4cbc6bbb4bfc4bbb2c2dfebdfc2a49ba8b8bda87f
606b7b8fa8afada8abab9f94a4bdbfa69fb2b89f8d948b899dc4d4cfbbb2b8c6cbc6c6c2
b2ada8a2b4bdb4abafbfc2afadb29b9b9f967f747f8d8f8f99a299867b7f92a8b4af9f92
92948f848496adb8b29b8692b2c4c4bbb8c2c6b69b867d7d898b84899ba8abb6c4cdc2a6
9ba4adbfcdcbc4af9ba2afbdcfdfddd1cfb892828d99969f9b9ba8b6c6cdbfb6bbc8c2a8
8d8696b4d4ddd1af7d707f8d8f8f948f8f826249425779a6c4cdd4d4d1cbb29486847d6d
708f9f898996a2a2adbfc6b8947b8fa6a68f82a2cddbd6b28b92abbfd4dddfd8c2b6b6bd
cdc8ab8d89a8d1dbd4d1cfbda29fbbd1cdbbb6c6c8b28d8499a8b4c6cfd1d1cfd4d8d8dd
dfd6c2ada29da2adb299827974849fbbcbd1cdc6bfcddfe1e1e1d8c4a489848fa6c2c8bf
b6b4bfc4af8b7d8b9db6c4cbd6ddddd6c8b6b4c2c6bfc4c6bfa27964696b7482867b747f
9bb2bfc8d6dfe6e8e4dbc8ab928d9bb2bdb6a696929fabb6bfbbc6d8d8d8d8d4bda8a6ab
a4a6c2dbe6ddd1c8bfb8bfc4c8cdbfa48d8fa8c2bfa699a4a8b6af0000948489a8cdcfcd
cbbb9f898d9fada692828da2a8b4bfb6adb2cbdbddd4cfcdcdc8b8a6a4bbd1dbd8d6cdb8
a6b4cbc8ad94846659576282a6bbb6a8927d869fb4bdbfbfbbaba29fa2abb6bbb6afa492
8b9fbbb69d96b2d6e1dbd4bfb6c6cfd4dbdfddd1c6bfbfc4c6b6abb2b8b8afadc6e4ede4
c6a28f9bada892766b747d899fa49f999da6a28f9bafaf999bb4bfaf9f9f8d7d7f9fb2ad
9992a2bbcbcdc8b89b8b868fabc2c2b4b2bbbbb6bbb89d9da49d897b848d8f929fafb2a4
8f8996afbfbfaf999696867f8699adb6b8ab8d92b4c2bba69fafb8a47f747b899d96868d
b2cbcbcdd4d8c8a494a6a4abb6bbb6a8a4b2bbc6dbe4dfd6d1b8928299a89b897986a4b6
bfbba29dafbdb69f9296a4bbd4d8d1b484707d9299969994927d60606b798699abb8c6d1
cdb69b8b847f766d7ba2b4a6a2a6b2b6bdc2c4b8997f99b4bbad9db4dbe1d8bda2a6b6bd
bbc4cdc8bdbfc8c6c8bb9d8689abd4dfdbd6d4bda6afcbddd8c4adadb2997f8b9fafb2bb
c4cfd4d6d8d8d8ddddcfb8afa89fa8ab9982726d6d84abcddbddddd6bfc6dddddddbd6bf
a69b9fa6adbfc8bfaba4adb6ab948b99adc4cfcfd8dddfe1dbc8b8c4c6bfcfd8d4b88b6d
6b70849fad94746d82a4c2d6e1e4e6e6dfd8cdb49992a4bbc2ad8f99b8c4c6c4c2c2d1e4
e4dbd4d1c4b4aba49ba6c6dbe6dfd4d4cbb2a4a8bfd4cdaf9492a4b6b8a2949d9da69d00
00927d748bafc4cfd6c6a48999bbcdc6b494828d9ba6adadabb4c8d6dbd6d1cfcfc8b8a4
9ba6bdcdd1d1c4a8949fb8bb9d8479645d607096bdcfcdc4b6a294949b9fa8b2b4a8999f
b6c6cdcfc6b49b868bb2d1c4a694a2cbe1ddcfb29fb2c8d4dde4dfd4c8bfbfc2b8a29bad
aba4a6b4cde1ede8cda28689928474707d8992a2b2ab998d99afaf8f7f868f899bbdcdc6
bdb49b848299a4a29999a6b6c2c4bfad8d7b7b8db6cdc6bbbbbfbfbfc2b69b9babad9989
898d9ba8b4c8cfc8b49d9bb4c6cbbda6a69f867d8496a8b4b6a6847f9fb8b69d92a8b89f
74697b8fa2927d89b8d4d1d6dddfcda499ada89f9ba29da2b6cbcfd1e1e4dfdbd6c2a69d
afb8a282748fbdcfd4c6a699a2aba6948b96a4b4c8d1cdb48d70748d969292948f796684
9fa49f8b7d7f96b6bb9b89847b746d6b79a4c2bfb8b8c2c6c4bfbdb69b8496a8b6c2bdcb
dddfd6c4afa8a8a89fa2abb4c2cbcfcbc2a689848fb2dde6e1dbcfbbadbfd1ddd4b49486
8676748da4b2b4b6b4c2d6dbdddfdfdfddcfbfb4a8969b947d767276848fabcfdfe4e4d8
bbb8cdcfcbc8c8b6a6a8b8bfbdc4c8bfa494a2bdbdaf9fa2b4c6cfd1dddfdfe1d6c6c2c6
c4bfd4dfddc69970667699b8bfa27d727f9fc6e1e6dfd8d4cbc4c2b29d94a4b8bda4869d
cbd1d1cbc2bbcde4e4d8cbbfb6b8b6a69da8c4d8e1dfdde1d8b69b9db8c4b29d9d9fa8b2
b29f928f86868200008d7472829bbbd1d8cba88d9dc6d8d1c8a88b84898f9babafb2bbcd
d6d4d1cfcdc8bda89ba4b8cbd4d1c4ad9f9fa4a49482797070707dabcbd8d8d4cdc6b4a4
968d9dbbc6b69d9fbfcfd4d4cdb6998996bdd4bfa28d8fbbd8d6c6af9fa2bdd1dbe1dbcf
c8bdbdbfafa4a6ab9f96a6c6d6dfebe4cfa882747469646d8296abc4d1c2ab9fafcbc699
695d707689adcbcbc6bd9d8b8fa2ababa6abb4bdc4bdb29f8f828296c2cfc4bbc8d4cbcb
c6b49d9dafb8a68f898da2b2bbd1ddd8c6a89fb8cbcfbfafb4ad8f827f8b9dada8947979
96b2b8a89fb2bba272647f9da4896b72a8cfd1d6dbd1b29499b2ab9b8f8d8fa2c6dddddd
e8e8e1d6cfc4b8b8c6c2a2898babcfdddfd8c2bbb8a8927f828b949db2c6c6b6a27b6676
7f7f7d898672709dbdbbb8a27b5b7099a89b928b7b706d727fa8c8c8bfbdc4c8c6bfbdb4
9f8b8f99adc4cdd4d8cdbfafa4a29b9da8a29dabc2cdc8bfb4a28d8f99b4dbe4dbcfc8bf
bbcbd4d4c299797069626986a4b4bbc2b2b8d4dbe1e1e1e1dfd8cbbdad927b666069768d
a4999dc2dde8e1d1b2a4afafa49fabb2b2b4c6cdcfd1cfc4ada2b6d1cfc2ada6b8c8cbc8
d4dbdbd4c6bfcbcdc4c4d6dfd8c29470697b9db6b49f897f89a2c8e4e1d1c6c8b8a8adb4
af9da2aba88f7d9bcbcfcdc2b29fb6dbe4ddc4abadb8bfb8adabbbd4dfe1e4e6d6b49f9d
a8a48d899fa2a6afb4aba2967b706b00008b7b7f8b92b2cdd4cbaf9496c2d6d1cfb89d8d
89848dafb8afafc2cfcfcfcbc8c4bda699adc2d1d4cbbbafb4ada4a6a69f928f928f8fb4
cfd8dbd8d8d6c8b2998ba4c6cdb89692b2cdd8d6cdb696868fadc2af96898fb4cdcdc2bb
b4a4b4cbd8ddd1c6c2b2adb2afb2b8b6a89babd1dddde4ddcfb68b747064666d7b8fadcb
d4c6b6b8c8d8d1a666506679849dbfbbb2a68b8b9babafa8a4afb8bfcbc8b6a2a29b99ab
c8cfc2bdd1dfd6d4c8b4a29da8b2a699928f9fabb4cbdbd8c2a6a2b8cbcbbdb4b4ab8f84
7f86969d96868494adbdc4bdb4b4b29d726982a29d7b545086b8c4cbcbb8928b9dadab9d
9ba4adb8c8d6d6d6e4e8e1d1c6bfbfc8cbb8998f9db8c8d6dddbcdcfc8a6867b868b847f
8fb4c6c2b28462696b69646b696272a2c2c6c8bb8f5b6b96afadaba68b7670798badc6c8
bfb8bdc2c6c4bfb8a896929badbdcbd4d4c2a89b9ba2a2a4b6bdb6afb6bbb2a89f9b9694
96add4e4dbcdcdd1d4d8d4c6ab867470645d627b9fb4bfcbc2c2d4dbe1e1dfdfe4e4d8c6
ad865940495d82a4ad8f84abd8e6dbc4ada4a296847f94b6c4c2cbd4d8d6cdbfb6bbcbd8
d6c8afa4b8c4c2c2cbd4cdb8abb6c8cdc8c6d1d8cbab89797b7b8996999d96898ba2c6df
dfd1cbcdbba6adbfbfa68f8f8d797499c4c8bfad9d8fa8d1e4e1c2a4afc2cbcbb6a8b6cf
dfe6e8e4cdab9d968f867f8da4a6a6afb8b4ab9f867b7400008d929d998d9fb8c4c2ad92
8bb4cdd1d1bda49ba29f9fbdbfb2a8b4c6cfd1cbc4bbaf9d96adc2cbc8bbafb4c2b4a4ad
b8b8adafb4ada2b2c6d1d4d8ddd8cdb29492b2cbc8b8998494b4c6c6c4ad8d7672869d9d
9b9da4bdcdcbbfc6c6adafbfcfd4cdbfafa29b9fafbdc6c6b6a4add4ddd8d8d6d4c29d86
7b70727b828ba6bfc2b4afc4d1d6c8a46d62849fadb6c4b49b867d8da4b2b6ada8b4b6b8
c4cbbda8afb2b2b8c4c8bfbbd1e4ddddcbb2a28f929fa4a8a896949ba6bdd4d6bfa4a2b4
c6cdcbc2b49f8f9499999d99928da2b6c4cbcdc8bbab9f8b6d667989745032326292adbb
c4bfa4a8b4b2a69da8bfcfd1d1cdc2bfd1dddbcdc6c6cbcdbfa68f92a2afbbcdd6d6d1d4
c89f8b8d9b9d89747da2bfc6b68d7682847057575b627b9db8c4c8bf945d6994afb6bbb4
997d748499b2c2c6bbb4bbc8c8c2bfc6bba4a2a8afb2bfd1d6c8b8b2afa8a4abb8d1d1b6
9f96969292969b9494add4e8e4d6d6dfe6e1d4b8967f7f867d6d64728fadc6d1cdc6cdd8
dddde1e4e8e6d8bd96694239496292b6ad847299d1e8ddc6b4b4af947b7fa2c4cfcbcbd6
dfd8c8bfc6cfd6d6d1c4afa4afb8bbbdbfbfb6a49da8bbbfbfc4d1d4bf9982868d827470
7b9299949fb2cbdfe4ddd6d4c2b2bdcbc6ab8f89826d7094bdc6b6a299a4c2dde1d1b29b
b4cdd1cbb6b2bdc8d6e4e8e4cba694867b798499abadadb2b6b2a69f9b9d94000096adb8
ad999da8afaf9d867b99b8c6c4af9d9fb2b8bbcdc8b6a4a4b6c8cfcdc2af9f999da6b2b8
b4a6a6bbc8bba6abb6b8b4bfc4b8a29ba6b6bbcbd6d6cbaf9496b4c8c4bb9d827d8b99a4
b2a48269626b7d94a8bbc2bbb8bdbbcdd4c2b8bdcbcdc2b2a29f9b9bb2c6cdcbbba6a6cb
dbd6d4d6dbcdaf94868496a2a4a8adb2afa4afcbcbc2a8867489afc4cdd1d1c4ab92848f
adc4cdc8bfbbbbbbbdbfada2bbc6c4c4c2c4bdb8cbdfe1dfcfbbab9282899fb4b49d8f8f
9db6cbcfbfa6a2b8c4d4ddd6c4aba2adb4b4b4a89fa4b6c4cdcfcfc2a8948679665d5d5b
42291e27446689adcdd4c8c8cbbfa8a2b2cfe1e4dfd4b8a4b2bdc6c6c6cfd6d6c8af9994
9fa8afc8d4d4dbdbc69f8d9bb4bda6898492abb6ab9292afb48f625d70899fa6adb8bdaf
866064849fb2b6ab8d7b7b8fa8b4b8bbb2b2bfcdcdc2c2cfc6adabadb2afbbc8d1cfcbcd
c8afa8afb4cfd8bf9d86848994a2a8a4abc4dbe8dfcfd4dfe1d8c6ab8d7d8da49d826b6b
7b96b6cdc8bfc4d1d6dbe6e8e8e1cda87b543d405270a2bba27b6d92c6e6e4cfc2c2bb99
7d89b4d1d8d4cfd4d6cdc8cbd4d8d8d1c6bdb4afb6b6b8bfbbb2adb2ada6a6a8a8afc6cb
bb99868b8f7f6b606d899fafbdc2cddde4dfd4c8bbb8c6cdc4b2a89b82666b8fbbc8bba2
9dbfdfe8ddb68f8dabc4c4b8b6c2c8bfc8dde4e4d1af9484828694a6afafafb4b6ad9b94
a6b4af0000abc4c8b8aba49b92998f827b8ba4b4b6a89fa8b6c4cdd4cdb69b949fb4c2c4
bbadabafafa29d9b928ba2c4cfc2afaba8a4a4b8bdaf99898d969bb4c8cbbda69494a6b4
b8b8a2827679899da69f8b796d6d768da8c2c4ad9dabbbd4ddd1cbc8cbc8bba8a2a69f99
afc4cbc6b29d9bb8cdd1cfd6dbcdad94929fbfc4b8c2bbada6abc2cdb8a48b7282adcdcf
d4d8d8d6c8ad9296bbdbdfddd4bfbdbfb6a699a4c4cfcdcdc8c6c4bdc2d4e1e1d6c8bdab
8f7b8fa8ab9b92949bb4c8d1c8b2afc4cfdfe8e4d4bfb2b4bdc2c2b2a6b2c4cdcfcdc6b2
8f7d767470604d402e201e22303d5996c8d4cdd4d8cdb6a8b8d6ebefe6d6b4999d9da6b4
bfcfdde4dfd1bba6a2a4abcbd6d4ddd6bf9d92a8c8d1c2a289828d96948f9fbfc8a6726d
92bbc8bfb4b4b299796b6b7d99b2b2997f72798fabb4b4b4afb2bdc8c8c2c6cfc4afadb2
b6b4afb2bdc4c8cfd4bdada6a2bbc8bba692898fa6b6bbb4c2d8e4e6d6c4cdcfc4b6ada4
8f8296b2ab8d706b707d8fa6afb8c4cfd8e1ebebe1d1b894705b5252607fa6ad8d747086
afd1d8c6c6c8bd9f828bb2c6cbcdcfcbbbafbbc8cdcfcbc2bbb8b6b6bfc2c8d6d4c4b4b4
b6ad9f9b948f9fabab9d897f7d766b667296b8c8cdcbcfdbe1dbc8b4abafbdc6c2bdbdad
86606482a6bdaf9496bfe1e6d19d797f9bb2b6b4bbc6c6b8b8cbd8e1d6bb9d969b9699a2
ababafb4b4ab9289adbdbb0000c4cfcbbbada28972828f94949dadbbc2bfbdc2c4cbd1d4
cbb49689868b999fa6b2bbc4bda48f8276768fb4c2c2b6a8948b929fa29f9d969ba2a4b8
c4bba6948f8f99a8b8c4ad86767f9fb6b2b4b6a69284868fa4b4b49f92a6c6d8d8d8d6d1
cbcbbfab9d968f92a8bbbfb49b898da4b8bdbdcbcfbb9994a6b4d1cdbbc4bfb2adbbcbc8
ab8b746d8dbddbdbd8dbdddfd4bb9da4cbe4e8e1d4bbbbb89f8f99b4c6cdcfd1cfcfcfcb
cbd1dde1dbcdc8c2a4767f8d8d8d929496afc8d1cbbbbbcfdfe8e8e4d8c4afadb8c6c6b4
a8b2cbd6d6d4c2ad967d747f867457422e221b2024273770abc6c4d1d8c8ab9bafd6edef
e6cfab9499999ba8bdd1e1ebe8e1d4bda69babcbd6d1d8c8a89496b4cfd8c8a482797b7f
8992a4bdc8a8797da6cfd6cdc4bfb2967b727689a4c2bba49284828da6b6b8b4afafb4bd
bfbfc4c8bbabb4bbbfbba494949fafc6d8d1bfa694a6bdbdad9994a6c4cfc6b8c6dfe8e8
ddd4d1bda29da2a4968694a89f89726d696d7b8da2b6c8d1dde6ede4d4bda48d7f7d7d74
708499998684848494adbbb6bbbdb29f847f96a4a2a8bbaf9b9da6afadada4a4adb4b4b6
c2cddbe6e4c8a69da4a69d928476747b868d867d7b7f7f7982abc8cfd4d1d4dbe1dbc29f
99a4b2c2cbcfcbb4865b5b6b7f968f7d7f9dbdc8b289727f99b6c6c4c4c4bda69ba6bfd6
cfb4a4a6a6948d96a4a4abb4b2a88d86b4c4bf0000d4d4c8b4a29276647994a2a6b6c8d4
d6d6d6cfcdcbcdcdc6b4a4968474798296afbbbfbbab967d6b6b76899dabada2948d8f94
9da6aba8adb8c2cfd1bd99868b8992abcbd1bd947d89adc2b8bbc8c4b8aba8afb2afab9b
96abcbd8d8d8d8d1c6c4bba88b7b7f92a6aba29682798296a4a29dadb8ad96a2b8bfd4cd
bbbfb8afb8c6cfc49b7b707692bddddfdddddfdfd4b89babd1e6e8ddcbb6bbb48f8494af
b8c2c8cdd1d4d6d4d4d1d4ddd8cbcbc8af847d7b797f898d8fa8bfc8c6bdc2d8e6ebe8e1
d6bfa8a6b2bdbfb6afb8cfdde1ddc8bdbb9f898994866b54402b1b1b1e222e5289b2bbc2
bba89289a4cfe4e6dbc2a6969fa8adb2c8dfebebe8e1dbcdab8f9dbbc8c8cfb8968d9dbb
d4d6bb8f7b7976798999adc2c6a67b84a6c4c6c2c4c8bd9d7f797f92afc8c2b6b6b4a494
a4b4bbb6afafb4b8bbb6b2b4ada6bbc6c8c2a88b7d8296bfe1e1d4b492a6c6c8b6a6abbd
d1d4c6bdc8dfedebe1dfdbc29f999ba29b868d9d968b7f796d72869babbbcbd6e4ededdf
c8b49f969ba6a89d8d8d92969da49f928994a8b6b4ab9f928479767d7f86968f89949294
9b998d8692a6b2b8cbd6dfe4ddb88982898f8d867b70696469767f7f8294998f94b4cbd1
d8d8d6dbe4e1c6998d99a4bdd1d8cfb2845d575d697b7f7976829294867b8296afcbdbdb
cdc2b49b8686a2bdb89d9ba6a68f8694a2a6a8ada6967b7babbfc20000ddd8c4a88d7b6d
667692a4adc6dbe1dbddddd4c8bfbfc4c2bdb8ab8f76747d8fa2abafb4b6a28274797d79
7b869ba8a4999ba6b4bdbfbdb4b6c6d6d8c29482897f84a6cfcfbd9b8492afbdb2abb8cb
cbc2c2c8c8b8a69da8bdc8d4d8d6d4cbbdb6af9d7f707d9ba699847f797b8d969b928999
adada2afc2c2d4d4c8c2b8b4bdcdd4c2927d8d9fabbfdbe1dfddddd6c6ab94a8d1e4e1d1
c4bbc2b6947d849ba4afbbbdc4cdd6d6d4cbc8d4cdbdbdb8a88b7d79767d848992a8bbc4
c6bfc6d8e4ebe8e1d1b8a6a2a6a8adb2bbc8d6dfdfd8c8c8d1bfa2949b8f76624d40372e
242432507fabb4a496999696a2bdc6c6bbafa29ba4b4b8bdd1e4ede6e1dddbd4b8968d9b
abb8c8b69994a2bbcbc8a48484847672899db2c2bd9d798299adb4b4bdcbc8ad8f8f8f9b
afc4c2bdcdcfbda2a4b2bbb6b6b6bdbfbba899a2a4a6b8c4c8bda2897d7d92bbe4ebddb8
8d99b8bdb8bbc8cfd4cdbfbbc4ddf1eddfd6cfbfa696929b9d9299ababa8a89f84829baf
b6bbc8d8ebf4edddcbb8a2a4b2b6b8b4afada8abb6bdb69f898fafc8c8bdab9486796d74
7f8b8f89868f898da4ad9f8b8b96a4b6d4dfdfdbc69d7470767d7f7b797972645b626b6d
7692a29f9bafc8d4d8d8dde1e8e8cf9b86929fbdcfd8d4bf966b5d626d848d867b82867f
767d94adc6d6dfe1d4c4b69d827b8b9da29b9dadb4a699969f9d9b94867464698badbd00
00dfd4b89b847f7b798494a4b2cbe1e8dddddfd6c4afafb8bdbfbfaf9f8d7d79829296a4
bbc6b4968b949d927d7996b8b4a6abbfc6cbd4cfb6a8c4d4d1b88f7f82767d9dc2c4bba6
8f96abb8b8b6bfcfd1cbcbd1d6c6a6a4b8c8c8cbcdc6cbcbc2b6a8967f7484a4a8947b74
768da6a8a2928494a2a4a2abb4b8cddbdbd4cbc4bfcfd4bd9494b4c8c8c4cfdfdfd8d4bf
ab998fadd4ddd1bfb8bfc8bb997d7d8d9db2bfbdbbc2cdcbc2bbc4cdc6ad9d9994847d79
797d828b9fbdc8c6c8bfbfc8d8e4e6ddcbb6a69f9b9496a8bfd1dfe1dbcfcbd4ddcfb6a8
a4927660505d69573b3042648fb2b6a6a2afb2b6b8b8b4b2b2ab9f99a2b2b8bfcfdbddd6
d4d4d4d1c6ab8f8b94adcbc6ad9fa6b8c2bfad9b968d7d748b9fb2bdb496767f9bb4bdb4
b8c8c8b8ababa8a6afc2c2c6d4d6c4a6a4b2bdbdc4c8cdd1c29f8d9dabadbbc8c8af927d
797b8badd6e6d8af8b8b9dabafc6ddddd8c2a6a2b2d1edefddc6b8ab9d92949b9fa2afbd
bfc2c6bf9f92a8c6c2bbc8dbebf1ebddc8b2a2abb8b6bbc2c8cbc8c4c4c8c2a68989add4
dfdbcbad998b8b929b9d9b8f868b8b9db8bdb4a8a69d9dafd4e1dfcfad86707479767472
747472665952525764829ba2999fbbd4d6d8dde4e8e4c48d7d8fabc6cfcfd4d4bb8b726d
7d949d8f7f89948d8289a2bbcbd6dddbcfc4b8967b727b8da4b8c2c6c8c4ad998f867d72
645b59607996ab0000ddcdaf96949da4a6a6a8abb2c6dde6dfddddd6bfa69dabb6b8b6b4
b8b29684899494a8c8d4c6ada2abb4a6897d96b6b6b2bbcfcfcdd8d1b69fb2c2bda89489
82747b9bb8c4c8bb998b9bb6c8cfd4d6d1cdcbc8cdbfa4adc4cfcfcbc6bdc4cbcbbfad99
84849bb2ad997f707d99b2b4ab947d828f94969ba4adc6dbe4ddd4c6bbbdbdad94a4c8d1
cdc2c4d6d6cdbd9b898d94b4cfd1bfadb2c2cfc49d7d7d8fa4c2d4cfbfbbbfb6ababbbc4
bda6928b89848f8f8282848fabcbd1c8c4b8b2b4c2d1dbd6c4ada29f9b8f94adc4d4e4e1
d6cdd4dfdfd1c2b6a68b6d595470867b6049527292a8afb4bbc2c8d1d8d1cbcdd4c8b2a2
a6b2bbc2c8bfb8bfc6c8c8cbc6af94898fadd1d4bda8a6b4c2c6c4bdad9989899ba4a6ad
ab9b8d96adc2c8b6adbbc4b8ababadb4bbbdb8bdcbcfbfa4a4b2bdbfcbd4d8d8bf9b8996
adbbc8d1cdaf8d79797d8da4c4dfd4ad928b9ba8b4cde4dfd4b28b8fa2bfe1ebddc4a68f
8d9db2b8b4b6bfc4c4cbd1cfb8a4afcdc6bfcfdfebe8e4dfc8a49da8b2b2bfcbd1d8d8d1
cdcdc4a4847fa4d4e6e6ddcbbbb2b6b4a8a2a29689899bbbcbc4bdbfc2b2a4add1e4e1cf
ad8d7d82847f746b66646462574b4d57647f99a29b94a6c4d1dbdddfe1d1ad7f7694b8cf
cfcdd8e1d6af8b7b899d9f8d7f8fa2a6a6adbfcfd6d8d6c6bfbdb4927b797b8fb4d4dbdb
d8cfbf9d7b7470665d59607082949d0000d1c8ad9ba2b6c4c6c2bbb4afb8cbd8dbdbd8cf
bba296a2adb8c2c8cdc6b2a6a8ada4b4d1d8cfbdb8bbbba6897f8d9fabb4c6d8d4cbcdcb
bba29d9f9f999b998d7b82a4c6d4d4bf99828badcbdbdfd6c8c4c4b8b2a8a2b6cdd1d4d6
d4c8c4c6c6bba894899dbbc8b6a48d798499abb4a88d7679868f96a2adb6cbdfe4ddcbb4
a49b968f8ba8cdd6d1c6bfc2bfad927f828d94abbdb6a69babc8d8cdad86849fb2cbdbd8
c6bbbbaba8adb4afa8a2968b828ba4a692868994a8c4c8bfbba8a4adb4bfcdd4c6afa4a6
a29699afc8d8e4dfd4cddbe4dfd1cbbf9f8266595b70868d826960748b96a2afb6bfd1df
e4e1dde6efe6cfb8b6c2cfd6cdb29ba4b2b8b8bbb6ab9d949bb4d1d4c4b2a4afc2c8cbcb
c4af9fa4b6ad999da4adafb2b4c2cdbfadafbfaf96969fafb6b2a8adbfcbbb9f9da6adaf
b8c6cdc6ab8d848da6bdcfd8d8c2997f8492a6b6c8dfd8bba2969fafc6d8ddd6bf9d848f
9bafd4e1ddc49b7d84adcdd4cdcdcdcbc8d1d8d6c6adb2cfcfcddbe4e8e6e4e1cfa89694
9ba4b2b8bfcfd4d4d4cfbd967d7da2cde1e6e4d8cdc6c8bdab9d9b968b849bbdcfcdcbcf
cdbba4abcde4e1cfbda89b9fa4a2947f695b59595249526989a6b4b6ad9b96a8bfcdd4d8
d6bb8f7d82a2c4cfcdcfdbe8dfbd998d9fb2a486798badc4cbd1dbdfe1e1d6b6b2bdbb9d
8d8d89a2c6dfdfdfdfd6c69f79797b726b6974868d969b0000bbaf9f96a4c2cfcdc8bfb6
afa6abb8c4c6c6c6b6a49fa6abbdd6d8d4cfc6c4c2b8a8b6d6ddd4c4bdbbaf9b8d827f8b
a6bbcbd6cfc2bfc6c8b69f92929ba4a4947d82a8d1dfd6bb9f999fadc2d4dbcbbfc2c8bb
a6999fb8cbcdd4dfdfd1c2b6ada6998982a2c6d1bba6967f828fa4b6a6867d8da4adb2bf
cbcfd8ddddcbb29b928b84828db2cdd4dbd4c4afa49682899699929da8a49b99b2d1ddd1
b68f94b6c6d4dbddcdbbaba4a6b2b29b9299948b8289a4b4ad9d9b9f9fa8a8a4a2999bad
b4bbc8d6cfbdb6b2a89d9ba4c2dfe1dfd8cdd6e1ddd1cbbfa27d625b62728294947d6d89
a2abafada8b2d1e1dfdbddebf8f4e1cbbdcfe1e6ddc29f8d949fa4a6a6abb4b6b2b6cdcf
c4b2a4abb8bfc6cdcfc6b6b4c6b69d9fadbbbfbfb6bdd1cfbbafbb9f828fa2a8a4a8abaf
bdc8b89b9699969299abb8b2967f7f8b9db2c8d6dbd1ad8d8dabc2c8cdd4cfbfafa29daf
d4ddd4cfb69d96a2a4abc8d4cdaf8b7686b2cfd6d4d4d8d4cbd6dfd8c6adafcfd6dbe4e1
e1e6e8e4cfab8f828492999696afc8d1cfc4a8867f92b2c8d6dbd8c8c2c2c2c4b8a89b92
89848babcbd4d6d4cbb4a2a4bbd6d8cbc8c2b6bdc6c8bba47d5b5252504d6089b6cdcfcb
c6b4a4a2afbbc2c6bb9d7f8494b2cbcbcbd4dfe8dbb69b9bb2c4bb967986b4d4dbdfe1e4
e6ebdfbbb2bdbba49b9f9babc8dfe1e1e1d6c29d7f89948d7b79848b8d96a20000968b84
8fabcbd6d1cbc4bfb49f949699a2abb4ada4a6adadbfdbddd8d6d6cfbfada2b6d4dbcfbb
b2ad9d8d92867d8bafc8d1d4cbbbb8cdd4c4a48f929da29f8f7979a4d6dfd1bbb2c2c6b8
b8c4c8bbb8c8d4c6a89296a8bdcdd8dfe1d6c2a6928d867b798fb4c2af9d968d868da8bf
ad8989abcbcfcdd6dfddd8cfc4b4a294969b948f9db8c4c4d6dbcbb8afada6adb4b29d99
a4b2b4bbc6d1d6cbaf999fc2d8dddde1d6bb96929fb2b49f929292928d8da8c6cdbdafa6
999694969d9b9da6abb2bfcbc4bfbfb8ada29b99b4d8dfdfdbcdd1ddddcdc4bfab866b6b
72798496947f7699bbc6bdb2a6abcdd6cfcfd8edfdf8e4c4afbdd8e4dfcdab86828b8f92
9babbfc2b8b8cdcdbdaba29fa2b2bfcdd4d1bfb4c6bda8a8b2b8bbc4b8bbd4d6c6b4b696
82a4b4b2a8b8c4c4bbb8a899a2a294848ba2b6b6997b7b828f9dabc4d8dbbd9d9bb4cbcb
bfb8b4b4ada49fb2d6dbd1d1c4b6b2b6b2b2bfc2af8f7d7682a4c2cdcdd6ddd6cdd6d6c6
b4a4adc8d1dde4dddde4e4d6c2ad9684899fa49f9fabc6d1c2b29b8994b6cbc4bfbfbfaf
abadb2bfc6bfb2a2999b94a2bfd4d8cfbda49496a2b8c8cbcfcfcdcfd4d1c6b2895d4d4d
525d7fa8cbd8d1d1d8cfbfb2afafada694827d8b9db6cbc8cbd6e1e4cda6999fb6cdcfb2
8986b2d8dde1e4e8ebebddc2b6b8b6a49ba29da2bbdbe4e6e4d6b6968d9ba496827f8484
8996ab000076747484a8cbd6d1cdcbcbbfa89b9b9b999b9d9999a6b2b6c4dbdfddddddd1
b69f9db6cdd1c2aba2a2998b8f8b8b9bbbd6dfd8c8bbbbd1d8c8a492949699948470709d
d4d6c4b4bdd4cfb29fa2a6a2afc6cdbfa8948b96b8d6dddfdfddcbad96928b827f8da2ad
ada4a4a8948dabc2b29296bddbddd4dbe4dfdbc8b4aba6a4a6b2b2adb4bfbdb2c4d1cfc8
c4c4c2c4c6bda69fafc4cdd1d4cdcbb89f9ba2bfe1e1d8dddbbf948b99afb8b4a89d969d
9b99b2cfd8c6afa299999fabb4ada29f9fa4a8adb4bdc2bbb4ada299a4bfd1dbd6cbcdd6
d6c8c2bfab968b8b8b84869494827999bdc8c2b6adadc2c4bdc2d1e6f4f1d8b4969bbbd6
d6c6a88d828284899bafb6b6b2bbcdc8b2a2948b8da4b8cbd4cfbdb4c2bdadabafafabb4
adb4cdcfbba6a49296bdc2b4adc8d6d4bfa6969db6bba89499abbfc6ad89767d8b8d92ab
cfdbc6aba4b2c6c6bbb8b4ada69d9dafcfd4cfd4c8c2bdbdbfc2c4c2a8847d7979899dab
b4cdd4cbc2c4bda69f9fa8b8c8d4dddbdbdbd6c2b2ab968d9db8bbbdc8cbd6d6bfada6a4
abc6d4c2b4afb6b6b4aba6b2c6cdc4b2ababa2a4bbcfd4c6a88b7f7f869bb6cdd1d4d8db
d1c4b6a27d594d50607fa6c2d1dbd1cfdddfd8c6b2a8a28d7d797f929fb2c6c6cbd1dbd8
bf9d99a2b6d4d8c299829bc6d6e1e6e8e8e4d4bfb8b6af9d999b9699afcddddfd8c49f8b
99a8a89b8d86827f8696ab000070666d7d92adc6d4d4d4d1cbb2a2abb6ad9d968992abbd
c4cbd6dddfdfdbc8af9d9fb2bfc4b6a299a6afa69fa2a4a4bdd8e4dbc4b6bfcbd6cda899
9492928674696d96c4c2ada6bbcbbb94797682899fafada8a299848bafd8dfe1e1dbc4af
adafab9d969dabb6c4bfbdbfa694a2b6b49fa6c6dbd6cfdbe6e1d4c2b6afb4b2afbbc2bf
c6c8bfadadc2d1cfcbcbcbcbc8bba4a8bfcdcbc8cdc4b6a28f92a2c2e6e1d4d4d4c6a28d
8fa6b8c2bfbbb6afa49ba4bdcbbfb2a6a2a4afbfc8c4b4a299949299a8bdc6c4c4bdafa2
9fa6adbdcbc6c8cdd1cbc6bda4a2a4a29f92899292847d96b6c6c2bbb4b4bdbbb4bbc6d4
dddbc4a286869db4bbaf9f9682797f89a2b2b2afb2bdcdc2ab99847b7f9bb2bfc2bbb2b2
bfbba8a2a8a4969999a2afab9b8b8992adc8c4ada8c8dbdbc6a48f9dbdcbc2afabb8c8d1
c49f828d9b998f9dc4ddcdaf9d9bafbdc4d1c6a8968d8fa2c2cbcbcfc6c2c2bdbdc4cbcf
b68d86847d7b7f8b99abb4b2abadada6a6a8a8adb8c6cdcdcdcdcbc4b8a68f8fa8bfbfc8
dbdbdfd6bfb6bbbdb8c2c4b2a8b2c8cfcbbfb2b2cbdbcdb6a8a49ba2bbcdcdb6947f746d
707994b4c4cdd1c8b49d8d796654525b7ba6bdc8d1d8d4cfdbe6e6d1ad9d927f7b7d8694
9fabbbc2cdd6d8d4c2aba2a8bfd8dfcba2797fa6c8dbe4e6e4d8c2b2afafa8a29992929f
b4c8d4cfbb9b8489a2b6bbb6ad9b8b86848f9d000072666d767d8babc8d4d4cfc2a496a8
bfbba69b929fbbcbcdcbcfd4dddfd4bfafa8abadadaba29694a8b2b2b8bfb8adbbcdd4cb
afa2b4bdc8c6ab9f9b948d7d6d6b7292b4af9d9badb8ad8d706d79828f928d8f94927f7b
96c8e1e6e1d4b2a6bbc6c2afa2a4adbbcfcfcbc6b2a2a6b2b8b4b2c4cdc4c2d6e6ddc8b6
b2adb6bdbbbfbfbfc8cdc4afa6bbd6d6d4cfd1cdbfaba2b8d4d6c6b6b6b2a28b84869dc2
e1dfcfcdcfcdb6928499b2bdc2c8c8b8a69d949fb4bfc4c2bdbbc2cbd6d4c2a6948b868d
9dafbbc6cbc4b4a8a29d8d94afc4c8c8cdc8c2b4a4a4a6a4a69b8f8d8b7d748ba6b8bbb8
b8bbbbbdc2cbcfd1d4cfbd9d84848d92969699967f727d8d9fafb6b4b6c2cbbda4948276
79899ba4a69fa2afb8ad968d969484828b99998d7f767b94b2c2b8a6a8c8dbdbc6a6929b
bbcfcfc4b6bbcdd6d4b899a2adab9fa2c2dbc6a2898699afc8d6c49d89828692b6c4c8d8
d6d1c8b2adbbc8d1bd968d8d898692a2a89f9b9da6b6bbb8b8bbbbb8bbc4c4b2abb4c4d1
cdb28b8fb2c2c4cddddbddcfb4b6c4c8c8c4b69992afd1d8d6cbbdb6cbdfd6bb9b8f8d99
b4c6bfa2827f7969626472849db2b4a2826b625b595b5d6989b2c4c8cfd8d6d1ddebe8cb
9d867f7b8b9da8abababb2c2d4dddbd6d1c8b6b2c6dbe1cda27b748dadc4d4e1ddc6abab
afadadb6ab9ba2b6c8d4d6c8a67f7994b4c6cfd4cbb49d8d84868d00007f7b7d7f868d99
a8b2b8b2997f7d96b6b6a69f9bb2cbd4cfc8c8cdd6d8cfbfb4b6b8b8ad9d8b8286949bab
cbcfc6b8b2b2b8bb9f94a8b2bbbbafa69d928479727482a4bfaf9994a2bfc6af998d8f8b
89827d828986726982b6dfe4d8cda496b4c6c6b4a29699a4bdcdcdbfb2abafb8c2c2bbb8
b4b2bdd6e6ddc6b4aba4b4bfbbb4ababbbc8c4ad9fb6d6ddd8d1d4c8af9dafcfddd4bba8
a4a296847f82a2cbdfdbcdc6cbd4cba68b92a4adb4c2c6bba89d898ba6c8d4cfcdcbcdd4
ddd8c2a28d827d8ba2adb2c2c8c4b8ada89f8f8699b6c4c6c4bbaba2aba8a2a4a6a2968b
847466768d9fabafb4b8b6bfcdd6dbd8d6d6cfb89f968d7d7d84929282798492a2afbbbb
b6bbc2b6a4948b867f7f868d8f8f99a29d8f7f76797b74768b9d9b8f82828994a4ada49f
afcbd8cdb6a2949bbbcfd6cfbfbdcbdbddc4a2abb8b6afafc4cfb48b79849bb2c2c6b4a2
a4998b92afbdc8dfe4e1d4af9dabc2cbb28d898b8f9fb4c4c2ab9b9fafc2c6c4c4cbd1d1
c8cbc49b899bb8d6dbbf8d8fb6c4c4c4cbc8c8b8a2adc2cbcfd1c29b8fa6c8d4d4cdbdb2
b6c8cdaf8b848d9fadb6a8896d72746460646969747f82745d4d4d505762697082a4bfcb
cfdbd4cfddebddbb9d82767f9db6c2c4c2b8b2c2d4dbd8d8ddd8c6bbc4d6dfcda284797f
92a6c2d4c8ad9ba8b4b8c2cdc6b6b6c4d4d8d4bd997b82a2c2cfd6dbd6c6b49f8b848d00
00999494969da29f96928f8b7d7070869fa29ba2a8c2d8dbd4c6bdb6b6bbbdbbb8bbc4c8
bda2867d848689a4cfd8cfc4ad9b9baba8abbbc4c8c6bba692847f7b797f96bbcbb29694
abd1ddcfc2bbb8a88f7b74767b725d54669bcfd8cfc89f8d9fb2bfbdab96898fa4c2cbb6
ababb4bbbfbdb2a69fa8c8dfe8e4d1bdafa8b6bdad99898b9bb4b8a299b2d1d1cbc8d1c6
aba2c2d8d1b8a29ba2a49484828fb4d4d6d1cbcbcdd8d8c6ada2a49dadcbd1c6af9b8489
add4dbd4d1d1d6dde4dbc2a48d797289adc4c6c8cbc4afa6a49b8d848996afbdb8a88f8d
a6aba6a6a6a6a29d947d666b7684949fabb2afbfd6ddddd6d4d6d8d1c4b69979747b868d
89868d9dadb8bbb4aba8adada499999996928f8f8d8f92948b867d6b64666d7b94a8aba6
a2a4a69b94999499abbfbfb4a69f999bafc6d1d1cbc6cdd8d4b89da8b8b6aba6b2c2af8b
7b96b2c2c2bbb4bbc8b69b94a6b6c4dde4e6dfbf9f9babaf9979747b89a8bdc8c4b4abaf
bfc8cbcbc8cfdddfd4cfc4947f8da8cfd6bb969bbdc8bdb2b6b2ada4a2a8b6c4d1d4cbb8
a29fb2c6cbc4bbafadb4b49d82828f9fa8ad9d7b606266605d6466595452524d49444447
505d69727d96b6c8cfd6d4d4ddebddc2b6967d89a4b8bfc8cdc4b2b6c8d8ddddddddcdb8
b6cdd8cbad9f928b96adc8d6c6a8969fb4c8d6dbd8cbbbbfcfd4cdb28f8294b2c6d1d8db
dbd6cbb69d8f990000a49fa2a6abada89b8f86898d86828b8f8d92a8b6cddddbcfb8a28f
8b929da8b4bdcbd1c6a28986928d899dc6d6d4c6b29489a6b8c6d4d8dbd6cbaf8f828482
7f8d9fb8bfa88f96b6d8e1d6cfd1d4cbab846d70797259495076b8cfcdc2a4949ba6b6bd
af9f969ba4bfcbbbb4b6bfc4b8a8a29b9db2d1e4e8e8dbc4b2adb8b89d7f767b7f929f9d
9dbbd1bbafbbcdc6b2afcdd6bd948b969f9f8f8489a4c6d6cfcbcdd1d4dfe6dfcdbbad9b
b6dbddd1b492848db2d8ddd4d4d6dde1e4d6bfab9479697dabc8cdcfd1c8af9f948d8d8d
867f92a6a49682829bababa6a4a8adada68b6d6b6d748b9fb2b4a6b8d6dbdbd4d4d8dbdb
d6cba87f767b84949b9d9ba6b6bdafa29492999f9f9da2abb2b2aba49f9994949da6a28b
70627092afbfc2bdb8b6b29f969d9fa2a8b2b2afb6b2a89f9badc6d4d6cfcdcdbb9b8996
a69f8f8999b2af968db2c6cdc8bdb4bbcdbda2969babbfd6e1e6e1c6a6999f9b8b7b6966
7694afbdc4c4c6c4c2c6cbc6c4cdd8ddd8cdb8948492a6bdb8a69fa8bbbfafa8afafa6a6
b8b4afb6c4cbcbc6ab999fb6b6adafafbdc4bba6928b8b92a4b8a882666466666b6b604b
423934373b3d4044495262748292adbdc4c8cfd1d4e4dfcdc6ad9999abbbc2cbd4cfb8a8
afcbd8dbd6cfb6a2a4bfcfcdbfb8ad9fa6c2dbe1d6bb9f99b8d4dde1dbcbb8b8bfc4c2ad
948999b2c2cdd8dfdddbd4c6ab949900009b9ba4adb4b6afa294949da6a2999489828ba2
afbbc2c2b29b8b7d797b828fa2b8cfd6c496828b949494a8c4d1cfc6b69686a6c2d4dfdf
dfdfd8c2a68f827b82969da4a8948696bfdde1d8d6d6dbd6c2966d748f9b84695262a8cd
cdbfa8a4abb2bbbba89b9ba6afbbc4c4c6cbcfcbb69d9699a6bfd8e4e6e4d1bdadadb8b6
94797074767d8fa4adc6d1af9babc4c2b8c4d8d6b486829299948b8692b4cfd8d4d1d4d8
dbe6ede8dbc6afa6c4e1ddd1af84828fadd4d8d8dbdbe1e1d8c2b2ab967f727b9fbdcbd6
d8cfbda6928992968f7d797d82847f8294abada29da8b4b4ab8f7679797f9fb4bfb8a2b8
d6d6d8d4d6d8dddddbd1b68d7d8296adb8b6a8a6b6bba4968b848b949da8afb8c4c4b8b4
b6b2a8a8b8c6c6b6997d82afc6c8c8c2b8b2ada6adbbbdb8b8bfc4cbd1cbbb9f8d9dbbcd
d1c6bdc2ab86747d867f747289a6ad9f9dbbc8cbc4af9d9baba699928f9bb2c8d4d6cfb8
a49da4a49b8b7269798da2afc2d6ddcfb6b2b2afb6c2cdd6d6c4a489869db4b6a89ba2a8
a8a29492999fa4b6cdc8b8b8c4cbcfcba88b8d9d998f99adcbdbd4c2af9f8684a2bfb48f
766d747f8d7b59423b392e2e3440474b4d5262748289949fa6afbdbdb8cbcfc6c6b8adaf
ababafc6ddddc4a69fafc2c6bfb2a299a4c4d4d1c8c2bbadabcde8e8dbc4ab99b8d8dddd
d4c6b6afada8a6a2948992a2abb6cbd8d6cfc6bba68b820000898d9fb2bfc2b49d96adc4
c6b69f8f828694a4b2b2b2af9f92928d7d70727d96b8cdcfb48b848d8b8ba2c4cfd1c8bd
ab8f829bb8cfdde4e6e6dfcdb296766b7b96998d867f849fcbdfdfd8dddfdddbcd9f6d7d
a6b8af96706094bdc4b6abb2bdc4c4bda68f8fabbdbfbdc8d1dbdbd1b4948b92abc4d4df
e1dbc8bbb6b6b8ad8b797272798ba4b6bfcbcdb49f9fadbbc6d4e1dbc2a28b8b8f8b8b8d
99b4cfdbd8d6d8dde4ebebe6dfcbadafc8dfddcfab868694a8c4d4dddfe1e4dfcbaf9f9d
948b848496b6d1ddddd1c4af998b8f99927d706969747b8696afb49f969fafb2ab998989
868dafbfc6bfb6c4d4d1d4d1d1d8dbdbddddc8a2868dadc2c2b4a499adbbaba2927f7f8b
9fb4bdc6cdc4b6b4bfc2bbb8c2cbcfc8bba8a8c4cbc6c4bbafa49fa6bdd4d1cbc8cdd4d8
dddbc49f929badbdc6b2a2b2a28676767b7672768fa8ad9f9bb2bbb6a88f7b72797f827f
797b94afb4b2b2a8a4a4a8afab99848294abb2b8c8dfe4d4b8a499949fadbbcbcdb68f7f
8babc6c8bbafada696827b7b7d8dabc6d6cfc4c6d6dbd8d1af92898b827986a8cfdfddcd
bba27f7999b6b29682767f8f99794b3b3d3d322b2e3b444b4b505b69706d70747f8d9fa4
a4b6bfb8b4a8adb6a48d92b6d6ddc8b2a6a8afb2aba2a4a6b4cfdbd8cdc6c2b6adcfe8e6
d6bfab9fbfd6d6d6d4c8ad9d928b92948b7d828d8f99b4cdcfc2a8948f847d000082899b
b6cdcdb69492bfdfd8c4a48d899db6c4cdcfcfcbb8a6a299846d707b96b4bbad94848b8f
8489b2d6d8d4c8b494797486a2b8cbdde6e6ddc4a68b7066748b86766b6d82a2cbdfddd6
e1e4dfddcb9f748bafc2bdb28f6b7d99a6a4a2b2c8d1cdbda28992b6cbcbbfc2cbd8ddd6
b48f8d99afbfb8c6d6d8cdc4bfbbb29d827f7f7f92adc2cbd1d1cdc6b6a49bafcde1e6df
d1c2a89289868b8d929dbdd4d4d1cfd6e4ebe8e1dbcbafb2cbdfdfcfab8b8f9ba2afc6db
e1e1ddcfb89f96999b968b7f849fc2d4d1c8bda68d869da89f928b7f707684929fb8bba4
9296a6aba89d928f8d94a8bfcbc8cfd4d4cfcfcfd1d6d8d8dfdfd6b89ba2c4cfbb9d8b84
9db4b4ab947f7d8ba4bdc8cfcfbfb2b2bfbfbbbbbbbfc4c4bfb6b6c2c2b8b2a69d9696a2
bfddddd4cdcfd6dde1e4cba89f9b9fa8b4a492a6a292867f7f828fa4b8b8a28984969f94
826b5d595b6062605d627289898996a2afb6b8bfb89f8f96b2cbd1d1d8e4e8dbc4ab968b
868d9babb8ab89849bbdd4d1cdcbc2b69f827b76768fb8d6d6cfc6cbd8e1e1dbbfa69b94
7f6d7fa6cddbd8c6a8897476899b9d968f8689928664403739403d32323940444949494d
5050546072829babb2bbbbaf9b8992a69b8989a4cbd4c2afa8afb4b6ada2a8b2bbcdd6d6
cdc6c4bdb4cbe1dfcbb4adb2c6d1d1d6d8cda6867b7f8f928474798d969bafcfd6c49d7f
828b890000928da4c8ddd6bb9694c6e6ddc6a4929fbfd4d8d8dde1e1d4bfa699897f848d
9babada2928d948f7f8bb8dddbd6cdb6947970748499b2cbdddfcfa884766d6b6d747069
666b7d9dbfd6dbdbe4e1dfddbf96849dbfcbc6bfa4796472868b94adcbd4cdb4968ba4c8
d1cfbfb2b6c4d1d1b69da6adb6b29da8c6d8d6c6b6afaf9d848d9494a8bfcfd4d6d4cdcd
c4af9fafcfe6e8dfd6cbb89b868b8b867f7f94adb6b6b4bbd1dfdbcfcdc6b6b4c8ddddcf
af9499a2a2a4b6cdddddcdb6a4999dadb2a6927d768299b2afa6a89b868babb8b4b6b29f
8986949fa4bbbfa8948d969b9d99949292929bbdd1d6ddd8d4d4cfcfd6d8dbdddfe1dfcd
b8bdd4d8bb94848294abb4a48d7f869bb4c6cfd4cfbdafb2bbb8b4ada29b9da8afaba4a4
a29d999496a2ababbdddddd6d1d1d6dde4e4d1b6ada49b9fa69f96a6a89d8f828299bbcf
d6cba47d74828b7f695249494d52504b4b505760667289a4bfcbc8c8bda6969dbbd8e1e1
e4e8e8ddc6ad9d948b868b9bafb2a296a6c4d4d1cfd1cdcdc2a48b7b7d99c4ddd8cfcbcf
d6dfe4dfcdb4a8a2866b7996b8cbcfc6a88474747b828696a49b928b76573932343d403b
37373d444b4b47403d4049607b94b2c4c2b6a89984747b8f8f8b92adcfd6bfa6a2b6c6cb
b89fa6afb2b4c4cdcbc4c4c2b6c4d6cfb8abb4c6cdcbcfd6ddcfa8867b828d8d847d8fa6
afabb6d1dbc8a2868f9b920000a696b2d6e4ddc6ab9fc8e6dbc49d94b4d1dddfdddde1e1
dfcfaf928b92969b9da4b6bbb4ada4947f86add1d8d6cdbdab967d6d7292b6c8d6dbcb9d
726d70767270707479768296a4b6cddfe1dfddd8b8948fabc6cdcdcbb88d625d747d8daf
d4d8cfb28d92b2cbd6d1bfa8a6b2c4c8b8a6adb4b2a2929dbbd1ddcfb6adafa48b9ba6a2
abbdcfd4d8d4d1cfc6b6adb4cfe4e1ddd4c8b69f949ba2967f7b7f8b999b9ba6bbc8bfa4
a2aba8adc2d4d1cbbbafb2afa499a4c2d6d6c4ad9f99a4bdc4b69b867f7d84949496a8a4
9da4b8bbb4bdb6ad9f8f969f9dadb4a69486868b8b898b8d8f8f9fc4dbdddfd8d4d4d4d6
dbdbe1e4e1e4e1ddd4d1dbddbfa4a29da2a8a896848292afc8d1d6d8d4c2b2a6a296897d
706b707f969f9689898f9296a8bfc2b4b8d6dddbd4d1d6dde1dfd1c2b6a8a2a6b2b6b2ab
a69f928489abd1ddddd4b28b7989928264524944444749444447494d596d8babc4cfd1c6
b6a89b9dbbdfe6e6e8ebe6d6c2ada6abafa69ba8bfcdc6b6b4c4d1d1d1d1d1d6cfbb947f
8dabcdddd8cbc2c2cbd8e1e1d6bda8a68666707f99b2cfd4c6ab86797b7b869db6b2a28b
694b372e32393734343940474b4b49423d3d496284a4c4d6cfb48f7d79747682898d9bbf
d8dfd1b4b2c8d1d1bda29fa6a69fadc2c6c4c2bba8b4bfb8aba4b8cfcdc8cdd1d6c8a492
8f8f8b84848fa8bdbdafbbd6d8c4a2949b9f940000ab94afd8e6dfc8afa6c2d8d1bd9b94
bfd4dde1dde1e4e1e1d8bd9b8d999b9b99a4bfcbc6c2b8a68b8699b4cbcfc6bdbdb49476
7babd4d4d4d8d1b4867282928b7f7d8b928d84868994bbe1e1dbd8d6bd9f99afc8cfcfd1
cbab7b666d7284b2dbddd6bb9496a6b6c8c8b89f99a4b6c6bfafa8a8a4999ba8bbcddfdb
c6b4ab9d8f9fa89f9dabc4d4dbd6d1d1cbbfb4abbdd1cfcbc4b69f96a4b4bdb299898b9b
a8a49fabb6c4b282747f8ba4b6bdb8bbc4cdcdbfa48696bbcdcfc2b4a89da6bbbfb49d8f
8d8d8d9296a2b2b2b4c2cdbfa8a4a6ada68b848d8b92969694897f86867f7b828b9dbbd4
dddbddd8d4d4d8dbdbdbdfe1dfdfe1e4e1dddfdfc4b4bfbbb2a2968479849dbdd4dbdddd
d6c6af96795d4b47494b506482968d7b84999fa2b4cdcdc2bbc8dbdbcdc8cdd6d8d8d1c6
b8b4b2afbdcbcbb4a8a49b898db6d6dddbd1b28b7b8b94826659544b3d393d404042474b
5d7994a6b8cbd1c8b6a89696b4dbe8ebebe4d8c8bdafafbfcfbfa8b4cbd8d6cdbfbfcfd4
cfcfd1d6cfb88d7994b8d1d6cfb8a49fadc4d6dbd8c2a8a286696b768dadd4ddd8c89d7f
828292abc4c8b4926b4d34272b303030374042444242444240424b6082a8cfe1ddc29b84
898b847f82899fc8dde4ddcdcdd6d4c8b4a6a8aba29ba8bbc4c6c2af929296928d94afcb
cdc8cbc8bfab94969d968b7f869bb2c2c2bbcdddd6c8ad9994948f00009f869bc8dbd4bb
a6a6b8c4bdaf9694c2cfd4dfdbe1e8e4e1dbc8ab96969b9b9bafcdd4c8cbc8b89d8b8696
b6c8c4bfc6c2a68fa2cde1ddd4d8d8c89d7f94aba48d8999a49f8f89929dbbdfdfdbd8d8
c6aba2b4cbd6d6d4cfbb9279706b86b4d6d8cdb6998f9299abb4ad9f9ba4b4c8c8b49f99
9494adbdc8d6e1dfcbad999296a8a48f8b99afc2cbc4bdc6c6bdaf999baba69d948d868d
a6bdc8c4b2999db6c4bbb8c4c2c4b4846d707d9baba8a4a6bdd6dbc69f7d8babb8bdbfc4
bbb4b4bdbbaf9d94969d9d9996a4bbbdc2cfd4bd9b8d99aba486747b7f8482828b898486
867d74798fb6d8dfdbd8d8d8d6d6d6d6d6d8dddfdddfdfe1e4e1e4e1c6bbc6c4b69d8979
747f99b8d1dbdddbd4c8ad845b3b2b2e343b4050697b7b747f9badafbbd1d8d4c8c8d8db
cdc2bfc6cfd1cbc2bdc4bfb2b8cbcfbbadafab9299bfd1d4cbbfa2847b89927f645b5444
34343d403b3d4950627b9299abc4d6d8c8ad928dadd8e8ebe6d4c4bdbdb8bbcdd6bfa6b2
c6d6d8d1bdbbd1d6d6d1d1d8cda6796b89abbfc4bda48d8d99adc4d4d4c2a4947d6b6972
8bafcfdbdbcfa68984849bb8cdcfb88f7057402b272e32303942403937393d42444b5969
82add1e4e1cdb2a4a6a8a2928689a2c4d8ddd8cfd1d4c8c2b8b2bfbda48f99afb8bdb6a4
84767672747f9bb6bfc2bdafa29286929fa294898d9ba8b4bfcfdfe4d8d4bf997b768200
008b7484abbdb4a6a6abafaba296898fb8c4cbd6d6e1e8e1dfddd1bb9f99a29f9db6d8db
cdd1d1c8ab8f7d89a8c4c8bfbdbbb2adc4dddfd8d4dbddcfa47b8ba29f8d8b9dabad9b92
9fabc4dddfdbdbdfcfb6abbbcfd8d6d1c8b29684797292bdcfc4b4a6928984899bafbdc2
bdb8bfcbc4ab94898b99b6c6d4e1e4ddcbab99969dad9f827f8d99999f9d99a6afb4ad96
8d928b868286949fafc4cfcdbda4a8c4cfcbd1ddcbbfb49d8d7d72869b9d9b9bafcbd1bb
927d84949dadc4d1cfcdcbcdc8bda8999fafad9b8f9fbbc6cdd8d1b48d848fa4a4897276
828479747d848686847b727999c8e4e4dbdbd8d8d6d6d4d1d4d6dbdddddfe1e1e1e1e1dd
cdbfc2c2b4998274747b8fafcbd1d4d1cfc2a67d5434292e343b424b596d7d82828fa8ad
bdd4ddddd1cdd8d8cdc6b8bbc8c6bbb8c6cdc6b6b2bfc4afa6afb4a2a2b8c2c4b8a6928b
94a29d82624d423730374042404450546074868fa8cbdfe4d6bb9b8fabd8e8ebe4cdbdbb
b8b6bdc8c8b2999dabc2d4c8b2abc4d6dbd8d8ddcd9d6d647f9dafb4ad96868996a6bbd4
d8c8a68b746b6d7486a6c8dfe4d8b8a296869dbfcfd1b68b6d60523b303239373d474432
2b3940495059707f8dabcbdfddc6b6b4b8bfbba88f8fa6bbc6cbcdc6cdcdbfc6cbcbd4cf
b4898499a8afafa48d7d79797b84929fa8b2afa29b92828da8b6a896929296a4c2dde8e6
dfddcb996d607000008d72798f96949badafaf9f89827f8dabb8bfc6cbddebe4e1dfd8c6
afa4a8a29bafd8dfd1d4d4cfb694868f9db8bfb4aba8b2c4d6dfd8cdcfdbdfd1a4707286
8f8f8d9ba8a8968d9ba6bdd8ddddddddd1bdb2bdcdd1c8b8a69d948d827fa2c6cfbba89d
8f847b7f9dbfd6dbd1cbcdcdb699867d8ba4b6c4d6e4e4ddcdb8afa69da89f82797b7f7f
898f92929ba6a89f9d9d969b9d9fabb6c4d4d4cbb89fa4bdc4c4cfdbc6bbbbbbb6967076
868d8d94a4b4bfb2968d8b8b8fa2c4ddddd8d6d8d8d1bba2adbfbba69294afc4d6e4d6b6
928996abb29b86868d82726d747d7d7d7d796d79a8d8e8e8dfdddddbd6d6d6d4d4d6d8db
dddfdfdddddddddbd4cbc4bba48b7d74747b89a8c2c4c6c8c6b89b765740393d3b3d424b
59799696867f8f9fb6cfd8d8cdc6cfd4cbc4afabb4a8a8b6c8c8bfb2a4a4a69999abb8b6
b4b2adb2ad9b929fbbbfa88262423434394044474950575b66727d8dadcddddfd6c6af9d
afdde8e8e1cfc6bdaba2a4adad9d8b8289abc8bda292a4c2d6dbdddbc69b766d8bb2c2bb
a892828496adc4d4dbd4c2a684747b7b84a4d1ebede4d1bfa88b9bbfd4d4bb8f70645d50
47444440444d503930404b575b667d8f9dadc4d1cdb2a6b4c2c8bda28992adb8afafbdbb
c2cdcbd4d8d8dbdbc69b898d9db4bfbbad968d9294a2aba4a4abb4b4ad9b8b9bb6bfb4a2
968f8da4cbe1ebe6e1ddc89f72606d0000ab89828b8d96a6b8bbb8a486868b929fa8adaf
b6d1e6e6e1dbcfbfafa69f9692a6cfdbd4d1d4d1bd9f94998f969b968f99b4cddddfd6c6
c6d4dfd6ad79707f8f9492999d9284828d8f9dbbcdd6d8d4c8bdb2b2bfcbbf9d8992928f
8d9bb2cbd4cbbbad9f8976798fb8d6ddd4cfd4cbaf8f7b72829ba2afcbe1e1d4cbc6c6b8
abafaf9d867b8494999b998b898d929ba4adafb6b4a8a8b4cbd8cdb6a48f99b2b4adafbb
bdc4cbcdc6a2797d867d798496a8c6bfababa4968d96bbdbdfdddbdddfddcdb4b2b8b4a8
968f9fbdd8e4dbc2a494a4b8bdada4a89f8b76727676727279766d7fbbe6e8e8e1dfdddb
d8d8d8d6d4d4d6d8dddfdddddfdfdfdfdbd1c6af96847b797d84869fb8bfbdbdbba68669
5b50545b50494950668fab9b827279899fb8c8c4b6b4bbbdb6ab9b9696898fadc2c4b6a6
8d84898b96abc4cfcfc4b6b4b2a49db6d1cdb28964473d475459595b54545b6974797b8f
a6bfd4d8d1c8bda8afd6e1ddd4d1d4cdb2948b969b9484767b9bbbb296828fadc4cbcdc8
b89d8b8ba6c4cfc2a2897f8696afc6cfd6d8d4c49d848d898dadddedebe6d4c4ad8d94bb
d6d4bb997464605b57524d4442494b403d4d5d64646b7f9db2bdc6c8bb998da6bbc2ab8d
8496adb4a4a2b2adb4cbdde1dfdddde1d6b6998f9bb8c8c4b4a69fa2a4b4bdb2a6abb8bd
b6a69db6c6bfafa49b8d94b2d4e1e8e6ddd4c6a87f66720000c2a899949ba6b6c4c6bfa8
8d949fa2a2a4abb2b2cbe4e1dfcbad9d9b9992898696b6c6c6c8cfd1c2a6968f8279726d
7492b8cfdfe1dbcdc6cfdfd8b68b7d8692949494928279797b797989a6c4cfcdc6c2b6a4
a8bdbb9d8d948d929fb6c6d1d8d8cbbdb299847b7f9bbdd1d8d8d4cdb48f746b7482848f
adcfd4cbc6d1d4c8bbbbc2bba2929db4afa29d998f84869db2bbc8cdc4ada2afcdd8c6ab
99899bb6b2998ba4c8dbd6cbbb9d7b869289767686a4cbcdbfc4bfb49f96adcddbdbd8dd
dbdbcfb6a29d9f9b9294a6c4dbe1d6bfa496abbdbdb6b8bbad9d897b79746b6972747289
c2e6e4e6e4dfddd8d8d8d6d6d4d1d4d6dddfdfdfdfe1e6e6dbcbb69f8d7f7679848b8fa6
bfc6bdb2ab92745d595b707f7962526082abb4967b70747f8fa6b8b4adad9d9289848d92
8b7d7f9bb6c6c4ad897b7f8696afcbdbddd6d1cbc2b2afc6dbd4c4a27b665b5d727d847f
695d697b86827b8694adcdd1cbbfb4a6adcbd1c4bbcddddbc6a48d929b948479768da69d
8b849db8c2bdc2c4bfb2a6a8bbcbcfc4a88d848f9fafbbc4d1d8dbcdad929499a2bde1eb
e8dfc4b2a2898fb2cbbfa6927b6d605450505049444242444b59696b66697fa6c8cfcfbf
a48686a2b8bfad9696a2a8a49fa8afadb6d1e6e6dfdbdbdfdbbf9d8992b2c4bdaba8adab
adb2b6ab9d9fafb8b6adafcbd6c4b4afa88f9bbdd8e1e8e4d1c6bdab8269720000d4c2a8
99a2adbbc6cbc6ab929dadb2afabb2b8b2bfd6dbd1af827b868f928d847f99abadafbfc6
bba689726b665b57668fbbd4e1e4dfd1c2c4d8d1bba6998f8b8d8d8d8d86796d66696d79
99b6c4c4c6c8bd9b96a4a296929694a4b8c6cfd8dddbcbbfbba8927f797d99bfd8ddd4cb
ad8b74748289848ba2b6bdbfc8d4d8cbb8b4bbbbad9fa6bbb8adadbdb29694b4c8cbd6d4
c8af9fadcddfd1b4998b9fb6a88986b6dbe6d8bbab94798b9d9b84767d9bc2cfcfd1d4cd
b69694b4d4dbd6d6d4d1c8b49d928f8b8d99adcfe1dfd1b2928fa6bbbfc2c2bdb2a6927d
76746b626670748fc6e6e6e6e6e1ddd8d8d6d4d4d4d4d6d6d8dfdfdddde1e6e6dbbf9d84
7d76707282929fb4c8cbbfaf9d8270625b69899f946d576b9bbbbba282767b8999adc2c4
c2b899796b6d828d84797b8fadcbcfbb92828d92a2b8d1dbdddddfddcdb8bfcfdbdbd1bb
9d8f7d748b9fada68d7679898f82767986a2c8d1c4ab9999adc6c6afa6c6ddddd4bb9f96
a6a692868d9fa694828bafcdd1cbcdd1cfc2afafc2cfcfc8bba69da6afb2b6c4cfdbddd1
b49996a4b4cde6efe8d4ab94928992a8b29b89897f766250525d625d59524b4b505b6666
62667dabcdd4d4bd928699b8cfd1c4ada29f9994a4b4b4b2bbd4e8e6dbd8d6d4c8b4967f
829bb8bba69fa4abb2b4ad999299adb6b6afb6d4dbc4b6bfc2a29fbbd6dfe6e4d1c2b6a6
8269700000e4cfb29da4afbdc6c8c6b49b9fb2bdbdb6b6bbababbdcbc2a2827d89929696
826d849b9b929dababa4825d5b544b49608dbdd4dddfdfd1c2bfcfc6b8b8b69f8489949f
9f9b866d5d667484a2b6bdbdc4c6b6968b8d848489929bb8cfcfd1d6dbcfbfb8b8ab9482
727084add1ddd1bf9f82797f8f9694a4b8bbb4b8c8d1d4c2a69b9fa4a49b9babb4b2b8cd
c4a8a2c4dbd8d8cfbda4949fbfd8d4af828294998b7999d4e6e8d4ad9d897489a2a48d7b
7f96b6cdd4d4d6cfb88d7d9dcbdbd6cfc6c6c8c6bba89486868fa2c8dfddcfa882829bb6
c6c8c4bbb2a8967d74726b62626d7b9bcfedebebe8e4dddbdbd6d4d4d4d4d8d8d8dddddb
dfdfe1e4ddc2997d767670707f94a6b8c4c6bbaf9f8684827984a2af9269596d9bbbbfaf
8f7d7f869bb8d1d8d6cfb89d827479848686848babcbd1b8948b9ba4b6c8d6dddfe1e4e1
cfb6bfcdd6ddd4c2b4ad9b8fa8bfc8c2af94848b897d747b8ba2bdc6b89b8b8da8c8c4ab
a2bddbe4dfcfb49db2b8a899a8bdb69d848fb8d6dbd4d4d6d1bfa8a8c2d1d6d1cfc8bfb6
b6b8c4d6d8dbdbcdb8a29ba8bdd1e8efe6cda28d8d8f969b968482867d705d576d868f8b
84765d50505b6466667086adc8cfd6c49b94abc8dbdfcdab99928b8badc2b8b4c2dde8e4
d8d4d1c6ad998b7f7b94b8c8b69b94a6b4b6a48d8d9fb4bdb8b2bbd8d8b8abc2cbada4b4
cfdde6e6ddcfbda889706d0000ddcbb8adadb6bfc6c4c6bfada6b4c6c6b8b6bba6969fb4
bbb2a4928d9496997f606d89948f929ba29b7b5d54493d3d4d74a6cbd6dbdfd4c6c2cbbf
b8bfbfa4828ba8bdbbb29b7f6d76868f9dabb2adabab9f8b868d8b8682848dafcfd6d4d4
d1c6b8ada8a2948270697699bfcfcbbb9f867b7d86949fb8cbc4b4b4c4c8c2ad998d96ad
b8ab9b9fa2a4b2cbc8b2a8c4d8d8d1bfad9f9da6b6c8c6a472747d7670709fddebe4cba6
968b7d8b9d9f8b7d86a4b8c8cfcdcbc2a8827492bfd4d4c6b4b8cfdbd6c4ad9989828fbd
d8d6c49d7d7b8dafc8cdc6bbb4ab947d726d6b6666707f9dcfededede8e1dbdbddd8d6d6
d8d4d4d6d6d6d6dbdfe1e1e4e1d1af897d827b7679869bafbbbbada8a69da4aba6abb2a8
7f64607294b2bfb4967f7d849dbfd8e1dfddd4c2a4867d8b9ba4968b9fbdc8b2948996ab
c2cfd6dddfe1e8e1cbadafbbcbd4c6bbbdb8a8a4bfd1d4cdbb9b82868f8f868b9dadafbb
bba89b94a2b6bdb4b2c2dbe8e6dbbba2b6bdb2a8b6c2bba4898babcfdbdbdddbd6c6ada4
b8d1dddddfddcdb6afc4dbe4e6e1d8c4b6a6949db4cfe4e8ddc6ad9d9b9b998d7b7b7d79
6959546289abb8b8b8a8825b4d5b66767d8499b2c2c8cfbf9b99b2cddbe1cfab998f868b
b2cbc2bbcbe6e8e1d6d4d4c6a8897d7d829dc2d6cdad96a4afaf9d898b9fb6c2bfbbc2d6
cda69db4bfa8a6bbd4dfe4e6e1d6bfa48979740000d4c6bbbbbbb6b4b8bbc8cdbfb2b8c8
c6bdb6b6a48d8fadb8bbb69b8f949992765b6282a2adaba2967f66544b4037343b4d7fbf
cfd4dbd1c6bdc2bdbbbdbba8949fbbc8bfbdb2a2948f928f8f949484797b82828d9d9d96
8479829dc2d6d6cbc6c8bda69fa2997f706b7992abbfcdc8bba489797d96b2c4c8c2afaf
bdbbaf9d928da2c4d4c2afafa8a4adc4c6b6abbbcbc8bfa8a2b4bfbdb8bbc2ab796d6d6b
6b6d8fc8e6e1bf9d9499999b94867d7d94b6cdd1cbbfb2a492797996bbcbc8b8a2b4d6df
dbcdc2b69b7d84adcdcbb69f8d7f86a8cdcdc4b6af9f89767069646969707b96cbebe8eb
e6e1dbdbddd8d8d8d8d6d4d4d4d6d6d8dbdde1e4e4ddc49684847f7b74798b9fadada4a6
ababafbdc4c6b69472646d7d8d9fada49489868da8c8dbe1e1e1d8c8ad948992a8b4a894
94a8bdb69f8d8f9fbbcdd4dfdfdfe4dbbd9b9499a4b2adafbdbdafadc6d4d8d1b8968696
abb2a69babb8b2c2cbc2b4a6a6b2c6cbc6cddbe1d8c4a89db2b6b2b4bdbfaf96828296b8
d1d8dbdbd8cfb49da6c4d6dfe4ddc4a49fc6e6ebedebdfc8af998b8fadcfddddcdb6abab
a8a49f8d7272766d5b5257668bb4cdd4d8c89b66505d728b948f9fadb4bbc4af8b92adc6
d4d6cbbdb4a28b89a2b8bbb6c8e1e6e1d6d4dbcfad8b7b7d899dbdd4d4bba4a8b2afa299
929bafc4c8bfbdc6bb9b9fadb2a4abc2d8dfe4e1d6bda496928f8b0000d6c6bdbdbfb2ab
adb4c8cfc6bdbfcdcfcbbdad9d929fc4cbc4bdab9d948f7d6459648bafbdb69f82625047
3d343032343b69adc4c8cfcbbfb4b2b4afa8adb4b8bfc8cbc4c4c4bfbbad9d928f8d8270
6666708496a2a6a28f828699b4cdcfc6bdbfb6a8abb2a6867b76849ba6bdd8dbd6c29b7f
8fb6cbcdcdc8b8b8c6c4b49f949bb4cdd4cbbfbfbbada6b8bfaf9fafc4c8c2adafc8d6cf
c4c8cdb68976747472748bb8dfdfbf998996a6a68f7d828b9fc2dbdfd1b896827f7d8faf
c6cbbfa692a8cfdbd6cdcbc8ab84829fbfbfb2aba68f89a8d1cdc4b6a88f766d6b625d69
696b748dbfe1e6e8e4dfdbdbdbd8d8d8d8d6d4d1d4d6d8dbdbdde1e4e6e4d1ab8b7d7d7b
74767f8d999da4afb4afb4c2cdcbb2896d6d7b847f7d82868f9499a4b8cbd4dbddd8cbc2
b8a6928fa4b6b8ab99a6bdbfb49d8b8fadc6d4dddfddddd1b4948f8d8f9da2abb8bfafa6
bfcfd6d4b89fa4bbc8c6bba4a8b4afbfc8c6c4b6b2c2d1d4cbc8c8bfab9b8f92a8adabb4
c2c2ab8f7d8292afbfbdbbcbdbd1b4999fb6cdd6d8cbad8d8dc2e6e8ebebe6d1a889868f
b2d4dbd4bda49fa4a8abad9d7b74746d625d5d6079a2c6d8dbc69666576b869b94828994
9dadb29f898f9fadb8b6bdcbcdb89d8f8b929ba6bfdbe4ddcfcbd4c8a486869296a4b4c4
c6b49f9fafb2adb2a6a2b4cfd6c8b4afa89dafbbb8abadc4dbe1e4d6b8998992a2ab9f00
00d6c8bdbdbfb4aba8abb6bdbfc6cdd1d6cfbba29294afd6ddd1cbc4b8a6927259545d7f
a6bbb6966d4b3b39322b2b3434374d7f9ba4adb6af9f998f898496b8d1d1d1cdc6c6c8cd
cbc6b6a6abab9f94847672869badbdbba692999da8bfc6c4bbb8b4b6bdbfb296867d869d
afcbdfe1dbc49f8ba8d6d8d4d1cfc4c6d4d1c4a8a2b6cfd4d1c8c2bfb6a496a2ada48fa4
c2d1cdc4c2c8d1d1cdcfc8b49d9992867f7d96c2dfe1cb9f84899f9f8d869da4abc2dbe1
d4b892869494a6c6d4d4c4ab8f96b6cfd1cdcdcbad847f9dbdc2b6b4af968da8cfcdc6bd
a47d6464625b545d62626986a8cbe1ebe8e1ddd8d8d8dbd8d8d6d4d1d4d6d8dbdde1e1e1
e4e4dbc2967b7f7d7b7b7f868d99a6b4bbb8bbc4cdc8b28d747482867b6962708294a6b6
c2bfbdc6c2a499a8bdb2998da2b8c8c8bfbfc8cbc8b29694abc6d1d6d6d6cbb8a2949994
92a6adb4c2c4afa2b6c6cfc6b2abbbcfd6cfbfa89d9b9da6afbbc2b6b4c6cbc2b6b8af9d
8f8f9299adada8b6cbcfbd9f898999afb29f96b2d4d6bfabb2bdcdd6d8c29f8289bbe1e6
e8ebe8d1a684828fb2cfcfc2ad998f949da6ada2897d7d7d7b7b74626989b4cdcfb88f6b
667d929b8d76747d8d9fababa2968f8f9294a4c2c8bda696827f94a8c8dfddc8afadb8af
948da6bbb6afb4bbaf9b868da8b2b4c4b6adbbd1dfd8bda8a2a8c2cdc4b2adc2dde6e4d1
af928b99abb2a40000d4cdbdbbc2bbab9d99a2afc2cfd4d4d1c8b49b8f9bbbd8dfd6d1d4
cdbda279594d5272a2bbb6926240322e2b272930302b30425b707d8f948472605b668bbb
d6d6d6cfc8c6cdd1cfcdc8c4c8cbc4b49d867b899fbbcfcdb8a4a6a6a8b6bfc4c4c6c4c8
cdc2ad9982767d99bfd8e1ddd1bb9482abddddd8d4cdc6cfddd8c8b2abcbdfddd4c6bbb2
a2928b8fa29f8b94b2cbcdc8c6c6c2bdbdc2b6adb2b6af99898ba8d4e8ebd6a8867f8b8b
8284a4b6bdc4cdd1c6b49da4b8b4b6c6d8d8cdb8998996b6c4c6c8c4ab827494bbc4b8af
a4898ba8c6cdc8b696705b5d59524d50545d6b7d96b6d8e6e8e6e1ddddddd8d6d6d6d4d1
d1d4d6d8dddfdfdfdddfdfd1ab86827f7d7d7f86929fa8b2b8b8bdc2c6c6b6997d747f89
826b5b627692abbbc4c4bfc8b27b7099bfaf94869dbbd1d8d6d1d1d8d6bf9f99afcbd4d4
d4cbb496827f86868da8b4bdcbcbb299a4afb4a89fa8c2cfd6cfc4af9482868b96a4adaf
b6c4bba69ba49f9292999fabbdb6afc4d6ddcdb29b99a8b2ab9b96abcbdbcdc2c6cdd6df
e1c89f7f86b4dbe4e8e8dfc29d86828ba6bfb8a4928d848999a2a4998b899296969b9276
6b84adc2c8bd9d7d7b8d999b92847472829bb6c2b496848b949496a2aba492867f8fadb8
cdddd4b29294a29d94abc8d8cfbbb8bfad927f8b9fa8b2c2b2a6b4cbdfe1cdb6adb4c2c6
bdb2afbdcfdfe4d8bda29fafb4b8ab0000dbd6c4bdc8bfa8928f9db4cddbd8cfcbbba694
96afcddbdbd4d6d8d4c4ab7f5b4b4d72a4bbaf89603d302b2b2422292724242432496274
796b5044495d89bdd8d8d6d1cdcdd1d4d1cbcbd1d6d8cfbda48b797f99b6c8cbbba8a8a8
abb6bdc6cfd1cdcfd1bfa68f79707994c2d6d6d6cdb6927b9bd1ddddcfc4c2cfdbd6c2ab
add1e4dfd4c4b4a4948f99a2b8bb9f929db8c6c8cbcbb29b9daba8abbdbfb49f96a4bdd8
eff4dfb48d7b767b7f89a6c6cfc2b4b2b6afadbbcdc2b2b6d1d6c8b4927f869fadb2afa4
8f705d76a6bdb4a492828fa8bfc6bb9f795d595b595049506074828696b2cbdde4e6e4e4
e1dfd8d6d4d4d6d4cfcfd4d6dbdddddddbdddfd8c29b7f7b7d7f7f8699a6abadb4b6bdc2
c4c4b6997d727d8b897460627d9dafb6c4d1d6ddc6947d9dc2af8f7d92bfd8d8d4d4d8dd
dbc4a49badc8d8dbd4c6ad8b7069696d7d9fb4bdbfbda8949ba4a89f9ba8c2cbcbc8c8bf
a4897f848d9296adc4c2af96898d8b898f96a4b6c2bbb8cfdde1d4bbb2b4b6b4b4b8bbc2
cfddd4cdd1d4dde4e4cba88d92b2d1e1e6dfc8a69fa49994969d947f72747f8f9f9f998d
8b929fa6a6aba68f7f8dabbbc6c4b49b929fa8a49b8b726b7f9db8bfad897d94adad9994
a2a28b767d9fbbc4cdcfbba28f929d9fa8c8dbdfd6c8c8cbb8ab9f998f99adbbad9ba2b6
cdd4cdc2b6afadadafadafadafc8d8d1b8abb6c6bfbba80000dfddcbc2c6b89f898b9db8
d1dbd6c8bda48d899dbfd8dbd8d6d6dbd4c4a67b594b4d6994af9d7957392e2b29222022
1e1e201e2237546b6d5b403b496086b2d1d6d6d4d1cfd1d4cfcbcfd6dbd8cfbda4846b70
8ba6b4c2b49b999ba4afb8c2c8c8cbcfcdbba28d7d767b94b6bfbdcbcbbda48696c4d8d6
c4bbbdc6c8c4b4a4a8c6dbd8cbbbab999499a8bdd4d4b89996abbdc4c8c6a88b899fa4a6
b2ada299a2bbcbd1e8f6e8c49f82727f8f9db2d1dbc8b4afb6b2b6c2c6b2a4afc6c8bda8
8b7d869baba68d7260544d5b7fa29f9286899babb2b6a6826052575959504b5776949b9b
9fadb6c8dbe4e4e4e1dfdbd8d6d6d8d6cfd1d1d4d8dbdbddddddddddd1af82797f82848f
a4afafafb2b6bdc4c8c4b49679707b898979666b8babb4b6bfd1dfe4d4b4a4b2c2b29279
86bddbdbd6d8dbdbdbc6a6969fbbd1d6cdbfad9476625b607089a2adadb2aba2a4b6bfb4
a4abc2cdc8c6cdcbb69689949d8d84a2c4bfad92827b7b7f8f9bb2cbcdc6cbdbe1dbcbb6
bbc4bbb6c4dbddd6d6ddd8d6d8dbe1e6e4cbb6ada8b6cddfe1cdaba2b4c4b8a68d7d7b70
64697f99a49489848b9babb2afb4b6ada4a8b6bfc8cdc8bbadabada89b89747289a4b2b4
af998fa4bfbba6a2b8c2a47d7d9dbdd4d6c6a28f8d8f9fa8bbd6ddd8d1d4ddd8cbc6c2ab
8992b6c2bda28b8f9ba6afb4a89ba8b6b6a8a69d94a8c2c4adb6cdd6cbb29d0000e1ddcb
bdb4a28f86899bb8d1d1c2ad9b897f86a4c8d8dbdbdbdbd8cdb694695050546282a28f69
4b322e2e29221e1b19191e1e202b4054594b39394d6b8fabbfcdd1d1d1d1d4d1cdd1d4d6
dbd8d1bfa47f69748fabbdc6b89d8d8f9da8afafafafb4bbb69f8d8986827f96b6c4bfc6
cbc4ad929dc4d6d4c2b8bbbbafabadb4bbc4c8c6bfb8a892949fadc6dbd8bda49da8b6bf
c2bfb29b92a4a2948d89828296bfd1cfdfefedcdb49d898d9db4c8d8dbcfc2bdbbadafb8
b4a4a8bdc4bdada28d848ba2b2a882594747474b5b7279797b869ba49f9f8b6d5b575754
544d4b5d8ba8aba29d9d9dabc6e1e1e1e1dfdbdbdbd8d8d6d4d4d4d4d6d8dbdbdddddddf
dbc49b847f868d9fb4bdbdb8b4b6bbc4cbc6af8f7670797d7b74707292adb2b2b6c8dddf
cfbdbfcbc8ad8b727bb4d8ddd8d4cfcdd4c6a69292a6bdc6bfb4b2ad96726d70747f8d9b
a6b6bdbbbbc8d1c4adadc2cbc6c4cfcfb692899da68f828fabb6b8ab8d746d7b96abc6db
d8d4dbe4e4d1b8b2bbc2b6b2c8e6e6ddd6d8dddddddfe1e4ddc8bdbdb6b8c6d6d6bb99a4
bfcdc6b499868b7f70748b9f9b847b848fa4b6bbb4bdc4bfbfc4cbcfd4d6d6cdbba49b9b
8f7d747b8da6b2bdc6bdafadbdbbafafc6cdb68f8699b6d8e1c89b8b8d92a6b2c2d4d6cf
cbd1dddbd1d4d1b6898fb8c6c8ad8676747d8f9d9994b6cdcbb8afa89b9dafb6b2c8dddf
d4bdab0000e1ddcfb89f8f8b8d8f9bb6cdc4a4867f7f8289a4c6d8dbddddd8d1bb997d5b
4d596066798f7f5d403030302e241e1717191e20272929303737303952799ba8afc2c8cb
cdcfd1d1d1d1d1cfcfd1d1c2ab8b767d99bdd6dbcfbba2969ba29f9d9fa29f9b94847f89
8b898ba4c8d8d6d6d1c6ad99a2c2d1cfbfababb2afa8afc4d1d1c8c2c4c4ab8d96a8b6cb
d8d6cbbfb8b4b8c4cdcbbfada2a6947b7272707089b8d1cfdbe8e8cdc2bba8999fb8cbcf
cdcbc8c6b8adafada29db2cdcdbdada8998b8da2ad9d764d3d40424950575d6672768289
89897b66605d5d57504b4d6294b6b2a28d84868fafd6e1e4e1dfdddbdddbd8d6d4d4d1d1
d4d6d8d8dbdbdbddddd4bb99868994a8b8bdbdb6b2b2bbc6cdc8b28f766d6d6d70798282
8f9fa8abafbdd4ddcdbbc2cfc6a27b6672a4cddbd6c6bbbdcdcbb6a69d9d9fa8a49fb4c4
b48f92948b84828fa6bdcdd4d1d6d6c6afabb8bbb4b4c2c2ab897f949d8f8b8fa2bbcbc4
9f70607292b4cfdddbd8dfe8e4cbb2b6c4c4b6abc2e4ebe1d6d6dbdddddfdbd4cbbbb8bd
b6b2b2b8c4af8f9fc4d8cdb6a4a6ab9b8b96a8ad9b7f7b848fabc2c8bfc4c8c8cfd6dddf
dbd8dbd1b89682828274747b8ba4bfd4d8cfb8a2a4abb4c2cbcfbfa2949fbbdbe4d4b49f
9fa8afafb2b4b8bfbfbfc6cfd4dbd4b68b8fb8c4bfad997d727b94aba49bbdd1d1cfd1cb
b8afb2bbbfd1dfe1ddcfc40000dddfd8c29b8f99a4a2a4afbdbda2828286898da2c2d8dd
dddbd4c49f74645457666d72767b70543b32393b342b221e1e1e20242929201e242b2e37
507499a2a4afbbc6cfcfcfcfcfc6bbb2afbdcbc4ad8f797489b6dfe4dbcdb89f8f94949f
b2b6ab9d9686848d8f8f9bb8d8e4e1dfd8c8ad9496afc2c2ad969bb4bfafadc4dddbcdc8
cdcdaf8f9db6c8d8dbd8d6d6cdbfbfd1ddd6c2a89d967b69747b7b798bb4d1d4d6dddbcd
cbc4ad9494abbbc4c2c4cfcdbfb8bdb69b9db8d4d6cfc4bdb296828d9486644739393940
474b5059605d6069767979746b646059504d526494b8bba68b7d79849bbfdde6e4e1dddd
dddbd6d4d6d6d6d4d4d4d8dbdddddbdde1e1d1b4968d96a6b2b6b4ada8b2bdcbd4d1bfa2
7b69696b74848f898692a4a6a8b6cbd6cfbdbdbdab8b726976a2c6d6d4bdafbdcfd8cfbf
ada29b9b969bb6cbc2a8afb4ab9d9296a8c4dbe4e1e1d8c4a69da6ababa6a8a8a28f8699
a2949294a6bdcbbd9669596984a8c2cfcfd1dde4d8bdabb4c2c4b4a4b6dbe6e6dbd1cfd1
d4d1c4b8b8ada6adada29294a69f8b9bc2dbcfb6afc4c6b8abbbc4c4ad8d7d7d8badcbd4
cdc8cbd1dde6ebebe1dbddd4b88d726d706d768496adcde1dfd1b496898fadcdd6d8cdad
9fafcfdfe6dfcdb8b8c6bba69496a6b8bdb6bdcbd4d6cbab8d96b4bbaba2a6927f84a4b6
ada2bbcfd6dde1ddcbb6b4bfc6d1d6d8dfddd40000cfdbd6bb9496adbbb6b4b2b6c2b69b
8d8d8f8f9bb8d4d8dbd6cbb28964525462747f86897f6b503d3b444739302e2b2b27272e
2b241e1b2027293244607b898b94a4bdcfd1d1cfc2ad96898499afad9982706276b2e8eb
d8c6bba2898d96b4cdcdbba8a28b828f9699abcddde1e1ddd4bf9d827989a4a8968992b4
c2afa8c2ddd8c8c8d6cdad9badc6d1dfdfd8d1d6d1c2bdcfddd1ad928f897269828d8b84
92b2cfd6d1d1d1c8c8bfa28f8f9fadbdc4cbd6d4c6bbc6bd9da4c2d8d6d1cdc8bf997270
6d64504037302e32393d424950525259696d7b847d72645b545257698fb6c2b29b897b7d
89a2cde1e6e4dfdddfdbdbdbd8d8d8d6d6d6dbdddddddbdfe1e1dbc8a892949ba2adada8
a8b6c2cfdbd8cbab7f70767f868986828b999d9b9ba8bdcfcdbbad9d8d827d7d8bb2c8cb
c6afa8bfd4dfd6bba4a2aba69fa4b6bdb4abbbc4bfb6afa6a8c8e1ebebe4d6bb998d9daf
b8b4a89d9b9da4afaf9d8d8fa2afb29d7b645b647692abb6bdc8d6d6bfa49ba4afafa69b
adcddbe6e4d1b8adb4bfb4abb2a4948f968f868f94969299b2cbc8b8bdd6d8c8b8bfcbcd
bb997f7d92bbd4dbd4cbcfdde6edf4ede4e1e4d8b27d6664646b7d92a4b8d4e4dfc8af9d
8684a2cfd8dbcdaba4bddde4e6e1d1c6cbd8cfad92a6bbc6c6c8cdd1cfc6b299868d9d9f
8f8b9fa69996b2b4a8a4bbcdd8e1e6e1cba8a4b4bbc6c8cddbdfdb0000b8d1cfaf8f94af
c2c4bfb8bdc8c2a89492968f94adc6cdd1cdbd9f826d647282868b929b9679523d3d4949
3932343739343232302920191e27292e3d59767b768294b2cdd4d1c6ab9286847d7f8482
79726b6479b4ebedd6c2bdb2a29da4c2d6cfb4998f82828f9ba4bddfdfddddd8cba8826b
64697f8d8b848dabc2b6b2c6dbd4c2bbc8bba4a8bfcfd4dddbd1c4c4bfb2b4c8d6c69b86
8f8470708f9d968f9fb8cdd1cbcfd4c8c8c4b8afadadadbbcdd8d8d1c4bbc4bba2abc2cd
c4bfc2c6bb9670665949403734322e3032343b40475452525d697d8f92846b57575d6979
94b6c8b8a48f7f7b7d8db6dbe8e8e4dfdbd8d8dbd8d6d6d6d4d4d6d8d8d8dbdbdddfdfd4
b89d96969ba4abadb4c2cdd6e1dbc6a27f7d8b94998b7f86a2afa6968f99b2c8c6ad968d
94a2a69d9fb2b8ada49da4bdd6dfd1af9b9fababa6a4a2968b94b6c2bbb8b8aba4cbe1e8
e8d8bf9f86869fbbc4c6bb9d94a2b4bbbbad8f8696aba4896d6d6d6b72869fadb8c6d4d1
b69d96969b9b9b8f99afc2e4efd4a88f9ba8ababaf9f8b848f9496999ba2a49b9dafbbb6
c4ddd8c8b4b2c2cbbb998289abcfddddd8d1d6e6edefedebebedebddad74696b6d76869b
abbbd1e1dbc2ab9d928da8cfcfcfc4a2a4c4e1e6e1d8cbcdd8dfddbfa4b8cfd6d1d1d6d8
d1c2ab947b767b746d728fafb2b4c4b2a2a6bbc8cfdbe4ddc29d8f9da8b2b2bbc8cfd100
00a6bdc4b8a294a6c2c8bfbbc4c8bda4949499969da6afb6c8cbb69b847d89a2a8968b8d
969479543d3742443932343b403d39393229221b20272b3042668f8d768299bbd4dbd1b4
8b8496a29d8b766b696d72798fbfebeddbc6c4c2b8afa8bbcbb89f8d898b8d949ba4bfe1
e1ddddd6c8a67b66646d828d8d868dabc6c8c4c8cfc6b4a8a69d9badbfc8cdd6d1c6b8b4
aba4afbfc8bb9b92967f6b708fa6a299a6b6c4c6c2c8cfcdd4dbdbd1cdc6bbbbc8d6d4c6
bbbdc8bba2adbfc6bfb4afad9d826d6b57423932323230303032373b4452504d57647d96
9f8b66505976898f9fbdcdbba696847d7d89a6cfe6e6e4dfdbd8dbdddbd8d6d1d1d1d1d4
d4d6d8d8dbdddfddcdaf999299a4adb4c2d1d8dde1dbc2997d869b9f9d8d7f8dadc2b69f
8f96afcbc4a29496a8c2bfada4a8a48f868699b8d1d4c6b6aba8a69f9d9d8d76728ba8b4
afafb6ada6cddfe4e1c29f8d898fa2b6bdc4c2a4949dafbbc4c4ab929bbfb892797d847b
79849bafc2cdd8dbc8b29f99999d9b89828da4d6efdbaf969b94949da89b929bb2bdb8a8
9ba8b4a6969dababbbd4d1c2a69fb8c6b896869bbddbdfd8d6d4d8e4ebe8e4e6edefe8db
af7b74767676869dadbbcfdfddcbb2a2a6abb8cbc4c6bd999bbddde1d6c4bbcfe1e6e1c4
adbdd1d6d1d6dbdfddcdb4997666625d606989b4c4c6c4b2a4a4adb8c6d4ddd4b89d9299
a4a8a6a4a8adbb0000afafc4cfbda6abc6cdc2bfcfc6ad928d949da29d9999adcfd8c2a2
898696afb49d8b7f7d7b6d574034393d3d37303237373737302722202229323b49698f8d
76799bc6dddfc89f7984a2afb29b7b6b6b707989a2c8ebeddfd1c6c2bdad9b9fafa49994
96999fa69f9bb4dde1dbd8d8d1b88d696b869fa4998d94b4d4d8cdbbb4afa89d8f848b9d
abb2bdd1d1cbc4bbaba2a6adb2b4adafab866969899fa2969ba2ababa6adb8c4d6e4e6dd
d8d8cbb8b8cdd4c4afb4bbab96a8bfcbc8bba2897669646457474237323230323232373b
444d4b474d607d92927d6254668fa8a2a6bfcfbdab9d8d84868f9fc2dde4e4e1dfdddddf
dbd8d6d4d4cfcfd1d1d6d8d6d8dde1e1d8bf9f969da6b2bdcbd8e1e1dfd8bd8f79899d9f
99897f89a6b8b2a29696a8c2bd9f9da8b8c8b69f9ba29d897b768fb8c8c2b6b8b6b4a892
8d9284727492adb6b6b6b8b2adc2d4dfddbf9f96a2a6a4abb6c4c8b8a49da4b4c8d1c4ab
afcfc29d898d8f84797f9fbfcbd4dddfd1bba6a2a6a6967f747d99c8e1d4b29d9b8f8f96
9b8f99b8d1ddd4b89b9fb6ab96929f999db2bbad928da4b6ad9b8f9db8d8ddd6d8d8dbdd
dddfdfdfe6e6dbc8a47f797f7b707d92a2adc6dbdfd4b6a6bbc6c2b6b4c6c2999bbbd1cd
b8a6afcfe4e4ddbb9da6b2bdc8d4dde4e1cfb2927264605d606984afc8cdc8c2b8ada2a8
c2d6ddcfb6a2999fabb2a2898489940000c2bfd6dfcbb8bbcfd1c6c6d4c29f82868d949b
8f868fb2d4dfc89b82848d9da6a69d866b6260544239373d443d3027272b2b2b2b292424
273249595d62798279728fbfdddbc49b7d8b9da8b4a6866d6d768294a6c6e4e8e1d4bfbb
b69b868b9da6aba89f9da8b4a89da6c6d6d8d6dbd6c6a2767296adb2a8a4abc2d8dfcdaf
a2a2a8a28b7b7b8b99a6bbd6d8d6d1c2ab9994949dafc2cdc6a6827279898b868d9da8a2
948d99adcfe4e8e1dfe1d4b6abc6d4bf9f9fa296899bb6c8c6bb9f7f6d62595452575244
37323237373940444b5049444d6982867b746d64729bb8adabbbcbbfada294868492a2b4
cde1e6e4e1dddddbd8d6d6d4d1cfcfd4d4d6d6d8d8dde4e4ddcbad9b9fabb8c2cddbe6e6
dfd6b4827684999992868289a2b2afaba6a4a4b8b8a2a6b4c2c2a48b8f9b9d8f7d7992b8
c6c4bdb6b6b6a6847d847b747d9bafb4b8c2bdb2adb4c6dbe4d1b2a4b4bdb6b4bbc8cdc6
b6a296a6c4cfc2b2bfd1bb998d929d96898fb2d1d4d6ddd8c4b2adadafa489726d7d9bbd
cbbda89b999b9b9d9f96a4c6dfe8dfc89d92a29b8d8fa2998d8f998f7d8292a4a6a49692
a2c2d6dbdbdddbd4d6dbdfdfe1dbc6ad927d7b827d727b8d9ba2afc6d8d4b6a2b6cdc29f
a4bfbf9dabcdd6c6a499adcddfdfd6ad82828699b2c8d6d8cfc6af8d7266707b79707694
bdd1d6d6d1bda4a2bfdbe4d1b49d949fb2b49976727d840000c6c4dbe1cdbdc2d1cfc4c4
cdbb9f8986827f827f8699b6cdd6c6997d7d7b8499b4bda87f62595447403d4449423227
272b29272b32302b2e426279796b728d967f86b2d8dbcbad94929babbfb89269697d8da2
b6cddfe1ddcfb6afa68b828b9db4c4c2ab9da4afab9f969fbdcfd1d8d6cfbd998b9badb4
b4bdc4cfdbe1cfaf9999a49d7d6d727d94abc4d8dbd8d6c4a48d8d8d92a6c2d1cfc4ab8f
7f7b747992afbdb2a4968f9dbfd8e1e1dfe1d4b2a2bbc6af8f929696969fb6c4bdaf967f
7670604d5060624b3b34343d403d44474b544d49527086847b848270749fc4b8b2b4bdbd
b2a2927f798ba8b6c2d8e4e4e1dfdbd8d8d6d6d4d1d1d4d8d6d6d8d8dbdde1e4e1d6bfa4
9badbfcdd6e1e8e6dfd8bf927b8294968d82848fa6b8bfbdb8b2b2bfc2b4b4bdc2b6997f
7f8996928694afbfcdd6d1bdb4ad997f767d76767f949d9da6bfbfb2abb2c2d6e8ddbfaf
bfcbcbcbcbcfcfcbb89d899dbbbfadadc4d1b48f8992abafa2a8c4d4d4d6dbd1b2a4b2b6
af94766b748ba8bfc2af9b8f94a2a8b2bfb8bbcddfe6dfcda48f96948f9bb6b6a8998d7d
768294a4afb2a49292a6c4d6d8dbd4cdd8e1e4e1dfd8bfa28b7f79767679869ba6a4a2b4
d1d8c4a2a2bfbfa2a2b6b69fb8d8ddcdad9dafcddbdbcb9f76747b8dadcbd6cdbfb8af8f
726b849d967b6d82b4d6dfe4e1cdafa4bbd6dfd1b29b8f99ada68970768f960000b8b6cd
d8c8b2afc2c6c2b8b4afa89f9b94897f7f8fa8bdcfd6cdab8d7d707692b8cdc49f796b62
524b494944403730302e292b34404032344d6b848274799fb2928badd6dfd6c6b6a29fb6
c8c69d66698494abc4d4d6d8d8d1c2b29f8b8b99adbdc8c4a8969dadada69d9babb8c2cd
d6dbd6c6ab9da8afb8cbd4d8dddfd1b292828b896960667286a4c4d6d8d8d6c6a4899296
949db4bfbfc2b6a69989767b9bb6c2c2bfaf9b9bb2cbd6dfe4dfc8ada2abab99868996a4
b2bdc4bda896867b82827459505d644d3b393b494b4447474952575257728b8f89948f79
7fa8c8bfb4a6a8b6b4a4947b7489adb6b4c4dde6e1e1dddbd8d6d4d4d4d4d4d6d4d4d6d6
dbdddddddfddcdb2a4b6cbdbe4e8ebe6dbdbcda8848296998d7f828da8bdc8c4b6adb8c8
cfcdc4bdbdb49d847679868d99bbcdc8cfdbddc8b4a2928d9292847b797d84848fb2bdb4
abb2c2d4e6d6bdb4bfcdcfd4d4d4d1c6af94899fafa499a4c4cdb48f828fadb4a8b8cbcf
cdcdcdbf9d94a4a4967b6b6b82a4bbc6c2ab8d8292a8b6c4d4cdcfd8dfe1dbc6ab969496
929dbdc6c2af9289898b9babb6b8ab998b8ba2bdc8cfcdc8dbe4e4dfddd8c4a69286746b
6d7b8b9fada8a2b2d4ddcfab92adbdababadab9db4d1dbcfbbafb6c8d1cfbd947276869f
c2d8dbcdbfb4a88d706d8ba89d7b6d84b8d8dfe8e6d4b4a4b6d1d8cbad968d949f927970
82a8af0000a8abb8bdaf9999afbdbdab99a4adafb8b6ab99929fb8cdd8dbcfb8a2897072
8db2cdc4a68d8984706057544944443d32292b323b47473b42546476766d799bab948fa8
cfe1dfd6cbb4adbfcdc89d6d74929da8b6c4c6d4dbdbcfbda49494afc6c4bdad94899bb6
bdb8b2b4adadb4c2d6e1e4dbbda2a2abbdd4dddfddd4c6b69d7b706d57525d697696c2d8
dbd8d4c6a892969b9694a2a8a4a6abafad997f82a2b6c4d4d4c2a8a4b4c4cddbe6dfc6b6
afaba492828699b2c6cfcbb4948486898b897d62525b6450403d404d524d4d4b494d5760
66768b96969d998999b4c6c2ab999bafb2a6997b70829da8a2abcde4e4e4dfdbd8d6d6d6
d6d4d1d1cfd1d6dbdfdfddd8dbdfdbc6b8c4d8e6e8e8ebe6dbd8cfb28984969b8b7b7f8d
a2b6c2bfafa6bbcdd8d8c8b6afb2a68b7470798db2cdd4cdd1dddfcdb29d9babb8b8a684
6b69727984a2afafadb2bbcfdfc8adadb6cbd6d8dbd8cfc4a88d8f9d9d8d8699b4bdab89
7684a4b4afbfc8c4c2b6a89682828f89796b69728db2c4cbc4a88b8496adc4d1d6d6dbe1
dfdfcfb29d8f8484869bbbc6c6b89b999b949dabb4ad9d8b7f7d8694a8c2cdcfdbe4dfd6
d1cdbda6968b766b6d7986969f9b94a4c6d6cba896abb8a8a8a8a299a4bdcfcdcbc8c4c4
c6c6af8b747f9fbfd6dbd4c6bdb4a489706b849d8d706b84b8d6dbe1e1cba89db6d4dbcd
b4a29b9da6927b7692bbc40000b2b8bdad8b828fa6b4af9d96a6adb2c6c6bdafa8b6c8d4
dbd6c8b6a48d72748dafc6b69b9ba29d89726966646b726949323239444b4d4b59625759
5b60748f9b948b96bbdfe1dbd4bfb6bfcdbd967b89a2ada89d9babc6d8ddd6bfaba6a4b8
d1c6af948282a6cdcdbfb6b8b4b2b4bbcfdfe1d8b89b9ba4bbd8e1e1d6bfb6b4a682665b
50526276849dc2dbe1dbd1bfab9b9f9f9b9694969696adc2bda48d99b8c6cdd8d8cdb8af
b2b8bdcfdfe1d6cdbfb2ab9d8f949fb4cbd1c8af9289949d9284796b625d5d594d444249
504d5250494959727f7d828b96a6a296a6b2b8b49d8992adb6ad9d7f6d7486949499b8d8
e6e6e1ddd8d8d8d6d4cfcdcfd4d4d6d8dbdddbd8dbe1e1d8cdd1dfe8e4e4e6e4dbd1c2a8
8b848f92847b82929fafbdbfafa8bfcfd8d8cbb6adb4a88d7674829fc4d4d6d4d6dfe4d6
b89da2bfcfcdbb8b69666b7489a6b6bbbbb8bbc8cdaf999fafcfdfdfdfdbd1c6af9b9696
8d7d798ba6ad9b7d6d82a6bbbfc2bfb2a2948676707f9496846d697696b8c8d1c6a28b89
96abcddfd8dbdbd8d6cfbb96897f79767d9bbbc4c6bb9d999f99969fa69984797f868986
92b4cdd8dfe4d8c2bbb6a69d9692847972767f8d928b899bb4c2b69f9db4bbaba49f9b99
a8c2cfcfd1d1c8bdbbbba2847b92bdd8d8c8b8b4bbb8a28470707f8d7d69667ba8c8cfd8
d6bb9b99bbd8dfd8cdc4b8b6bb9f827fa2c6cb0000bfcfd6b87f76899fada29dabafa8a6
bbc6c2b8bbc8d6d8d8cdbbb2a48d747292b8c4b4a4abafa8947d747f96a4a6946b4b4449
5759525766694d474957728d998d7f82a8d6dfd8cfb4a4afbfaf928b94a8b4ad96848da8
c4d4d4c6bfbdafbbcdbda68f8696bfddd6bda8abb2b4b4b6c4cfd1c8ab8f8d92abd1e1df
c6a4a2afa88b6d6259667f929bafcbdde1dbd1bdada8afb4afa49494969bb6c8c2aba2b6
d1d4d1d6d8d6c8b8afa8a6b6cbdde1dbc8b2ada6a4ada8adc2cbc2a8928fa2afa88f7f84
7b66595752473d3d424950524942547489827b7f8da29f94a4b2afa48d7b86abbbb2a289
726b7d8986869dc6e1e6e1ddd8dbd8d8d4cfcdcfd1d4d4d4d6d8d8d8dbe1e4dfd6d4dbdd
dbd6dbdbd1c4b6a8968986867f7d8999a4b2bfbbada4b6c8d4d1c2b6b6b8ab8b747b94b4
d1dbdbdbdde4e8dfc4a49bb6cfcfb8896969707d9bc4cfcdcfcdcdc8bfa6969fb2cfe1e4
e4dbcbbfb6afaba6947d76869fa8947b82a6bfc4c6bfaf967d7674696d829fa694766b7f
a4bdcbd4c89f868694a4cbe1ddddd1c6c4bdab8d8284847b7f9dbbc2c2bba29da6a49494
9d8d7b768b9d9d9292afcfdde4e1cda896928b949ba2a49b86767b86867f8ba6bdb4a49f
abbfc6bdab9b96a4c2d6d8d4d1d4cdbdb2ad9f9494a6cddfd1b6adbdc8c4ad8b72798b89
76696d7f96abbdcbbf9f8f96bbdde1dfdfd8cbbfb8998289a8c4bb0000b8d6e1c48b747f
94a4abb8c4b69b8fa4bdc6c4cbd8dfd8d6c4aba89f8b7d7b94b4bbbbbdbdb8af9f847f9d
c2c8bdab8669606b7d7d695d646044404952667d86796b708fbdcfc8b48f8496a8ada29b
99abbbaf967f7b869db6c6cfd1c8afb4c8bfa89499b8d8e1d8bb9f9db4bbb2b6bbbbb4b4
ab998b8fadd1e1d8bb9d9fadad99847670849ba4a6bbd6e1e1ddd1bdadafbfcbc2ab9da6
b2abb2bbb6a4a2bbd4d6d1d6d8ddd4bfafa299a2b8d1ddd6bda6abb6bfbfaba2abb2ab9b
969fb6c8c8b29da29b7f626260503d3b475257544d444b62767d7b76798b9499afbfc2af
998486a8b8b2a2927d70797d7b7b8bb4d8e4e4dfdddbdbd8d6d6d6d1cfcfd1d1d4d4d4d6
dde1e4e1dbcfbfbdc4c6d1d1c6bfbdbbaf99898b828494a6b4bbbfb29d94a2b8c6bfadad
b8b6a886697b9dbdd4dddfe1e4e4e1dbc4a28d9bbdc4a47b66667684a4d1dbdbddddd4c4
bbafababb6cddde1e1cfb2a8b2bdbdbb9f7d7b86999f8d89a6cbd4cbc4bb9f7666666662
697f9da6967b6d89abbfc8cdc29f898d9ba2bbd4dfd8c2adafb4a68f89969f92899bb8bf
bfbba8a4afaf9694a4998b89a2aba49496afcbdde8dfc2947b798294a4b2b8bba2797682
86828dafc4b29da2b6c8cbcbc2aba2bdd1dbd8d4d6ddddcdb4abadb2b2bfd6ddc8b8bfd4
dbd4bb997b7f8d84797484969b9ba8ad9f89899fc4e1e6e4e1dbcdbba88d8492a6ad9b00
00b4d6e1cb99797b8da2c2d4d1b88f7992bfd4d4d4dfe4d8cfb6969b9992969d9fa2b2c4
cfcdbfb6a88b8badcbd1cbb89d8b8999adab895d4b49373b47525b646b6d747b89a2afa8
967f8296a4b8bdada8b6c2b4947b7679849bbbd6ddcbafa8b6b4a69babcde1e6dfc29b8b
a4afa8abadada6b2af9f96a8c6d8ddd4c2b2afafa8998f8b8699ababafc4dbe1dfdbd1bd
adafc4cdc4ada6bfd4c6b2a29f969fb6cdd1cfd4d4d4cdbda8998f94a6b8bfb29b99abc6
cfc4ad9b96948f8f9fb8cfdbdbc4b2b4b29b7f7f8270575260697070695b52526274766b
69798fa6bfcbc8bdad968da2b6b4a496867676797b7984a6cbdfe6e4e1dddddbd8d8d8d4
d1d1d1d1d4d4d1d4dbdfe1e4e4d6b8a8afb6c4c8c4c4c6c8c2a48b89848b9db4bfc2bba2
8d8999adb4a8a2a6ada69676627da2bdcdd6dde1e4ddd6cdb6967f84a8b48d7062627286
abd1dddfe1e6d8bfb4b8bdb6b6c2d1d8cdaf9296adbfc2bb9f7f868f94928694bdd4d8cf
c4b28b625b6266666b7b8d968f7d7489a6bbc2bfb6a4999faba8b6d1dfd4b8a29fa6a28f
8b9dafa69499afb6bbb6a4a6b2ad9699ada89b9fb8b69f8b8fa4bdd4e1dfc4997d7d869d
afbbc2c2a4767692a8a6a6b6c2ad969bb4bfc6cfcbb8b4cfd8d8d4d6dbe4ebddc2adb8c2
c6d1ddd6c4c6d1dfe1d1bba28982847d7d8b9da6a6a6a69d8f8289abd1e4e8e8e1cfbdab
9b868ba4ab9d820000afcfdfcd9d797689a6cfe1d1af867696cbe1dfddddddd1c4a4848f
9b9fafb8afa2b6cbd4cfc4b8a68f96b2c2d1cfbda8a4a8afbbb48b4d3034303749626966
64748d9d9da2a6a2999ba4abadc2cbbbbbc6cbb8967b797b8499bbdde4cfb4a6a69d999d
b6d6e6e6e1c69b7f899b9d999296a6afab9da2bbd4d8dbd8d4c8bbab9b8f92948d9babb2
bbcddddfdbd8d4c4b6b6bfc6bdababc8ddcba2828694a6b2c2c6cbcbc2bbb8b6a289848f
a2aba28f868fa4bfcdc4b6a89b8d898fa8cbdddfdbc6bbc2c2af968f9b96797482929b9d
968462525b696d64647999b2c4bfb6b6ad9b8b92a8b2a29b8f7f767b827f8b9fbdd6e4e6
e4dfdfdfdbd8d8d6d6d4d1d4d8d6d4d4dbdfdfe1e4dfcdb2a2a4afb6bdc2c8cfcba88982
828da2b6bfc2b8947f8699adb2aba69f998b7664627999abb2bbc6cbcdc4bbaf9f8b797d
8f9686726260708db4d1dbdde4ebdfc4b4bdc6b8b2bbd1d1af867f8fa4afb8af9b8b969d
968d8499bdd1d6cfbfa47b59576474797b7d82827f7b7b8496a6a6a8adb2b4bdc2bbc4d8
e1d8bd9f949d9f9492a2b6b69f94a4a8ada8969ba49d949dadaba2a8bfbba48d92a6bbc8
d4ddd1ad928b92abbdc8cdc2996b79a8cdcfc2c4c8ab8d899babbbcdc4b6b4c6cfcfd1d8
dfe6eddfc4adbdcbcdd8dfd1bfcdd8d8cfbfb4a894867d7b8fa4a8a8a8aba89f928686a8
cfe1edf1ebcda88f897f8fafb6a686000096afcfcda27b728bb2d6ddc2997d7f9bcde6e6
e4dfd8cdb8998292a2abb8bdb4abb8c8cbc6bdab8f8999adbbc6c6b8b8b8bbb6a88f6639
272b29324d707970697999adafafafadabbbc8c4b4bbc2afbbcdcdb6948284848494b6d1
d6c6b2a89f8b8496b6d8e6e4dbc4a2868da8af99828299a6a29ba8c2cfd4dbdfddcfb69b
8b828489868f99a4b8cfdfdfdbd8d4cbc4bfbdbbaf9d9bbbd1b889697692a6adb2b6b8b6
a6999da6967f829bb4bbb6a496949dafbbb8b4afa49999a2b2cddbd6c8b6b8cbcdbb9f8f
9d9f898ba4b8bdbfbba4765b64727b7470829fb4bba4949d9b8d7d7b8f9d94928b7f7476
82899299a8c6dde6e6e1dfdddbd8d6d6d4cfcfd4d6d4d4d6dbdddfdfe4e1d8bd9d99a2ad
b4bdcbd4cfab867f828f9fb2bbc4bd967b8299abb6bdb49d826d625d5d6d8292929babb6
bdb6a6968d84797d89928f827269769dc4d8dddbdfe4dbc2adb6bfb4b4c8dfd6af847b8d
9ba4b4ad9f969b9d968d8696b8d1d8cdb69470595d707f84898d8b847f7f82868d8f8b96
afc6d1d6d6cbcdd8dfd6bda29fadafa299a4bbbd9f868f969d927f828d8f9badbbbbabab
bbb8a896a2bdd1d4d4d6d1b49f969fb8cbd1cfbb8f7089bbdddfd4cfc8a282767d8da8bf
bdb2a8abb4bbc4d1dde4e6d8bfb4c6cfd4dfdfcdb6c6cfc8bdb2b2ab8f7f7d7fa2b4afa6
a4a6a8a4998f8b9fc4dfedf6f4ddb28d897f8fadbbb49400007486b6bf9b827d9bc4dbcf
a88b7d7f96c4e1e6e4e1ddd4c2a28999abafb4adabafb6bbb4a6a2927b899ba8b2bbbbb8
c8cbc6bb8f62443232302424406474706d84a6bfc2b6aba6adc4d4cfb8afab9da4b4b6a4
949499928692b4bbada49f9d8f7b7b94b4cdd4d1cdc2ad99abc6c8ad8d89a2b6b4a8b4cb
cfcbdbe1ddcdb2998974727b7f8d9299b8d1d8d8d6d8dbd6d1c8b8ad9f9294adbba6846d
7086a4b6bbbdbbb4a28f8f9d9b9296adbdc2c6bfb6afa8a6a8abada8a2a8afada6b6c6bd
a494a4c6cdbb9f868d92848badcbcfcfcbb6866b7d96a4998992a6b2ab948486897f767b
82847d7b7b746d6d7b8b928d99bfdbe4e6e1dfdbdbdbd6d1d1d1d1d1d1d1d1d4dbdddddf
e1e4dfcdaf9da2afb6bfcdd8cda8847b7f8d9ba6b4c4c4a2827f92a4b6c6bda27b645959
5d62707d8b9bafbfc6bfad99948f848b9fb6b8a6897d8fb4cdd6d8dbdbd8cfbda6a8adad
bfd4e1dbbd9686949ba6bdc2af9b999b96898499bbcfd4cbb489665d6d7f868b92969494
8b84898f8f8b92a8c4d8dfe1dbcdcdd4d8cdb6abbbc8c2a68d92a8b29679798284797479
7f899fb8c6c4b4b2bfb6a69fb2cddfe1ddd6cdb8a4a2b2c6d1cdc4ad8d7694bfdde1dbcf
bb8f7b7d7682a2c2c6b8a696949dabb8cbd8d8cdbfbdc4cdd4d6cdb8abbdc8c6bfbfc2af
86747982a8b6aba29da2a8ada89b9496b2d8e8f1f1e4c2a4ab9b96a6b4ad8d00007489af
b6968b94b6d6ddc6a492868496bfdde4e1dddbd6c29d8492a4a4968d9bb2b4ad9f897f7d
829dafada8b2b4b6d1d4c8b67b4939323b392b293750626b7da2c2d4d1bd9f92a4c4d8cf
b29f998b82848f969fabada2949fbbb49b96948f847f94adb6b8b6b4b6bfb6a6bdd4d4bf
a4a6c4d1cbbdbdcfd4cddbe4dfcfb8a89976666d768b9badcfd8cfcbc8d6e4e1d1bda494
96a2abb6bfb89b7b7282a2bbc8c8c6bdad9b9bb4b2b2bfc6c8c4c4c6c8c8c4b2a29f9d9b
9db4bdad9296a4997f7692b6c2b299847f7f7984abcfd4d1cbb2867494b6c2b4a6adbbb6
9b8684898d8b8b8b898276706b66696d76848d8992b8cfd8e1e1e1dfdbddddd4d1d4d6d1
cfcfcfd1d8dddddfdfe1e4ddc8afa6afbbc6d4dbcba27d797d8b96a4b4c4c4a489868f9b
abbdb49f867666606469768b9fa6b2c4cbcbc2b8b6ad9da6bdd4d6bb968ba4c2cbcfd1db
dbcdc4b69f9da4afc4cfd6d1b2948d949badc8cdb69694948d827d96b8c6cbc8b2866464
7684868d9496969d9b949499999bb2c4d1dbddddd8cbcbd1cdbbadb2c6d4c49f7d798fa4
9f8d847b746d747b828d9fadafababb2bbad9fa4bdd6e1e8e6dfd4c2afb2c8d1d1c4ada4
8f768bb8d8dfd6bf9d7b7b897f8bafd1d4cbb28b7f8b9ba6b4c4cbc6c2bbadb2bbafa49b
a4bfcdcdcdcfcdb889727684a8b4a8a29d9fa8b2b6ad9f8f9dcbe1ebe6d6bdb4c4b4a6a8
ab967b00008ba8c6c4a494a4c4ddddc6ab9b969299b8d6dddbd6d1c8ab86747984847672
86a4ab9f948d7b7286a6b8af9d9f9fa4c8d4c6a86d494234343732343b4750698fb8d4dd
d6b8968da8c8d4c4a69d9f8f746b7f9db4bbb6a69fafcbc2a89f9694949fbbcdc8bbafad
b2bdbbabb2c6d1c8b8bdd6d8d1c8c2cdd6d4dbe1dfd1bfb8af86645d647996bbd8dbcbbb
b6cde6dfc6a284829bb8c2c6cfcfb68d747994afb8b8b6b4b2adb8cfcbcdddddd4c8c8c8
cbcfd1c6af9f96949dbbc6af8682897f79849fb2bdb49f928f8b8292b6cfcdc8bb997b7b
9dc4cfc4b6c2cbb892828b949da2a29b8f827970625b6670747b84868ba8bbcddfe1e4e4
dfddddd8d4d4d6d1d4d1cbcfd8dddbdde1dfe4e1d6bfadadbfcbd6d8c69b79767b8999ab
bdc4b69b8b8f9294999f9d9b9fa2927d7b828fa2b4adabb8c8d1d4d4cdbdafbdd1dfd8b8
928494b2c2c8cfdbdbc6bdb49d9fb4c8cfc8bfb8a496999dabbdd1d1bb9d948d847f7986
a2b2bdbfab826469797f7f898f969da4a8a49f9da8bbcbcfcfd6d8dbd1c4c2c4bdada8b4
c4c8b68f767994b2bdb8a886767d868b8f9dabafa49699abb6afa8b2c2d1dbdfdfdfd8cb
bbc2d6d4cbb8a8ab9d7f86a6c6d1cbad84707b8b8999b8d1d4cfb88d7d8fafb6b6bfc6cb
cbc2a29b9f8f84899fbfd1d6d8d6cdb68d797b899fabadadaba8abb2b8b8a8929bc4d6d6
c6b4afb8bfb2adb6af8d7200009bb4cbc6a8969db6cfd1c6b2a49d94869db6bbb8b4afa6
9b897b6d666464707d8b94999d9f8d7b82a4b4a692867f84a8c6c49b695250372e303239
40474b628bbbd8dfcfa68f9bb2bfb6a69fadbbab827289a8bdb8a49da2b8d4cbb2a49b9d
a4b6cfdbd4c8bbb2b6bfbfaf9b9db6c4c2c4d4d6d6cfc8d1d8d6dbdfdfd6c8c4c2996d59
596989b8d6ddcbb2a6bddbd8bd967f86a4bfc4cdd8d6c8a479748ba2a49d9fabb4bfd1df
dbdbe8e6dbcdcfcbc8cbd6d1c2ad9b9db2c8cbb28976798494afc4c2c6bfada8aba48f9f
bbcbc8bbab927b7b99c2cfc6bbc8cdb6998d999da6abab9f8b7b7b746459626d70727d84
8492a8c4d6e1e6e4dfdbd8d8d6d6d6d1d1d1cfcfd6d8d6dde1e1dfe1dfcdb2a6b8c4cfcf
bb9476797f8f9fb2c4c4af9286898b8f8d848696afbfb8a69f9d9da2afada8b4c8d6dbdd
d4c2b4c2d6e1d6b492827b92afc2c6d1d6bdafabadc2d6e1ddc4a49b969ba6b6c2cdd8d1
bb9f8f89847f797b8694a2a4997b6466767f7d828d969fa8adaba6b2c2cfd4d1d1d6dbdb
d1bfb8b6ab9fa2aba8a4947d798dabc2cdcfbd928296a29f9fb2c4cbbda899a4b8bbbdbf
c2c6c4bdc6d1d1c2c2cdd4c2ada6adb6a6898499afbdbb9b7274869499abc4d1cdc2ad8b
849fbfc6c6c8cfd6d8cdb29d948b828294afc8d6ddd4c2ab8d7f848f949fafb2b2afadad
b6b8a896a6cdcbb49d9badb8af9da6bdb48f7600009dafb8ad99898692a4afb6b6ad9f86
6b707d7f7f82868b94998f795d5260767d798296a6a8a69286a6af998476727996bbc49b
66505037292e373d4047495476afd6dfcba29bafb8b4a8a2a4bbcbbd8f7994b2c2ad8986
9db8cdcbbdb2a6a2a8bbd4ddd4cbbfb8bdc8c8b48f7d94b2bdbfcbd4d8d1cdc8c8cfd8dd
dbd4cfcfc8a27662647084abcdd6c8b2adbfd4d1b8927d869fb6c2d1dddbcfaf827d99a8
9d969dabb6c4d6e1e1e4edebdfd4d4cfc8cbd6d8c6ab9ba8c6d1cbb69f7f7b94afc6cfd1
cdbfb4b8bbab969dadb6bbb4a89b7f7489a6b8b4b2c4c6b29d999b999fa8a899867f8484
76646266696d797d7d829bb4c8dde4e1dfdddbd8d4d4d4cfcfd1d4d4d4d8d8dddfe1dfe1
e1d8bda4a2adbbbfad8d797b848fa4b8c6c6ad8b797d848f89797b92b4c6c6bdb4a49699
a4a8abb4c6d4dbdfddcfbdbbcdd8cdbba2867984a4bbb8bbc4ad9d9fbbdbe8e8e4cda892
8f99abc6cfd1d6c8a889828282827b767d82898d8b7b696470797b7d89949babb2b4bbc8
cfd1d4d4d4d8dddddbd1c6bdaf99949b8b7d7679849db6c2cfd6c2927f9babababc4d8e1
d6c4a29bb4bfbfbbbbbdb29da2adb2afbfcfc49f8992a4ad9d827f92a4ada2866d768d9f
adc4d4d6c8af9684869bb6c2c8cdd4dddfd6c2a6999b8f848d9fb2c6dbcbb49d8d8f99a2
a2a2a8adafadadadb6b6a296add1cdad929db6bba68f99b6b89f8b000096a69f8f89847f
7979849fb6b6a4866959596064707d848f9d9d86645260747f7d8499abafad9684a2a88f
79747f8fabb8b28b594247372b2b373d42444040598fc4d8c8adabbdc2bbb4b6b4c2cdc2
967f9fc6d4b88f8da4b2b8c2cbc6b8b2b6b8cfd8cfcdcdcbc8cfd1bf8f7486a6bbbfc4cd
d4cfc8b8afbbcbd6d6d6d6d1bf967b7b7d848999b2c4c2bbc2cdd4d1bb967b79899fb6c8
d1d1cfb68d899fa896929ba8b6c4d4e1e4e8ede8e1d6cfc6bfc4d6d8c4a296abc8d6cbbb
b29286a2b4bfc6cdc2b2adb6af968b929999a2a4a2927b6d76899da6a8aba89b928d8d8d
9ba8a48f84868b8f8b7d706664646b707686949fb2d1e1e1e1dfddd8d4d4d1d1d1d4d6d6
d6d8d8d8dbdddfdfe1ddcdad8d8da2ab9d897f7f828b9fb4c2c4b2867079869289767992
b2c4c4bdb49b8f99afbbbbbbc4cdd8dfe1dbc4b6c2cfc8c4af8d7d84a2bdb8afab968f9d
bbd8e6ebeddfbd948996adcdd6d6cdb28f7d7b7f848984868d847f82847b6b64666b696d
7f8d96adbbc6cfd6d4d1d4d4d6dbdfdfdddbd4cfc8a49294897b747d8ba4bbc2cfd4bd8b
768fa2abb6d4e4ebe4cfa694b2c4bfb6bfc2ad928f92949fb4bdad968f999d9b8f8b92a4
ab9d89746b7084a2c2d1d8d8cdb49684828fa2bbc6cbd1dde1d8c4afa8a6998b8fa2adbd
d4c6a68f8fa4b6bfc2b6a4a4a8adadadb2af9d9bb2d1d8bfa4afc2c4ab8d8fafc4bba400
009fa6998b8f8f86746d7fa2bbbdab96866b595b647984848b999d8f705b647482898694
a8afa8927f949d94898d9fafbfb28f643d323737302e34404742393744629bbbb8b4b8c6
cbbfbfc8c8c8cbc29f96b8dbdfcbb4b4bdb8afb8cbcdc2bdb8a8b8c8c6cfd8dbcfcfd1c6
997689adbdb8b8c4c8c6c6bdb6b6bdcddbdfd6c2a6847f8f9499948d96b4cbcfd6dbd8d1
c2ab947d7f94a4b2bbbbbdaf96929694867f8b9badbfd6e6e8ebede6e1d8c8b8b4bfd1d4
bd9992a8c4d4cbb6a69496abafafb4b8ab9da4afa48d84868d8b8d8f8b7f74696b82a6bb
b6a692847b7676869fb2a88f7f848b94969686746664696b7489928f9dc4dde4e4e1ddd8
d6d6d6d4d4d6d6d6d4d1d4d4d8dddddfe4dfd6b68d89999f9486848684899babb8c2b892
767d8f9b8b74748ba8bdbfb8ab948fa2bfd1d1c8c8cdcfd6dfd6bba8b6c8c6c6af8b8b94
abc4c4b8a4868294afcfe1edefe4c499868da2c4d6d4bb947b7b797d8da4adafad9b847b
8282796d6660595d707f92b2c8d4dbdbd8d6d6d6d8dbdbddddddd8d8d4af928f8d86848b
8fa6bbc2cbcbaf7f728b9fb4c8dfedede6cfa89bb6cbc2b8d1cbab8f969994a6b4b6afaf
b2b2a6999babb8c6c6ad84666466799fc6cfcdcdc8bba28d868b9fbdcbcbcbd8e1d6bfb6
b4a49d9492a4b4bdbfb2998694b4cbd4d6cbb4a6a8afabadaba29ba2b8d4ddc8b2bfcfcb
ab9496b2cfc6a80000bdbdaf9b94928b797692b6c6bfafa4a28f726272868b8286928d82
6b606d7b868f89868f999b8f868d8f929fb2bdbdbda87f52373b47474037303742423d40
444764829fbdcdd4d1c6c6d4d4cdc6bfabafcfe4e6d4c8cfd1c2b2afbfc8c4b8ab9296a2
abbfd4ddd4cfd1cba6868daba8969ba8adadc2c8c8bfb6bfd4dfcfab8b7f8b9ba2a29684
89b2d4d6dddfdbd1c4b6a28b8ba2abb6b6a6a2a4a49f968b7d7d828da4c4dfebededefed
e8dbc2adafc2cfcfb28984a2bdc8c4af99929daba8a2a6b2ababb6c2b8a8a49d968b827f
7d7676747694bfd4cdbfa8897064728da8b6af8d76798999a8ab9b827270726d6d7d8282
92b4d4e1e6e1dbdbd8dbd8d4d6d6d4d4d1d1d4d4d8dfdde1e4e1ddc8a4999b9d968b8689
868d9ba6b4c2c2a88d89969f927b76899ba6aba69b9499abbfd1d6d1d4cfcbcdd1c29d92
a6bbb4b4a28d949fadbfc6bda8897f8fadd1e4e8ebe1c494848999b8d1cfab8676797274
92bdcfcbbdad8f7b828d8f847466626670798bb4d1dfe1dfdbd8d8d8d8d8dbdfe1e1dfdd
d6b69f9d999b9d9f949fb6bdc4b89474728ba4bdd1e1ebe8dbc4b2afbbbfada8cbc6a48d
9fabafc8cfcbbfbdc2c4b8adb4c8cfd8d6bb84595962769bbfc4bfc2c2b8a89f999babc2
cfcdc6cfd6cdc2c6c6ada29696a8c6cdb499898999b8d1dbddd6c2a6abb2a6ada28f99a8
bfd6dbc4adbfd1c8ab9d9fadc6bfab0000d4d4bfa28d89847b86a8c6cbc2b6b8c2bb9d86
8b948f86848276695d62768694998f7d727d898f8d847b86abc4c8bdad99795247607f7f
6b4b2b293947494b4b4444598bc6dbdbd6cbcfdbd8cfc6bdadb6d4e6e6d6cdd8d8c4ada6
b6c8cdbfa4897f828ba6c6d6cfcdcdc6a689899486747b848b9bbfd1d1c4afabbbcdc8ad
8d8d9fa8a29d8f7b84afd1d1d1d4d4d1c6b4a2929bb6bfc4b89f9badbbad99867f898d8f
add4e8ebedededefeddbbbabb2c4cfc8a47b7b96abafada694949999999fb2c4c6cbd4d6
cfc6c4b29f8f8482868b8f8d92afcfd8cfcbbda27f7489a4abafab8d746d7f9bb4b8a68f
84847d726b74797d8b9fbdd8e4e1dddddddddbd6d4d4d4d1d1d1d4d6dbdfdddfe4e6e8db
bfa69b99968d89898b949da6b4c4cdc2a6929da6a2948d9292898b8f9299a8b4bbc6cfd4
d6cdc4c6c4a8868d9fa296999f9b9d9da6b2bfc2b292869bbfdbe6e8e8dfbd8f8b969fb8
d1d1b2998d8472728fb8cfcbbba68d7b7d8d9f9d8b79767b79768bb8d6e1e6e1dfdddddb
d6d6dbe1e4e6e4dfd6c6bdbdb8b2adab9b99a4aba8967d747b8fa8c4d4dde6ddc8bbbbbf
bbaf9994b6c2a88d9bb6cddfe1d8c6b8bbbfb8b4bfd4dbddd4b27b54596686abc2bdb8c6
cbc2b6bfbdbdbbb8c2bfb4b8c2c2bbc6cfbdab9b9bb2d4dfc69f898d96adc6d4dddbc6a6
a8b6adb29f8b96abc2d4cfb499a6b6b8b4ada6a8b6c2bf0000d4d1b694827d7b7f9dc2cf
c4bfc2cfd8d4c4b4afa6a2a48f766454596b82929b9989746d76828b8d827b92bdcdc6b2
967f6959698fafb49b642b2034444b505049445289cbdfd8d4cdd4dbdbd4c8b6a2a6c8e4
e1d4cdd6d4bba6a2b4cdd6cfb68f828994abc6d6cfc8bdab8f7f82827464646b768fbdd6
dbcdb49f9ba6b2ab9ba2b4b69f94867684a4bdbdbfc8d1d4c8b4a296a4c4cdc6b4a6a2b6
c8b49682828f949bbddfedededededede8d6bdb4bbc6d1c69f7b849b9d948d8f949d9989
86a4cbd6d6d8dfddd4cfcba88d8b898d99abadabb4cbd8d4c8c8c2ad948b99aba29fa89d
7d66728dadb6a2928f92847672767d828b8d9fc2e1e6e1dfddddd8d8d6d4d4d4d4d1d4d6
dbdddddde1e6e8e4cfab968f868986828d969fa8b4c4cfcbaf96a2a8ababa8a89b7f747f
8f9dafb8b4bbc8d4d4cbc4c8bfa2899dab9b8492a6abb2ada4a2b2bdb49689a2cbdfe6e6
e4d6b49496a6abb8cfd4bfb8b6a484768fb6cbcdbb99827672849ba6968682847d7b96cb
e1e4e6e1e1dfdddbd8d8dde1e1e1dfdfddd4cfd4d1c2b4afa28f8489847b767b8999afc8
d6dbe1d6c2bdbfbfb8b2998fb2c8b68d92b4d4e4e4d8c8b4a8a4a2abc2d8dfdbc4966b59
607096bdc6bfb8c4cdcbc8d6dbd8c8b2a8a69fadbbb8adb8cbcdc4afa8bdd8e1d4b69d96
929badc2d1dbd1bbb6b8b6b29f8b94a2b6c6bf9f8282899bb4b4abadc2d1d10000c2bb9d
827d797b8db4cfcfbdb2bbcdd6d8d6d4cfc2bbbfa88262525b728d9d9f9982706d767f86
89848dabcbd1bfa48974697996b2bfc6af793927323b444b4d49475994d1dfd6cfcbd4dd
ddd1bfa68f8fb2d6dbcdc6cbc2a49292abc8d8d6bf998d9fb4bfd1dfdbcba88270707676
6959525b6984b4d6dfd4c2ad9f9fa2a29fabc4cbb29d8d868d9dadabb2c4d1cfbba29492
a4bfcbc4b6afa8b6c6b2927b7d8992a2c4dfe8edebebebe6ddcfc6c4c4c6cbc4ab9296a6
a4927d7d8d99947f7da6cfd6d6d4d4d1cdc6b892797d7f8b9fb6b6b8c8dddfd4c8c4bba8
998d949f9696a6a88b69697b969f928b9294867672747d8486868ba8d6e4e1dddbdbd8dd
dbd6d4d4d6d4d1d4d6d8dbdde1e4e4e1d6b48f7d747b7b768499a6afb8c2cbc6ab94a2a8
abadafb4a47f707d96a6ababadb6c4cfcdc4bfc6bb9f94a8ad947d8da6afc2c2ad94999f
96897f94c2dde4e1d6c6afa2a2adb4b2bfcbc6cdd1c29d8b9fc4cfcfc2997f746d768b9b
92847f827d8bb6dde8e6e6e1dfdbd8d8d6d8dddddddfdfdfe1dbd8d8d6c8bbb4a6896b6b
70767d848d99adc8d1cfdbd8cbbfbbb8b4ad948babc4bda4a4bbd4e1ddd1c2af9b8d929d
bbd8d8c8a87f64626d7994afb8bbb4b2bfcfd8dfe6e6d8bb9d9294adb8ab9fabcbd8cfb8
adc4d8dfddc4ab9b928f99abc4d8ddd1c2b8b8ad998b949fb2cbc6a47b70768dabada4af
cfd8cb0000c2af99868482869dc6d6cbb4a2a4b2c6d6dfdfddcfc6c8bfa88666647f9da6
a8a28b76747d868d8d8699b6cbc8ad8f89848dadbdbfbdc4b28b705b504442494d4b445b
96cfdbd1cfcbd1ddddc6a489797b96bdcfc6b2afab9484869bb4cdcdb2928fa4b4bfcfdd
d8c6966660646260574b4950607ba8d1e1d8cdbfbfc6bdafa8b2cdd8cbb6aba8a2a6ab9f
9dadbfb49d8b898f99a8bdbfbbbbbbc4c8b48d7476899bb2cfe1e8e8e6e4dfdbd1cdcdcb
c4bdbdbdb6adababa492847d7b827d7684a6c4c8c6bdb4b2afa6927d7b827f869fb8bbbd
cfe4e4d8cfbbad9f92898b948d8b99a48f72666d82897b7f8d9289766966707b7d7f849b
c2dbe1dfdddddddddddbd6d4d1cfcfd1d4d4d8dddfdfe1e1ddc49d7b797f7f79798fabb6
bbbbbdb8a496a4afafa6a2a69979768fabb2a69fadbbc2bfb4aba8adafa69fa89d827482
9bafc4c4ad8b84827b7f8292b2cdd6cdb4a8ababadbbc2afb2c2cdd6dbcfab9db2cdd1cd
c2a489766d6b798b8d7f7676799dcfe6e8e6e4dfddddd8d8dbdddddbdde1e1e1e1e1dfd8
d4cbbdb2a2866964697d92949294a4b8bdbbd4d8cbbbb2b2ab968286a2bbc8cdcdcfd4d4
c6bbb8b6a89da2a6bbcfc4ad927b6d727f7f8b99a4b4b2a6b6cfe1e6ebede1bf9d8f94a8
a89692afd4dbc4a69dafc2d1d8bfa4968682899dbfd8dfd8bfafb4ad9b8f9ba8bbd6dbbd
89767b96adab9ba2c8d1bd0000cbbfb4aba8a6a8b8d1d8c6a899969bb2d4e6e1ddcfc4c6
cbc8af847f9babadaba68f7d7b899499968d92a2a8a89986868da8cbc6afa4b4aba2b29f
866d52494b47445284bdd1cfcfcbd1dbcfab7f70696d82a6bfb8a8abad9f8d848694b2ad
8b7b7f8f94a6bdc8bfa47d6672746660504749505d729bcbe1dfd4cbd4ddd6c2b2b8cfdd
d4cbc8c8bdb6b4a28b848d847f868f99999ba8b4bfcdd6dbd6bb8f768496a8c2d8e6e6e4
e1dfd8c8bbb6b4b2aba8adb2b6bbbbaf968986826d6966708fa4a8a29b96969494897976
848f898fa8c4c2bdcddfe1dbd1bba6968b868b8f8482929f967b696472766d74868d8679
6d666b72767d8692abcfe4e4dfdddddbdbd6d4d4d4d1d1d1d4d4d6d8dbdfe1e4e4d6b694
949b9d8d7b84a2b4bbafa29f9d9ba8b4af9989847b6b7da2b6b2a6a6b8cbc2a8948b8f9d
a8adadaf9d7f6d7084a4bdbda68d827d7f8f9fabadada89f949dabadbbcdd1bbb4c4d1db
ddcfa896a8c4cbc8bfa68f7f74666b828f86767279a4d6e6e8e4e1dfdfdfdbdddfdfdfdf
e1e6e4e1e1e4e1dbd4c6b4a29482706b728da8a499969fafb4bbcdcfbdafadb6af867282
9dbfd6e4e1d8cfc6b2a6b2c2c8c4c2c6cfcfb89f8b7d767d8b84828fa2b2ada6b8d4e4eb
edefdfb49da2abb6ab928bb4d8d4b696929ba8bbc4a88d847b79829fbfd6ddd4bfb4b6b4
a69dabb4c2d8e1cda29299a8b4b49d8fa6b8ab0000c8cbc8c6c8cdcdcdcfcfb89994928f
a4d4ebe1dbcbc2c6cdcfc29994abb4afa8a28b7d829ba8a89d897b7270727b8482849bb6
a27b72929ba6cdc4b29970503d3b3d496492b2bfc4c2cbcfb28d746b6d798fabb4afafbb
bfad927f797d928b6d697686868d9da48b7469748f8f7d7462525057606b8bbfdfe1d6cf
d4e1e1cdbbbfd1dbd4d6d8d6d1cdcbbb926d696b7d929fa8a89d8f9bbbd4e4e8dfc2947f
94a2b2cddfe6e4e1dfddcba8948f868b96a4aba8adbfc4ab867b7d7d6d5d596986968d7d
767d84868682797d96a89b9bb2c8c8bfc4d1d6d4c8b6a2928b8d8f8d8289a4b4ad94796d
707270767f8686827d797674767d848692b8dbe6e1dfddd8d6d1d1d4d8d6d4d4d4d4d4d8
dddfdfe1e6dfcdb6afada89f92929fadaf9b868f99999fa29d8b7b726b62799bada49faf
c6d1bf9d897f849da6a8afbbb49470646d84a6b4afa49284869db6bfb48f797d8299a6ab
c6d8d6c4bbc6d1dbdbcda28d94a6b6bdb4998b897d6d7086968f7d7682afdbe6e4e1e1df
e1e1dfdfdfdfe1e6ebede8e1e4e4e1ddd4c2afa28f82767686a2b4ad9f99a2bbc8c8cbc4
b8afabb6b686708299bfdbe8e6d8cbcbbfadadcbdbdbd8dbe1ddc49f86827f89948f8b92
a2ababadbfd8e6e8e8e6d4ab9dafc2cfc2a48da6c8c4afa2a6b2b4b2ad9686867f7d8fb4
c8d4dbd8cfc6bdb2a8abb6bbc6d8ddcdb8bdbbb4b6ad9b84899da20000cdcfcbc6c6cdcf
cbc2b2998284847f96cde8e1dbcdc4c6cfd4c6a69dafb8b6a89b847989adbdb49d7f6b60
575260767b7d8f9d795257708299c4cbc2ad895d3d37393d4b6694bbc4b8bdbf9d897f79
849fb8c4bbb4bfc8c8b69b8276797f7b6d6d7f8f8d84827f645962798d8d847f7462575b
647696bdd6d8cfc4c8dfe1d4c2c4cfcfc4cdd8d8d6d4d4cba27f8286929dadb6b6a2848b
b4d6e6e8dfc4967d929fb8dbe8ebe4e4e1ddc4927b7b7f96adbbbbada8b8b89d76727472
695d60748d8d7b747f8f8d7f7b7f869bb6c4a89babc4cfc8bdb8bfc2b4ab9b8f8d8f928d
96b2cbcfc6b49f9694928d8d9292928d89897f76707072747da2cde4e4e1ddd6d6d6d4d4
d6d6d4d6d6d6d4d6dddfe1e1e4e1dbcdc2b2abadafbbbbad99847b8996948f8d8b827f7d
7260697f8f8f9bb4cbcdb89986797b929da4afbdb89b79706d708ba8bdbba28f96afc4c8
b4846b706d7b8b9dc2d6cdb6a6b2c8d4d8cdab9b9b99a2ada88f8b8f7d747b8d968f827d
8bb8dfe6e4dfe1dfe1e4dfe1dfdfe1e6ebedebe6e4e4e1dbd6bfada6998b7d7b92afbbb6
a296a6c8d8d6d4d4d1c4aba6af8b747d92b2cfe1dfcbc2d4d4bfb2cddfdfe1e4e8e1cba6
9296999fadafa8a4a6a6b2bfc4d4e1e4e6e4d1b2a2afc8d6cdad89899fadb6bbc4c8c6b8
a8a6abab9d8d99bbcdd6ddddd6c6b2a2a4b2b8bbbdc8c6bdbdcdc2b2b4a4969294a6ad00
00cfd1c8b8afb4b4afab997d707274768fc6e6e1dbd1cbc8d1d6cbada4b2b8b8a88f7b74
89b2c4b28970696d695d5d69727d94a4825d5d6d7f94afb2a69984694d40393d5079b2d4
d1bbadad998d86828fafcbcdc4c4cfcfcbbda88d7f898d8f92949da2997f726d625d667b
848282867f6d62647999b4c2c2bbafa8b2c8d1cbbdb8b6ab9ba6c2cfcfcfd4cfb2a2b4bb
b4abb8bfb8a2848bb4d4e6e6ddbf8f707d94bde4e8e8e4e1e6e4c892727992b4c8cdcdbd
adaba2896d6969645d597094a896767699ab9b867986a4bbcdcba68f9dbdd1cfb8a29fa2
99948b8482848d9bbbd6e1ddd4c6bbbdc2c2b8b4ada6998d898989847b6d69697292bfdd
e4e1dfdbdbdbd6d6d4d4d4d4d4d4d4d6dbdddfe1e1e4e1d8c8b6b2bbc6d4d6bf9f8b8986
8b8d868d8d848b948b72666b747d92afc2b89f897b706d7b8994a4b6ab8b7b7d7d747999
bdc4ada4b8c6d4d4bf8f6b626069798fadc2bfa4868bafcbd8d1b8b2afa4a2a4a294928b
76727b868b8d898294bddfe4e1dfe1e4e4e1dddfe1e1e1e1e6edede8e4e1ddd6d4c2aba2
9d9689849dbbc2b8a49bb4cfdddde1e8e8ddb69da48d7d8299a4b6cdc6bbc2d8dbcbbbcf
dddddfe1e4d6bba8adb4b2b6c8cfc4afa6a6b4bbb6c4d4d4dbdbd6c6b4b4cbd6cba8867b
86a4c2cfcbc8c8bfb6c4d1cfbfa49db8cfdde4ddcdb2998d9db4b8aba2a8a6a8b2b4ada8
ada8a6abafb4b40000cfcfc4b29d999fa8ab9b7f6d70767b92bfdde1ddd6d1cfd4d6cfb4
a6abb2b49f7f76727b9baf996b60728b94897972798ba4b4a689747b8fa2a68d79767470
5d443d44649dcfe4d8c4a89994928b848babcbcfcdcfd1d1cdc4af968d9fb2bdbdbdc2c2
b49b7d747d848b928f8982827b706d7b9dbdcbcbb4968d8d92a4afb2a89d92847b89a4bb
c4cbd1cdb6b2cbd4c4b2bdbfaf8f7b8bb6d8e4e6dbbd8b666d8bbde4e4e1dfdbe1dfc694
7984a2bfcbcfd4c8b8ab967d69626262626b89abb69f7d7b9dad9f99898fb2c2cdc8a48b
96b8d1cdb29489867f7f7972707486a6cfe4e6e4ddd4cbcdd4d8d4c4b6ab94868689969f
99897b767486a8cde1e4dfdddddbd8d6d6d4d1d1d1d4d4d4d4d6dde1e4e4e6e1d4bfbbc8
d1dde1d8bdaba48b7f7f7f8b8f8b96a6a48d72697079899da6947d767b74696d768294a6
9984868f968b767fa8bfb2b4d1d4ddddcda272595d7694a4a49d9684706d92bbd6d6c2b6
afa8a8a8a49b927f69697482898d89829bc2dbe1e1e1e1e1dfdbd8dfe6e6e4e1e6edebe6
e1d8d8dddbc6a8999fa29696adc2bfb2a2a4bfd4dde1e8edebdfb69996848496adafa6a4
a2afc6d6d8c6bbcfd8d4d4d8d4bda2a2b6bbb6bbd1d8c6a49699a2a4a6c2d4cdcbd1d6cd
b8b2c8d4c6a692868dadcdd1c4c6c8cbcfd6dddfd8bfadbbd1e1e6ddcbb2968994a6a492
868f94a4ad9d9da4a8b8c4c4bfb6b20000d1c8bda88b849fbfbfad8f7b797d848fabcbdf
e1dbd6d6d6d6cdb4a4a6afaf9f89897f747d928d726d8bafb8ad9d94929dadbdc2ab867f
92a89f7f6b7074796b52494d6ba8d4e1dbc2a28d969d9b9696afcbd4d8d8d1cdcbc2a68d
92b6cbcdc6c8d6dbcfbf9b89a2afb2b2a28d7b74706d7699bdd4d8d6bf998b848499a6ab
a2928b8f96a6aba6adbfcfc8b2abbfcbbfadb6b296706b86b6dbe4e1dbbf9976748db6d4
d4d6d4cbc6c4bb9f8f99abbbc2c8cfcdc4bfab8b6b6469727b8da6bbbba88b7686999fa2
9494abb8c2bb9f8b94b6d4d1b29279727272706b6b7489abd1e6ebe8e6ddd4d4dbddd6c6
b4a48b828b94a6b2ad9f8f847b7d8dafdbe6dfdddddddbd8d6d6d6d4d4d4d4d1cfd1d6dd
dfe1e1e1dbcdc8cfd1dde6dfcbbbaf8d7b7d848d8f929dabad997f76828b8f8d8679727f
9494867f747684928d8fa8b4b29f7b7699b6bbc2d6d8ddd6bf996b526294bfc8b692746d
666479a2c8d4cdb8a8a4a49f99968b76646272868f9289829dc2d8e1e1e1e1dfd8d1d8e4
ebebe8e6e8ebe8dfd6cfd4ddddc69f92a6ada2a6b8c4bbaba2adc8d8e1e6e8e8e1cba48b
867b8dadbdb89f8b94afc6cfc8bdbdd4d8cfcbc6bba499a2b6b8afb6d1d6c29b84848d8f
a2c6dfdbd1cbc4b8a69fafb8b6ab9d96a2b8c4bdb2bdcfdbdfdfe1e4ddcdbbbdd1e1e4d8
cfbf9f9299a49b897d848fa4b2aba8a8adcbdbd6c6afa60000c4b8ad96747dabd1cfbfa6
8d827f848b9dbfdfe6e1dbdbdbd6c6a89fa6adafa49fa89b8282999f8f8fafcdc8b8b2bb
b6afb2c2c4a87d72849994796b7b8b8f897b6d626da2cbd8cfad8f8d9dafb2aba4afcbd8
dfddd1cbc4b4947f94c6dbd6cbc8d4dfe1d8bba4afbbbfbfaf92746b6b7994b6cfd8dbdb
cbab8d7f8ba4b6b6ad9fa2b4c2cdbd9b96b2cbc4a8949ba6a4a2a899795b5b7dafd6dddb
d1bd9f848496abb6bfc4c2b6a8a8b4bbb2a8afb2b4bbc8cdcfd1c29b706b79848d9fb4bb
b8af946b667b96a29696b2c4c6b699868fafd1dbc69f79696d6d6b6b72849db8d1e4eded
ebe1d8dbdfddcfbfab9984828f9fadb4b2a6948989848299c6dfe4e1dfdfdbd8d6d6d4d6
d6d4d1cfcdcfd1d4d6d8dbdbdbd8d4d1d1d6dbd4c6bba8867b868f999d9fa4adaf9d847d
8d999f99897f8499adb2a89b7f7682868da2c4c4b29b8b92a8bfcbd1d8dddbc69f795d57
70a6cfd4c6a88f8272646b89adc4c4af9b949699948d84796b646b7b868f8d8babc4cfd8
dfe1e1dfd6d4ddebefebe8ebedebe6d8c8c8cfd6d8b69294a8b2abafbdc6bbafadbbcddb
e1e6e6e6dbbf99827f829db8bdb49b899bb6c2bdb4b8cbdddfd6c8ab9b9d99a8b8b49fa4
c4cdc2a48982827f94bfe1e1d1b8a29999999d9fabb4aba6b2bdb4a29dafd1e6e4e4e1dd
d1c2b8bfd4dfdfdbcfb8a2a4b2b8b49f867b84a2bbbfb6a8afcfe4e1d1af960000a8a29b
846b82b8dddbcdb69b8682898d9bbfe1e8e4dfdfdfd4bb9f9fababada6a8bbb69d94a4ad
9d9fc2dbd1bfbdcdcbbbb2c2b88f605b6b7b7d6d7b9fb2b2a8a28f79749bc4d4c8a68f94
a6b8bdaf9b9fc2d6dfd8c8bbab998484a6d1e6e1d4cbcddbe8e1cdb8b4b6b8bbb8a48470
7092b8c8d4dddbdbcfb286768dabbbbbb2a8b4c8d1d8c69f8fa4c2bda2847b797f868b7f
6d60596b96c2d4d1c8b89d8b96a6afafb8bbb4a8a2a8bbcdc6b4ada6a8b6cdd6d8d8c699
6b74868f94a4b2b2afa8946d5b66849ba2afc8d1cfbf9d8b94abc8dddbbf8f7272706d72
82a4bdcbdbe4ebedebe1dbdbddd8cbb29d94848494a8b2b2b2a28d8996968b92b4d8e4e4
dfdddbd6d6d8d6d6d6d4cfcbcbd1d4d1d1d6d8d8dddddbd4cbc8c6c4c4bb9f827b8b99a2
abb2b2b2b2a4867989949fa49f999ba8b2bbb8a68479898d9dbbcdbd9b8b8fa4bbd1dbdd
dfe1d8bf946b627284a6c2c8c6bfbbaf8d6964748da4afab9b8f8d9492827f7d726b696d
7489949fc2cdc6cbd6dfdfdbd4d6e4edede8e6e8ebe8e1d1c2c4cbcdc6a28d9da4adafb4
c2c4b6b2b8c6cdd4dde4e1e4e1cb9f82848b9fb2b2a48d8494afbbb2a8bbd8dfdfd8c69d
89999babb4a48984a2afb4aba29b8b7989b4d6d6c2a292949da2a4a6b4bfb2afb8bdaf9f
9babd1e8e6ddcfc6bdb4b4c2d6dddfddc2a2a2b2c4c8cdbf9d767fa6c6cbb8a2a4cde6e8
ddb499000092928979708bbddfe1d8bfa289899292a2c6e6ebe6e1e1e1d6bb9f9ba4a6a8
a2a4bdbfada4a8ada4a2bfddd6c4c2d1cdbfb6bfab744047595d626d99c4c6bfbbaf9b7f
7da4cbd8cfbba499abbbb6a2868db6d4d8c4a48d82797999c2dbe8e1d1cfcdd1dddbd1c8
c2b6adb2bdc2ad827699c2cbd4dddddbcfb47f6d8babbbbdb8afbdcdcfd4c8a8949bb4b8
9f7f6d697d928f7d70695d5d76a2c2c6b8af9b92a4b6bfc2c8c4b4a4a8b6c4d4d6c6af9f
a4bbd4dddfdfcd9b6b7d8d8f94a4ada8a2948676666b8dadbfcbd6d6d1bfa2949fadbfd6
e4d4b28d7d72727f9bbdd1d8e4e8ebede8ddd4d1d1cdbfa6969284899dafb4b2ad927f86
9da49d9db6d1e1e4e4e1ddd8d8d8d8d6d6d4cfcdcdcfd1cfd1d6d6d6e1e4dfd4c2b6b8bf
c6bd9d7f7d8d9dabb4bbb6b6af9679707d8492a2a8a4a4abadb8bba67d728da6bdcfd4b4
8d7d84a2bfd8e4e6e1e1d6bd9b747089949ba4afb6c4d4cba67964697d9bbdc6b89b847f
7f76797b7474726b70869badcdd4c6bfcdddddd8d6dde8edebe8e6e8e8e6d4c2b8b8bbb8
ad9b9badb2afafb2b8b4a6a4b8cbcdcdd6dfdddfe1d1ab8d9499a8b2a894827f849fb4b4
b6c6ddddddd8c4a496a8abb6b49b7d79898d99a4adaf9d848ba4bbbdab9492a2b2b8b8b2
b4b8abafbbbdb4a6a2b4d6e8dfc6ada6adb2b4bdd4e1e4d4ad92a4b8c4c8d1cba87b7ba2
bfc4af969bc4e1ebe1bba20000897d7472768bb4d8e6ddc6ad8d8b9699a8cbe8e8e6e4e6
e6dbc2ab968d969b9da6bdbdb4b6b4ad9989a4cbcfbfb8c2bfc4c2b69d693949595d647d
a8cbc8bfb8af9b848bbbd6d8d6c8a88d9dada68b798dbbd6d6b4826b6b6d7ba4cfe4ebdb
cdd4d4d4d6dbdbd4cbb2a4adc2d1c69f7f89afc6d6dfdddbd4b87f6684a6bdc4c6bfc2c8
cdcfc6b2948fa2ab99796d7ba6c2b89d7d6b62607099b6b8a69b9496abbfc6c6cbc4b2a6
bbcdd1ddddd4bda29bafc8d1d6dfd1a276848b848d9daba48f766d767f92adc4cfd4d4d1
c6ad9b9dafb8b8cfe4d8c6a88976768db4cddde6e8e8e8ebe8dbcbc6c6c2b49f9694848f
adb6b6b4af8d7d8ba2a89fa2b2c6d4e4e4dfdbdbd8d6d6d6d6d4d1d1cfcfcfcdcdcfcfd6
e4e8e4d6bbadb4c2c6b48f797d8fa4b4b8b4b4b6a87f6d6d747b8da4a6a6a4a8adb4b4a2
796b8fbdd4dbdbbb94848fa8c2d6e1e6e1dbc8b49b76728b999d9da8adbfcdc6af896b62
6d92c6d6bf947672797b7d7970726d666b849dafc8d1cbc2c6d1d8dbdde4e8ebebe8e8e8
e8dfc6aba2a2a6a8a6a2a8b8bfb8aba2a4a49994abc6cfcdcdd6dbdfddc8ab9fadb2bdbf
b4a28d7f798babbfcdd6dddddbd1bfabafc6cdcfc29f7f767b7d869bb2bbb6a8a6a6a6a2
9d999dadc4cfc8b29f9d9dabbbbfb8a8a4b6d8e8d8b2949badb8b4b2cbe1e4d4ab92a6b8
bbb8c8c8af8b8292a6ad9f949fc2dde4ddbda800009b827974798ba6c8e4dfcfbfa29b9f
9dabcbe6e6e1e4e6e6dbcbb48d748494a6b8c6c2b8bbb49f7d5d668ba8b2b2b4afb2b2a6
997f696b7076899fb8c8cbc4bbad967f8bbfd6d6d6c69d70798d8f7b7296c8ddddbd896d
6d7986a6cde6e6d8cfd8d8d8dddddfd8c4a89babc4d4cfb492869dbdd6dfdddbd4bb896d
7d9db6c8d6d1c8c2bfc2bfaf92899ba69d8b899fc6dbd4c29b74727482a6b4ab9989868f
a4b8c2bbb6b8b8b8cfdbdde1dfd4bb998b9bafbbc6d1c49f7d82827b84929d94765d5d76
99b2bdc4c4c6cbcbbba29dabbdbfb8cde6dbcdb89b7f7996c2d4dfedebe8e6e8e6d1b6b2
b6b2a4999694828dafbbb8b6b49b8b8f9b9d928d9badc4dde1dfdddbdbd6d6d4d4d4d4d1
cfcfcfcdcbc6c8d1e4e8e6dbc2adb2c2c2a47d727d94abb8b4a8b2b69f7970726d798fa6
a8a29fa6adb2ad9f796d9bc6dbdfdfc8a899a4b4bdc8d6e4e4d4b89d8970708b9da6abb2
b6b6b2b4ad9d84625779b4cdb686707684928d7f70625d606b829ba6b2c2cdc8bfbfcbd8
e4e6e8ebebebebe8e1d1b29996a2abafb6b6b4b8bdb49f949ba2998b99b8cbd1cfd1d8df
d4b49fa6bbc4cbcdc6b6997f7484abcdd6d4d6d8dbcdb6a8b4cfddd8bf9b7d74797d8294
b2c6cbc4b8b4a89babb6b4bbcfddcfb28f8292a8b6b8ada29fadc8d4c29d8996adb8b4b2
cbdddfd1b29b9da4a4abc8cfc2a899928f94969dadc4d4d8d1b6a60000ab998d848292a6
c4e1dfd6cfbdb4ada6abc6e1e4dfdbdfdfd6cbb6896b7f94adc4c8bfb8bbad8f6d595d72
8da8b8bbafa49da4adab9b8b8696b2c4c8c8cfcdc2af947b82b4cfd4cfbb895252646d69
6d94c6d8dbc4997b767f8ba2c2dddfd6cfd8d8d8dfdfe1d8b2969bb4cbd6cdb2998f9bb6
d1dfdbd8cfbb967b7b8fabcbdfdbcfc2b6b2afa48b8da6b8b2a6a4afcde1dfd1b28d8f96
a6bfbbab948489949dadb4a89fb4cbcbcfd4d8ddddcbab8b8292a4b4bdbdad947f767476
7d86897b62546284a6b2b2b6b6b8c6cdc6b2abb8c4bbafc4dfdbd1c2ab8b84a4c8d4ddeb
e8e4e4e6dfc29d999b968d827f796d7999adb6b6b2a4948f969486828d9fb4d1dfe1dfdf
dbd6d6d6d4d4d4d4cfcfcdcdcbc2c2d1e6e8e6dfcbb2abbfb8997670829bafbbb2a8b6af
947d76766d768fa6a8a6a2a4abafafa47976abcbdbdde1d6bba4adb4b6bbc8dddfbf967d
7472768ba4afb4b8b8ab9ba6b2b6a274576996b2a47d728299a49f8b6d595b707d8d9da8
9dabc6bfb4adbbd1e4ebedebebebebe4d1b49d9499afbbbdc4c6c4bbb6a48f929b9d8d7f
8dafc6d6d8d6d6d1bf9d99abbfcdd1d4cfb692797b9dc4d6d6d1d6dbdbcdb4a6b4cfdbcd
ad8b767b8b8b8b99b6cdcfc4b4afaba2bdcdcdcdd8ddcba8898292a4aba49699a6b2b4ab
968d8b94a8b8bfc8dbddcdbdb2a48d868da8cbd4c6b4ab9d8d929ba8b4b8c2c4b6a8a400
00b2a29994949babc8dfddd8dbd4c8b6a8a8c2dbdddbd6d6d6d6cfb88f728292a4b6c2bd
b6b6a68b72748d9fa2b4bfbfbdafa8b4bfbdad9d9db4cdd4cfcbcfcdc2af9b827692b4c2
b4946644445057576084b6cfd4bd8f7b7d848b9bb4cfdfdbd4d8d6d6d8d8dfd4a48999bb
cfd8cdad9f9996abc8dbd8d4c8b6a2867b8dadcfe1dbd1cbbfa48d868296b8cbbfaba2a2
bdd8ddd6bda8b2bdc2c4bfb8a8969db4b6b4afaba4bdcfc4bbbfcfd8dbc69b848492abbb
bdb8b6ad9676696d74747069595b79a4b6b4b2b8bbbfcdd4d4c8b8bdbfa89db6d8dbd4c2
af9699b4cbd4d8e4e4e1e4e8dfc29b8f8b7d766454504d5d7d99abada89d949496928684
8f9ba6bdd8e6e1dfddd8d6d6d4d1d4d4d1d1cfcdcbc6c6d6e8e8e6e1cfb6abb4ab8f7b79
8999a4ababadbdb699827d7d7b8292a6afafababadb2b6a87f84b8cbd8dfe4dbbfa6a8ad
afb4b2c2c8a47d6d76848b929fb2bdbbb6a699a2bbc6b48662647b9b9d867d8da4a8a48f
6d5b69828f9ba6afa8adb6a6a2a4adbdd8e8ebebe8ebe8dbbfa69fa2a6b2b8bbbdc6c8bb
af9d8f96968b797484a2b6c8d4d6d1c4af999ba6b4c8d4d6cda67d7694bfd4d6d4d8dde1
dfd4bbabb8d6ddcfaf8b7b86928f94a4bbcdcfc2ada4a4a8c4d4d6dbdfdbbd9984899da6
9d8b8b9fb8c6b899848d9ba2adc2d6dfe6dbc4b8bbab867f8ba6cbd4c6afa49b96a8b2b6
bbada6a29b9da80000b8ada4a29f9da4c2dddbd8dfddd4bda8a6bfd6d6d4d1cfd1d4d1bb
967d89949699abb4b2a89b8b7b84a6b8afbfc2bdc4bdb8c6cbc2afa8b6cdd8dbd6d1d1c8
bbafa48b7479898f7d5d4b4d5966665b546b9dc2c4a6847f86898f99abc4e1e4dbd8d4cb
c4c4d1c89d8694b6d1ddcfaba4a4969fbdd6d8d1c2af9f8b84a4c4d8dfd8cdcbc2946b6d
7fa6c8cfbb9f8d8499bfdbdbc8b8bfc4b6a8afbdb8a8b2cbcdc6bfc2bdc2bdafafb6c6d6
ddc69b86848fa8bdc4c8d4d4c29b86847f746660596992bbbbb6bfc6cbc8cfd6d6cbb6af
a88d89a4cbd4cfbfad9fabc4cfd4d6dddde1e4e4ddc49d8b7f76705b4b4947506b8fa4ab
a6928d94948f868994a4abb2cde1e4dfdbd8d8d8d6d4d1d1d4d6d4cfcfcfcfd8e6e8e8e8
d6c2b4ad9f8f89848b929299a2b2c4c2a88b848b8f969ba4b2b4b2b2afb2b2a6828fbfc4
d1ddddd4c4b4a29fa6ada4a2a492847f8da4ab9d949fb4b6b2a6968da4bbad84605d698b
9d9282899d9f9b8b72666d7f8b949fafc2bfad9b99a2a8afc8e1e4dfdbdfe1cfafa4a6b8
c4c2bbb6b6bbb4a49f9d9d96867972767b849bb4c8d1cbbdad9d969294a8bbc2b8997b7b
9fc6d4d6d8dde1e4e1d6bfadbddfe6e1c89d8f96948d8fa2b6c4c6bfaba2a6b8cbd4d6e1
e8e4cba68d8da2a8998b96b2c6d1c29f8d9dadb2b8cde1e8ebdbcbcbc4ab8b848fabd6df
cfb69d929fc4cfcdc6af9d9699a2b20000c2bbb4afaba49fafcfd1d4ddddd4bfa8a4b2c4
cfd4d1cdcdd1cdb29489929d927f8ba2a89f9282798bafbfadb4bbbdc8c4c6d1d1c4b4b2
cbdbdbdddbd4cdbfb4afa6927f7d796b594752727d7d746657608db6af9694969b99999d
a8bddde4dbd4c8af9494a4a4928b94a8c6d4c6a2a2a69699b2d1d8d4bfab9d8d96c4d6db
d8d4cbc2b284626d8bb8d6cda88676707ba6d8dfd4c6bba68b8699b2b6b2bdcfd1cfcdd1
c8b8a69fadb8bdd1d8c6a4948f96b2c2cbd4dfe4d8c4b6b2a68b6b57526994bdb8b6c6cf
cfc8c6d1d1bfab9f967f7d92adb8b8afa6a2b6cfd8d8d4d4d6dfe1dbd1b892827b767472
72766d5b608babb2a88b8694999b948d99adb6afc4dbe1e1ddd8d8d8d8d6cfcfd4d8d8d4
cfcfd1dbe8ebedebdbc8b8b2a8a29d8f8d9294a4b4bdc8cbbb9b8d949fa29996a2abb2b2
afada28b798badb4c4cfcbc4c6c6aba6b2b8b29d929da8a8a8b4bbab92899badada48d64
6b8b92795b546284998d79768486847f7b747070747d8dafc8c4aba29fa6afbbcdd6cfbd
b4bfcfc4a6a2b4cddbd4c6bdbdb8a4898496a49b84767b7f797084adcdd1c4afa49b948d
898b96a2a4927d7b8fb2cbd8dddddddfdbcbb6adc4e1ebe8cfa89fa49f948b96b2b6b8bb
adadbbcbd1d1d4dfebede4c49d8d999f9b9fafc2cdd1bfa8a8b6bdbdc8d6e4e8e6d6c8cd
c4ab92898fadd8e1d1b89b96adcfdddbd6c4b4a8a8afbd0000b6bfc4c2bbafa4a2afc2cf
d4d4c8b8ab9f9ba4bfd1d6d1cfd1c6a28b8d9ba696797b92a4a69b847999bfc6a8949bb8
cbcdcfd8d6c8b4b4cdddd8d8d6d1c8bbb4b6ab9b8f8b7d66504b709b9f8d7d74606084a8
9b8ba6afb2aba8a29fadc6d4cfc4af8f70747f8b94968f8b9db4b69f9d9d9696adcdd8d4
c2a89b9bafd4dddbd8d4cdbb94746b7b9dc6ddcd9d706664729dd8e6dfd4b284667992ad
bdbfc6cdcfc8c6c8bba69699abb2adb8c4bfa6999badc6cdcbd4e1e6ddd1cbc8bd9f704d
4b5b7da6abb6cbd4d4c4b4bdc8c4b6a899847b7f8f969b9fa4a4b6cfdddbd1cfd1dbdfd4
bd9b7b76767274869b9f8f645484a8af9d8482929faba2929bb2bbb2bbcfdde1dfdddddb
d8d6d1cfd4d8d8d6d4d1d6dfedefefedddc8b8b4b4b6b4a296949fbdcdcfd6d6c6a496a2
afab9989868f949696927f6b728494abc2c8b6b2bfc6afb4c8d1cbafa2bbc8c4bdb6b2a4
8d828fa8a89f8450425b72705d5466828d7f72747f7f848482847d70666d8db6c2b29d9d
9da2afc4d1cdaf9996adc6c6b8bbc8d8ddd1c4bbc2c4b28f828d9d94847b7d7b746d7dad
d1d1bfa8a2a2a49f998686929d9b8d8284a2c6dbdfdbcfc2bfb8abadc6e1e8e1c8a6a6ab
9f94848ba4b2b8bbb2bdcfd6dbd4cfd8e4ededd4ab898d969dabbdcbd4d4bdafc4cdc8c4
cddde6e1d6c8c2cbc6af92868da6c8c8b8a69babc6d4dfe1dfd4c8bfb4b6c2000096b2c4
cbc6b8ada4a2bbd1d8d4c6bbaf998b94adcbd8d6d4cdbb948692a2a8967f7d92abb6b29d
92adc8c69f747dadc8cdcdd6d8cbb2abb8cbcdcfcfcdc2b6b4b4a2999b8d795d4d5782ad
b2a6968464596d847979a4bbc2bbb8ab968b99afb8b2a2846d7b8d99a49b84707099b8ad
9f94929bafc6cfd1c2a699a6c4d8ddd8d6d4cdb484727d94b2cdddcf9d6d666979a6dfeb
e6d8a874607692afc6cdcdcbcbc2b6ada49696a8bbb8a4a4afb2a2969badc6cbc6cbd6dd
d6d1cdcbc2a47b5d5b5d668494adcbd6d4bd9da8c2cdc2ad9d948b7f7d848fa2b4afb4cb
ddd8cbcbc8d1d6c69d746d7b8986899bafab9460477099a49b8d898d9ba69f94a2b8bdaf
abbbd4e1e4dfdfddd6d1d1d4d6dbd8d6d8d8dfe6edefede8dbc4b4b6bdc6c4ad9994a4c6
d6d8ddd8c6a69bb2c6bda8927b727274746d666d848f94b4cfcfb6adbbbfabb6d1dddbc6
bdcfd8d6cdb2967f797f92a29d8b7047425b7082745d62727b7b798ba29fa4a4969d9d89
707096bfbd9d86929296adc2cdc4a89ba4b8cdd6d6d6d8dbd4c4b6b2bbc4bb9b86868982
898b7d746d707fafd1d6c6b2adb4b8b6a88d7f899fb4b4a294a8cbdbdfd6c2aba6aba8af
c2d8e1d6b8a2abaf9f948d96adbfc4bdb2c2d6dddfd8cfd8e1e6e4d6b28d929699a8bfcf
d4d4bbb4cfd4cfcbd4dfe1d1bbb2bbcdd1b6928b94a6bdb49d9299bbd6d6dfe6dfcdbfbd
b4adb200007492b2c2bfb6b4b4afb6cbddd6cbbdad8b7989a2c2d6dbd4c6ab847d8f9d9d
8d7f86a4bdc4c2b4a8b8c8c29970729bbbc6cbd8ddd6c2adadb6bbc2bdb29f928d8d7979
897f6b5754628bb2b8af9f8d6b595d6260709fc4d1cdcbbf9f7b7b8d9fa89d7d6979929f
a2927b6b6689aba6998b899bb2bfc2c4b69f9bb4d1d8d4cbc8cbc6ab84748bb2c6d4dbcf
a47b727689b2e1ebe6d49b74707b8dabc8d1d4d1c8bbafaba6a2afcfdbd4bdababab9699
a4afbbc2c6c8cdcfcfcfcdcdc8ad8b7b79726d7b8da8c4d4cfb496a4bfc8bbafb2b6b29d
89869bb8c6bfbbc8d6d4c8c6c4cbcfc4966b7094ada69fa6b2a88b5d4b698b9da29f9689
8d969994a8bdbfaf9fa2bbd8e4e1dfdbd8d6d6d6d6d6d6d8dbdde1e4e8ebe6ddcbbbb4bb
c4cbc4a69296adc8d4d4cfcbbfadabc2d4cbbb9f796b6d7476706d7f9da29dbfd6cdab9b
a4afabb6cddbdfd6cdcfdbe1d4a87d696b7b8684766450425b7b8da4946d5d6274828da6
bfb8bbb4a8afb29f7d799dc4c4a48b99a2abbbbbbbbbb8c2c4c2cddbe1dfdddbd4c4b6b6
bdbfad8b79797d7f96a6997b707682afd4dbd1c4bfc2c4bfaf947f84a4c6cdb8adbdd1d6
d8d1c2ada4a4abb4bfcdd6c8a896a4afabadafb8c6d1cfbdafb4cbd8ddd8d6dbe1e6e1cd
ad949696929bb6c8cbcbb8b4cbd4d1cfdbe1d8bd9d9db8d4d1b2929fb2bdcfc4a68b94bd
dbd8dfe6ddbda6a8a299a4000064748fa4ababb6c6c4b4b6cfcdc6b89f7d707f8fafcbd6
cfb68f706b79898f898492b8cdc6c4b6abb2bbb496797692adc2cfdfe1dbcbb6b4b8b6b6
a284766d66625d646d6b5d545d698bafb8a8968f82746d6962729fc8d6d6d8d1b4847b7d
84928d796469798b9b948479727982827f7b7d8da6b4afb2b2ababc2dbddd4bfb4b8b49d
827996c4d8dbd6c8ab8b7b7f9dc4dfe1dfcb927982848fa8c8d4dbdbd1bfb6bdbbb6c4df
e8e4d4bbb2ab9fafc4c8c6c8cbcbcdcdcbcdd4d8d6c2a49492897b7d8fabbfc6bfa899a6
bbbdb6bdcdd4d1bfa89badc6cfc8c2c4c4bdbbc4c6cbcfc8ab847d9fb6a89494a6a48666
627284929fa89d868486898fa6bbbdab94869bc8e1e1dfdddddddbd6d4d6d8dbdddfdfdd
dfdfd6c6b6b4bdc6cbc6b6928699b4c4c6c2b4b6bdb8bfcdd8cfc2a87f7276848d898694
ababa4c6d6c4998b94a2abadbbd1dbdbd1c2d1e1cda27972707672625044444d74949fb2
a2766264798b96adc2b6ada8abb6b8a48284a8cbcfb8a2a6bdcbc4aba4b8d1e1dbcbc8d6
e1dfdddbd6d1c4b6b4a48d797076868f9dafaf8f79767da4c8d4d4cdc6c4c4bdad927f89
abcdd4c4bdc8d4d4d4d1c6b6a69fa8b2bbc2c8bd9f8999adb4c2c6c8cfd6d1bda8a4b4c6
cdcfd6dfe8ede4c4a29699998d92a6b2b2b8afadbdcfd4cfd4dbcfad99a4c2d1c2a299b6
c8cbddd6b699a6cddfdddfe8ddb4948f8b8fa60000827f7d828b96afcbcfb8adbdc6c4ad
8972707b899db6c8c6a4766264707d868b8d9fc2d1c2c2b8adb4b6ab947f8292a4bbd4e1
ddcfbdb8b8b6afa68d6d696b6964666b6b60545b6d798dadb49d848b8f8d867d727694b8
cdd4ddd6b68b7f7b7989948b6b64667694a4a2998f7f70706d6d768499a2a2b2c6c8c6cf
dfe1dbc4ada49d8f7f7d9bc6ddddd4cbb89b828bb4d6dbdbd8cba89492929dafc6d1dbdf
d6c2b8c2bdb4bfdfe6e1d6bdada6adc4d8dbd4d1d4d1cdc6c4cdd8e1e1d4b69f9f94827b
8babbbb2a29ba2b2bbbbbfc8d4ddddcfbbadb6c6cbcbc4b8a89ba4bdcbcdcbc4b294869d
ab967b84a29f8d7d869292929fad9f89867f8496a4ada896827684add4e1dfdfdfdddbd8
d6d8d8dbdddfddd6d8d4bda29bafc8cfcbbba4827b8fabb4b2aba2abbbc4cdd4d4c6bfaf
8b797986999d9fabb6ada4c2d1c6a699999d9f9ba2b8c6cdc6b2c4d6bf9679797679766b
59505b748da2adb49f796966768d96afbfada6a8adb6b2997f94b8c6c8bdb2b8cbcdb696
92b8dfefe8d6c6c8d4d6d6d1cfcfc6ad927d72706d7f999da4abad967d727999b8cbd4d1
c8b8b4ad9b867f94bbd6d8c8bfc2cbd4dbd6cbb8a49da8afb4bbbfbb9f899fb8bdc8c6c6
c8cbc8bdab9fa6b4c4cbcdd8e6efe4c6a29296968d949d9f9fa8a8a4afc2cbc2bbb8b2a4
abbfcfcdad929dbbcbcdddd8bda6bbd6dfe1e1e4d8b28b7f7b849b0000afa48b746b799b
bfcdc2b4b8bfb89d796b6d7689949fa8a68d6d66707b848f9ba2abbfc8c2c8c6bdc2bda8
8f8489929bbddde1cbafa8afad9f96998d797676797b7b7b72605b728d929baba6927d82
8b928f897d747d94b6d1dfd4b68f7f828d9fafa68479767d9bb4bdb4a8948282726d7982
8b929bbbd6dbd8d8dfe1dbc6ad9b948b7f829fcbdbddd6d1c6ab8b94c2ddd8ddddd6cbb2
a4a8afb8c2c6d4dfd6bbabafa69ba8d1dfddcbad9b99abc6dbdfd8d8ddd8d1c4bfcfdfe6
e1d4b4949694867d86a8bda89499b4c4c6c6cdd1d4d8d8d1bfb2afb6bbbfb8a8948f9baf
c4cbc6bda4867d8d947d6982a4a69b9dafb2ad9f9fa69d89868996a8a89b867d79767f9b
bfdbe1dfdfdfdbd8d8d8d8d8dddbd4cfc8bba2898ba8c4cbbdab997d747f94a4a8a49fad
bfc4cbcbc2b8bdb49279707b929fadbdbfab9db8cfd6c8ab99968d86868f9da6a8a2adb6
a68d7b7d7f8f9b9b897d849babb6c2bda88974707f949db4c8bdbdbfbbb6a68d86a6c2bf
c4bfc2cfcdbba28484adddefefdfc6b8bdc8c8c2c2c8c6a87f6d70707992a8a6a29d9689
7b72798dadc8d1d1c6afa69d897d829fcde1ddc8a8a4bbd8e1dbc8a89292a4adb4bbbdb6
a294b2c6c4c6bfb8bbbfc6c4b2a4a6b8cfcfc2c6d8e6e1c8a8928f8984929fa8abada6a8
bbc6bda4969294a2bfd4d4c29d8999afc2cdd8d4bda8bdd8dfe1ddd8cfaf8b7670748400
00bdb8a2826d799fc4d1cfc6bdab9684746d6d767f898b847d7069727d868f9dadb4bbbd
c2c8cdcbc6c8c4ab8b848b8d8fb4d8d6af99a6a89984868f8f8286929692898279646482
9f9fa2ab9d8d8282868b8982746b6d7fa6cde1d6bda2898fa6b2b8b2a29d9fa6b2c4c8bb
b2a296927b70797d828999b4cfdddddde1e1cdad948d96948286abd1dfddd6d4c8ab8d8d
bddfdbdfdfd8cdbbb4c4cbc6bdbdd1dfd6bda6a6a29292b8d1cbab8f868996b6d1dddddf
dfddd6c6c4d6e4e6ddc69d7d8692928d8da4b8ada6b6cdd1d1d6dddbcfc8cbcbbda2949b
a4a49994929699a2bbc4bba87f5d59696d5d57729ba6a4afc4bfb29d8f948f848492a6b4
ab8d727274768296b2cddfe1dfddd8d6d6d8d8d6d4cbbfb6ab9b897f7f92a8b4b2ab9d84
727489a2ada6a8bbcbcbc8bdadadafa48d796b6b7b8b9db4b29d92b4d1ddd1ad99998d7d
767b82929fa29f99949b968b8f9dafb4a89999a8b8c6cfc6b49b86828d9fadc2d1d1d1d1
cdc2a88f8fb4cbc2c6c2c2d1c8af947b7999cbe8efe6d6cbcbcbc4bbbdc6cbb8927b7679
86a4bbad9d8f8479797f8992a8c8cdc8bdb2a696867f86a6d1e1dfc89b8dadd4ddd4bd99
7f7f94abb6bbbbb29d92adc2c4c4b4a6abc2cfcbb6a4a2b4d4d6c2bbcddbcdb8a4998f7d
74869bb4c6c4b6b6cdd4bd9b969ba8bdd4ddd1b28f86969fadc2d1cbb2a6c2dde1d8d1d1
c8b692726666720000b4bbaf968496b8cfd8d8d6c69f7b7074726d72797f7f7d766d6d7b
899296a4afb8bfbfc2cdc4b6b8c8c8ad8f92968b8999b2b29694ada68b79868b847d8da4
a6968d897b696684a6a2a4af9b8f868282827d726964728ba6c2d8d1c4bba6a6afb2b4b4
b4b2bbc6c8cfcbc2bfaf9d967d6b72797f8b9ba8bdd6dde1e1d8b4847486a29f8482a6cf
ddddd8cfbda68d84addbdfe1d8cbbdb6bfcfd8d1c6bdcfddd4c4b2b2b89f8dabbfb6927f
7f8489a4c2d4dfe1e4e1d6cbcbd8e4e1d1a87f798b9da4a29499a8adbdd1d8d6d6dddfdd
c6a8afb6a88d84929d8b798296a49b9bafb8a4845944494d5050505d798d92abc8c4a682
72747b797b8fa8afa88d767974727f92a6bfdbe1dfdbd8d6d4d4d4cfc2ab99928f867f7f
7d828fa4b4b6a68d767489a4afadb4c6d6d6cdb6a4a49b8b847f7466666b7b9492868bab
cbd6c8a8a4b4ab8d797d869db6bbafa2a4b6b6a29b9dabb6ada4a6b4bfcbd4cbb2998f8d
96adbfcfd6d8d8dbd8cdaf9294b8cfc8cdc4bdc8c6b69b827f94b8ddebe8e8ebe6dbd1c8
c2c8cbc2a68b7d7d8badc6bba69282797f949f9da8c6c6bbb4b8ad9b8d868da6c8dfe1d1
b2a2afc8d1c4a889726d7fa4b8bdbda88b7f92adbfc8b2969fbfd6cfbda4969bbfcfc4bb
c6c6ab948f948f7b6b7b9bbdd4d8cdcbd8d8c6adb4bfcddbe4dfcdb28f848d8b94abb8af
a2adc6dbd6c4c4cfcdbd9d796464720000adbdb89f8fa8c8dbdddddbcba4766470726d6d
707b8b999b948b8f9ba29da4abadadadbbcdbfa8a6bfc2ad9fa8a896948f929496a4b2a6
8b7b847f797d92a8a6948b897d6b6682a4a2a4ab9d9289847b7974646062748f9fadbfc2
c4c6bfbbb8b2ababb2b4c2d1d6ddd8cfd1c2a28d72646d7984929ba2adc4d8e1ddcda276
7499b6ab847699c4d4dbdbcbaf94847694c6e4e4d1bdb2bbc8d4dbdbcbb8c6dbd6cdbfbb
bda69bbbc6bb9b8f92948fa4bdcddde4e8e4d8cdcdd6dddbc694707994adb4ad92848b96
b4cdd1cfcfd1d1d4c2a4a4a8a2968f96997d70849fada4949692795d4d54605d595b524d
57667499bfc29f7259596269728da6adb2a2929486767d8b9badcbdbdfdddbd8d4d1cbbd
a88d7d7b7d7d7d7f848f9dabbbbdad8b74728299a8b2bbc8d4d6c2ada8a699867f847d66
5b5b6b7f82828b96adbdbbb2bdd1c69b767f8dabc8cdc8bfbfcbcbb8a69da2adabb4c6cb
cbd1d8bfa2928f929dbdd4dbdbdbdde1dfcdaf928fafcbd4dbd1bfc2c6bfa69494a6bbd6
e4e6eff1ede6dbcdbdbdbdb6a28b7b7b8fadc2bdaf997f7b89999b99abc2b6afb8c4b8a2
948b96a8bdd1dbd6cdbfbdc8cdb689726664769dbbbfb2947b70798da6b8a68f9dbbd1d1
c4a689829db6b8b4bfbb947f7b7f7d726b7fadcddbe1dfd8d6d1c4b8c6cfd6dddfdbcfbd
9d8686828fa6a89994b4cbd1c2adb6cbcdb89679666b820000b2c6c2a692abcddfe1dfdf
d1ad7d646b7476726d7d9db8c2bbada4adafa29fa29f999bb4d4cdb29fafb6aba6afb4ad
ab9f9ba8bdc6c2b49f8d827474849baba894847f7b6b62769da4a2a2948b84847b767262
5b5d667d8d929dabbbc2c2c2bfb29d96a6b8cbd8dde1dbd1d4c8a8826b69707d8992999f
a6b6d1ddd8c69f7d82b2c8b289768fb6cbd8ddc89f7b726d7da8d8e1d4bfb6c2d1d8dddb
c6a8b4d1d4d1c2b2a6969dc8d6c8ada6a8a299adc6d1dfebeddfcbc2cbd1d4d1c8a4796d
8fadb6ab846d707994afbbbfc6cdcbcfc6afafb6b6a89f968b7f849db2bbad947d69544d
59696d6962594b474b596b8fb6bb9b6b524d59697d9badafbdbbb4af947d7d86929fbdd6
dfddddd8cfc6b8a48f8b827b7f7f79798ba6b8bdc6c8b2846d747d8d9fb8c6c8c6bdaba4
a8a69b8b82898b7d70707d8f928d868496afc2c6d1dbc8946d7f92abc8d4d8d6d4d1cfc6
af9b92949bb6d4d1cdcfd4b294928f8f9fc8dfe4dddfe1e6ddc2ab9b8d9dbdd8e4d4b8b8
b4ada29ba4b2bdd1e1e8efefebe8ddc8b4a8a49f968b7d7b92adbfbdad927d86969b8f8d
a2b4a6a8c2cbbba29694a2adafb4c4d1d4cbc6cdc6a6796964627292b6c2b296847d8289
94a4a69fa4b2c6cdbd9d7f7b8696a2afbdb69984796d6d6d7692bfd8dfe6e4dbcdc6b8b4
cbcbc6c8c4c2c4c2ab948b899db6b49689adcfd6bfa2a6bfc2a8867469769b0000bbcbc6
ab94a8cfe4e4e1dfd4bb8d6b6b7f8d867684afcdd4cbbba4a2a8a4a49f96949fbddbd6b8
9ba4b8bbb4b2bbbfb8a6a6c4d6d6cdc4b8a68d7672849dafad967d7272665b668da8a896
867f7f827d797262606d797d7d7d8292a6afb2bbc2b49486a2c2d4dbdde1dbcfd1cdb896
867f79828d969b9da2adc2cfcdb89d868fbdcfbd9d828ba8bfd4ddc8967270727b94bfd8
d6c6bdc6d4dbe1ddc8a2a2b8c6cbbb9d8b7d8dbbcfc6b6b8b2a299afc6d4e1edebd1ada8
c4cfcbc6c8bb8b647f9fa8997464666b7f96a2b4c8d6d8d4c6bbc2cbc6b4a69684899fb8
c2bba8927254474d626d665b575249505d66798fa4a684605454627994adb4afbdc8c8bd
9f89898b8d9dbdd6e1dfd8cfbba4968b8696998f8d897d768dafc4c6cdd1bf927d82828d
a6c4cdc6af9d969da49d9692949fa8aba69d9ba4a8997f7b92b6cfd6ddd8b6826474869d
bfd8e1e1e4d4cbc4ab8f7d7986a6c2bdbbc2c6af998f868296cbe1e4dde1e4e1d4b8aba8
9699afcdd8c6ada89b8b8b96abb2b6c8ddebf1efebe6dfd4c2ab968d9694847f96b6c2bb
a89289a2b2ab9699adb6adb4c8cbb29b9b9da6a69d96a4b8bbb8bbc2bba88f7b6b66728d
b6d1c8bbafaba6a2a4adb8b6a89da8b6a48d7f827f869db8bfb4a28b76696b79869dbfd8
e4e6d8cbc6bfaba2b6b2a4a29b9da4abab9f9492a4bdb89684a6d1ddc6a2a4b8b29b7f72
697dab0000c2c6c2ad949fcbe6e6e4dfdbc49972748fa294828bb4d8dbd1c49f8f949ba6
a2948fa4c8dfd8b8969bbfd1c2b8bbc2b8a2a8d4ddd8d1cbc8bda8897686adbfb4997664
605b576082a6ab92827d7f7b7974665d749fb4a28476768494a4adbbc6bd99849fc8dddf
e1e4dfd6d4cfc2ada499868fa4b2ada29da2a6adb2a89b8f96bdd1cbb492849bb6cdd4c6
96747b828992a8bfc6bfc2c8cfd6dfe1cfa699abbdc2ad8f847b829da6abafb6ad9994a8
bfcbdbe1ddc29b99b6bfbfb8bdb88f64748d9b947b70706d7b8d9fbdd4e1e4d6c4c2cdd6
d4c8b49b8b8fa6bfc2ab927f644d475264695b4d5462626b7d8b8b847f7b66595d60728d
a6b2aba8bbcfd4c6afa29f999dafc6d8e1dfd4bb9d8f8b898da6afa4998b7f7986a8bfc2
cdd6cdab928b8289a4c8cfbfa49294a2a2928b9bb2bbbbc4c6bba8adaf9d7b748bb2c8cd
cbbb947060627089b2d8e4e4e8d8c6b8a2867072829fafabadb2b4b2a699867686b4d4dd
dbdddbcfbdb2b2ada29fa6b2bbb2a29f927f7b899da8adbfd8e8f1efe8e6dfdbd4c29f89
9694847f96b8c2ad9d9499b6c2b6a2afc6cdc4c2cbc6ab9ba69fa2a2948b96a69b99a2ad
b8b8ab947d76849bbfd8d6d1cfc8b6a6a4b2c4c4a68f929d8d7b76797984a4c2c6bdb29b
7f6d798b949babc6dbd8c8bbbdb8a48f9496999d99928b96adb4a49ba6b8ad8f84a6cdd4
b89da8bfb69f84746d86b80000c4bdb6a8969bbfdde1e1dfddcb9f79829fab9b9494afd4
dbd8cba68b8996a49f8b869fc8dfd6b49292b6c8b4a6adbbb299a6dddfd6cfcbcbc8bda2
8694c4cdb89d79665d595b6476969d928d847b746b5d576d9fcdd8c8a689798299b2bfcb
d1c8a286a2d1e6e4e6e6e6dfd8cfbfada89f8d9dbbcdc4ab99969299a6a8998d9fbdd1d1
bf968294abbfc8bf94798b9fa8a29fa2a4a6b6c4cbcdd6d8c8a494a8bdbb9d8282848b96
8d8fa4ad9f89869db4c4cfd4d6cfb8abafb6b8b2aba68d72768699a299867670798ba2c8
dbe1e6d8c8c8d1dbdbd8c8af9b99a8bdc2a889765d4b444d5d646059627b8f949ba6967d
69605d62708296abb8af9f9badc4cbc2b4afb2adb6c8d4dbddd8cba8929da2999bb6c4b6
9d867d7d8dabbdbfcfd8d1b69d89767999bfc8c2af9f969fa8928292b6c2c2cbcfc4b6b8
b49f7f707fa2b8b6a48b7266646062729bcbdddfe4d8c6af9b7f6d748babbbb2afb2afb6
b4a68d76748db8cfd1d1cdb4969dafb4b4afa8a2a6a2999b92847d7d899babc2d4dfe8e6
e4e4dfd8d1cbad8d8d897f7b8ba8ad968f96a4bbbfb2a6b4cbcdbbb6c2bdb2b4bfafafaf
a29499a69b8d8fadc6c8b49b9299a2adc6d8d4d4d4c6a89294a6c2bfa28f8f8f7d696064
697ba2bfc2bdc2b29279848d8f8f92a4bdc8c8c6c4b6a2928f99abbfbda6949fbfcdbfab
a8ad96848ba8c2b89b94adcbcdbda284748fc40000b8ada8a2999fb6cfd8d8d8d8cda484
94abb4a8a4a4adc2d4d8cbab8b7d899b94848b9bb8d1c29d828299a2928996a8a28d9fd1
ddd8d1cbcbcdc8b4999bc2cdc2af9d92847b76726b7b8b999f927b6d5b4b5994cbe1dfd6
c6a88486a6bfcfd6d8cdab8fa4d1e6e4e4e6e8e4ddcdb8a6a2998b9dbdd1cbaf968d8994
abaf9284a6c2cdc6b694828f9dadb4a88b7d94b4bdb2a28f82829bb2bbbdbbbdb69d94ab
bdb28f797d848f9d928d9b9f927f8496afbbc6cfdde6ddc8b6b6b6aba4a29684828d9fa8
9d8976707989a4c6d8dfebe1cfc8cfd6dbdbd6c4a8a4afbfc6bba286624b474d5b6d827f
7984adb6b2ad92766466697289a4bdc4bfb4a499999fa8adadb6bfbfc6d1dbdbd6d6cbb2
a2b2afa2a2bbc6b69b7f7d8999afbfc4d1dbd6c2a486707494b4bdc2bdab99a2b6a48b86
9dadbbcbcfcbcbcdbdab947b82a6c4c29f76696d74726b7089b2cbd1d8d4c6ad947d7076
8fb6cdc6c2c2bfc2c2b8997b6d799bb4bdb8b29b7f8dabbdc4bfb29f998f868f8f89827b
849bafc2c8cfe1e4e1e4dfd6cfcbb69689827d7682949b928fa2b8c4bfb4adb4c4c4a8a2
adb4bfcbd1c6bdb8af998d9b9b928fb4d1cfaf9496abb6b8c8d6cdcdcbb8998696adc2bf
a89d9686725b5459667d96a4a6abb6ad927f8689898d898da4c4d4dbd4b8a29b9ba4b8d4
d6bfa6b6d1ddd1b4a6a28b8d9ba4afa49296b4d1d8cdaf89768dbd0000a49d9b9b9ba4b4
c4cbc6c2bfb49b8da2b8c4bfb4aba6abc6d1c8b68d6d707b89929da2adbdad927b727b82
868d99a29b8d96b8d8e1d6cbcdd1cfc2a899a6bfcbc8c6bfb6ada48f796d768f9f8f7460
494974bfe4e6e1dddbc29994afc4d6ddddd4b499a8cfe4e4e4e4e8e6dbc2ab9d9d928296
b4c8c6b8a89b8d94a6a89289a6bfc2b4a894898f94a2a89f8f8694b2bdb29f8272748494
9b9fa4abab9996a8b4a2847d89898da29fa2aba6948b99abb2b2bbd4e6ebe6d1b6b2a8a2
a4a6a69f999da29b8f7f797d828da2c2d6e1e8e1cfc2c8d1d6d6d6c6aba8b2c4d4cfbb99
6d5252647994afad968db2c8c6ad896d6972828f9fb2c4cbc4bdb8af9482899fb4c4d1d1
d1d6ddd8cfcdcdc2b8c2af9696b4c2b294798299a2adbbc4cfdbd8c4a48474768da6b4bf
bda89ba8bfb8a48d848fa6bdc4cbd1d1bfb2a68d94b6d1cfa67470899b9b897d86a6bfcb
cdc4b29d8f827b829bbdd4d6d4d4d4cfcfc49f82797f94a8ad9d948b8999abbbc4c2af96
867d7f8f948f89848fa4b4b8bbc2d8e4e4e1dbd1cdcdc2a68f7f7b7d8b9da49da4b8cbd4
cdc4bdbbc2c6b2a4a6afbdcbd4cdc2bdb6947b848f9292abc6c4a48d8fabbfc2c8cfc6c6
c6b6968ba6bfcfc8b8b2a4846d5b575d748b929299a4a69f928984868d969694a2c4dbe1
dbbb9f999dabbfd6dbc2abc4dde4d4b49d948fa6b8b4b6b2a69fbdd8d8c49d7d7484ab00
0092929499a2afbdbfb2adafad9d8d8fabc4d1cdbdad9f96afc6cbbf946b697694afafaf
b4bdaf997f6d728296a4a8a8a29d9badd6e4d6c8cbd4d8cfb6968da2c4d6d8d1cbc6bfaf
967469747b745d49405794d6e8e6e4e4e4d4b2a8b6c6dde1ddcfaf99a6cbe4e8e4e4e8e1
c6a899929486798ba8bdcbc8c4b8a49694969496a6b2ad9f9b8d8b929bafbfbfb29d929b
9f968474747f86848496a6ada294a2b4af967d7f929494adb4c2cbbfada4b2bbbbbbcbdd
e6e6e1cdb4ab9f999fabb8c2bfb2a294928f898d8d8f9fc2d8e1e4dbc8b6bdcbd4d6d4c2
a6a6adbfdfddc29b6d5b69869fb6cbc6af9babcfd8b892726b799bb4b6b4bbc6bfbfc4bf
9f8284a6c6d8dfe1ddd8d8d1c8c4c6c8cdcfaf8b84a2bfb68f7684a2a6a6afbfcfdbd4bb
9b847b79829bb6c4b69696afc6c8bd9d7b7b92abbdc4c8c8bbb2ab9ba2b6cbc6a88489a6
bdb8a48d8ba2bfcbc2b49f8f948f8692afcbd4d6dbdfdfd6cdbb9b86848fa8bbb496868d
a4b4bbbbbfb6a28b7b79899fa8a8a4999dabafadabb2c8dde1dbd6cfcbd1d1c4a8897986
9fb4b6adbbcdd4d8d4cdc8c4c8cfc6b6a8a6adbfcfcbc4c4b88d6d747f8b8f9db4bba899
9db4c4cdcdc8bdbfc4bb9b94b2c4d1cdc2bdab866b5d626d84969fa6afb6b4aba69d8489
999fa2a2afc4dbe4dbbb9d9299a8b8cdcfbbabc6dde6dbbb9d8d92b2c8c8cbc8bdadc4db
d8bd9b8982829200009d99969dabb6c4bfadafbdbda89499b4c8cdc8bbaf9d8994b2c4b8
967b8294b4c6bbb4b6b8ab927b70798da6b2b2aba6a4abbfdfe6d6c4c4d1ddd8bb968286
abd6e1dbd1cbc8bdab8f7460545047394274b6dbe4e4e4e6ebdfc2adb2c6d8ddcfb8998b
9bbde1f1e8e4e1cda48684848276768fadc4d8d6cfc8b294828ba4b6b8b29f8f8b868999
adc6d6d8cdaf8b767472696b829b9b8d8b9fb4b29d96abc4bba48476868f96abbbcdd8d4
c8bdbbbdc4d4e4e4e1dfd1c2b4a49f9fa8bbcdd8dbcdaf999d9f9b9d9692a2cbdfe1e4df
c8a8abbfcfd1cbb6a2a8adb8dbd6b88f6d667994abbfcdc8b49da4cbddc69d76697ba8c8
c8bdbdc4bfc4c8c2a88f94bbd8e4e8e8e6dfd4cfc6bbbfcbd8dbbd8f7d96b8b68f7989a4
aba6abc2d1d6cdaf9d9b99827b99b8c4a88694b8cdd1c8a87d7b94adbfc2bdb6b4b2ada8
adbbc8c6b8adafb8bfbfad9b99adc8cdbdaf9f99a69f929dbdd1d6d8dde4e4d1b49b8b89
8996b6c6b69b8d9db8c8c6bfb8ad9f94898d9fb2bfc4bfada4a6a69f9dabc4d6d8d4d6d4
cfd6ddd8c4997b86abc4c2b8c4d4d6d8d6d1cbc8cfd6d6c4ab999db2c4bfbfc4b4866269
748696abbfcbc6b8b6bdc6cdc6b6afbbc6bb9f99a8adbbc6c6c2ab8b6b5d62748696a8bb
c6c6bdbbb8a47f82999d9fa6b8c8dbe4ddc6ab9b9ba2abbbbfb6afc4d8e4dfcda68992ad
c2cbd1cfc2b8cbddd1b6a4a69f8d840000b8b2a8a6adb4b6b4b4bfcdcbb69fa4bfc8c8c6
bdb8a27b7f9db2ab9b96a4afbdc4b6adadad9d8679768294abb6b4aba69fb2d4e4e6d8bf
b8c4d1cfb4927d799bcfdfddd4cdc6bfb6a68d694d49473d508fcfdbdfdddfe4e6dbbd9f
9fb6c6c8bba28b8696afddf8ede6d6b48670747f86868ba4bdcdddddd4c6af8d7b8dbdd6
cdbfab947f7d8ba6c2d4dddfd4b282666974727286a2a2948d9fb6b6a299abc8cdb89274
7b8b9ba6b2c8dde1d6c8bfc2d1e1e8e6e1d8bdaba8a29f9fabc2d8e4e6dfc6a4a6adabad
a296a6d1e4e1e4e1cda6a8b8bfb8ada29babb2b6c8c2a689726d74899fb4bdb4a299adcf
ddcba276667babcfd4cbc8cbc8cfcfbda494a6cde1e8e8ebede8dfd6c8bdc4d1dddfc69f
8694aba4847989a2b2adafc4d1d1c4abafc2bb927d99b2b2947f8fb6cfd1c4a6868da4b4
bfbfb2a6abafadafb6c6d1cdc8cbc8c2bdbbb2adb4c2cfcfbfb4a6a2afa699a4bbcfd8df
e1e4ddc29b84848b8b92a8b4a89b9dadbbc4c4c2b8b2abababafbbc8cfd1cdbdada29d99
9dadbfc8c8cfd6d6d1d6dbd8c89f7d86abc2bbadb8cdd4dbdbd6cdcfd8dfdfd1b49996a4
afb2b6b8a67b5d646d8badc6d6dfe1d4c4bbbfbdab969db8c6b29b92948f9fb4bbbdad8d
6b6064707f96afc2cbc4b8b8b29474748b999fa6b8c8dbe4e1dbc8b6b2a69dabb8b8afb8
cddbdbcfa88699b2c6d1d4cbbbbbc8cbb6a4a6b6b296840000cfcbbdb4afada8a8b6c6d1
cbb2a4b2c8cfd4d1c4b89b727b99a4a6adbdc6c4bbb4ababadafaba2968f8b96adbbbbaf
a6a4bde1e6e1cfb29fa2aba89b89797999c6d8d6cdc6bfb8b6b29d7657505250609fd8db
dbdbdfdfd6bfa28d94adb4b8b6a289899fb4ddf8efe4cda67f70798996999db8cbd1d6d4
c8b49f8984a2cfdfd1c8bfab867b8db2cfdbdddfc8a6897b828b8b8489968f868ba6b8b4
9f92a2c4d4c496707489999fa4bfdfe1d6bfb6c6dbe4e4e4e4d6a8868d99a29fa6c2dbe4
e6e4d1b4b6bdbdbbaf9da4cfe4e1e4e1cfb2b6c4bfa4948f8fa6afb2b4ada2947d6d6d79
8d9b9d948f9bbbd4dbc89f7d727b9fc2d1d1cfd1d1d4cdbba8a4bddde8e8e8edf1efe6d6
bfadb8c8d8dfcba6929b9b8674707d96afafabb8bbbbb4adbfd1c6a292a6ada2898496b4
c4bfad998d99a4a6b4bbaf9d9fabadb2bbcdd8cfcfdbd6cbbfc2c8d1d1cbcfcfbdad9f99
9f9f9fabb8cddbdddbd6cfb89b8684868686969f9b96a2b2b8b8b8b8b6b2b4bfc6c8cbcf
d1d4cfc6bdb4ada6a8afb8bbbdc8d4d8d6d4d1cdb68f79869baba4949db6cbd6dbd6cfd1
dde4e4dbbd99929b9da2a6a48d6d5d627099c2d1dde4e6dbbfadab9d89849bb6bba4948f
89828b9b9fafab8f72667076869bafbfc6c2b8af997b6b6b7d96a8b2bbc8d8e4e6e1d6cb
c6af9da8b4b2a2a2b8cfd1c29b8296b6cfdbd8c2abb2bfbb9f94a2b4b4a2960000d8d6cb
bfb2a8a4a6afbdc2b8abadbdcdd8ddd6c2a88466708d9da8c4d8d6cdbbaba6adb4bdc6c8
bfab9996adbfc2b2a6a8c6e4e4d1b4947f7b8282827f747d9dc2d1cdc2b6ada6a29b8970
5959626b86b6d8dddbd6d4cdbb9f8b8b9db2b6bbbba68989abbdddefebdfcbab8b849296
9696a6c8d6cdc2b6a8968f8f9bb6d4dbd4cfcfc29b8696bdd6dfe1ddbfa299969b9fa49b
8979747d9dc6cbbfa88f99b6cbbd94727d929ba2a2bfe1e1cbafa8c2dbe1e1dfe1d19b70
7b94a8a8abbfd6dfdfdfd1bdc4cbc8c4b29b99c6dfdde1d8c8bfc8d4c8a68d898d9fa8a6
a4a8afab947b72747d848b929bafcbdbd8c4a48b7f7d8ba2b4bdc8cfcdc2b4afb4bdcfe4
e6e1e4e8ede8dfc6ab9696b2d1dbc8a48d948d7469646d849b998f928b8d9dabc2cfc6b8
b4bbaf9b8f9fb2c2bfa28d8d96a29b94a8bbb49694a6b6c4c8d1d8cfd6e4dfd1c6cddbe4
ddc6c4c4b6a4928b94abbdbfbfcbd8d4cbc6cdc8b8a2867f827f898f92929fafb4b4afab
a29fafc8cfd1cfcbcdd1cfcfcdcdcbbfb4afb2b2b8c6d4dbd8c8b6a68f7d7d8f999d998f
8d96adc8d8d8d1d4dde4e1d8b88b868d8b8b8b897669606679a4c8d4dbdfdfcdad999986
79849dafa8948d8d847b7d8686969f967d7074848f94a2b8c6c6bfab896d6b7084a8c2c6
bfc4d1dfe1dbcfcbcbb6abb4a89b8b899fb8b8a2847b8fb2cdd8cdad96a8bfbfad9994a4
b2ada80000d6d6c8b6a69b9b9b9d9d99969bafc4cfd1d1cbb89b745b627d96abcde1dbcf
bfb2abb2bdc8d4d1c6b8a8999fbbbfa89b9fbbd6cfb699867d7d82827d74707f9dbbc8c6
b6a2948b827066645b607092b8d1dbdddbcdb6aba2948b8f9fb2bbc2bb9f898dadc4dbeb
e8ddc8b299949f9f998f9dc4cfbda6998d848f9fb2c8d8d8cfcdcfc4a494a4c6d6dfe1db
bfa6a6abafb2b69b6d505b82b6dddbc8b49d9fafaf9f827b99abafb4abb8d1d4bfa6abbf
d6dfdbd4cbb689707f9db2afadb6c6cfcfcbbdadb8c6c8c4ad8f8db4d4dde1d1c4cbd6dd
cda68d8b99a4a6a29babbdc2b2a2998d7d7b94abbbc6d6e1ddc8a892897f84898d9db2bb
b29b8b96b2cbdbe6dfd8dfe6dfcdbdb4ad9d8d9fc2cbbb92797d7b695d5760727d7b7272
70748296b2c2c2c6cbc2a28d99b6c4cdc8a486869ba6998b9fb8af8d869bb8cfd1d4dbd1
d8e6e1d4cbd6e1e8dfc6b8b6afa28f8b9dc2d4cfcdcfcfbfbdcbd8ddd8c29b8d9292867f
868fa2afb2afaba2928fa8cbd4d6d1cbc8cdd1d6d4d6dbd8c8b2a4a6b6c6d4d8d1b2927d
798494a4afa89b96867984b4d6dbd4d6dddfdbcdad867f86867f7d7f7b76767f96b8d4df
dfdfddc6a48b8b827d899dada6948b847b7b868f868692998472768d8f868fafc8cdc6ad
846976869dbfcfcbbbb6c2cfd1c4b8b8bdbdbdc2a68d827984949989767484a4c4cfbb9b
8da2c2cfc2a68f96adb4b80000cbc2a88d7d7b7f82827d747282a2bdc6c4bdb4ad947059
607b96abc6dddbd1c6c2bbbdc4cfd1c6bdbbb29b8fa8ad999499a8b6b8a8948b8b8f9494
8472707b96b4bdb6a284746d665d5d64605d76a8d1dddbddd8c4a29da29d948d99adbbc2
b899848babcbe1ededdfc8b49d8d8b928f82829fafab9b9492929fb6cbd6ddd8cdc8c6b6
9f99abbfcdd8ddd4bba4abbbc2c6c2844430447fbbddd8c8b6a4abb4a4867686adbdbbbf
b6b2afb4afa8afbdd1dbcfb8a6967f7486a6b6b2a8a6abb2b2afaba8a4abb6b49f868499
bbd6ddcfbfc2cdd6cdaf9694a2abada694a4c2cdcbc6c6b49489abc8d6d6dbe1dfcba68b
84868f8f898f9699927d7689a6cbe1e8dfdbe1e1cdab9fafc4b89b99afb4a27f6b696962
5b575d6d7b7d797979746d728ba6bbcdcdb6968699bbc6cbc6a4847d929d8f828d9d9b8b
8b96adc8cbcbd8d6dbe1dbcbc4d1e4efe8d4bdada49b9699abc6d6d4d1d1c6adb8d4e1e4
dfcfad9fa6a68f7d8499a6a8a8a8a294898dabcdd8dbd4cbc8cdd6dbdbdddfe1d8bb9f9d
afbdcdd6cfb48d727994abb6bbab99947d62649dcdd8d1d1d6d4cbbba89b9294948d8b8d
8b929ba8bdd1e1e8e6e1ddcba4827f82868fa2b6bdab9b86767b96aba2948f927b6d7b94
948486a8c6d1cdad8470869dadc4cdc4afabb4bbb8b4b4b6bfc6c8c2ab9d96898b94968b
79707b9dc2d1bb998b9bbdcdc2a48d8fa8b8c60000b69f7d62595b626d7979726b728faf
b4b4afa8a68d6d647494a8adbbcdd4d4cfcfcbc6c8cdc4b4adb2ad998d94968d96a4adb4
c4bda496929494948f847d7f96afa88f796459504d525d64626689bfd8d8d6dddbc4a8ab
afa696848ba2afb4af968284a2c8e1edefdfc8b49d89797976695d708fa2a29fa2abbbc8
d1d8ddd8cfc4b6a296a2b4bfc6d1dbd1b69fa6bdcbcfc4792e1e2e66a4cbc8b8aba2adb6
a892899fbdc8c6c8c6c2b6a8a8adb2bbcdd4c4a68b827b797f96a6a69f9b9b9ba2b4c4c2
b2a29b9b92827d86a8cdd8cbb2abb8cbcdbda2949fabb2a8929bbbd4d6d4d4c6a899b2cd
d8dde1e4ddcba88b828d9fa69f9f9b928979747f94b6d6dfdddbdfd6bd9f99afcbc6ab96
96948b796b66666b74747076898f8d8f86746259698fb8cdc4a8968d99afb8b8af927b79
868f89848686868fa2a8adb8bbbfd1dbdfe1d8cbc4cddfebe8d6bb9d8f96a2abb4bfc6c6
bfbdbbafbbd1e1e4dbc6adafbdb69d8286a2aba8ada696827f99bdd6dddfd8c8c8d4dddf
e4e4e1e4ddc49f96a4adc6d4d6c89f7686a2bbc8c6ad928472595484bbd4d1c6c2bbada6
a8a8abb2b6a4999694a4b4bfcddde8edebe4ddc69b7479869296a8bfc8bda88f7b7994b2
b4a28f846b697f9b998f94a8c2cfc8a8847b96adb6c4cdc6afa8adb2b2b6bbbfc4cdcdbb
afada89fa4afab967b707fa8cfddd1b49da2b2b8af927d829fb6c20000b299765b525262
768b8b84766d829fadb6b4afab96827f94abb4b4b4b6b6c2cbcfcfcdc8c4ab9ba2ababa4
a29f968d96afc6d1d8d4bfa69b9692969b9b928b9db6a27f6659504240495459627dadd1
d8d4d1d4d4bfadbdc6b49d8b898d969f9f8d7b7b92b8dbe8e1d1bba6998b7d70624d3b54
82a8b2b4bbc4c8cfd6d8dfddd4c6a88d8d9fb4bbc4cfd8d1b89f99abc2cfbd6d241b2952
84adaba2a2a6b2b6ad9fa8c2cfd4d4d6d6d6cdb2adb6b8c4cfcfbb9679727679797d8d96
928f8d92a4c8ddd6cdb69d96968f8486a6cdd8c6a89fadc6cdbd9f8b8f9da6a2949bb4cb
d1cfcfc4a696afc8d4d8e4e4dfd4b8998992a6b2b6bdb6a49b867b7b8294afc6c8cbcfc4
b49f8fa6c2c4b49d8d847b726d7074829694847d8b969996897666667994b2bbab928f96
9b99949492867f86949d99999f968994a8afa8adadb4c4d4ddddd4cbc6cdd8e1dfcbab8d
8696abb4ada8a8a89d9fafb6bdcde4e8d8bba8b6c8bf9d7f8296abb6bbaf927684add1dd
e1e4ddc8c6d6e1e6e8e8e6e6e1cda28b929fc2d6d8d1ab8b9db6c6cfd1bf9d847664506b
99b8bfb6adaba4a2a2a6b6c6c6ad999499adc2c8cfdbe6e8ebe4d4b48970768b999fafc2
c8bdab967d7284a2ab9d8b7f6d72899f9d9ba2a8bbc8bf9d7d7f9db4c2cfd8d1c2b8b8c2
cbcdcbc8c6cbcbbfb8b2a89fabbdbf9f7b728bbddde6e6dbc8b8ada69b7f6d748da4a800
00c2b28d665760798f9b9d968d8492a6b6c6c4b8b6b2ababa6a8adb2ad9f929ba8b2bdc6
c8b692869babb8bfc2bfad9496b2d1e1e4dfcfb6a49f9f9fa6afadabafbba6866d5d4d40
3d424b54699bc6d4d4cbc8c6bfb2adc4cdc2b8ada4968b8b8d84747694b6d1d6c4ad9b8f
89847b70664b32477ba8b8c6cfcfcdcfd6dde1ddd4c6a2797d92a4abb6c6d4d1c6b29d99
a8b499592e3742628ba8a29dafb8bbb4ada6bbd6dbdddfdfdfdbcbb2b2bdc2cdd1cba882
6b6d767d7f7f92a49f92848badd4e4dfddd1bda6a8a68f89a4cdd4bfa2a2b6c8cbbda28b
848b92929ba2adbbc6cbc6b8998fafc6cfcfd1d8dfd8bd9d8f92a6b4bbc4bdafa89d8d84
82848da2afbbbdb4a8998492a8b2ada4997f70666974869ba89f897b86969b96897d828d
99a4aba28d7d8696968679797f828b9fb6bbb2b2bbb29b96a6ab9fa4a2a2adc4d4d1c4bd
c2cbd4dbd8bf997d7f8f9d9d928d8f8d8b96afb8b6c4e1ebd8b6a6b4bdad928484869baf
bbb294829dc4d8dddfe4dbc6c2d1e4e8ebebebebe8d6af8d8499bdcfcdc2ada4b8c6c8c8
cdcbb69689765d6b7d92adb4b2b2b4ada6adbbc8c4a68d8b99adc2cdd1dbe1e4e4dbc49f
7f747b8f9da4b2c2bfafa89d8470768f9b9b8f827686a2a8a49999a2b8c4b48b6d7492a8
bddbe4ddcbc4c6cfdbddd8cfcbcbc6c2bbaf9d94a4bfc69f76799bcde6e8e8e8dfc4ada2
9479666d7d8b920000c6ad8b6b6472899b9f9f9fa4abafb2b6c2c4bfbfc6c8c4b29f99a4
9b82747b848d9fb8bfa8847692b6cdd1d4d4bf9f99afd4e8ede6dbc8b4abada6abbfcbcd
c6bfa48d7f695242474b576682b2cfcdc4b6afada8a6adb8c4cbcfcbc4b89f928d7f7482
adcbd4c29f89828682767274725b404b769fafc6d1cfcdd4dbdfdfd6cbc4a27672849492
96afc8cfcfbfa4897f7d6957647d7684a4afa8abbfc4c2b4a6a4bfdde1e4e8e8e1cdb6af
b8c6cdd4d6c69b7b76848b8d8f8d9fafafa28f8fafd6e4dfe1e1d1b8b2a889829fc6cdb8
a6b4c6cdc8c8bda8948b848699a2a8b4bdbdb4a48b8fb4c4c8bbadc2d8d1b49992969fa4
abb2b2aba6a49f9b9d96929db4c4c8c4bdad998d94a4a8afaf947969667289a4afa48979
8692928f8289a4afb4b8bbad998f8f968f7b6d6d747986a6c8cdc4c2c8bfa69da4a8a4ad
a2949dbbcdc8bbafb4c4cfd8d6bb8f747b89928d84898f86828ba2ada6b2d6e4d8bdb4b8
b2948b8b89828496aba6969bc2d6d8d8dbdfd8c6bfcde1e6e8ebedede8dfc49b7f96afb6
ab9d9fafc2cdc8c2c8cfc4a89b8d7b89898db4c2bfbbbbb8b6bfc2c4bda48d8b9fafbbc4
c8cdd1dbe1d6b899847f8294a2abb6c2bba4a6a69276728499a8a492849bb6b4ab968d9b
b2b8a27b62697d8fa8cfddd1b6afafbdcfd6d4cdcdcdcdcfc8b2928496b4b692727da2d1
e6e4dde1ddbfafab9d7f6b6b7076840000b48f7670747f8d96948f99b2bfbbafadafb8c2
c6cdd4cfc6a88f8d84746d707984a4b6b8a6827292c4dbdbdbdbcbab99add6edf1ede4d6
c2b4b2abadbfd8d8cfc8af9f967b594b5b626b7fa6c6cfc4b29f948f96a4ada8b4cbd6d8
d6cfbba494848299c2d6d4bd9b7f7b847f7672797d6d59607b92a2bdcdc8c6d1dfdfdfcf
bdbfb2927b7f867f8292adbfcbc2ab8b796d667ba8c2a69dadada6abc2c6c2af9d9fbddd
e8ebebebdbbba6b2c4cdd1d6d4bf9b828fabb2ab9d9499a4afada29badcfdfdddfe1d8c2
af96797d9bbdc8c4c2c8cdcbcbcfcfc8bba8928692a2b2bfbdad9d94898fb2c4c4a88fa6
c2bba6969ba4adafb4b6af9d949fafb8c6bba8abc4d8dfdfddd6c8ad9999abc2cbbda27f
6b70829bb4a68b869fa492847989adbfc8cdcfc6bfbbab9d896b626974767f9fc6cbbfbf
c8bfadabafb4b6c2af9ba4c2d1cbc4b4a8adb8c6c6af89767f8d999d9da2a28f7d7b868d
8d9bbbcfcdbfc2c6b692898b847b76899fa29babd4e1dbd4d6ddd6c6bfcbdbe1e6e8eded
e8e1cfa47f929b968b8692a6b6c6c4bbc4cfcdb8ada2949d999fbfcbc6bfbfc4c8c8c6c2
bbad9d9badbdbfbfc4bfbbc6d4cbab9d9b948692a4b4c2c8bba2a8b2a27d6b7b9bb8bba4
8d9db6b2a89694a8b6ad8d6d6066748296b6c8c4af9d969fb2c2c6c6cbcbd4ddd6b28274
829496827482a2d1e6e1d4d8d8b6a8a69d9284796d6d790000a48470727d898f8d847d92
b6c4bfb2abafbfcdd4d8dbd8cdb292867f7d7d7b7686adbbb4a6897d9bcde1dfdbdbd1b4
96a6d4eff4ebe1d4bba6a8a29fafcfd4cfcbb6a69b7f6052646d7b94bbcfcfc2a68f8484
9bafafa2a6c4d8ddd8d1bfa8948b99b2c8cdcdbfa2868496999b9b9994826972848f9baf
bfc4c4cfdddfddcfc2c2c4b6998b847b7d8499b2bfbfb8afa69d9db4d1d6b8abb4ada4a4
bfcfc6ada2abc4ddededebe8d6b6a6b6cdd4d4cfc4ad968fa6cbcfbda4928b96adb6b4ad
abb6c4cfd6d1c6b29d897b7f96b4c6d4d6d1cfcbcbd1d6d6d1cbb2948da2bdc8bfa69292
929bb4c4bfa28fa2b6ab9d96a4bdcbd1d8cfbfa28994adbfcfc4afafc6dfe8e8e6e6e4d4
af99adc8d6d6bf9976798dabb8a48d9bbfc6ab8b727b9fc2d1d8ddd6d4d4c2a886626479
89898996abada29fb4b8b4bbbbbdc4c8bba8b2cfdbd1cfbda4969ba8a899847d8b949ba4
b4b8ad967d74747b828fa6b6bbb6bbc4bb9b897f7b798296a8ada6b2d6e1d8d4d6dbd4c8
c2c6d1dde1e4ebebe8e4d4ad8b92948b848d94969da6a8abb6c6cdc8bfb4a69d9ba8c6cb
c4bdc4cfd1cbc2bfbbb4a6999fb6c4c2c6bdb2b4bfb2949daba89494a6b8c6c2ad9ba4b2
a884707fa4bdbfa8898da4a4998992b2bfab846964727f868fa6bdc6bda89999a4adb6bf
c6cdd6dfd6ad7b6b6d72797d828dabd1e1dbcfd4d6b4a299929d9d8f86848200009f8f7b
74848f8f84797992afb8b6aba6bbcfd8dfdfdddbcfb6998482868d8d7f7d99adb2a89289
9dcbe1e1ddddd4b6949fcde8ebe1d8cba68b928f96a8bfc8c6bba696897460596672829d
b6cbcdbf9f867b84a4b8af9b99b6d1dbd4c6ab96898babc6cbc6c2bba89da6bdc2c6cbc4
b896747b8f999ba4b6c6c6cdd6dbd6d1cfc8c8bfab9b8f827d89a2b6bdbdc4cbc8c4c6d6
e4ddbfb4b8b2a49db4c8c4afabbdd1dfedefedebdbb69fbbd1d6cfbda899999fb8d6d6bf
a28d8492b2bfc6c6bba6a2b8c4bda68f8484848692afcddddbd1cfcfcfcfd6dbdbdbcdb2
949fbbc4b8a49da6b2bbc8cfc6a894abb8a28b89a8cbd8dfe6dbcbad86869ba8b4afa8ad
bfd6e8ebe8e8ede4c8abb6cfddddcba68699bbcfcdb49ba2c6cbaf8b6d749bc6d6dde4db
d8d8cfbb94707994a4a8a2968b867f849fadb2b6afb2bbbbafa4b4cbd1c6bdad998d949f
a292868d9fa29b9db2bbab8f827b797d8b9dadb4b2ada8adab998979748294a4b2b8ada8
c6cfcdd1d8dbd4cbc4c4cbd6dde1e8e8e8e6d8b89da4a49489949b948f8f9296a4b2bfcb
cdbd9f928d9fc4cbc4bfc4cfd1c8bdb8b6ad9f8d8ba6bdc4c6bbaba2a49b8d9fafab9d9d
adbdc2b6a29699a29d827689a8bbbfad86798692898296b8bfa27b66728da2a6a8b4c4cf
cfc2ada6adababb6c2cddbe4d4ab7d6b64667686929db6d6dfd1cdd4d8bfa8948d969996
9da2990000b49b7d747f8d86797b8fa6ada4968d96bbd6dfdfdddfdfd4b8967d7d8d9fa8
9b868b9fafab9d8f99bfdbe1ddddd4b69babd4e1ddcdc6c2a68b8b8996abb8c2bfab8b79
7672706d6b728499a4b4c2c2ab8f828b9da69f9496abc4cbc6b899827d82a6c4c6bfbbbb
b2b6c4d4d6d6d8d6cdab7f86999f9fa4b6cdcfcfd4d6d4d6d8cdbdb2ada69b8b829bbbc4
c4c2c8d1d4cfcfd6dfd8bba8a8a69d9ba6a6a29da8c6dde4ebeff1efddb294bbd1cdbfab
9fa4adb4bdcdcdbb9f8b8294bbcbd6dbcfaf9babbbb89b7d7984848492b2cddddbd1d1d6
d4d1d8dfe1e1ddc8a299abb4a8a8bbc6cfd4d8dbcfb299a8af927b7b9dc8dbdfe4d8cfb8
94848694a4a8abb4b6cbe4ebe8e6ebe6cfb8c2d4e1ddcba899bfdde1ddcbab99afaf967d
6d7dabd1dbdde4ddd8dbdbc69f828da8b4bdbbab89767486a8b2adab9f9fa8aba29da8af
ab9b96928f94a4b2ad9d9badbdbda699a6afa6969699928b94a8b6bbb6ada49d968f8474
70869dabb4b6a494a6afb4bfc8cfd1cfc6c2c6cfd6dde1e6e6e4cdb6adb4b6a89999a4ad
ada69d9496a4b4c4cfbb8f7f7b8dbbc8c4bbbdc6cbcbc4bdafa8a29b9bafbbb6b8b29f92
969b99a6afab9b9fb2bdbdad9b928d8d8b7f7b8ba8bbc2b48f727282868fabc4bb947064
82abc8cdc8c8cfd8ddd8cbbfbdb8afabb4c8dde6d8b48b7f747082949fa4b8d6dfcfcbd4
dbcbad928b8f8d8da4adad0000c8a47d6d727b797b92b2c4bb997b7284abcddddfdfe1e1
d8bb9279829fb8c2bdada2a2a69f9b9292adcfdddbdbd4bba4bbdbddcbb2afc2bdada49b
9fa8b2bdbda67d64697286867b828f999da4b6c6b69f928d8d898999a8b6c2bfb8af9684
7d7b92adb8b6b8bfbdc4d1dbdddbdbd8d4b88f8b969d9d9fb8d4d8d8dbdbd4d4d6c8bbb2
b4a8968686a8cbcfc8c4cbd4dbd8d6d4cdbb9f8d8d96999d9f8d7f849fcbdfe1e6ebefef
dbaf94b2bbad9f99a8b6bdbfbfbfbdb49f8b849bc4d4dddfcfaf99a2adb29d7d76828484
92afc6d4d1cfd6dbd4d1dbe4e6e6e4d4ab9494948fa4c8d4dbdddfddcfb8a49d947d7272
8bbbd4dfe4d8d4c8ab8d8299b2bdbfc2b2bbdbe4e4e1e6ddcbbbc2d4dfd8bfa2a2d4ebe8
e4d1ad8b94928279798dafd1d8d8dfd8d6ddddc8a28f9db2bbc6cdc2a28986a2c2c6bbb4
a29ba4abadafafa48b767b828fa6b8bfb8a8b6cbd1cfb49696a2a4a4b2bdb29d9dabb2b8
b4aba8a69f948476798d9da8ada68d7b899ba4adb2b8c4cdc8bfc4cfd6d6dbdfe1d4b8a8
adb2b8b6a89fafcbd1cbb8a69d9da6b4c8c4a2847482a8bbb2a8b2c2c6c6c4c2bbb6b8bd
b8bfbbada8a6a4a8b4b4a6a4a8a69da8b8c4c4ad8f82868f8b7f7984a2b8bfb89d7b6974
89a2bbc6b48b696686b4d4ddd8d4d6dde1dfddd1c8c8bda8a8bbd4dfd4b69fa2927f869b
a4a2b6d4dfcdc4cbd1c4af9d969d9d9ba6b4c20000cfb28d746b707d94afcbd4c69f7970
869fb6cfdbe1e1e1dbc29b8996b6c6c8cbcbc2b4a28b82797b96c4dbdbdbd4bfabbbd4cf
b49fafd1d8cdc4b8b4b4afada896796970849da49d9fa6adadadb8c4bbab9d92827984a2
b8c6cbbfb8b49f96968d92a2b6b8bdbfbfc8d6dfdfddddddd8bf9b8982828996b8d8dddf
dfdbd1cfcfcbcbc8bd9f827989b4d4d6cfc6c8d4dddfd8cbad84767b869296999982767b
92bdd8dddfe1e8e8dbb89da6a48f82849fb6b8bfc2b4ada8a292899bbfcfd8d8c6ab9996
999b8d726d7d868d94a8bbc2bfc4cdd4d1cfd8e4e8e8e4d4ad998f827b99c6d8dddddfd8
cfc4b2967d7976747fa4cfe4e1d8d8d8c49d869bb8cfd1c6aba8c6d8dbd4cfbfb4b4b6c6
d1c6a892a6d4e8e8e4d1ab86868b8b929ba2afcbd4d6ddd4d4ddddcbad9fadb6bbc8cfcb
b8adafc2d4cfc2b8aba8b2b8c2cbcbbb96797d8696afbfc2bbb2c6d8d8d1b28b8494a2ad
c4cdc2ab9f9fa2adaba2a8b2b2a896847d898f9ba6967b6d7b99aba8a8afbfcbc6bdbfcd
d4d1d4dbd6bdaba2a4adb6b6ab9fb6d8e4e1d4c4b4a296a4bdcdbf9d82869da69992a6c2
c8c2b8bfc8cdcdcdc8c8c8c2b8b2bdcfd4c4a694949ba4b4c4cfcfbd9b828fa49b7f6b76
92adb8b49b7b666d89a6bbbdab8b6d6d7fa4cfdfdfdbd6dfe6e4dfd6cfd1cdb8abb8cfd1
c8b4adb4a88b7f8d9ba2b6cfd4c2b2b4bbada8a8a4a8b2b6afbbcd0000d4c2a27f707f9d
b6c8d6d8c6a486899fa6abbfd6dfdfe1d8c6afa2a8b6c2c6cbd1cfc2a47b625b6686bddd
dbdbd1c2afafbbb8a4a2bfdfe1d6cfc6c6c2b29d897b707082a2bdc4bdb8bbbfc2c2bfbf
b6ab9f927f7b8fa6b6c2cbbfb8c2b8b8bdb6b4b6bfc4c4c2c2c6d4dddfdfdfddd6bb9982
6d62708dbbdbdbdfdfd6d1cdcfd4d6cfbb8d6b7089b6d6dbd4cbc8cdd6dbd1b889606076
8b8f949b967f747b86a2b6c4c8d1dde1d8bfa6a49984727089a6abafb2a89fa2a6968f94
adcbd6d4c6b6a49489827b7476869ba6a8b2bbb8b4b8c2c8cbcbd4dfe6e6e1cfafa2967f
748bbddbdbd8ddd6d4cfbd9b82847f797994c8e4ddd6d6dbcfad929db8d1d4c29f96b2c4
cbc6b8a299a4a4a8ada48b86a8cde1e6e1c8a486848f9dafb2abadc6d6dbdbd8dbddd8c6
ab9dabb8bbc4cbc8bfc2cbd4d4c8b8b4a8abb6bfcddbddd4ad8b96a4a8b4bdc2bbb4c2d4
d4cba8868492a6b8cbcbc2b4a29294a2a49fadbbc2bbad8d74747f94a69d8474829dada4
9fadc4cdc6bbbdcdd4cfcfd6cdb2a29d9fa8afada29bb4dbebebe1d6c8ab9299b4c6bfa8
9292a69f8b8da4c8d4c4b2b8d1d8d6d1cdcfd6dbd6cfd1dfdbc49f847f92adc2cdd1d6d1
b694a2b8ad84646479929f9b867470768da2a89f998f8686899dc8dbddddd6dbe1d8d1cf
cfd1d1c6bbc6cfc6c4bdbdc2af8b747f99adbfcbcbb4a2a6ad9b999fa8adbdc8bdc2cd00
00d6c4a68982a4c2cdd1d4cfbba6999ba6a8a6b4d1e1e4e4d8c8bbb4afafb6bfc6cfd1c8
a672544d597db6d8d8d8d1c4af9d949296abcddfe1d6cdcbcdcdbf99746962708fb6cfd4
cbc4c4c6cbcbc8c6b6a89d8b7f849ba8abb2bdb4b2c4cfd8d6cfcfcdcbc8c8c8c6c6cfdb
dddfe1dfcfaf8d7964576289b8d6d8dddfd4c8c6cdd4d4c8af84697082a6c6d1cfc6bbb2
b4bdbd9f745d627f9699a2aba88f797986949da6b2bfcdd8d6c2a69d8d7d6d6270899296
9b99949ba4999294a8cdd8d1cdc2ad927d768499a6adb6b6b6bbc4c6c2c4c4c2bdbfcbd8
dfe1dbcbb4a8997d7482add4dddbdddbdbd4bd9f8d867f747089c6e4ddd4cbcbc8af9dab
b8c6c4af9492abbdc4c2b69b8d949b9d968b868fa8c6dde4dbbf9b868b9fb4bdb4a4a4bf
d4dbdbdde1dfd1bb998299b2bbc4cbcdc8cfd4d6cfbbabada6a4adbbcddde4dfc4a8b2bd
bdb6b4b6b2a6abb8c2bda8969da6afc2cdcbc6c4af92848b9ba4b4c2cdcbbd9b766b7d99
a8a896898f96968d8ba8cbd1c8bdbbc8cfcfd1d6d1b8a2969da4a49b928fafd6e6ede8db
cba88b94b4bfad998996ada4929bb8d6d8c2adbddbdfdbd4cfcfd6dddfd8d8e4ddc29b7b
7d9dc4cfd1d4dbddcdb2b6c6bd946b5d6272828f8d86828d9da49b868696a2a49da2bdcb
d1d8d6d8d8cdc2c4cdcbc8c4bdc4c6bdbfc8cfcfb286727b9bb6c8d4cdb2a6abad9b8f9d
b6bbc4cbc4c4cd0000cfb499848fc2d8d6d4cbbda8a2a4a6a2a2a2adc8dfebe8dbcbbfbf
b6abb2b8c2cdd4cba6745950526da4cdd6dbd4c4ab8f7d829fbdd1ddddd4cdcfd4d6cfab
7d66627699b8cdd4d1c8c8cdcdcdcfcfbda6948b8b99abb2adabafb6bfcdd8dddbd8d6d4
cfcdcbcbcbcbcfd8dbdfe1ddcdab897b70646682adc8cbd4dbcdb8afbfc4c4b69d7d6d74
7d92abb8b4a89d8d8d969b8670646d8b9d9fafbdb8a6847689969fa8b6c2c6d4d8c8a48f
7f7972696b797b7d828486929d9d9da4b6d1dbd4cdbfa689767fa2c4c8c6c6bbb4b8c6d1
d4d4cdc2b2afbdcdd1d1c6b8b4ad997f747f9dc6dbe1e1dfdfd6bba48b767269647fbbdd
ddd4c4b8b4a8abbfbbb2a28f828fb4c4c6c4bfb2a6a6a4a49d928f96a8bfd4ddd1af8d89
9bb8c8c8b89d96b6d1dddfe1e6e1cba67f697d9fb6c6d6ddd8d6d6d1bfa69fafada6a6b4
c8dde6e4cfbbbfc8c8b6aba8aba69d9da8a89d99a8adafbfcbcfd1d6c69f79768fa8b4c2
cdcfc6a8846d7b99abafa69f9d8672747fa8cbcfcdc6c4c6cdd4d8dbd4bd998d9b9b998d
8692b4d6e4ebe6d8bf997d8dadb69d8b828da6a8a6b4cdddd1b8adc4dfe1ddd1c4b8bbc8
d8dbdde8ddbd8f747fabd1d6d1d6ddddcfbfc4cbbd99705b5b647fa2ab9f99a8b2af9d89
8699adb2a69d9fadbfcbcbc8c6bbb4bfd4cfbfb2abafb4b6bbc6d4cfad8476849fb8cfdd
d1b2adada89d96adcfcdc6c6c8cbd40000cda88f869bc8ddd8d1bda48d92a8b2a8a6a2a2
b6d6e8e6ddcfcbcbbbabadb6bfc6c8bd9f7d645752648bb8d1d6cbb69b7f7486afcbd1d8
d8d6d1d1d6d8d1b2866b667996adb8c2cbc8cbcdcfd1d6d4bfa49296a2afc2c8bfb4bfcd
d6dbddddddddd8d6d4d1cfcdcfd1d4d8dde1e1d8c8ab8f8d8f89848496adafbfcfc6a696
a6abafad9f8b79767d8fa4ab9d8d867f7f7f7f766662728b969fb6bfbbad89728494a4b6
c6cbcbd4dbcfaf96867d7670707272747476798496a8bbc4cbd4d8d6c8bba4847b92b8d4
d1cdd1c6b8b6c2d1dddfd8bfa29fb2c2c2ad9999a8a8947d767f96bdd8e1e4e1e1d4b499
7f696b666076a8d1dbd4c8b8a8abbdcfc6a88b7d798db2bdc2c8d1d4cfc4afa6a6a29b9d
abb4c4cdbf9b7f8ba6bfcdcfc2a899b2cfdfe4e4e4dbb2896d627089a8c8dfe6e1dbd6c6
a48d96b2b6a89fabc6dbe4e1d1c2c8d1cdbdb8b8bbbbab99928b868999a2a8b8c6cfd6dd
d1ad7f768dabb6bbc4cdc8b48d696d8b9faba69f997d69707b9bb8c4cbcdcbcbcdd4d8dd
d4bb928b998f8d898996bbdde6ebe6d4b68b707d9baba29b94929dafbbc2d1d6c8afabc2
dbe1dbc8ad9d9db2d4e1e4ebddb886707fadd4d6d1d8dbd8cbbfc4bfa88d70605b6486b2
bdb2adc2c6b699898499b6b8a8947f8696a6aba8a49ba2bbdbd8bfa49ba2a8afadb2b6b2
997d7d96adbfd6dfd4bdb4ab9d9ba2bddbd6cfcdcdcfd80000cfa89492a4c2d1d1bf9d7d
768dabbbbbb8ad9da4c6dfe1ddd8d6d1bfa8a6afb6afa4968b7d6d6266768b9fb4bbaf96
82747484a6c6d1cbcbcfcfcfd1d4c49f7b6b6672899fa8adb4b6bdc6cdd4d8d6bb9b8fa6
bdc8cdcfbfb8d4dddfdfdfe1dfddd6d4d6d6d4cfcdd1d6d8dde1e1d6c6ab96a2ababa486
7f94a6bdcdc6a48d96a2b4bdbdaf96828299afb2947d7d7b7976766d6060768994a4b8bf
b4a486768294a8bbcbcdcfd6d6cdbdb4a8947f7474797d7d7b7674768bb2d1ddddd8d8d4
c8b69d86869fc4d4d1d1dbd4c6bbc2d4e4ebe4bd96a2b8c8bf99797b9499897d828b9bc2
dbe4e4e4dfcdaf8b726d7064596d9bc4d6d6cfbdabb2c6d6d1b6927f7986a2adbdd1e1e6
e4d4b6a4a8b6b8bbbbafb6c2b4967d89a6bdc8cfcdbfafb2cbdfe1e1d6b8897272707b92
b4d4e4e8e4ddd4bd927f92afb8a8949bbdd8dfdfd6cdd4dbd4c8d1d8d4c8b69f8679747b
8694a4b6c6d1d6dbd4b89482899fb4bdc6cfcdb88d605d74849294969989797679869db4
c8cfcdcbcfd4d4d4c8ad9692948d92928d9bbbdbe4ebe8d6af82697089a4b2b4b4ada6b6
bbb2bfcbc4b2b2c8dfe1d8c2a6a4a6b2cfdfe6e8dbb6847284add6d6d4d8d8d1cbcfcdbb
a28d7d6d5d648bb6bfb2b4cdcdb28d7f8499afad9b897f7b7b7d8486848699bbd6dbc6ab
9da8b4b4a2928b827b76829fb6c8dbdfdbcbb69f99a4b6cbdbd8d4d1cfd4db0000c8a49b
9fa4a8afab947b6d7994abbbc4c6b89d96abcfe6e8e4e1d8c2a296999689828484766d70
84999f968f94927f79767d8b9fb6c4bfbfc6c8cbcdc8b492746b666b7b99ababa29da2ad
bbc2c8c6a88986a2c6d6d4c6afb2dde8e4e4dfdfddd6d1d1d4d6d6d1cdcfd4d6dbdfdfd6
c8ad99abb6b4ab867b99b6cbcfc8ab9294abbfcbd1c4a88d8699a89b7b6d74706b6b6d66
5d62748da4b8c8c6b49d89828999abbbc8cfcfd1cfc8c6c8c8bb9b7f798996a29b847470
82b2d6e1e1dfdbd8cfb699898ba6c6d4d4d6e1ddd1c8c8d6e4ebe4bf99a8bfcfc69d7264
76827f868b8f9dbfdbe6e6e6dfd4c496767f826d525b7fadcbd1cbb8adb4c6d4d4c2a489
7b7d8b9dbbd8e4e8e8dbb8a4abc4d1d4cfbdbdc8c6b49d96a6b8c2cbd1cdbbabbbd6dddf
c69676727b7f8ba6cbdbe4e6e4dfd4b88f7f8fa8b4a8928dadcfd8dfddd8dbd8d6d6dfe6
e1cfbba282706d767d899db6c8d1d4d1c8b8a2897b849dbfd6ddd6b68257505d697b8d9f
a89b89827d8496b2c6cdcbcdd4d6cdbfa694969692949d9d929bb8d6e1e8e6d6a87d6d70
849db2b6b6b4afb6ad9ba8bbbdb2b6cfe6e1cdb8afafb4bbcbd8e1e4d8b482768bb2d6d8
d6dbd6cfcfddddc8ab9b8f7d69698bafb2a4a4bbbba48984848b92928b8b9696897b7474
79829dc2d6d8cbb8adb8c8c4a4827670767f8696afcddfdfd4c2a28f99b4c8cfd4d6d4cf
cfd6df0000bb9b9ba4a28f7f766d6d72849bafbfcbcbb89d929dc6edf1ebe8ddbd998b86
7f7f949d927d7084a8bbbbad9d948674768299abb8b8b8c2c8c8c8c6c8c4ad8b72696972
86a2afab9d969496a4a6adaf947f8296bbd1cbb29ba8d6e8ebebe1dbd6cdc6c6cfd1d4d1
cdcfd4d4d4d6d6cdbd9f92afbdb4a2868babc6d1cfc6ad948fabc2cfd4c2a68d848f947d
747b827664595b595b697da4c6d4d8cfbba6a4a6a6afbbc2c8cfd4d1cdc8c8cbd6d1b489
798fabc2bd9b7f7b94bbd6e1e4dfdddbd4bb9b8989a4c6d8d8dde8e6dfd6cfd6e4e8dbb6
94a4b8c6c29d74666d7b848f8f8f96adcfe6e8e4e1dfcfa482929d8257576482a4afada8
adafb6c2c2bfad8d7b76798db4d4dde6e8ddbda6abb8cbd6d4c6c8d6dbd4c4b4abadb8c6
d4d1b89b9fbbc8c8b2928484868b92abcddbe1e1e1e1d4b28d7b8699aba8968fa2c2d4df
dfddddd4d1dbdfe4e6d8bf9d7b6d7074747d94afc6cdc6bbada69d84727286bde1e6ddbf
8959505b64748fadb4a28b848b99a8bbc2bfbdc6cfcfbfa8948d92928b929f9f8f94abcb
dfe8e6d6a486898b8f969f9d9699adbbb4a2a6afada4b2d1e6d6b8a8b6bbc2cbcbd4dbdd
d6b484768bb2d1dbd8d8d8d4d6e4e1cfb4a4998d7f7f8f9d9b96999b9d948f9994898b8f
949dadafa28d7b797d82a4cdddd8cbc2bdc8d6d4b48f7d79828b9292a8cbdddbcbb69284
9bbfd1cfc8c8cbc8cfdbe400009f8b8f9f9d7f6964667286a2b4c4cdd1cfbb9d99abcfef
efe8e6dbb4898684848fb2b6a896869dc2cbc6c2bfb494747b9fbfcdd6cfc6cdd4d1cbbf
bfbfa48670696b829fb2b6aba2a6a29696999d9b8b848d9db6bfaf9d94a4c6e1edede4d8
cfc2ababc4cdd4cfc8cfdbddd1cbc4a892828badbbb2a296a4bdcbcfcfc2a68d8fa8bdc6
cbb89d8d94abaf9b8f949d9272544d5460728fbfdbdbd8cdbdb8c4cdc4c6c6c4c6cdd4d4
cfcdcdc8d1d4b88b7692b6d1cdad8f96b4cbd8e1e1e1ddd8d1bd9d8686a2c2d1d6dfe8e8
e6e1d6d6dde1d6ad899bafbbb6997b727989969b948f8f9bbbd8e6e4e4e1c89f8694a48b
64605b60707984949f999294929d9b7d706b6b7da4c8d8e6ebe4cbab9ba4b6c6cfc6cbdb
e4e1d6c6b2a8adbdd1d1b8928da2a69f999b9b99969699a4bdd6dfdfe1e1cfab8b76747f
92968f8f9bb4cddde1e4e1dbd6dbd8dde1d8bb927d7474706b7084a6c4cbc4b6a69f9d8d
7f797dafdbe8e6d1a4695b6970768babb8a8999da2adb6bbbdb6abafb6b8b2aba49f968d
8484949b949296b2dbebebdbb2a2aba8a2928682797da4c2c8bdbbb6ada2b2d1ddc4a29f
bdcfd4d4cdc8cbcfcfb486727b9dc2cfd1d8dfd8d4e4e1d4bbad9f999fa6aba69fa6a896
8b8da2bbb29b96a2abafb8b8ab9484828486a8cfddd4c8c2c2cfdbdbc8ad998d89898d96
adcbddddcfbb927f99c2dbd4bfb8bdc4cfdde40000948d969d8f7666646b82a6c6d4d6d6
d4cdb299a6bfd8ebebe8e6dbad7d7b7b8299bdc4b8ab9fadc4c8c4c6cfc4a28692bfdbdb
dfdbd6dbddd4c4b6b2a88b7266667494b6bdbbafa8b4b4a69b9f9f928d92a2b2bfb69d99
9fadbfddedebe4d8cbaf8d92bbc8c8bdb2cbe6e6cfbda8826d697da6b4aba6adc2cfcdcd
cdbb9d92a8b6bbb8bdab9292b4cfd1c2aba4a8a284605257607299c6ddd8cfc2bbc6d8db
cdc8c6c6cbcfd8ddd4d1d1cbcdc8af7f7096c4dbd4b89ba8c8d4dbe1e4e4ddd6cfbd9f89
8da8c6cbcfdbe6e8ebe8ddd6d6d6c8a27f8ba2aba696867d7f99b2b8ab968b94b6d6e4eb
e8d8b28b7b8694866d6b5d504d54667b847462626069695b5962708299bbdbebede6d4ad
898d99afc4c6cbdbe6e6dfd1b8a29dafc6cbb694868b84828b9da6adada8a4a2adc6d6dd
ddd4bda28d766d767d7f86929ba4b8d6e4e6e8e4e1ddd1cfd6c8a6867f7f7d7466697fa4
c6d4cfc6c2c2bbad9d8b829fcde8e8d8b6867d8b92929bb2c2bfbdc6bdb8bbbbb6ad9f99
9fa8adafb2b2aba496828da4ab9d8d9dd1e6e1d1bdb8b8b4a68b706d6d769bbfcfcfcfc6
b2a2abc2c8ab8d92b8d8e1d6c8bdbbbfc2ad867070869fabb8d1dddbd6dfdfd1b8a69999
adc2c8c4bfbfb89d8992bbd6cdab96a2b6bdb8b2a48f86868686a8cfd8cfc6c6c4cdd6d8
d1c4b29d84767f9bb4c6dbe1dbc29b899dc6dfdbc4b8bfc8d4dfd80000a6abab9b7f6b64
66769bc2d8e4e1d8cfbfa292adc8d4dfe1e4dfcfa4766d707b99c4cdc2b6a8a6adb4b4b8
c8bfa899abcfe4e1e4dfdddfd8c8b4adad9f7b64606984abc4c4bdada4adb2ada8afafa2
a4afbdc2c2af949badb8c8d8e6e6ddd4c299747b9faba29292c2e4e1c89f7d6b646274a2
afa29fafcbd4cfcdcbb2969dbfc2bbb6b4a294a6cbddd8c6ab9da29b866d605d606b8fbf
d8d4c6b6bbd1ddd8cdc6cdd4d4d8ddddcfbfb8bbbbaf9976769dcbdbd1bba2a4c2d8dfe1
e4e1ddd8cfb89b8f9db4c6cfcfd6e1e4e8e8dbd4d4cfb48f797b898d8b948d7d82a6cfd8
c6a48f9dc6e1ebefe8cd997979848f86746d5b4740424b595b4d444b4d4d49444b627f8f
9db6dbebede8dbad7d79829bb4c6cfddede8dfcfb2948da2b2b6ab9b9489727689929fb6
c8c6bfb2a8b6cdd8d4b6968b82797b8b827f8d9da29dabcfe6e8ede8e4dfcfcdcbaf9482
8286897f6d7086a6c6d4d4cdd1d8d4c8b6a2949fc2e1e1d8c6adabb2b6b6bbc4cfd6d8d8
c6bfbdab9d96948992a6adb2b4bdc8c8b29499b2b89f8692bbcdc6bbbbbdb8af99765d5d
697694b6cdd8dbc6a49296abb2998b96b4d8e1d8cdbdb4b6b2a2897479898f92a2c2d8df
dde1ddcfb496868fadc8d1d4d6d1c2a28da2cfe6dfbd9b9fbfc6ad9f99867d7f8b8da4c4
d4d1cfd1cdd1d4d4cdc4b294766b7694abbdd1e1dfcbab99abd1e4dbc4bbbdc8d8e1d100
00bbc2bb9f7b64647084b4cfd6e1e1d8c4ab9492abbdc4c8cfd1c8af896964697696c8d4
c8bda89486898992a6aba6a6b8d1e4e8e8e4dfd8c4adabb4b8a88269627096bdcfcdc2ab
9dadb8b4b4b4b4b2bdcbd1cdc2a88d99afbdc8d6ddddd6cbb27f6060727670697badd4d1
bb8d6b6666647099a69b99a8c6d1cfcfc8a68fa2c6c2bdbfbfb2a8bdd4dbcdb8998b9294
8f847970727d92b6cfcdbdb6c2d6ddd8cfc8d4e1dfdddbd1b6968b94968d7f7682a8cfd8
cdb89f99abcde1e4e4e1dfd6c8ad9294adbdc6d8dddddfdfe1ddd4d1d6cfad8979767670
768986798bbbe1e8d4ad96a8d1ebf1f1e1bd8f899ba6a48d746652404040424244403b44
4b49403d496b8d999db2d1e6ebe8d8ad796b768da2bdcfdfebe4d1b696848699a29b8d94
a8a482848b8992b4d4d8d6c2b2b4c6d1c89b726b6d7b8d9d9694a2a8a8a2abcde6ededeb
e8e4dbd6cfb69d897b7b7f7d727d94a4b8cdd6d1d4dbdbd1c6b6a2a2bbd1d4d4cfc6c4c4
c4c8cbcfd6dfe1d8c4bbb28d7f84867984a2adb6b4bbd6d6bba2a4b4ab8d767f96a8afb4
b2ada299866d60646d7489a8c6d6d8b88d7d7f99aba4a6b6c8dfe4ddd4c4afa49b968f7b
8499969499b4d8dfdde4ddcfb48d7d8ba8c2cfd6dddfcdab96afdbedebcda6a6bdc29f94
927d7689a6adb6c4d1d4dbddd8d8d6d1c6b4997f706b72849fbbd1dddfd4bbafbfd8ddcf
bbadb2c6dbe4cf0000c6cbc8af8b72727f92bbcbc8d6d6c8b29f969dadb6b8b8bbb8ad94
79646066748fbdd1cfc2a4826b6b6d707d92a2b2c4d1dbe6e8e6e4d8b49fb4bfc2b2997f
798ba8c4d1d1c4aba2bfcbbfb8b4b6bbc8d6ddd6c8a8868fadbfc8d6dbd6d1c6a8765750
59605d5d6686a8b6ad9684848982798d9b9999abc4cfcfcfc29b8b9fbdbfbfc8cbc6c2cb
d4d4c8b29286929ba29d948b8f9b9fb2c4c6c6c8cfd6d8d6d1cfdbe8e6dfcfbb947b7d86
867d76768fb8d1d4c8b8a6999bbbddebe6e6ddcbb69b8d9fbbc6cbdde6e8e6e1dbd1cdcd
cfcdb294827b6d606472767999cdebebdbb89dafd4edf4f1d8ab94a4bdbfb6997b705b49
423d3d4247423d3d424037374972969996a6c6dfe8e1cfad846d748696afcbdddfcda889
7f8694a2a6927486a8b4a29b948b92adcfdfdfcfbfbdc6cfc6996b5d647f99a8a8a8abab
a8a4abc8dfebedebebe6dddddfd4bd9b7d72727276869296a2bbd1d6d8dbdbd1cdc2a29b
afc6cbcbcbc6c6c6c6cdd1d4d6dfe6dbbfab9b7d797d7b72768d9d9f969dc4cfbda89d9d
8f796b707b9bb6bfb29482898d847472767986a2bfcfcda87b727992abb2bdcdd8e6e8df
d6c2a692898d8b7b89a4a69b8fa2cfdfdde4e1d4b28f8494a4b6c6d4dde4d8b69fb4dde6
e6cda499a29f8d929b89829dc6cdcfcfd1d4dde4e1dfd8cfc4a6867f7d797486a2c2dbdd
d6cfc2bfc2c6cbc4b4a8b4cddbd8c40000c8cfcfbfa28b8692a8bdbfc4d6cbafa49fa6b2
bfc6c4b8ada6a29f8f7669707b86a6c6d4c4a27f6d6d6b666b7b99b8cbcfcfd4e1e6e4db
bdabbdc8c2afa49fa8b6bfc4cbcdbda29fc2cfc6bbbbc2c8d1dde4ddcfaf8689adcbcfd8
ddd6cfc2a87d594d59626b6d6b6b7996a6a6a2adb4ab92898d9699abc2cfd4d4c2997f89
a6b8c4cbcdcfd4dbdbd6cdbd9f929dabb6b4a8a2a4a8a6afbdc4cfd4d4d6d4d1d1d4dfe8
e8dfc49b7f797f8d8d827b7fa2c4cdcdc8c2bba492afd8ebe6e6ddc8af9692adcbcfcbd8
e4ebede6ddd4c8c2c2c2b49d8d7f705d59606676a2cfe6e6d6b69fb4d6e8edebd1ab9fb4
c4bfbdab99927d5d3d30323d44403b37302e2e2e3d64898f8d9bbddde6dfcbab84727686
96abc4d4d4ad7d6b7992a2abaf926b7d99a8a8a2968f96abcbdfdbcbbdbfc6cdcbad7d5b
6484a2b4b6afa8a6a8abafc4d8e4ebedebe1d1d8e8e1cbafa28f7f79848684847f94b8d1
d8d6d1cfd6cba49fb8cfd6d1c6b4b2b4bdc6cfd1d4e1e8d8b696867d82898979798b968d
7d86afc8c2a8948d8974646476a6c6c8b88f748ba29d8679797f89a6c2cdbf9f7d747d94
a4a8b8cdd6ddddd8cbaf968f8d8b898994abb6a48f9dc4d6d6dde4d8bb9f999fa4a6b2c6
d6dfd8bfa4b4d6ddddc2948486898f9faba292a8d1d6dbd6d4d6dddfe1dbcfc2bdad9b9d
a296828da4c2dbd8c6bbb4b6b2a6adb2adb4c4d4dbd4bb0000cbd4d6c8ad9996abc6cbc6
c8d6c6a69d9fb2c2cfd6d4c6af9fa4b6b2967f828b8b99bbd4c8a88b82796d66666d86a8
bdc6bfbdcfdbd6d6c8bdbbc6bda499adc8cdc6c6cfcdb29299b4c8c8bfbdc6cfd6dfe6df
d1af827da2cbd4dbdddbcdbda8896254667486928b726d8fabafabbdc6bfa2827b898d9d
bdd6dbd6c69f7b748fafc6cdcdd4dfe4e1ddd8cdb6a6abbdcdcdbfafadada2a6b8c8d1d1
cfd1cfcdd1d8dde1e1d8bb8d7d7b7d8f8f867f86a6c6c8cbcdcdc6a88fadd8ebe6e4d8cb
bba69dadcbd4d1d8e1e8ebe8e4d6bdb6bdbdbdb4a89b84665457647da4c6d8d4bfa499a8
c2d6e1e1d1b6a8b4bdbbbdb6ada4926d3b2224323d3b3934241e242734506d7b8499bddb
e6dfcda47b7276849bb6cbd4cfa47262748d9b9f9b846d7d8d969f99928f9bb2cddbcdb8
b4bfc8cdd1bf92626682a2bdc4b8aba8afb6b6bdcddfe8ebe4d1bdcbe4dfcbbdbdb29986
8b8b827669729bcbddd6d1d1d6cbafabc6dfe8e4d1ab9b9d9fa6b6c6d4e1e4d1a88d8b8b
94a2ab9996a2a2998b96bbd4cfb89b94967d626079abc8c8b894798ba6a8927d7b7f89a4
c4cdb69f8d7b8294a29fa4b2bdc2c8cdc2a8949494969fa6a4abbba496a6b8c2c2cbdde1
d1b8aba6a49b96a8c2d4d1bba2a8c8cdc8ab898fa2abadb2b8b29ba8d1dbdfdddbdbdddf
ddcfbbafb4bfc4c2bfad8d8b99b2c8c4b6afa4a6a89d9b9fabbdc6cbd8d1bb0000c6d4d8
cdb6a2a4bdd6d6cdcfd1bfa29ba2b6c8d6ddd8cdbbadb6cbcbb29d969fa4a6c2d6c8b29b
92827266696b7d96a8b8bdbbbdbdbfc8c6bbb4bbb2948dafcfcfc8cbd4cfaf8f92a8bdc4
bfb6b6c4d6dfdfd6c69d6d6b8bb8d1d1cdcdbba89b8b6d698ba4afada2867f99a8adafc4
cfc6a67d6d797f8fb4d8ddd8c8a6827284a2bdcbcdd8e4e8e4e1e1ddcbb4b4cbd6d6d1c4
bbb29b94a6c2c8c4c4cbcbc8cdd4dbdfdbcfb89d8d828292928682869dbbc8cfcfcfcbaf
96b6dbebe6dbcfc4bfb4a4a2b4cbd6dbe1e6e1e1e1cfafb4bdb8c6cbc8bba2764d4d627b
92adc2bfaf9d94929badc4cfcbb6a6a4abb2b6b4ab9f99763d202030393b393020192022
3042596d7b94bfdde8e6d1a87d727689a6c8d8ddcf9f746b7686897f7676848f94969684
79869bbbd4d4b8a2abc2cbcdd4c8a2746d7b99bdc8c4b6b2b6bdb8b4bfd8e4e4d4bbadc2
dbd8cdc4c4bba68f8b8d867b6b7092bbd6dbd6d4d6cbb2b2cde8f1efddbbafa899929fbb
d6e4e4d4ab969b9fa6b4c4b8afafadada8adcddfddcdafa29d7d62627ba6c2c6bda2848b
adbba48d82868d9db8cbb2a29d8b8692a49d96999fabbbcdcdb49694969da8b2aba6af9d
99abadaba4abd1e6ddc4ada4968b8b9db6cdcdbba6a6b6b6a89492afc8cdc6bdbfc2a8ab
cddbe1dddbdbdfe1dfc4abadb8d1ddd1cbb28b8696adbdbfbdbbada6adada69fadbfc4c6
d1c8b20000bdcfd8d1bda8a6bbd4d4cbcbcdbba29d9ba8bfd1d8d1c4c2bfc4d4cfbdada8
b4bfb8c6cfc2b4a89f8d796b70869fadb4c4d1cdbbafb2b6afa4a4a49d8d8dabc8cfcfd4
d6cdb4968f9db6c4b8a6a4bbd4dbcdb49d7f60627694b4b4b2b8afa69f947f89b6cdcdbf
af92899da6adb6c8cfc4a27f79868996b2cdd8d6c6a686767d92b4cdd4dbe4e8e6e4e6df
c8b6bdd1dbd8dbcfbfab968f9bafb2b2bbc2c8c8c8cfd8dbd8d1c8bfad94868f928d8b94
9dafcdd4cdc8c8b29fc6e4ebe1d1c4bdbfb4a2969fb8cdd6dfe1dbd6cfbda4adb8b6c6d4
d4c8b282493d4d62728da8b6bbab9992949fb6c6c2afa69b9dabafaba29f9d7d40242937
393d3b2e1e1922242e3947626d84b8ddebe8d6af82748299afcfddddc8997b898b826b5b
5b7699a49f927d645d7294bdd1c49b7d8fb6cbcbcdc6b296847b89adc4c6bdbbc2c4b8a8
b2cbd4cdbba6a2b4cbd1cfcbc6b6a89b928f8d897d8294a4c6d8d8dbd8cdbbbbcfe8f4f1
ddc4c4c2ad9999b4d4e4e4d6b6a4a6afb6c4cfc8bbb2bbbfb4a8c2dbdfd8c2a892746970
7da2bdc6bfab999dbdcbb89d949b999db4c4ada4a2928994aba4a8ada4a4b6cfd6bb9286
8692a2b2b4ada29294a2a2998f99bdd8d6bba89b847f92b4c6d6d8cfbdafb2aba299a6c2
cfc8bfbbc6d1bfb6c4d4d8d1cdd4dfe6e4c6a8b2c8dde1dbcba8868ba4bbcbcfd4cfbba8
b2c4bbabb2b8b8b2bbb4ad0000b6c6d6cfb8a89fa6bfcbc6bfc6bfab968b8b99b2bfbdb6
bbbfc2cfcbbfb6b4c2cfcbcdc8bdb6b2a8997f6d7dadc8cbcfd6dddbcdc2b8a894898d89
8b8d899bb4c6d1d8d4c4ad99949fb8c6b69fa2c2d6d4bd9d89796970767f96a4afbbbbb6
af9f8694c8dbd8cdc29d8999a6b6bfc8c8b8968494a8abafb8c2bfbfb49b867b7f94bdd8
dbdbdfe1e4e4e4d8c2b6c2d6dddddbcbb4a2a2abb4b8adabb2b8c8cdc6cbcfcfd4d8dbd8
c8a4898b8f929dabadadc8cfc8bfb4a29fcbe6ebe1cfbfb8b6a68f89929ba8c4d1d8d6cb
af8f8696a8afc8d4d4cbb47f402b34496286a6b6c4bdadabadb8c8cdc2b2aba6afc2c2b8
aba69f7b422e343d3b3b39291b17202229303b505b76b2dbebe6d8b88f8299b2bdcdd6d4
bb92869b9679524244648b968f7659444457729db6a47d667fadbfc2c8c6c4bbab8b7f9b
b4bfc2c4cdcbb8a49fafb8b6ab9f969badc6d1d1c8b2a8ab9d928b89828b9da2b6c8d1d6
d4cdc6c4d1e4e8dfcbbbbfc4b29d94abcde1dfcfb4afbdbdc4d1dbcdb2a4b2b4a8a2b2c8
d8d8cfaf8672767f7f94afbdb4abb2c6cfcfc4ada6a69da8bdc4ab9b968b8494afb8c6cb
bba8b2cdc6a47f797b8ba4b8bfb2968d8f92928f99a8b6c2c2aba89d7d7d99bfd1dde6e4
cfb4a8adb4b2b4c8cbb8afb8cdcfc2b6bdcdd1c6bfcfdfe4e1c4afbdd4e1e1d8bd9b8f9f
b6c6cfd6dbd8bdabb4c2b8abafa89b8d929fb40000bdcbd6cdbdb29f96adc2c2bbc4c8b6
927d74748492999fa4afbdc2c4c6c8c4cbd8d8d6c8b6b4b2a6967b697db4cfd1dddfdfdf
dbd4c6af94827f7f827f79829bb2cbd4cfbfa69696a4b6bdb4abb2c6d1d4c8b8af9d827f
7f8696a6b6bdb8b2a68d7682b2cfd8d6cfb2949bb2c4c8c6bda88989a6c4c6c4c4bda292
8f89898692a8cdddd8d8dbdddfdfdbd4c4b8bfcfdbdbd1bdadadb4c2cdcfbfa8a2adc4c6
b8b6b8bfd1dde1ddcda684868f9babb6ada6c2cdc6b4998fa2c6dfe6dbc6b6afa68b7479
7d7d82a2bdc8c8b896726d7b8fa4c6d6d4cdb67f39222940669dbfc4c8cbc8c4c2c6cdcd
c4b8b8b8c4d4d1cbbdad997447373b4039373024171219222427303d5272a6d4e6e1d6c4
a899afc8cdcdc8bb9d8484948b6b473432425b6969573d3234445d82968b766d84adb6b6
c8cdd4d4c69f7f8ba8bbc2cdd4cfb89b8f96a4b4b4a2928da2c4d4d4cbb4b2b8a4948982
7d8ba4a8abafb8b8bdbfbdc2cbd1cfc4afa2a8b2aba29dadcfe1d8bba8bbcfc6c4d1ddc6
9b7d868d96adb6c2cdd6d6c2997b7d84767b92a8a4adc8dbd8cdc8bbad9b96adc8cbaf99
8d828696b4cfd6d1c8afb4c4a4847b7f8b9bb4c4cbbb9f998f828696afbfc2bfbfb6b8af
94869bbfd6e1e8e8dbbda6b6c8c4bdc4c2b2afc4d1c6afa6b8cbd1c6bdcfdbd8d1bdb2c2
d6ddd1c2a89fabb2c2d1d8d6d1cfb8afb6b6afa49f9282767f99b40000cbd8dbd1cbc6ad
99a6b8bbb4bbbfaf8f7d7674747b848b8d9fb6b6bbcbd4d1d1dbddd6bda4a2a296897466
7092b6cfdde1e1e1dbd1c6b8a894848b8b7b727b8fa4bbcbcbbba69da4afb6bbbdbbbbbb
c4cdcfcfcdbb9b8b86898b94a2a69f92827266708fb2cfdbd1bba29fb6c8c6b8a8928292
b6cfc8c4c6c4a6867b828d969fb2cfddd8dbdddbddd8d1c8bfbbc2cbd4d1c2b2b2bdc2cb
d6dbc8a2869bb8bba69da4b6d4e1e1d8c6a4868b94a2b4b8a8a2bdcbc2ab929bb6c6d4d8
c8ab9ba2997d66727676768ba6b6b4a48974747b869fc4d6d8d4b87b3019244076b6d4d1
d1d1d6d4c6bdc4c6c2bfc8cbcdcdcdcbbd9f84664739393b302b272017121e2e30272939
597b9dcbdfdbd4c4b2a6bdd1d4cfbb9979727b8279604232323b444d544b372b324b799f
ab99827686a8aba6c2d1dddfd1ab84829bb2bfd4dbd4bb9b868999b2b29b8f96b2cdd8d6
cbb8b8bda4948b7f7b92b2ada49d9d9b9da2a4adb8c2c2bbab948f99a6aba8afc8d6c8ab
a4bfd1bdadb6c8b68d7072768db6bfbbb8cbd6cfb28b848976727d8f96b2d1dbd1cbcdcb
bfa89dabbbb8a89d9b999da2b2d4d8cbc4bbc8cba28694b2bdbbc4d1d8cfbda8927d869f
bbc8cbcdd1d4d1cbb89999bdd6e1e6ebe6cdafbdcdcbb6adadafbdcdd4c6ada8b8c2cbc2
b4c6cfc8c2bbb8bbc8c8bbadadbbc2bfcbdfe4d6c2b4a6abb6b6b4a89484767286a6b800
00d4e1e1d8d6cfb69ba2a8a49b9d998d827f827f797b82868996abb6c4cfd6d6d6dbe1d4
af8d8b928d897b6d6b799dc4d4dddfdfd8cfc2b6b2a6929f9f867f8da2abb8c6c6b6a8ad
bfcbcbc8c8c2b2a2a6b6c4cfd1c4a6969694867d7d7f7f766d6b6b748da6c8d6c2b2a8a8
b8c4bfa4897d869bbdcfc6c4c8c8b49682868d949ba4bdd1d6dddfdddfd8cbbfbbc2c8cb
c8bdabb2bfc8cdd1dbdbcfa8848fa4a69694a6c4dfe6dfd1bda48f969ba4b4bbb6b2bdbf
b6a89dafc8c6bfb6a88f8d9d967b66727d7d7b8294a2a2998b868b8d8fa2c4d4d4d1b676
2e1b2b4782bfd8d4d4d8dfdbc8b6b6bfc4c4cdd1cdc4bdbdaf866b57443d3d3b2b242422
1e1e304440302937597992b4cbcdcbb6a6abc2d4d6c8a27664646d6d6252474449505250
524d372e34599bc4c4a6826b708b8986a6cde1ddcb9b6d6d7f94add6e1d8c8ab8b797f8f
948b94afcdd8dfe1d8c4bbb49b96948b8da8c2b29f948d8d86848fa2b8cbcdc4af948b96
a8b4b4adb2bdbba8abbfc6a88d8fa8a88f7b7b7d8fb6bfab99afc8cbb29294a294847d84
92b6d4d6cdcbd4d8d6cbc2bdb29b8f99a8afafabafbfc4bbbbcbdbd6b89dafd8ddd1cfdb
ddd6cdb29484899fb8c4cfd4d8dddbd6c49f96b6cddde4ebe8cfb2b4bfbba6949299abc4
cdc4bbb6b8b6b6ab99adc2c4c6c8cbbfb2a8afbbcbd1cbc4cfe4e1cba6948f9dabb6bbb2
9982726d7d9fb80000dfebe8e1d8c8af99948d8279797469667482847b7b7f86898d9db4
cbd6d6d6d8dfe1cda88684929b968679707992b4c6d4dbdfdbd1c2ada89f8d9fa69994a8
bbb8bfc4c2b2adbfd8dfdbd4cdc4ad928fa4b8c6cbbfaba6abafa68b72707270696d707b
94b2cfd1b6a8adb6c2c4b89479728294b6cfcdcbcbcbb4998b898b8d949dafc2cbd8dddd
e4ddcdc4c4c8c8b8a6999db4c6cdd1d8dfdfd6bb9f9d9689828dafd6e6e6d6c2b4a4999f
a2a6b4bbbbc2c8bbaba8abb4bbb2a69d9d96999d8f7466747d8282828d999d9d9fa4a299
949fbdcdcfcdb479372b3b5b92c2d6d6d6dbddd8c8b6b6bfc4c2c4cbc8bdb8b4a27d6959
4440423d2e24242b292e42504d392b344d6b849badb6b2a299abbfcfd4bd926b5d5b5b59
504d545b5d59544d4d493b343d64a6cfcba2765b5962626486c6e4d8bb744047546692cd
e4e1d6bb946d666b7282a6cbdddddfe6e6d6bfab94969d9db4cdcdad94867f7b72748dad
c6d1d1c4ad94929dafbdbfb29fa6a89fa6b4af8f7d8badbba68d89868d9fa8948299b6bf
ad9499b2b2a28d8d9dc2d6d1d1d4d8dddfddd6d1c4a68f9bafadadafb6b6a89fb2d1e1d8
bda8b4d4e1dbcfd1cfcdcbb8a28f828fa6b8cfdbdddfdbd1b8968b9fb6cfe1e6dfc29d99
9d9d94897f7b8dafc6cbcbbfad9b92867f99b8cdd4d8d8c8a299b6cbd6d1c8c2cfddd1ad
897f7f8b9db2bdb8a2826d646b86a60000e1edebe1d6c2a68f84796b646d6959576b8282
766d74828b8d9bbbcfd4d4d4d8e1dfc8a2898b9fad9f8d7f727486a4b6c2cddbdbd4bd9f
948f8ba2adadafbfc8c2c2c2bfafadc6e1e1d8d1d1c8b49f8d9bb6c4c8c4bdb8b8c2bf9b
726d706d6466666d7fa4cbd1b8a6a6afbdbfab8b74727d94b4c8cbc8cbc6a88f8b89898f
9da8bbbfb8bfcdd6dfddd4cfcdc8bb9d8484a4b8c6cfd6dddfdbcbbbb6b69b747084b6db
e4dfcfb4aba6a6ada8abb6b6b8bfc4b6a8abafafa49b9ba2a6a6a8a48f74666b767f7f7f
8b99a4b2bfc6bba89b9fb2c6d1cfb47b42395276a6c4d4d8d8dbddd8c8b6b4c2c4b4abad
b2afb8b6a692826b4d403d3d3429293232394749443430394b60798f9fa69f9494a6bdcb
c6b294765d4d47444252646b6457504d4d49443d4972abcfcb9f6d59605d5b5d7bb4d6d4
bb74322e3b6299cde4e4dbc49b7266626984b4d6e1e1dfe6eddfc8ad999ba2adcfdfcfa2
847b706b6979a4c6d4d6cdc6bbada2a6b6c2c2b4a299948d9b9f9279799dc8d4c2a4948b
898f998d8294afc6c4b2adbbbdaf9b949fbbcdcdd8dfdfdfe4e4dbd8d4bd9da4b6a8a8b6
cbc6a88f9fbfd4d1c4b2a8b4cfd1bbb2b2bdc6c2b6a4847f96b4d4dddbd8cdb69b868286
94b4d1d6cba682797b7f898b82798db4d1d8d8c6a4867470728bafcddde4dfcb9d96bdcf
cbbfbdbfcdcfb8947b7679869db2bfbba27f6964697d9d0000dfe8e6ddd4c6ad8d766b6b
727972605d70847f726972848f94a6c8d1cbcdcfd8e1ddc4a28f94abb6a68f7d706b7992
9fa6afbfcbcbb89b8f99a2b2bbbdbfbfc4c6c6c4bba6a4c4e1dfd1cdcfc4ad9d8992abc2
d1d6d4cfcbcdc8a4796b6b6d666260647089adbfad968d96a4a4968274748badc4c8c6c2
c4b68f7f8484868da2b6cbc8ad9fa6b8c8cfd1d4cfc2a889798bb4bfc4cfdbdfd8c8aba6
bdbf9b6b6276a8d1d6cfbda8a4abb4b8b2b6c4bfb8bdbdb6adadb2ad9b929ba6a8afb6b6
9d7b626470797b7f8da4b8c4d1d6cbbdb4b4b6bfcbcbb6824d496b92adbdcddbdfe1e1dd
cfbfb6c2bfab96898996b2bfbdb2a28662473d3d372e2932373b403d37303740505d6d84
9294969696a8c4cdbda8947d5d473b394059727266574b4d504b49495b82adcbc89f746b
828b827b8999afc6c89650375086b8d6e1e1d8bf9d82746d728bb4d8e8e8e6e8e6d1bbb2
adadb2bfdbe6d4ab86797274768fc6dbddddd4cfcbc8b8afb4b8b4b2b4a6969fada48676
82add6dfd4bb9d8b8d9da8a49496b8d6d8cfc4bdb4afa6999296a6bdd6e1dfdfe4e6dddb
d6c4a29fada6a6bbd4cfb49b99a2afbbc6bfada8bdc2ab999fb6bfbdbbb2928fa8c2dbdb
cfc6a88b8284848292abbfc2ab8f7b7272829ba89f929dbdd4d8d6c8a67d6b696d82a4c6
dde4ddc2948db2c4c4bdc6cbd1c8a88b7b74798da8b6bbaf927464646d86a80000dbe1e4
ddd8d1bda28b767b8f8d7d6b6676868b847f89929499afcbc8bfc4cbd6dbd6bd9f969db2
b8a88f7666626b7f8d928f8d9b9f948d99adbbbfc4c8c2b2adbdc4c2ab8d99c2dbdbcbc8
cbb8947d767f9bbfdbe1ddddd8d6d4b6896b6d746d64697f929babb6a88f84929b998b7d
747d9dc6d6d1c8b6ab9d7d747d7d7d829bbfd8d6b8a2969db4c2c8cfc8b8a284798db6c4
cbd4d8d6c4a48d9bb4af926d5b6489b2bbb2abadafb8bfbfbdc6d4cfc6c4c8c4b6a8a49f
928b949fa4b2bfbfa27f6b6d768692949bb2cbcdcdcfcfd1d1cfc8c2bdbda67b54527499
a8adbbd8e4e6e4dfdbcdbdbfbdab8d72697fb4cdcbc4b69f7957403734302e323232373b
373239475760667b89868d8b8da4c8d6c8af967b594d443b40576d6b6252494749494449
607f9bb2af96828babbdb6ababa4a4b4c4a66b5072abcbdbdfdfd1b49d94827d8292afd4
ebede8dfcbb2a8b4c2c2c2cddde4d8bf9982868b8da4d4ddd8dddbd6cfd4cbbdb4aba2a8
c4bfb8c4cdb8928492bbdbdfdbcda68d92adbbb6a8a4bfd8d8cdbba6999d9f9279646d96
cbdfdbd8dfe6dfd8d4c6a492949ba6bbcdcdbfab998f92a6c2cfcdc8cdcbb69b9ba8abb4
b6af9dabc6d4ddddd1bd92707b898b8ba4bdc8b89d867b767b96b8c4b8a6a2b6cbcfd1c4
a88b7b726b7d9dbdcfd4c6a886849fbbcdd4dbddddcfa88d827b829bbbc4b4967f706d74
7b8da80000dbe1e6e4dfdbcbbbb29fa4b6a88d726b768da6b2b2afb2aba8b4c4c2b8bfc8
cdcbc2ab999fafbbb8a48972625b62727f8b867979726b769dc4d4cfcdcfc4b2a4adbfbf
9f7f8db4c6cbc2bfc2a8826b6b7fa4cddfdfdbdfe1dfd8bd926d76827d7484a8c2c4c4c2
b6a4a2b2b8af997f7482a6d1dfd8cdb2998b79747b7f828ba6d1e4dfcbb8adafc4cdcfcb
bdb8b4997f86a4bbcbd6d6c6a68d8ba2b29f867262606d849494a2c2c8c8c2bdc6d6dddb
d1cdd1cfbda28f847d82898f99a8bbbb9f897d7f92abbdbbb4bdd4cfc6c8d6dfddd8d4c6
b29d7f6454576b849292a2c8dfe8e4dbd6cdc2c2c2b28f6b5d7dbdd8d1c8bdaf92694739
3b3d3937323032393734425d747974767f827d797d99c2dbd8c4a47b5b62644d424b6060
574b4742403b3b49627982827d7b8fadc8d4cfc8c6bfb8b4b29f827694bbcfd8d6cbb49f
9b9d8d92999babcde8ebe6d4af969dbbcdc8c4cfd8dfdbcdb29d9d9996abd1ddd8dbddd8
cfd6cfc6b8a696a2c6cfcbd1d4bf998f99bbd8ddddcfad9299b8c2c2bdb2b6c4cbbfad9f
92847b7260494d86cbe1d4d1dbe4e4dbd4c8a484828fa2b2c4cfc6ad948d99afcbdfe6e1
dbcfb89f9b9b9bafb6a89fb6d1d8dfe1dbbf8b697682868dadcdd6c49f8276747d9bbdc2
b6a69fadbbc2c6bbada89f89747999b2b4ab9b898289a2c4d8e1e6e4e1cfa89999969baf
cbcfaf8b7f7d8b949692940000dde1e8e6e4dfcdbbb8b8c4cfbf9d79727b9dc4cdcbc8cf
cfc6bdc2bdb4b8bbb6ada2999bb2c4cbbd9f826d626064707f99a49b947f697096c8e1dd
d4cfc6b8adabbbb89d7f8299abb2b2afab8f74727f9dbfd8ddd6d6e1e6dfcfab82707b8f
8f89a4c6d4d4cfcbbfb8bfcdcfc6ab84747fa4d1e1dfd4bda694867f7f8b96a2b8dbe8e1
cfbfbbc4d6dfdbcbb8bdc6ab867b92adc4d4d4c2a69b99abb4967f767069646b7984a2d1
d8cdb8afbfd6dfdbd4d1d1d4c8ad927d767b82868f9fb4bdb2a2928ba8c4d1d4cdcbcfcd
c6cbdde1dfddd1c2a47f64595b5d6269727b8fb6d6e4ddc8bfc2c2c4c6c2a2765d74abd4
d8cdc4bda47b5b504d5047373432343b3d42597f9fa6997f767f7f7d7d89abcfdfd6bd8f
64768466524952575049473d3737425b79928b725b6692bdd4dbd6cfcbcbcdc2a89d9996
abbdc8cdbd9f847d89928d969d969db6d6e1e4d6b69499bdc8c4b8c2cdd1d1d1c4b6af9d
929fbfd6dddddfd6cdd1cfc8bda699a6c6d1cdcdcbb4948f99b2cbd6ddd1ab94a2c2c8cb
c6b8a69fadb6b8b4a8866250443d5496d1ddcbc2cfe4e4dfd8cfaf8f848d99a6b8cdc4a4
8b89a2c2d8e8ede8d8c2a6969da49da6a89d9db6d1d4dbdfddc28d6670797d8dabc8d6cd
a67f72727d96afada6a8abb2afabafb2b8c6bfa282798fa8ab99898b8b8fa6c8dde8eded
dfc2a6a8b6bbbfc6d4d4b286828b9fadad9d860000d8e1e6e6e4ddcfb8adbdd1d6cba882
7486b4d4d1cfd4dde4d6c4bdab99968f92999b9ba6bfcfd1bd997d747070748296bbcbbd
b294747082afd8dbcfc6bdb6aba6afad997d7686969f9f9b8f7b707d9bbbcfd8dbd6d4e1
e4d6bb8f72707d929b99b2cdd6d6d1cdc4c4cfd8dbcdad84727b9dcbdddbd1c4b4a49992
929babb6c2d1ddd8c6b6b6c6dde1dbcdc2c4c4a27d7289abc8d8dbd1bda6a2b4b68f7b7d
7d7464647489afdbddc6aba6bbd4dfd8d4d1cfd8d8c49f827b8496a4ababb6c6c8bfa492
adcbd6dbd8cdbfc2c4c8d8dbdbddcdb6997459545b606269748294b2cdddd4b6adb4bbbf
c8c8ad86696d8bbdd8d1cfc4ab89746b645b4732394040474b59749dbbc6bd9479848d92
847b89b8dfdfcfa47684927d695449494b4740373744607b99afa67f5b6696c4d1d4cfcb
cbcfd6d1b8a8a2999fabb8bbab8f746b70747989948f96afd1e4e6d6b68d8dadb4b2afb8
bdb8bbcbcdc8c6b29f969dc2d8dbd6bfafc2cdc6b69f96a4b8c6c8c4bfa6868492a4b4c4
d6cfa492a8c8cfcfc8b49d99adc2c8c6b88d593930395d9fc4c4b2a6bfdde4ddd6d4c2ad
998b8f9bafcbbf9b8689a2c4dde8ede4cfad8d89a2afa2968f8f92a6b8c2c6cdcdb88d6d
70798494abbbc6c6a686797b8da4afa6abbbbfc4b4948fa8c6d4cbad8979869faba8a4a4
9b9fb6cde1ebede8d1afa4afc2cbd1d1d4cda8847d849db6bfb4920000d4dfe4e1dfddd1
bba8c2d6d6cdab847f99c2d8d8d6dbe6e6d8c4b4927066667fa2adb2b8c6d4d4bb947f82
847f869dbbd4d6c4b69f82707ba6cfd4cbc4bdb6a89fa4a6967d707992a29f8f84797684
abcbd8dfdfdbd6ddd8c4a886767d92a4adafb4bfcbcfcdc8c8cfdbe1ddcbab8b7b7d99c4
d6d4d1c6bbafa8a4a8b2bfc8cbc4c2bdb4adb2c6dbdfdbd4c8c4b68b747686b2d1dddfdd
c8a6a6bbb88f7d89867d6b697992b8dfdfc6a8a8bdd1dbdbdbd6d4ddddc6a2848696b2c6
c8bdb6bfcbc6a68da4c6d6dbd8c8afafb6bfcbc8cfdbcbb69b745b545d626b7b8fa2afbf
d6ddcfbbb4bbbfbfbdbdab8f74707fb4d8d4cfbfa289828276665044505b5d60627089ab
c4cdc89f7f86949b8f7f7fabdbddcfaf898994927d5d443d4444403b4b64798fa6b4ab86
626b9bbfc6c4b8b8c8cdd4d8cdb89f928b9bb6bdb49f8b796d6b72828b8d9dbfe4efe4c4
9d7d849d9fa2adbbbbadabc2cfd1d4c8bbab9db2cdd6cfad92a4b8b8a89992929ba8afaf
b49d767692adb6bbc6bf948babcdd6cbb8a8a6afc2cfcfc8b882472b293752798689929d
b6d1dfddd6cfc2bdb2968b92adc8bd9d94a4bbc8dbe6e6dfc49b7d86a2b2ab9689898b8b
8b92949b9f8f796b72798292a8afb2b6ada49d96a4bbc4c2c8d1c8c4af8d86a4c8cfcbb6
99848699adbdbbada4afc6d4e1edebdbc6b4a8adbbc8d4d6cfbf9d7d797d9bb8c4bfa200
00cdd6d8d1cfd6cfb8adc6d6cfc49d7d8ba6c2d4dddde1ebe6d6c6b8946959648bb2c2c8
cbcfd6d1bb928b968f868dafcfddd6c6b6a2897d94bfd8dbd4d4d6cfc2b4adab9b827279
96aba6927f7d7d84abcfdfdfdddddbd8c8b29d8b8492afc2c6c8bfb4afb6b8bdc8d4dde1
d6c4ab998f8b99bfd6d8d4c8bfbbb4b4b8c4cdd4d4c8b2a4abadb4c2cbcdcdcfcbbfa886
7d848fb6d4dfdfddc8a8a8b8b6948994928472707f99bfe4e4cfb6adb4bfcbd4d8d8dbdb
d4bd9f8f96abc8dbd6c6b2b2bdb4947d8fb4cdd6d6c6ada8a4a8b8c2cdd6cbbfad8d6b59
60647996b2c4cbd1ddddcdbfbfcbcfc4b6ab9f8d79768bbddfd6cbb49986868d897f726b
707b7f7f7f8ba2b6c6cdc6997982929f9b8b84a6d1d4cbaf8984969f8d6949424b4d4749
69868b99a4a89f846d7294adb6b6a29db4bfc8d4d4c2a694869bc2cfbda2998b8484868d
8d8999bde1ebddb68d798299a2abb8c6c8b4a6b8cbd1d4d4cfc2b2b8cbd6d8c4a89fafb6
a4998d847d7f868b94846d799fbfc4c8c6af8286b2d4d4b8a2a4b6c6cfd4d1c6a6663227
29374247475984a6b8c6dbddd6cdc2c4bfa89699b2c6c2adadc6d6d8e1e1e1dfc49b828b
a2b4bbad9d928b7d6d66606269666469767d7f899dabadb2c2cdc8b8b8c6d1d4d8d8c6b6
9d8686a4c4c8cdcdbfab9b9fb6c4bdada8b4c8d8e6efedd4bfbbb2adafc6d6ddd1b6947f
7b7d96b2bdbba60000c4cfcfc8c4c8c4b6b4cbd4cdbf9b828fa8bdc8d6dfe6ebe8d6c4bd
ad896979a6c6cfd1d4d6d8cbad8b8f9f998989add4dfd6cdbba2868bb4d6dfdfdddfe4e4
ddd1b8a694796d7b9bada69282828489add1e1dfdfdfddd4c4af9d948f9dbdd1d8ddcfb8
9f9da2a8b4bfc8cfc8bbaba6a49b9bb6d1dbd6cdcbc8c2bfc6cdd1d6dbd4bfadafafafaf
adabb2c4c6bb9f86848d96b8d4dddbd8c6a4a2afaf99949b9b8d7d7984a4cde6e4d8c8b6
a89fa8c4d4d4d8d8cdb6a8a8afc2d6dfdbc8afa2a6a28d767d9dbbc6c8c4b6a6928ba2bf
cfcfc8c4bfa87f62626984abc6cfcdcdd6d8c8b8c4d6d8c8af9b8f847b7f9dc6ddd8cbaf
96868b9ba6a69d8f8d949fa4a2a6b8c4cbc8b6866d7f92a49f8b7f9bc6cfc4a47f768ba2
96765950595d54526d8d949d9f9f9f999492949dabad9d8f9fabb6c6d4cbb49f94abcdd8
bd999292a4b2afad9d8484abd6e6ddc2a286869bafbdc6cdcfbda6b4cbd4d1d4d6d1c6c4
cbd4d6cdb8adbdc6b4a28d7b7074766d6b62627ba2b8bfcdcdaf8694c2d6c8a696abc4cf
d4d6d1bf99572727303d403b39578dafbfcbd6ddd8cfc4bfbdb2ababb6c6c6bdc2d6e1e1
e4e1e1e1c8a2868ba2bdcfcdbfab9482705d545254575d6d849b9b8d8f99a4b2cddfddd1
c8cdddddd6cdbfaf9686899db4bfcdd8ddd1bdb8c4c6b8afadafbdddebefe8cfbdbbbba8
a2bdd8e1d1ad8d827f7f899da8a89f0000bdcbcfcfc8bbb4b4bbc6cdcdc6ab8f8da8bbbf
c8d6e4e8e6d6c6c2bfa27b96c4d6d8d6d8dbd6bf997d8494948f8fabd1dddbd6c29f899b
cde4dfe4e1dfe8ebe8dbb8a28f6b627292aba894868992a4c6dde4e1e1dfd4c6bdb8afa4
999fc2dbe1e1d1b69f9da2a8adaba8a6adafadafb4ada6afc4d4d4d1cfcdc6c6cbcfd4d8
dfddcfbfbdb6ab9d9694a6c8cbb29282868f9dbdd4dbdbd4bd9b929b9f9b9da49f94847f
8fb2d1dfdfd8d1c2a4898db4cfd4d6d8cdb6b8c2c8d4dddfd8cdb69d9ba69f7f7086a8b2
bbc6c8ad8b7d94b8c8c4c4c8c4ad8970707999bfcfcbbbb6bfc4b8afc6dfdfcba88f847f
8296bdd4d6d6c8af94868da6bbbfb8b2adb2bdc4bdb6bfcdcfbb94746d7d96a8a282768b
b2c4b6927066798d8b7964626d726b5d6986999f9b99a4b8c2b6a49fadab998b969fabbd
c8cbbfb2b6cbdbd8bb998f9bbbd4cfc4a67f728fc4dfdfcfbd9b92a4bbc8cdcfcdbdabb4
cbd6cfd1d6d8d6d1cdc8bfafa2a4b6c2bbb2967970767460525059708b9fadc4bfa28b9f
c6cfb89d9bb2c8d1d4d4cdb896592e2e3740403b39578bb2c6cdd4dddfd8c6b4abafb8b4
abb4bbbdc2cfd6d6dbdfe1dbc6a68f92a4bfd8e1dbcbaf967d695b545257627292b4b89b
848296b6d1e1dfd4d1dde8e4d1bdafa6998b8f9dadb6c4d4dfdfd4cdd1bfababadabb6e1
efede4cfbfbbb4a294abcbd6c49f8d969d9b8d8992999d0000b4c8cfcfcbb8b2b6bfc2c2
c6c8b8947f99b6bbbdc8dde1d4c6c4c6c6ab8ba4c8d6d8d6d8d6cfaf826b6b7d94a2a8b4
cfd8d8d6bd9b8dafdde8dfe4dfddedefeddfbfaf9f705d6b89a4a4928b99b2c8dfe6e1e4
ddcfc2bdc2cbcdbda69fb8d4ddd8c8b8adabafb8c2c2af9da4a8a8b6c2bfb2adb4c2c8cd
cdcbc6cbcdcfd6dbdddbcfc8cbc2ab94949db4d4cda8847b8996a8c2d6dbdbcfbb998689
969fabada499949bafc6d1d4d6dbdbc8a68482a4c8d6dbd8c8b6bdcfd8dfe4dfd1c8b6a2
a4b8b486666b8b9fb4cbd6bb968996b2bdbbbfc2b8a48b7f7f8db2d6ddcfb8a89f9d9ba2
bfdbddc6a2847b8292afcfdbd6d6cbb4968489a6c4cbc8cbcbcfd1cfbbabb6cdd4bd8f7d
7b7d99a89d7b707992a69b7b62606d7b847f7f929da29472708b9d9f9494abc6d1c4b2af
bdb6a4929294a6b8bbc2c4c2d1ddddd4bd9f92a4c6dddbc8a2766b84b2d6ddd1bfa29bb4
cbd8d6cdc4b8a8abc4d4d1d8dbdbddd8cbb4a29286869dafafaf997b74746d594d4d5764
727f94adab92849bbbbda6929bb2c4cdcfcbbda88b593434393d393234507fa8c4cdd1dd
e6dfc8aba2b2c2b6998b99adb6bbbbc4d6dfd8c8bbafa4a6abbfdbe6e6ddc8ab8b746459
545b647999b8bb9f8686a6cfdddfd8cdd4e4ebe8dbc4ab9f968f9badb6b4b8c8d6ddd6cf
cdb29ba6a6a6b8dfebe8e4d4c4b8b4a69b9badb8ab9699b2c6c8b29b969da40000a4c2c8
c6c2b6adadbdc2bbb8bdb6967689adbbb4afbfcdb6a6b8c8cbb4999fbdd4d6d4d1cdc2a2
76646079a6bbbdbfcdd4d1c6af999bc2e1ebe1dfdbdfedf4efe1c6b8a674647082999b8f
94b4d4dfe8e6e4e1d4bfb6c2cfd6d8c6ab9ba4bbc8c4b8b6bdb8bbc8d8d8cbbdbdb2a6b8
cbcdc2b6afadb2bfc4bfbbc2cbcfd4d4d1d1cdc8cbc2a68b9db4cbd8bf9b868ba2b6bfc8
d1d6d1cbbd9f86899fabb4b4ababb8c8cfd1d1cfd4dddbc6a6847f9fc4d8ddd1bfb6c4d4
dfe6e6dbc6b8a69badc4bb866262798ba6c8ddcdb8ababb4b4abababa8a8a69b8f9bc2e4
e6e1c8a2827b8496b6cfd4bf9b7b7684a2c4d6dbd8d6cfbd9f8986a2c6cdcfd8ddddd8d1
b4999dbfcfc4ad9f8d7f94a4997b696d7d94927f6d6b727d8d99adc4c8c8bb927d8b9f9d
8f99b6cfd1c2b6c6d6cfbfb2a6999fb4b2b6bfcddbddd6c6af9b96abc4d6dbc49976748f
b2cbcfc8bda4abcddfe4d1b8afa89fa6bdd1d4dbdfe1e4ddc8ab92867f829fb6b4b4a68f
7d766b595754575d626d899fa6998b8d9b9b8f8996adbdc4bfad9b896d503b393737322e
324d7699b6c8d1dde4ddc4a69fb6c2b28d747d96a6abb2c8dddfcbb4afb8bfbfbbc4d4e4
e8e4cfb496826d605b60697994adab928b99bddde4ddd1c8cfdde1dfd8c6ad9d999db2c2
bfafafbdcdd8d6cbbba49da8abb2c2d8e4e4dfd6cbc6c4bdab9b9b9d9996a6c4dbdfd4bd
aba4a2000089abbbbbb4ab9992a6bbbfb6afa68d727d9ba89d8f9db8a89db2c4cbb89d8b
a4c4c6c2bdbbaf94796d6982b6c8cbc6c2cbc8b6a299add1e8ede8dfdbe1ebedebe1cbbb
a276707b7f898b8b9dcbe4e4e4e1e1dfcdbbbbcbd4d6d4bda69d96999f9f99a4bbbbc6d8
e1dfd6d1cfbba8bdcfd6cbbda6969dadb2a8a2abbdc8cbc2b6bdbdb8b8b29d899fbdd4d4
b4928fa8cbd6cfcdcdcbc4c2b89b848dadb4b6b2b4c2d4dddbd6d4cdcfd8dbc6ab92869d
bfd6dbcdbdbdcbd6dde4e4ddcbb49f9bb6cdbf8d6b728d9bafcde4dfd4c8bfb8ab94898f
a6bfc8b89fa6cde8e8e6c89270697686a2bdc6b8997f7d92b4d4d8d8dbd6cfbba28b849f
c8d1d6dfe1e1dfd6bd9f99afc2bfb4a896848f968f7d6d728fafb6a896827b7f8fabc6d4
d8d8d1b694899b968d9bbfd4c8afadc6d8cdc8cdc8ada4b2adabb4cdd6cdb8a6948fa2b8
c2c6cbb68f767b96adb4b8bdb8a8b8dde8e8cfa8999696a4b6c4cbd6e1e8e6dfcfb89984
828db6cdc6cdc6ab827270666259575b647994a2a6a49f968f8f847f8b9fafaf9f847970
594d49423b3737393b4b6b8ba2afc6d6dbd1b49999afb8ab8b706d7f92a4b8d1dbcbb2a8
adc2d1cdbfb6c4dfe8dfcbaf998b7264646064768f9f9984849bbdd4dbd6cdc8c8cdcfcb
c6bdab9fa4b2c2c8bba4a8b6bfcdcbbda69da4adb2b4bfd4ddddddd4cfcfd4d1bfa29696
969fafc6dbe1dfcfaf9d9200007089a2aba4998d8b99abb6b4a48d7666707f89868da8bf
b29b9db6c2af927f8b9d9b99a2ada8947f767089bdcdcfc8b8b4ad9b8b94b8ddebebe6dd
dde1e8e6e4dfcbb89d7b7f867b797984a4d4e6ddd8d8d8cdbfb8bfcbcfcbc4b2a8a69284
827f7f8fadbfd6e4e1ddd6d6d4bfafc4d6ddd1bb947b8da2a69b929fb8c8c6af96999d9f
a29f998f9dbdd4cfb49294b8d8d8c6c4c8bfa6a4a88f869dbbb8afadbbcddbdfdfddd6cf
cfd8dbc6af9d969fb6cdd1cbbfbdbfc6d1dfe1ddd1bda6a6c2cfc2997b82a2b6c6d8e8e8
dfd6c8b499847689afcbcdb8a4afd6ede8dfbd8262606d798ba4b4b299848da4c4dbdbdb
ddd8cbb2998686a4d1d8d8dfe4e4dfd6c2b2afb2b4af9f8f898b89827b797d96bbcfcfc6
b89d86828db6d6d8dddfdbcba489928f8b99bbc4ab8f8fabb8afbdd4d4bba8ada4a2adcb
cdb28b84828ba8c2bfafad9d8479849daba6a6afb2adbfdde4e6d4b28f86929ba8b2bbd1
e1e8e4d6c8b89b847d8dbfd6cfd6cfaf7f6d74726b5d59627b96a4a29d9fa6a49f9d9689
828d9996846d6b72696460594d474749444b6482929fb6bdbbb49d8f92a4ada68b706b84
a2b6c8d4cdaf99a8afbfd1cfb8a4b4d6e4d8c4a2897d72706d5d5d76949d927f798ba6b8
c2c4c6cbcbc8c2bdc2c2b8b2b6c4cdc6ad8f99ababadada69b9da4adafabadc6d1d1cfcf
cdd1dbdbc8aba2a6abb2b2bbd1dde1d4b29d9400006d79899294949dadb4a89f9f8f7f6d
5b62727f899dbdd1b88f7f9bab9f8b8994969296a4afad997f74708bbdcbc6bdab9d8b76
748dbbdbe6e1dfdbdde1e8e1ddd8c8b69f828689766d7286abd1ddcfbfbbb6adadb8c6c8
bfb6b2b6bfbdad99867d7d8ba6c8dde4e1dbd4d1d1c2b2c4d8dfd4bb9276899fa89b8d9f
bdcbc8ad8f898d8f949da4a4a8bfcdbda48d8fa8c4c2ababbdbb998b8f898dabc8bfb4b8
cdd6d8dddfdfd8d4d4d8d6c2ada6aba8adbdcbc8bbada8adbfdde4ddd1b8adb8c8c8b8a6
8d899dbbcdddede8e4dfcdaf8f867d86a2bdbda699b2d4e4dfcba6795d5d70828f999fa4
96899bb2cbdbd8dbdfd8c4a8928286a8d6dbd6dfe6e8dfd4bfbbc4c2b6a494868d968476
727b9bbdd4d6d4d1c8ab928d9bc4dfdfddddd8c6a2898d8f8b92aba284767d929696a8c4
cbb6a29d99a2b6cbc4a28282868ba2b4af9d999494999dadb6aba2a8bbbfc8d6d6dbd4b6
8b7f9296a2a8b4cfe1e1d6c6b4a292847d8bb6d4d1d1c4a4827b7f796b60667d9dafafa4
999ba4abafafafa4948f8d8b7f70798f999b8d7b695b52544d526b7f8fa2b4a48f8f8f99
9fa2a8a48b7682a6c4d1d8dbcdab94abb2bdcbcdbba6adc6d6cdb694766b666b66575974
949d9282797f8fa2a6a8b4c6cdc4b8bdc6cdcfd4d4d1cfc6ad8d8d9999999ba2a8a8a8b4
b4a49db4bdbbbdc6cdcfd6d6c6afb4bfc6c6bbb6c8d8e1d8b8a6a400007984868b96a6c2
d4d1bdaba49d92765b627d9296a2bfd1bb89667282868b9badb2adababa89b8976696984
abb4ada4998b79707d94a8c6d4d8dddbdde1e1dbd6d4c2b4a289868676707f9fb4c8cbb4
9d92969db4cbd1c4b2a8b2c8d4d4cfbd9f8b848fabcddde1e1dbd1cbcfc2b4bdd1ddd6bb
967f8da6ad9d8b96b6c4c2a88f929da4a2a6afb4bbcbc6a2867d828692948b99b6c2a48b
847f8db4d1c6bbc4dddddbdddfe1ddd8d6d6cbb2a6abb2a89da2b8bda88d8692add6e1db
c8afb4cdd4c2adad9b8d99bbcfdbe6e1dfdbc8a88f8f867d82969b8d8bafcbd1c8ab8b74
6669798b94928d928f8fa8bfd1d8d6dbddd1bb9d897d82a4cfdddfe4e8ebe1cfbdbdc8cb
bda69499a6a686706d7fafd1dbd8d6d4c6ab99a2b2cfdfddd8d6cfb69684898b8689948f
84848d9b9f9b969fab9f949499afc6cfc2a6949b9996a2a69f969dabb8bfb4b6c2b6b4bf
d1d8d8d1cbd1cfb699898d94a4a6a8c8dddbcbc2b2968f8b848babc8cfc6ab8f8284867d
6d6d84a6b6b8b4a699929fadb6b8b8b4adaba49b8d8292b2c8cbbda47d64605d5d667d86
8fa2b49f847f849dabadb2ad968496bdd1dbddddcfab96abb6c2cfd1cbc4c2bdbdb8a68b
706462625d5759708f9f9f927d747f929da2abb4b4abadc2cdd1dde6e1d1cbc6b8a29292
9699999fadafb2b8ad9994a8ababb8bdc2c4c8cdc8bbc4d1dbd8c8bdc6d6e1d8bba49900
008d96948f9fbfd4dbdbd1cbc6bfaf8d6b708da4a2a4b8c8bd8d5d596b86a6bbc6c6b8ad
a496897b70605b6b7f8b8b8986827f899da49fa6b6cddbd8d4d1c6c6cfd1bfafa68f847f
7f829fbdc2c8c6af928692a6c8ddd8bd9fa2bdd6dddddbd4bb9b8b8d9fbfd4ddddd6cdc8
c4b8adb6c6d4d8c4a28d9db2b29f8d8da2b4b296849dbdc6bdb2b2bdc8d1bf8d76767b72
6b6d768bafc6b69f89798bb6cfbfabb6d4dbdddfdfe1dfd8d8cfb69d969fa49d8d8ba2a8
9479747b8db4c8c6b2a8bbd8d8c2a8a69d999fb8c8cbc8c6c8c6bba89fa292796d767b7b
8fbdd6cfbf9f84766d768992948b868994a2afbdc6c4c2cdd4c6ab8d7b767f9bc6dde8eb
edefe6d1c2bfcbd1c4ab9ba4afa4866b667db2d4dbd8d6d1bfa69dadb8cfddd6cfcbc4af
9686868b8f949da6abb2b4b8bbb8ada4a29d9b9ba4b6c8cbbba8abb2b2adb4b2a89da4b4
c2c4b4b6c6c2cbd6dddfddd6c8cdd1c6b6a29699a6a6a2b6cfd4c6c6bfa8998d898ba4bf
c6bd9f8276798284797f9fb8bbb4b4a8998f9babb4b6bbbbbbc4c4b49f9dafc6dbddd4bb
84696b6470829699999fa694827d798fa4a8afad998b99b6c6d4d8d6c8ad9ba4afc6dbdb
dddfdbbfaba69f8b726b7274695959708fa2adad92797286a8bbbbb2a49fb2c6cbcbd6df
dbcdc4c8c6ad9994968d8486929fa6a89b8f94a8a8a8b2ada8abb8c8cbc6cbdbe6e4d4c6
cbd6dfd8bd967b00009d9f948d9dc4d1d1d8d6d1cfd1c6a68689abc4b2a8b2c2bb926664
86adc6d1d6cdbba89686868d866b5d60626b70747d8d9ba4adafa499a6bfcbcdc4af9daf
cbcdc2b6b29f8982929db4c6c4cbc8b4948496b6d6e1d8b49ba8c8dfe1dddddbc6a28b84
899bb2c4cbc4c4c6bdaba4b4bbc8d4c4a89babb8b6a696929ba6a89282a8cdd6cbbbb8c4
d1d6bd86747f847466697482a2c4c8b6947d89abbba68f94b2c8d6dbdddbd6cfcfc6afa2
969494968f8b96927f7270747b92afb8abadbfd6d6bfadafb4b2adb2bbb49d9fb4c2bdb8
bbb49b7b6b70747fabd8e6dbcba88b7d7d99b4b8af9d8f929fa8a8aba6999badbbaf947b
72727b94bddde8ebedede6d6c4bfc6cdbda2949b9d8b766664749dbfcdd4d1c6b4a4a2ab
b4cdd8cdc4bbb6b29f8d8b99a8b4bdc6cbc8cbcbcfcfcdc8c2bbb4afb2b8bdb8a8a6b4c2
c2bfc8c8bba6a2a4a8a89fa4b6c4d8e1dddddbd8d1d1d1cfcbbfb2abababa6a4b8c8bfc2
bdab968d8f8d9fb4bfc4af8b7276898b8694afbdb6adafa89f999da6afb6bdbdbbc2bbad
a8b8c4cfdfe1dbc48f706d6b7b8d9d9fa2a2998f8b897b828f9499968f898d969fafbdc4
bfaf9f969fbfdde1e6ebe4cbab9d9b8b767b8d8f79605b799dabb2b8ab8f7986b4cdcbc4
bfc6cdc6bfc4cbcdcbc6c4cdc8ab999994826d696d7f8d969699a4b6b6a89f948b8fadc4
cfd1d6e1e8e1d6cbcbd1ddddc694690000aba48f849bbdc6c4cfd1cdcdd6cfb499a2c8d8
c2a6a4b4af927986b2cdd1d6dbd6c49f848494a29d89746d747b767694b4bfbbb4aba29b
adbdb8afa28f89a4c2c4bfbdbdb49f99abb6bdc2c6cbc4af8f849dc4d8ddd4b4a4b2cbdd
e1dfddd4bd9d867d767d96b4b8ada6ada49b9fb4b4b8c6bbaba4afb8b6ada4a8b4b4b49f
8ba6c6cfc4b6b4bdcdd4bb8b828f9282767b82899dc2cfc29f8992a8b4af9b8d9bb2c4cb
cbc8c6c8cbc8bdad9d9499a4a49b9282767679797d94b4bfb6b4b8c2c2b6b4c8d1cbb69f
9b927d8db6cdc6bfb8a88f746970768fc2e4ebddcdaf8f8299bfdbd8cdbba6a4a6a8abb2
ab94868d968d7b7070707b94b8dbe8e8e8ebe6d1bbafb4bbaf9486827d7676767476899b
adc2c6bbaba4a4a4adc6d4c6bdb4b2afa49296adc4cfd4d4d1cbcdd1d4d6d6d4d4cfc6bf
b8b8b2a499a4bfcdcbcbd6d6c4a69486828486899bc2dde1dfdddbd8dbdbd4cfd4d1cbc6
bfb6af9fa8bdb8b8ad9689929d9b9ba4b6cbc49d767d949496a6bfc6b8adafaba8a8a6a8
afb8b8afa6a49b9bb2cdd1d1dfe4ddc6a28276767b84949da6a49b999d9d8b86969d9489
89847d767689a4bfcbbda28d8fafd1e1ebede8d1ad9499948996abaf94706482abb2afb2
af9f8686adc8cbd4dde1d8bdb4c6c8bdb2b8c6d1cbada4aba48d6d5d5b6b7d8fa6b6bdc2
bfad96847b82a2bfcfd6dfe6e4d8d1c8c2cbdbe1cf9b6b0000c2b89f8b9bbbbfb8c2c4c2
c4d4cfb49fb4d4dfcfab94999f948fafcfdbd6d6d8d8c292748ba2ada89682829ba69692
b6d1d4c4af9d8f9bbbcfbf9f827d8496a8b8bdc4cbc6b4afbfc8cbcbcfcdbda68d8dabc4
cdd1cfb6adbdcbd6d6d4d1bfa28b7d76727fa6c6bfa48f8d868b9ba6a6a6b6bfbbafadaf
b2b2bdc8c6c2bfb4a2a2abafa8a4a2a4afbfb89b969b968f898f9699a6c2d1c6a4929fb8
cbcfbda6a4b8c8c8c2b4b6cbd1d1c8ad9b9babbbb8ab94827d8b8d898b9bb2bbb8b2a8a2
9fa6bbd6dfd8bf947b72728fbbd4cbaf94847469666b7fa6d4e8e6d4c6af9992b6d8e4df
d8c4ada6a6abbbd1cdad8d7f7d747272727486a4bfd8e6e6e8e8e4cfaf999fada8927f74
72768f999694928f94adbfbdaba29b969bb2c6c2b6afb2ad9d94abc6d6dbddd8d1cfcdcf
d4d4d4d6d8d4cbbdaba8a69992a6c8d1cdcddbdbc8a6826b6d797d829bc6dbdfdddddbd8
d8ddd8d4dddfdbddd4c4b29996a8b2b4a2898fabbdb69f94a6bfbf9f82828f99a6b4c2c2
b6adafadadadabadafab9b867f7f7f8fb4d1d6d6dfe1dbc8ad968982797b8fa2aba8a4a4
adaf9b99a8b29f8b8b7b726b6d82a6cdd6c49f8686a4c6e1ebedebd1b29d9f9b99afc2cb
b68d7684a4a8a4a8a699847f99b2c4dbe4e4d4b4a6b4b8ad9fadc6d4cbb4afbbb496725b
5764748db8cfcdc4c2b89d84747d99bbcfd8e1e6e4d8cbbfb8c2d1dfd6a8760000d4cfc6
ada2b6b8b2bbbbb8bbc8c2aba4bdd8e1dbbb96898d8f9bc6dddfdbd6d6d1af7f7296adb6
af96848fb2b4a8abc8dbd1bda88d7d99c8dfd1a882797d8996adbbcbd8d4c4bbc8d1d6d8
ddd4bb96899bb6bdbdbdbdb2bdcfcdc6bdc2bfa886746b69728bb6d1cba8897f7d8fa29f
9fabbfcfcbb49f9da8bdd6d6cbc6c4c8c6b4a49b99a4a6a2a4b6bfb6afa8a29b9da2a29f
a8bfcdc4a694a2c4dbddcdb8b4cbd8d6cbb8b6c8d4d8cba899a4bbc6c2b29f9296a6a89b
8d969fabb8b6a6948f9fbddbe4dfc69472697296c4ddcf9f746d6462626b8fbfe1ede1cb
b8adabb6cfe1e4d8c8b29f9ba2adc8dfdbbb9b847b7272747b8ba6bfcbd8e1e6e8e6ddc8
a88f8d999d9282797b8ba6b4b8b8b2a49badc4c6b29f8f868da8c2bdafa8afad9b9dc4d8
dfdfddd8d1d1d1cfcdcfd6ddddd6cbb69f99998d8ba4c2cbcbcdd8dbcdad846d7082868d
a6cddddbdbd8d4c8c6cfd8d6e1e4dfe1ddcbad8f8494afbfab8d9fc6d8c89f8694a8b2a6
8d82828fa8b8bbb8b2afb2adabababada4896d5d606b7686a6c8d6d8dbd4cbbfb4a69686
797d96abada6a8a8afb4a69da4b2a89f967666646d84afd6dbc6a6948fa4c8e1ebedebdd
c8b6a49499b6cbd4cba68d8f9994949d9b8d7b7b899fbfdde6e1d4bda8a2a8a8a4adc6d6
d1bbb4b8b2926b59545d6b8bc2ddd6c8c4c2ab84707d99bdd4dfe1e4e4ddcdbbb4b6c6d8
d8b6890000d8dbddcbb2b2afadbbc6c8c2bfad9ba4c4dbdddbc6a68f8d8d9bc6dddfddd8
d6c699767da4bbbba88d8296b2adadbfd1d8c6ad9f867292c6e4dbb28b7f7d8496abb2c4
d8dbcfc6cdd4d8dbe1dbbb9294a8b4b2afb2b4b6cfdfcfb4a2adb4a27d6d6466748fb6d1
cba47f7b7f99aba6afc4d6d8cfb48d8bafd8e1ddd4cbc6cdd1c2ada2a8b2b4afb4c6d1cf
cbbdb2abafafa4a2abb6bdb29d94a2c2dbdbcbb8bdd1dfdfd8cbbdbfc8c8b69f9db4c6c8
c2b8ababbbcdcbb69d969ba6bbbbab948b94b6d8e6e4cb9b79727d9fcde4cf996b665d5b
5d709dcde6ebddc4afafc2d1dbe1e1cbab928d929bafcddfdbbf9f8d827976798db4cdd1
d4e1e8e8ede6d6bfa48d82898d8b898994a6b4c4d1d4cbb6a8adbfc6b69d89899bbbc6b6
a8a4aba8a4b4dbe4e1e1dfd8d1d4d4d1cbcbd4ddddd8d1c4ada4a2968d99afbbc4cbcdc8
bdab927d7d8b8d96afcfd4cbcbcfc8b4b2c6d8dbe4e1dfe1ddcba68b7f8dadbfaf92a4cd
dbc2948294a6b6b499827d8fabb6b4b2afb2b2adabadaba68d6654525d6b727d94b4cdd6
d1bdadb2b6af9b827989a4afa89fa6adb4b8b6a49dafb8bba8745b627294bdddddd1b8a2
9babc8dbe4e6e8dfcfbb9f8b92b2cdd8cfb4a8a69d8b8b9692847d8996a8c4dfe6dfd4cd
bfb2b6b4b4bdc8d6d8c6b2a49b7f6459575d7096cbe4ddcbc2bfaf86707f9dc4dbe1e4e4
e4dfd4c8c2bfc4cdcdb6920000d8dbe1d8c2b6aba8b8d1d8cfbfa4929dc4dbdbd6c8b6a6
a49f9fb4d1dfdddbd6bd8d74829fb6b299848496a6a8b4cdd6cfb69d96826b86b6dbd8bb
9b8b848494a8a6b8d6ddd6c8cbd1d6d8ddd4bda6b4bbada4a4b4c4cbdbe8d8bfaba8a89b
847f76747d8dadc6bf9b7b7b7f8f9da8bfd6dfd8cdaf7d7db2e4ebe1d4c6c2c8cbb8abb2
c2c2b4afbbd1dbdbd6c8b6a8afb4a8aba89d998d868fa2bbcdcdbfb6c2d1dbdfddd4c2ad
a89f8f92a4bbc8c6bdb6b4c4d8e4e4d6c4b2a4a6b8b8a8928489afdbe8e1cdaf8f848f9f
c8e6d6a474695d575b72a2d1e8e6d6c2b2b4c2cdd4dddbc6ab948f8f94abcddddbc8ab94
867f8289a2cfddd6d6e4efedefe8d6b89f8d8486868992a4b6c2c2cbdbdfd1c2b4a6adb8
b49b8996b2c4bdab9fa2a8adb4cbe6ebe4e1dfdbd4d6d6d4cdcdd6ddd8d6d4cfbfb6b4af
9f99a2afc2c2b49f96968d827f8d9296a8bdb8abb2c2bfababc2d6dde6e4dfdfd8bb968d
868294a6a28b96b8c8b28f8ba6bbc8c4ab96929dafb4adababadada6a4a69f947b5d5457
5d696d798da2bdd4d1b8a6afb4a88f7d7b8da4a8a8a4a2adbbc4bfada2b2c2c8b27b6069
7999c2dddfdbc8afb4bfc2c2cbd8ddd1c4b8a29496a8c4d6d6c8b8ab9d969da2948d96ab
afb6cbdde4ddd4d1cfc8c4bfc4cbcbd1d8c8ab8f8474645957627da6cbdfddcbc2c2b48b
7486abcdd8dde4e6e4dfd8d4d1cfd1d1c4ad8b0000d4d1dddbcbbdada8b6d1d8cfbda48f
8fb2cfd1cdc8c6c2bbab9b96bbd8dbdbd4b8897072829fa69d9ba2a6a6a8bdd4d8c6a694
8f827484a2bfcdc4b29f9282869d9db8dbddd4c2bbc8d1d4d4c6b8b8c6c2ad9f99adcdcf
dfede1d8c6ad9d948f948d8b8f9db2c2bb967676767d89a4c4dbe1d8cbaf7b729dd4ede8
d6c8c4c8cbb4abbdd4cfbfbbc4d4d8d6cdbfab9ba4b6bdbda8867b767b869bafbdc2bbbd
cdcfd1d8dbd1bb9f8d7d7684a2bdc8c2b4adb6d4e6e6e8e4dbc6a49bada8998b828fb6dd
e1dbd1c4ab999fa6c8e8ddb27f70625b5d76abd8e8e4d1bdafa8a6abbdd1d6c8b8afaba6
9da4c2d1dbd4b699868494a2b4d8dfd6d6dfebedefe6d4bba2928b8986899db8cdd4cfcb
d4ddd4cbc6b2a49f9d948f9db2b8ad9b8f949fabc6dfebebe6e1dfdbd8d6d6d4d1d4dbdd
d6d1cfcdc6c2c2c4b6a29fb4c4b6947d74747b7b7d868d8f949f9f999fb2af9f9ba8c4db
e8e6dfdbcdb4968f8b827f8f9689849bb8b6a8a2b2c6d6d8cbb6abadababa8a4a8afab9b
8d898482746260626060647994abc6dddfd1b29996928684848fa2adb4b2a4a8b8c4bbad
adb8bfbfab7f6d727b92bbdddfddd4cdd6d6bb9f9badb8b6b2b4afafa6a2afc8d6d1bfa2
8f9dafb2a4a6bdcbc2bdcbd6dbd6d4cfd1cdbbb8c6d1d1d4d6c8a8897d6d62595b6b89ad
c2d4d8cbc2c4bb947d92bfdbdbd8dde4e4dfd8d8d8d6dbd8c29d7d0000cdc8d6dbcdc2b4
abadc4cdc2ab96867b94adb4b2bfd1d1c6a88b7d94b6c8cfc4a88269626984a2b6c2c2b8
b2b4c6dbd8bb9b928b8b8d8d8d9fbdcbc6b69f84768696bbd8d6c6ada2afbbbfc2b2a8b4
bfc2bbb29da2bfcbdfede8e4d4b69f96999f9b9ba6b8c6cbbf9d7d797b7b7f99bdd6dbd8
d1b886748dbfebeddfd6cdcfcdb2a8bfdbddd1cdcbd1d4cdbba69692a2bdcdcdb6927674
7d899fb4bfc2bbc2d1cbc6c8cbbdaba286706b799bbdcbbfafafbfdbe8e6ebebe4cfa894
9d928686869bbdddd8d1d4d1bfafb2b6cde1d8b2867266646b8bbfe1ebe4cfb8a492898f
abc8d1c6bfc4c8cbbdabadbfd6d8b899868499adc2dbddd6dbdfe6ebede6d4bba2949292
8b899dbdd1d8d4cfd4dbd8d4d1c6ad8f868d969fa6a499897d7b86a2cfebebebe8e4dddb
d8d4d1d1d4dbdbd8d6cfcdcdcdc6c4c8bdaba4b6bba27d747472747679767d848b999f99
949b9d8f868db2d6dfd8cfcfcdc6b8aba2948496a89d868db2c6cbbdb4c4d8e1ddcbbdb4
a6a2a29ba8bdc2af8f7d84867969696b6662627b9db8d4e8e8dbad76747f89928f92a4b6
c2bdafafb8bba8a2adb8bdbdaf8b7b7d7f92b8dbdddbdbdfe6ddbb8d79848f999fb2c2c4
b29699abbbc8bb9b7f94b2b4abb8cfd4c8bdc8d6d8d1cdcfd6cbafafc6d4d6d6dbd4af89
796d625b627494afb8c6cfc6bfbbaf94869dc8e1e1dddfe1dfddddddddd6d8d8c49d8400
00cfc6d4dbd1c8bbab9b9da49b89827d6d798b949bafc8d1c8a8897d7f8d9faba48d7966
627496b8cfd4cfcbc4bdc8d8d1af8d8b828da4a2969dbdd4d6cbb4927d829dbfcfc4b2a4
a8b4ab9fa49d9ba6b6c8cfc6afa6b2c8e1ebe8e4d4bba89d9da29fa4b4cbdbd8c6b69f86
86827d8fbddbdbdbd6bd8f7f92b8e4ebe1ddd1cfc8ab9db6dbe1dbd4cdd4d4c6a28b9299
b2c8d6d1bd9b7d767f94b2cbd4d1c6c2c6bdb6b2a89d9da2866b66749dc4d1c2b4bbcfdf
e6edf1f1ebd8b296948989929db6cfdbcdc2c6cfcbc4c6c4cdd4c8a884726b6b7ba2cfe8
ebe6d6bd9d847f8ba8c6cfc8c8d1d8d8cfb8a4b8d4d1b69b8d8694b2cfdddddbe1e4e8ed
ede8d6b499949fa89b8fa6c2d4d6d1d4dfe1e1ddd8cfb6968b8f999d9f94847972707b9f
d4efebebebe6dfdbd6d4d4d4d6dbdbd8d4cbc8cbcbc2b8bdb8b6b6b6a48676869994827b
7b747074899fa89d8f8f928d7f89a8c6c8c2c4cfd8dbd8cdbfa68fa2b8ab9292b4c8d4c8
b2afc6dfdfcfbdaf999ba29dafcbd8cfaf94a2a28b7069727979707b9fbfdbe8e8d6a469
647689948f92a2b4c2c2bdbdb6a6928b94a4b8c4bb9b8b8b869bbdd8d8d6dbe8ebdfc494
797f8f9ba4b8cfd1b48984898fa8a2846d7d9ba6a6b8cfcfc6bdc6d4d8d1cdcdcfbfa6af
c8d4d8dbdfd8b48d868479696b7f9dafafb6c2bdb6a8948d8da4cde1e6e4e4dfd8d8dddf
dbd4d4d4bfa4940000d1cbd8e1dbcfbfa686726d7076848470747f868d99adbfbfad9489
8b969f9b8d7d72696b8bbbd6d8d6d4d6cfc2c4cfc49f82827989a8afa29dbdd8e1d8c4ad
999bb2c4c2b6b2b6bfcbbda294949ba6b6cfddcfbfb2b2cfe6ebe4ddd4c2af9d949b9fab
c2d6e1dfd1cdb89489827b8bbfe1dfdbd6bf8f828fadd8e6e1d6cfc6b699869dcddfddd4
d1d4d1bb9286a2afbdc8cdc4ad8f827d8296b8d8e4dfd6c8b4afb4afa294969b846b6b7d
adcfd1c4b6b8cfdbe4eff4f1e6d1af948f8b94a8b8d1e1d8bb9fa4bbc6c6c8cdd1c6ad96
827472747f9dcfebede8d8bd96847f86a4bfcdd1dbdfddd6cfbfabc2d6cdb49f998f9bb6
d1dbdbdfe6ebebebefedd8ad9294abbbad9dafc8d8d6cbd4e4e8e8e1d8cdb49d968b8284
867f767b7b797d9dd4efededebe6dfd8d6d6d6d6d8d8d8d6d4cdcbcbc8b6a6a8abb8c2b6
9b82829db8bba2999686726b829ba49d949299968489a2b4b4b2bfd4e1e4e1d4c4ab9499
a49b9296adbdc8bfa494a8cdd4c2a494898f9ba4bbd1dbd6b8a4afb8a47f747f8d8b7670
8db4d4e4e8d4a26d626b79848694a6adbbc6c6c2ab867b797989a2b6b6a69f998da6c8db
dbd6ddebe8dbc29b84869ba8adb8c8c8ab7d7070707f7b696066798996afc2c2bfbdc6d4
d8d4cfcfc4aba2b2cbd8dfdfdfd8b89b9da2947b7686a2adabadb4b2a69484868fa8d4e4
e8ebe8dfd1d1dbe1d8c6bdb8a296940000d4cfdfe8e1d4bd9d7b665d62799299897b7b86
92999fa8b2af9f99a4bbc2af92796d6b769fcfe1dbd6d6d8d4c6bfbda6897d86828fabb2
9f8fadd1e1dbcdc4b8afc2c6bdb8c4cdcdd6cdb49f999fa6b6cfddd4cbbbb2c8e1e8ddd8
d6cbb699898b94abc8d8e1dfd4cfbb9989827b7fa8cfdfddd4bd8f7f89a2cde1dfcfc6b2
94867982a8c8d6d4d4d6d4bd9b94b4c2c6bdb4ad9d89868b8f99b2d1e6e6dfcbadabb4bb
b8a89d967d696d86b8d6cfc4afabc2d6e4ededebddc2a69b9694a2b8c6dbe4d6ab8b8d9f
bdcbcdd6dbc69d8b8d8b8982849dcfedefe6d1ad897d7d7d94b2cbd8e4e6e1dbd1c2b2c6
d6c8ab999999a6b6c8d6dbdfe6ebebebf1edd1a4898da2b6ab9ba4bdd1cdc2cfe6ebe6d8
cbbdab9d967d6664696b748b8f8b8ba2d4efedebe8e4dbd6d4d6d4d4d8d8d6d6d6cfcdcd
c4ab94949fb2bbab96898dabc4cbc2b4a48f79727d8d9494999da29b8b8999a8a6a4afc4
d8e1dbc4b2a4928986929fa4a4a8b2af998b9bbdc8b6947f828f9dafc6cfcbbda8a4b8c4
af8b848f999276667694bbd8e1d1a472646062708ba6b2adb6c8cbc6a6847d766d798fa4
ababa89d92afd1dfddd6dde8e4cbab92868fa6b6bbb8afad9b746664697674645d66747d
92a4abadb6bfc8d4d8d6d1cdb4969fb8d1dddfdfdfdbc8b2abafa2847d8ba4b6bdbfbba6
928484868fadd6e6e8ebe8dbc8c6d4dfd4b69d92868b920000d1cddfe8e1d4b69472645d
627d99a49d868296adb6ada8abab9f9dabc2cdbd99766b7086b2d8e4dbdbdbdddbc8bbaf
927f86999699a6af927b92b4cbcfcdd1cfc4c8c4b8b8cbd4d4dbd1bdada4a6abb4cbddd4
cfc2b2b4cfe1d8d6d8cfb494827d849fc6d4d4cdc6bfad92868489898babd4d8d1b89284
8696b2cbc8b4a89279827f79869fbbcbd4d8d6c4adadc2cfcfbb9f9f9d8f92a2a69299bd
e1e4d4b8a4a6b4bfc6bfa88d7266708bbdd8cfbba29fbdd8e4e8e8e4d4bbadadb2adafbd
cbdbe1d1a4898d94b4cfdbdfdfcda496a4a8a6948fafd8edebe1c2967b7476798499b8d1
e1e6e4ddd6c4b4c4cfbfa28d8f96a4afbfd1d8d8e4e4e6ebede4c89f8d8d929d998d8da4
c4cfc6d1e6e6d4b8a4999b9d947b645b5d667d9da29b9db2dbede8e8e6e1d8d6d6d4d1d4
d8dbdbd8d6cfcdcdc2a68f9299a4a694868496b2c6cfcdbda4928f8b7f7d7b8294a4a69d
9499a29f9d9fabb4cdd8cbb4a49d948b92abbdbbaba4adb4a4999fbbc6b6947d8496a6b6
c8c6ab9492a8bfc6ad898f9d9d9274697b92b8d6dbc89f74625b596b92b6bdb2b4c6d1cb
b49d927f72849fb2afa89f9996b4cdd8dbd4d6e1dbb88d898f9db4cbcfbfada69d7f6d66
74898d7d6b7d929ba4a8a29babbbc4cfd8d8cfc2a48f9fbfd4dbdfdfe1dfd6c2ada69b84
7f92afc4c6c4bb9f8b868d8f99afcddddfddddd1c2bfcdd8d4bd997f7d868f0000d1d1df
e6dfcfb28f746460667f9296948d99b2c4c4b6a8a29b928f99b2cbc4a684727996c2dfe4
dddbdbddd6bfafa6928996afab9f9fa4866b798da6bdcfdbdbd1cdbfadabb4bdc6d4cfbb
adabb2afb4cbddd6d6d1c4b2b4c8cfd8dbd1af8f7f797f96b8c4bdafada89d9492969f9f
8686adc4c2ad968b86848d9996847d7474898b7b798496adcdd4c6bbb4bbc8dbdbc29d9b
a49d9ba8ab8d8fb6dbd6b6928f9fafbdc2c2ab7f6464799bc4d8cbad99a2bfd8e1dfddd4
c6c2c2c6cbcbc4bfcbd8dfd1a88f8f8da6c8dfe1dfd1b2adb6bdb69d96bfe1ede4cba886
7472767b7f8ba2bddbe4ddd6cdbfb2b4b2a29286868f99a2b4cbcdcdd4d6dbe4e1dbc8a8
99928d9292898ba4cbdfd6d8e1ddb88b74768b99947d665d606d89abab9fa4bbddede8e6
e6e1dbd8d8d4cfcdd4dbddddd6cfcdcdc4af9d9b9b9992867b7d94b4c6cdcdbfaba4afa8
968f7d798d9fa49fa2b4bfb4adb6c6cbd6dbcfbdaba2a2a8b6c8cdc4afa8b8c4b8a4adc8
c8b28b74798da2afb6a8867989adc4c4a88f969f96866d6d8badcfe1e1cda274605b5d69
8db2c2bdbbc8d6cfbdab9b847da2bfcbbfa89b969fbfcfcfd6d1cdcfc6a4828d9fadc2d8
dbcbc2b6a89b8b828dadb69f869fbfc4bdb8ad949dadbfcdcfcbc2b29d929fc2d8dddfdf
e1dfd8c8b299847b869bb6c8bfb8b6a89b999f9b9fafbdcfd4cdcbc6bfc4cbd8ddcfa67d
7f8d960000d1d6ddddd4c6ab8d7f74707686847f8da4b8c4cbbdadada8a2998b8b9fb8c6
b8967d84a4c8e4e8dfdbdbdbcfb8afab998b9bb8b2a299927b6b747f94b4d4dfdbd4cdbf
afa8a4a4adbdc2b4a6a4a8a6a8c2dbdbe1e4d6b49ba4bbcdd4cdb29b8d827f8699a8a69d
a2a8adadb2b4b8af8b707fa2b2aba4948274727270706d6d798d9484767b7b86bbc8b6ad
b2bfc8dbddc69f9babada29b968ba4c8dbd4b89f9d9da6b2b2ab9472606686a8bdc4bb96
8da6bdcfd1c8bbb2afb8c4cdd6d6cbbfc8cfd6d1b69b8b828dadd4dfdfd4c2c2cbcbb899
92bde1ebd8af92847472797f8b969da8c4cfc6bfb4aba29689848b8d8b868b9db6c6c6bf
bbbbc2cdcfcdc4b4a699949d9d999dbddbe1dbd6dfdbb4867466748484746260667b99af
ab9fa2b4d8ebe8e8e6e1dfddd8d1c8cbd4d6dbddddd6cfcbc6b6a49f9f9d968d868b9fb6
c4c6c4b8afb6bbb4adaf9684969f9f99a6bfcfcdcbcfdbdfe1dfd8c8b6afb6c2cfd8d4bf
a4a2b2bfbba8b4cbc6a87f666984a2afa68d74748fb6cdc8ad9b9d967f70647094bdddeb
ebddb682645d606984abc2c8cbcfd4cdb69989797da6cbd8cdb8a6a4b8d6ddd4d1cbbfaf
a28f869babb6cddbd8cdcfc4b2adadadb4cdd1b694afd1d4cbbfad8d8d9babb8b8b6b4ad
9f929dc4dfe1e1e1e1dfdbcfbd997b7b8da2afbbb6bdc8c2b6adad9fa2aba8b6c4c4bfc2
c8c8cfdbe1d4ad84899ba80000c8cdd4d4c6b49f928b827d82867f7f9bb6cbcdc2aba2af
b8bbaf998b8fa2bdbda48b8ba6cde8ede1dbd8d4c8c2c2bb9d82869d99948f7d7069727d
92b4d6dfdbd4cbc4bdb4a89f9fa4afab968d8f8d94b6d8dde6e6d6ad9299afbfbfb6abab
ab9b897b798d969dadbdc4c4c8c8c8bd99727294adb2afa2896d6b70797f7f7d7f8b8f86
7d7d726d9db6b2abb4c6cfd6d4bd9694a6b4ad9f8f8bafd4ddd8d4d1c2a6999d94897969
5d698dafa48f8b747fa2b2b6b2a8a8a6a4a8afc4d8ddc6afbbc2c6c8bb9f7f707086afcd
d6cdc6cdd4c8ab8986a8d1dfd1b29d8d746d798fa8b4b2afb8b29b99928b897f7b89999d
8f7d7f9bbbc2bdb2adbbc6bfb2a8aba8a69b96a4aba8b2cbdfdfd8d4dbdbc6ad94706266
6b6660647492a8afa89d9babd1ebe8e6e4e1ddddd8cfc6c6d1d4dbdfdfd8d1cbc4b4a49d
9b9d9d9dabbbc4cbc6bdb4abafbdb6b2b8bb9d869b9f9b96a6bfcfd4d8dbdde4e4dfdbcd
bfbbbfcbd4ddddbf99969fabafb2c2cdc29f79696b8badb6ab8f797d99bdd4d1b8969286
6d62647da6cfe6efefe1bf8b695d627294b6cdd4d6d4cbbda28476727b9fcbddd4c2b8bf
cfe1e1d4cbc8bba28f8992a8b4bdd1ddd6c8c8bdb2b2bbc8d4d8cfad8ba2c6d1cdbb9b7b
797f86949da8b2af9f8f99bfdde4e4e4e1dfddd8c29f848494a2a2a2a8c4dbd4c6bbb8a6
9f9d8f96a6afb2bfcfcfd4dfe4d6b28f96abb80000b4b6b6b2ad9d969692897d79767682
9bb6c4bdab9b9fb2bdc4bfa88d8292a6ada29494a6c8e6ede4ddd6cdc2c8d1c8ab867982
8d999d86726972849fbfd8dfdbcfc4c2bfb4aba49d929699847d7b7b7fa4d1dbdfdbcba8
99adc6cdbda69ba8b8b29f84707d94abc4d1d4d1d4d1cdc8ab86798da6b4b6a88b70707f
929fa6a8a69b8679767b7266798f9fabb6c6cfcfbfa48f8d9ba8afab968dabcfdbd8dfe4
d1ad928d847f72645d698ba894726d667992969696a2bfc8bbafafbfd6dfbd94a2afbbbf
ad8d7064626b82a6b8bdc6cfcfb6927d7f94b4c6c4bbb2a27b6979a4c2cdcdcbc8af8989
8982848492a6afab94797994afb8ad9fadd1e1cfa686868d94969ba4abb2c2d1dbddd8d4
d4d8d4cbb27f5b545b60606d89a2afb2a89f9ba4cbe6e6e4dfdfd8dbdbd1c8c6cdd4dbdd
dfdbd1c6b6aba4a299969fb4cbd8dddbcdb2948fa6b6a8a2afaf9b8994999da2abb6c2cf
dbdfdfe4e1dfdbd6cbbdc2cfdbe1e4c69b92969da6c4d8dbc6a88b76768dabbdbdab8f84
96b6cdd6b8897b7060606b8fc2dfedefeddfb67d605d6d8bb2cdd8ddddd4b6a4968b8682
869fc6dbd6c6c6d1d6e1ddcfc8c6b89d9496a2b6c2c8d4ddd4c2bbb6b4b8c6d8dfd6bb96
7d86a6c4c8af89706b6b6d79869bb2b49f8b8fafd1e4e6e6e4e1e1d8c6ab9996999b948b
9bc2ddddcdc6c8b6a2968d8f94999fb6cfd6dbdfe1d1b49b9badbd00009f998b89929296
999484797270798b9dadafa29b9babbdbfc6cbaf8f869699999b9996a2c4dde6e1dbd4cb
c6cfd6d1bb9b868ba6b6b4a489767b8fb6d6dddbd4cdbdb6b2a6a2a49f8b828479767676
799bc8d4d1c4b2a6a8bfdbddcdaf8f99b4b6ad8f747f9fbfd6dfddd6d6d4d1cfc2ad9689
94a6a89b8474798b9fb4c2cdcdbd9f867f827d726b7289a6b8c4cbc2a892969d9d9fa8a4
8f86adcfd8dde1e4d6b499948f8b7b6d70869fa494827d7b7f82797d94b8d1d4c6bbc2cb
d1d8b6848ba2b8bda47f6b66626476899dafc2c8bda48f8d99a8b2b4b2b6bdb28f7482b2
cddbddddd8b8898b9499a4abb6c2c4b6997d86a2b6b8a294b2dff1ddad7f74767f8b9d9d
a2b4cdd4d4d6d8d4d1dbdfd8bb7f5b545964667296adb8bbafa49fa2bfdde4e1dddddbdb
d8d4cdc8cdd4dbdfdfdbcdb6a6a2a49d948fa2c4dbdfe1dfd6b48484a2ab998d9ba8a89b
9296a6b2b2b2b4bfdbe4dfdddbd8dbddd4c6c6d4e1e4e4c8a4999699a6cfe1ddd1bda48b
7d86a4bbc8c6b28f8fafc6cbaf8974645960729dcfe6eff1edd8a469596079a2c2d8e1e1
e1d4af9699abafa296a4bfcfcbbfc2cfd6dfddcfc4b8a88f929fabbbc8d1d6dbd1bfb8c2
c8cbd4dfddcba68479798da8b6a6897669646674849bb8c6b69996adcfe6e8e8edebe4d6
c6b8b2a89992898299bdd8dbcfcfd8c4ada4a8aba29994abcddde1ddd6bfad9f99a4b800
00aba4948f969da4a2968479768294a2adb8b2a6a8a6a8b8bbbfbfab9999a29992969689
8bb2d6dfd6cfc4c2c8cfd8d4bfa4949dbbc4b8b2a4968f9dc6e6e1d6cfcdc2af9f999b9f
9f8f827d797d7d797d99bbc8bfa699a8bbcbdfdfd4b88d8ba8afad947b86a8cddfe6e4db
d4d4d6d8d6cdb68f8294a2a696827f8da4bdcfdbddd1c4b6ada49686797486a6bbc6c6af
9996afbbb4a69f968994bbd6dde4e4e1d6b69d9696948b899bb4b8a48f8d94968d7d7076
9bc6d4d1c6c2cfd8d6d1b6928fa6c2cbb896766b6466747f8fa2b4b49f8d94a4b8cdcbb8
abb4bfb89d828bb4cddbdfe1dfc49492a8bfc8c8cbd1d4cbab8b99b8c8c4a699b6dfefdd
b2826d727b8da29fa4bbd8dbd1cdcdcfd4dfe4dbb67f6262697474799bb4bdbdb4aba4a6
b4cddfdfdbd8d8dbd8d4cfcdcfd8dfdfddd6bd9f9ba2a2948b8da2cbdfe4e4e4ddc29494
afaf9d8f9db2b8a6929bafbbb4afb2bddbe6e1dbd4d4d8dbd6cdc6d1dfe4ddc6ab999496
add1dfdddbcdbba289869db8c8cfcba89bb4cbc4a8927d69596276a2d1e8eff1ebc88d5d
57647dabbdd4e6e8e8dbb28f9bc4cdbda8abbdc2b49fa6c2d4dbdbcfb6a69b868b999fa4
afc2cdcdc4bbbdcbd4d6d8ddd8bda294998f8992a2a2948b796b6d8294a8c8ddd1b4a8b2
cde1e8e8ebe8ddd1cdc8c6b89f9289849db8cbd1cdd1dbc2aba8afb2a89d96adcbdbddd8
c8afa2a29fabbd0000c8c8bfb4abababa89b897f869dafb8bfc8c6bfbfb4a6a4a4a29b94
949d9f928b9496897d96bfc8bbbdbbbdc4cfd6cfbba499a4bbc4b8afafad9fa6cdebe1d4
cfd4cfb89b929699998d7f7b849999848292abbbab8f8babcddde6dfd4bd968999a4a899
868ba6c8e1e6e4dfd6d8dddfdfd8c2968296b4c6bda6948fa2bfd4dfdfd8d4d1cfc8b69d
898494afc2c8bf9b8da6c8d4c8b2998d94adcddde1e6e1ddd1b2948d96a2a4a6bdcbbd96
8692a2a6967f707696bfcdcfcdcbd4dbd8d4c4b4b2c2d1d6cdaf8b746b6b70747d8b968d
7d7d92a8bdd1d4c4afb4b6ab998489a8c6d4dbdfdfcda896b2d1cfcbcdd8dbd6bd969dbf
cfcdb29dadd4e6d8b284707b869bb2aba8bfdbdbc8bbbfcdd8e4e6dbb47f666b76827d7f
9dafadaba8abadababb6cfdddbd6d6d8d8d6d4d4d6dbddddd8c6a68d96a4a292868ba4cd
e1e4e4e4dfcbababbfc6b4a4abbbbda694a6bdbfb8afb2bfd8e6e6dfcfc6c8d1d4c6b6b4
c6d8d1bfab998d92b2d6e4e4e1d8cdb89f949fb2c4d4d8c4b6c4d4c4a899846b595d729f
d1ebf1f1e8c2865d59667fa4b4cde8edebd6ab8d99c4d6cfbfbfc8c4a4828dbbd1d6d4c8
a69b9689929fa49694a4b4b4a49ba6c2d4d6d6d4c8b4adbbc6af928b99a29f9b8b7b798f
9db4d6e4ddc4afb4cbdbe1e1dfdbd4cdcfd1d4c6ab96897f8f9da6b6c2cfd4c2ab9d9b9b
9b9fa6afb8c4d1d4c6b2a6a6b2bfcd0000d1d1d4cbb8ada8a69d8d8999afbdc2c6cdcfcd
cbc2af998f949d9f9d99948b8b99a8a8998d9fabadbdc4c2bfc2c6c2b4a6a2a4adb2b2af
b4b2a2a4c8e8e4d8cfd6d4bd9d8f8f92928b827d8dafb69f969dadb69f8286add1e6ebdd
cfc2a6948f949b998d8fa2bfdbe4e1ddd4d8e1e1e4d8bb9494b2c6d4d4c6ad9b9fb8d4e1
e4ddd8d6d6d8cbaf9b929bafbfc4b48d86a8d1ddcfb6968994afcfdde1e6e4dfd4ab847f
94b6c2bdc4c8b48d89a2adb2a28b797b99bbc6cbcfcfd4d8d8d8d4cfcdd1d8dbd1bda289
76706d7076797974767f8d9fb6c4cdc6b6afa2949289899dbbcfd6dbddd4b8a2b8d1c2bd
c8dbdfd8bf9699b8d1cdb49d9fc2d4c8a87d708494a6b8afa6afc8c6b2a4b2cbdbe4e6d6
af826969727f8286928f89898d96a2a69f9bb2cfdbd6d6d6dbdbdbd8d8d6d8d8cfaf8d89
9da8a2948689a4cddfe4e6e6ddcbbbbdcfd8cdb8b2bdbba499b4c8c6bdb2b2c4dde8ebdf
c2a6afc4c8b8a6949db6bbb2a2928992b4d8ebe8e4e1dbcdbdada6abc4d8ddd8cbcbd1bd
a496826b59596999cfe8f1efe4bf8d69626d7f99b4d4ebede6cfab949bb8cfcfc8c8cbc2
a27d89b4cbc4bbb49b999992a4bbc2af9b9496927f6d769dbfc2bfb8b6b6bfcfd8bd9484
94a4a8a499867d8b99b4d8e6ddc2adb2c4cfd1cdc8cbcbcbcfd8dbcdad9686767d7f849d
b8cfd8d4bb96827d8da6b6b4a6abc4d4d1c8b6b2c2cdd80000d6cfd4d1bfb2a8a69f928d
9fb6c4c8cdcdcfcfcdc6b6a29dadc2c4b8a2898492abc2cdbfa4999fafc4cbc2afa29fa8
afb4b2ab9f9ba2a8adaba4abcbe6e4d8cdcdcbb4948d8d8d8b8b898b9bbbc8bdb4b2bbb8
9b8492afcbdfe8dfd1c6b49f8d7f7f8284899bbbd8e1dfd8d4dbe4e4e1cba48fa6c6cdd6
ddd4b8a29ba6cde1e1dfdbd6d6dbd4bba69494a6afab9d89849fcbdfd6bb9f867d96bdd4
dbe6e8e6d6a479768fbbcfcbc4bda88d99b4b8b8ab96848496afbfc6cbcdcfd6dde1dfd4
c6c8d4ddd6c8b49b897d7979797b7f94a4a29696a6b4c6cbbfab948f9b9b969db8cbd1d8
d6cfbdafbfd1c2b8c6e1e1d8bb968dabcbc8b6a49da8afa4846969829db6c2bbafa6a6a2
9996abc8dde6e1c89f7d6962697f9696796260666d707f8f948d92adc6cfd4d6dbdfdfdd
d8d6d4cbb6927f92adb4a89b8d8da2c8dfe6e6e4d6c4bfcfdfe1dfcdbbbbb6a49bbdd1cb
bfb4b8c6dfebebdfb896a2b4b6a8a28f8b9da6a2948b899bbbd8e4e4e4e1ddd1cdbfada6
c2d8dbd8cdcbcbb49d947b6659596b96c6dfe8e4d4b8967b72768299bddfefede1cdb29f
9fadbfc8c6c2b8a8927b82a2b6ad9689848f9292afcfd8c8a88d847d6b5457748f99999b
adbfcdd8dbbb8f7b8da6afad9f89767f9bbddbe4d1b2a2abbbbfbdafa4afc4cfd6dfe1d4
b49d897682847f92afcbd8dbbd8f7b768dafcbcdbbb4c2d6dfdbcdc8cfd8e10000d8cdcd
cdbfaba2a49f928994adc4cbcfcfcfcfcbc2b4adb6c8d6d8cdad867d8fb2cfdbd4bd9f99
afc4c4ad947f7f92abb2ada294949ba2a6a4a4b4cfe4e1d8cfcbc6ab89848b8d898f9ba4
b6cbd8d6c4bbc2c2ab9ba6b2bfcddfe1d8cbb29b84726d72798ba6c2d4dbd8d6d4dbe1e1
dbbf9b99b6cfd1d8dfd8b89b8d92b8d6dbdddddddbdbd4bd9d86849292898484869bc2db
dbc6a87f667292adc4dfebe6c892727b8fb8cdc6bbada2a2bbcbc2bfb29b8d898d9babaf
adabb4c6dbebe8d4bbb6c8d4d6cdb6998d8b84868992abc8d4cbb6a29dadc2d1cfb8a29d
abada29fb6c6c8cdcbc2b6b4bfcbc6b8c4e1e4dbbf998292b6c6c4b8b2a28f7d645b6682
a8c6cfcbbfb2a49b8d849dc2dddfcfaf8d7b6d647094afa266444b505254667b8b898289
9db6cbd4d8dfdfddd6cfc2af9b867d8fadb8b2a4948d9dc6dde6e4ddcdbfbfd4e4e8e8dd
c6b2a69d9fc2d1c6bbafafbfdbe8e6d8b89f9fa4a4a4a69d99a6ada28d8d96adc4d1d6db
e1e4dbcfcfc6b2a4bdd6d4c6bdc2c2bbad96705b5b627b9dbdd6ddd6cbbdad947f79829d
c6e1edebddc4ad9996a6b8c4c2b4a49484797d8fa4a48f7b747d8292b8dbe4d4b294867d
695d6d82929f999db2c6d4dddbbd927986a2b6b6a68b747da4cde1e1cfb2a2a6b2b6ab96
8d99b2c6d1d8dbd6c8b2927f949d9496a8c4cfc4a88f7d7b8fbbdde6d8c6cddbdfdbd1cf
d4dde40000d1c4bfc2b4928d9b948b7d7f92a8b8c4cbcfcdbfb4b4bbc8d4dfe4dbbb8d76
84abd1dfd8bf9f99afbba88b7b727484999d948b8d99a6b2b6b8bbbdcfe1e1dbd4cfc8a8
7f797f868da6b4bbcbdde4ddc8bdc4c8bfb4b4a8abbbcbd6d4c2a6897469697284a8c2cb
d1d4d6d4d4d8dddfdbc6ababc2cfd1dbe1d6b492827f96b4cdd8e1e1dfddd4b8896d6d72
706b6d7b8ba6c8d8dbcdad7f62666d82abd6ebddb27f72869bb2bdb6a4949bbbd8dbcbc4
b496897f7f7f8282797486a4c4e1ebdfc6b6b8c4cdc4ab928b8b868d9bb4cfdfdfd8cdb6
9fa6c2dbe1d1bbadadad9f94a6b2afada8a4a4adbfc8bdadb4d4ddd8bf9676769dc8d4cf
cbbb9b745b607999b8d1ddd8cdc2b8a88d768bb2c6bda8927f79747b92adbb9f5b394244
444962768686848fa4b6c4cdd4d8d8d1c4b29b8d8d8682899dadad9f8f8694bbd6e4e1d8
cdc2c2d1e1e8e8dfc49d8b8f9fbfc6bbafa4a6bfdbe4ddd4c4b6a89b99a4abadb4bfbfab
99a4b8c4c6c8cdd6e4e8dfd4d1cbb6a6bbd4d1c2b8bdbdc6bf9f69525b698badc4d4d8d8
d4cfc2a68d7d82a2cde4e8e4cfb29d8d8d9fb6c2b69f99948986868fa2aba2866d697492
bfdde1d4b89986766b7092a8b6c6bdb8bdc8d6e1ddbd92797f9bafb4a486727babd6e6e4
d8cbbbafb4bdad94868996a6b4bbc4cfd1bf9b8ba6b8afa4a8bbbda89d9d8f868fbbe1eb
ddcfd1dbdbcfc4c6cfd8df0000b8b4b6bba67b7689827b72747b899badb8c2bda299a8c2
d1dbe4e8e4cba47b7ba6d1dfd6b89996abaf9d82797f86899499969299a8b8c2cbd4d6cd
cfdddfdbd6d4cbab8274727b94b6c2c2d6e4e6dbc6bbc2c4c2bbaf9996a8b8c6c2ab8b76
6d696b728dbdd1d1d1d1d4d6d6d4d8dfddcbb6b4bdc4c8d4ddd4b6947d747fa2c8d8e4e6
e1ddd4b88669625b59545d7499bfd6ddddd4b6896b707082a8d4e8dbab7f7f9badb4afa8
948699cbe1ddcdbfa4847d79746b625b5b5d6d86a6c8dde1d6c6bdbdc2b49d8f8b868496
b2cbd8e1e1ddd6bd9f9bc2e1e8dfcfbda89d8979868d89867b798496afbba496a2bdcbc4
b29b7f748dbdd6dbdbcfad7462769bafc4d6dfddd1c8c2af8b707b8d8d7b70747b7f8292
afbfbfa45b343739404b62767f8696b8d1d4d1cfcfcdc4b4a4927f7982827f7f89969f9f
9d9492a6c8ddddd8d1cbcbcdd6e1e8dfc49b848ba4b8b8ada89fabcddfddd1d1cbc4bda6
9da6b2c2cbcfcdb6abc6d8d4c6c4c8d6e6ebe6ddd4c6b4a8bbcfcfcbc6c4bbc4c4a46d52
5b6994b8cdd8dbdbdddbcbb29b8682a4d4e8e4cfad928d898b99abb4a48d929b9996949b
a8b2ab8d6b607292c4ddddd4b8998979707696abbbd1d4cfcbcfdde6dbb48d8286969f9d
8d79727fafd6e4e8e1dbd1c2bdc6bba48f898b99abafb8c8cfbb9b99b8cdbda292969ba2
a8ab9f8f99c2e1e4d4cdd1d6cfc6c2cbd1d4d600009ba6b6b89d76727d76747072767d8b
9fabafa48b7f96bfd6dde1edebdbbb8b7da2cbddd4bd9b94abb6af9f9dabafa8a8a8abab
adbbc8cbd4ddddd6cfd4dbddd8d8cdaf8b79707996bbc4c4d6e1e1d6cbc6c2bbb8b4a48f
8996a4b4ab8f7b7b7f7b767286b8d1cfcfcfd6d8d6d4d6ddddcdb6adaba4a6bfd6d4bd96
7b7d8db6dde1e4e6e4dfcdab897262574b4b5d7fafd4dfdfdfd8c294727b8ba2bddbe8db
af8b8ba6b6b6b2ab948ba8d6e4ddcfbba2898279706259575b607089a4b8cfe1e1d6cbc4
af948484827d84a4c2d4dfe1e1e1dbc2a29dc6e4e6e4d8c6a4826d6b7679746b60627084
999d898b9fb4b6adafb69b848d9fbfd6dbcfab796d89a8b6c8d4dbd8cdc4b8a47f5d5b60
5b575b70828b8b99bbc8c8af703d2e303d4d62747d8bb2d6e4e1ddd4cfcdbfad9d928276
797b7b797f8b9bb2bfbdab9fb6d1d8dbd6d6d1c8c8d8e4e1d1b2948fa6afa69b999db8df
e4ddd4d1c6c8d1bdabadc6d4d4d1cfbbb6d8dfd4c4c4cbd6e8efebe1cfb8a8abb8c6cdd6
d8cfc2c4bd9b6d575d6686adcbdddddbdbdbcfb6a2897f9dcfe6d8af86767d848b929ba8
a48b8992969699a4afb8b499726b7b92bdd8ddd4b89f9d927f767f8fadd1d8d6d4d8e1e8
ddb694949fada8947f747986abcddbdfdbd6d4bfb4c2bdaf9fa29fb2cfcdc6c6c2a48696
bbc6b2967f7b8496a6a6998d9fcbe1e1d6cbc6c6c4c6cfd8d8d8d400008ba4ada68d7979
7f7f86827672798ba6b6b6a489798bb6d4dddfe6e6ddc49f8b9dbfd6d8cbab9fb6cfcdbf
bfc8cbbfb8b6b8b6b8c8d4cfd1d8dbd1c6c4cbd8e1dbc6a68b7f797f9fc2c8c6d8dfdfdd
d8d4c8b6afa6968b8489949d94868fa4ab9d8b797ba4bfc4c8cfd8dddbd1cfd8d8c6ada4
947d7ba2cbd4bf947b8fa2c4e4e1dfe1e1dbbb8f7b6d6054505d799bc2dbe1e1e1dbbf94
7686a6bdcbdde6dbbd998b94a6afafa68f8fb6dbe4dbd4c8bba68f7f70605d6672727d8f
a4b4cfe6e6ddd1c299797476767484a6c4d4dfdfdfe4ddc2a6adcfe6e8e4ddcda6826d72
7f867f6b5b60748b9b998992a6ada8b2c6cbaf96928699b8c8bf9f7f748299adbdc6cbcd
c6b49d8b705249494b546272828b8692b8c8c8b286522e323d4d62768da8cde1e6e1ddd8
d6d6cdb6a49d8f7b727070727f8b9fc4d4d8c6a6a6c2d4d8d8dddbcdc8d6d8dfddc6a696
9b9b92898d9dc4e6e6e4e1d4c6c8d8c8b2b2d1dbd1cdcbbdb6d4ddd4c8c8cbd1e6efe8d6
bfa8a2adbdc8d1dde1d8c8c4af8664595d607092bfdde1dbdbd6c4a496847d94bbd6d4ad
827274828d9ba6b4ad89797f8d96999dabb4b6a4827d8b94afc6cfcdbdafafa28b79727f
a6d1d8d6d8dde4e4d8bba8adbdc8c2a88b899ba2a4b2c8c8c2bdbbada8bdc4bbb4c6c4cd
e6e1d6c4ad8b7689abb6a89b8d898f8f96998b86a2cfe4e8ddc4b2a8afc4dbe4dfdbcf00
00768f8d7f797d8b969b9f9982707494b6c8c8b494848da6cbdddfdfdfd4bfaf9f9badcf
dfd1b8b4cdddd8cbcdd1cfc4bdbfc4c2c4cdd6d1d4d8d6c6bdbbbdd4e1d6b49284827f8b
a8c4cbcbdbdfe1e4e1dbcdb8a69d948d827d848d94a6c2cfcbbda6897b8da6b6c2cdd8df
d6c8c6cbc4af9b928472728bafc2ad867996abbfd4dbdfddd6cdab76645b524d59728da6
c4d8dfe1e1d6af8b7b8bb4c8cbd6dbd6bf96747996afb4a89494b4d6dfddd8d8cdb69f86
6d606b86999992929bafcfe4e6e1d6bd8d707072727084a8c4d1dfdfdfe1dbbfa6b6d4e6
e6e4dfd6bda2897d89969486726b7b96a8a6999fa8a2a6bdd1cdb49d968f898d9d9d8f82
79767f949da2a8afab968279705d50474954626b70767684a8bbb6a2825d44424959748f
adc6dbe4e6e6e6dfdbddd1bba8a6997f746d6d707f8fafd1dfdfd1b2a2afc6d1d6dbd8d1
cfd4d1d8dfcdaf968d89868b929fbfdfe1e4e4d6c8cdd8c6adadc8d6d1cbc6b8b4cdd8d8
d1cfcfd6e4e6d6b8a49da2adbfcdd1d6d8cfbbb49f76646670666986bbdde4ddd6c6a88b
86827f96afcbd6c29b7b76869bb2c4cbb284748299a8a2969da6aba48f8d94929ba2a8ad
adafafa28f7f797d9dcdd6d4d8dde4dbc6b8b2b8c8d1cbb49fa8c4cbb6a8b6b2a69b969f
b2c8cfc6c4dbdbdbebe6d8c2ad947f849fb2b2afa6a4a49692948b899dc4e1e8dbbba299
9fbddbe6dbc8b400005b6b6d6d798ba4b4b4ab9b84707da4c2cdcbbfa8a29fa2c2d6dbd8
cfbfafb4a68d96c4dfcfc2c4d6e1ddd1c8c6c4c4c6cbcfd1cbc8cbc8cfd4cdbfb8b6afc6
d4c6a4867f86898fa6bdc8cddbdfe4e8ebe1cdad9fa2a69f8f7f7b86a8cfe1e1d8d1c2a6
8b7f96b6c8d1d6d8cbbdbbbbab948b827d797b84969f947f7d96abafb4c6d6dbd1c29964
524d4b4b5d7992a2b8cdd8dddbcdab968b86afc8cdd6d6cbad866b749fc2c8bbaba6b6cd
dddddbddcfb8a6866960769db8b8a28d94abcde4e6e4d8bd8d6d6d70707289b4cbd6e1df
dbdbcfb49fb4cfdddfe4e1ddd1bfa2868b99a4a696847f94a4a2969da4a2afc2cdc8b8a4
a2aba48d868d9694927d7076797d848d8f847b7b7b7464504752606666696d7d9babada2
867469595b728fa6bbcddde4e6ebebdfd4d4c6b4abafa28d8d867f7b869dbfdddfd8c8af
9b96adbfc6c4bfc6cdcdcfdbe4d8b694847f89999fa8c2dddde1e1d4cdd4ddc6aba8c4d6
d1c6bdb2adbdcdd8dddbd8dde4ddc4a899999ba2b8cdcdcbc6b89d948b76727f897b7084
b8dbe4d8c8a68b8286898da8bfd1dbcfb4948b94a4b8d1d6bb8d7f8fa8b8ab8f898b949b
9da29d8d868282899dadaba49b96928fa2bdc6cfd8dddfcfafa4abb6c2c8c2b2afbdd4e4
cfb4afa29689869dbfd4dbd1cdd8dddfe4ddcfc2c2b2927f99b2b8b8afa8a6948f968f92
9bb4d8e1d1b49d969db6d4dfcfbfa800005059627089a6bdc2b69f8b766d89afc6d1cfc6
bdbbb2a8bbcdcfc8b29d9fab9d7f86adc8c4bdc2d6e1e4d4bda6a8bbcbd1d6d8cdc4bdb6
c6cbbdb8b6ad9fa8b4ab9484869294929dadbdc8d6e1e8edede4cba69dadbdb8a2867b94
c4ebede6e4e1d6bf9d849bc2d1d6d4c8b8afb4b8ab9d99897f7b7d899ba6a2928b99a6a4
9ba8c2cfcdb6895d54595750596d8294a6b6c2c8c8c4b8b6a4899bb6c6d8d6c4a484727d
adcbcdc2b6b2b4cbdddfdbdfd6bda47d62647fa6c4c8af9492a8cde4e8e4d6b4846d706d
6d7089b2cdd4ddddd8cfbd9d8fadc6d1dbe1e1ddd8cfb6968b96abafa8927f828b8b868d
9da8b4bdbfbfbfbbbbc6c6b49da2adafab9274666b7279848b898484827b725b49526069
6d707b8fa2b2bbbbab9d8d76798da4afbfcdd6dfe4ebe8d8cbcdbfafadafababb4ab9d94
8f9dbdd6d1b8a29b96969fabab9d9bafc2c4d1dfebe4c4967f7b8b9da8b4cde1dfdfdfd1
cfd4d8cdb4adc8d8d4c4b4ababb4c4d6dfe1e1e6ebddc8b49b969da6bfcfcfc6bfb29684
8286899294847b84abd4ddcfb48f7b8294999db8d1e1e4dbc4b2aba6a2afcbd8c8a6929f
b8c2a884747b8d9da6b2ad8d79727b94b6c4b8b2b2b4b6b6b4afb4c4d6ddd6bf9d8d929f
a6adafafbbc6d6e8dbbfa8968d8b94abc4d6ddd6cdcfd6dbdbd6cdc8cfc29b7686a2aba8
a2a29986848f929fafc2d6d8c6af9996a2b6cfdbd6d4bd00005b66667496b8c8c4af8b70
64668bb6c8d4cfc8c8cbc2afb4bdbfb4998d9fa89d86828d9da4a2afcddde1d1b4928fab
c4d4d8d6cdc4bbb8c4c4b2a8a29b8d8b8b867d7f929fa29d9d9badc4cddfededede6cfa8
9bafc6c2a88b7fabdff8f6ebe6e4dfc49d849fcbd8d6c8bdb4b4b8bdb6b2af9f86798499
b2bfbfa8949b9b948d9bb6c4b8a28672746d5d52505b69798692969dabb8c2c6b28d8994
a6c4cfc6a88b7984adc6c4b4ada8a8c2d6dfdbdfdbc29d72606b84a4c2cdbfa292a6cde6
e4d8bd94766d706664697d9fbfd4dbdbd6c6a6867f9fb6c6d4dfdfdbd8cfc6b29494abaf
a68f797079868d8d96a8b2b2b2b6c4d1d8dbd6c6afadbdc4af9b86747274797d7f7f7d82
7d7674624d596b7b8494a6b2b4b8c4cbc2af9b9299a6adb2bfcfd6dbe1e4ddcdc6cfcdc2
b2a4a4b8cfc2ad9f9292a4b8ab928494a8b2b2af9d828299afbdd6e6edebcd9d72707f94
a8b4c8dfdfd8cfcbcbcbcbc6b4afcddbd6c4ada6afb8bfc8d6dfe6e8e8dfcfbda499a2b2
cdd6d1c6c4b89d82849ba2a49d89828ba8c8cfbfa48b848da6a8a8c2dbebeddfc6b8bbb6
adadc2d1cfbba8b4cdc8a4766d8294999fb4b48d797489b4d1d8cdc4c2cdd6d6c4ababbd
cfd6cfb89b867d828999a8b6c6cdd8e6e4cba8999496a8b6bdc2cfcfc8c8cdc8c2cfd4cf
c6b6946d7692a2a4abafa68d7d848fabc8ddddd6cbb8a299a6bbcfdddfddc200007b867b
82a2bfcdc8b489665b6692bdcfd8d4cdcdcbbfafa2a2a49689899fb2ab96867d7b82849b
bdd1d4c2a48b8da4bdd4dbd4c8bfbbc2c6bda69486848b867d76707f9dadb2afa899abc4
c4d4e1ebebe6d1ab99a6bdbfa88b8bc6f1f8f8e8e1dfd8bd9486a2cbd8c8b6b8bbbbb8bd
bbbdbda686768ba6c2d1cdaf8f8986898fa4b8b49986868d8f7d604d4d545b6672797979
86a2bbc4af898b9292a8b8bda88d7b82a2bdbdada8a6a4b6cddddfe1dbc292706976849b
b6c6c2a8929bc4e1d6b694827972695d5d66768dafcbd1cfc8b6947d7d8b9dadc4d8dbd1
cbc8cbc4a499a6a49b84706d86a6b6aba4afada6a2b2cde1e8e4d6bda6afc6c8ad968d7f
76706b6b6b6b707b7b747262505b7999afc4cdc8bdbbc4cbbb9f96a6b4b8b8b4bbcbd6d4
d4d6cbc4c6d4dbd1b69996b4cfc8b4a6998f8f99968b8ba4bdc2b8b8a27f828d9fb8d4e6
ebe6cd9d6d6b79869babc2d6dbcfc2bfc4c4c2b6a6adcfe1ddc8b2abb6bfbdb6c2dbe4db
d1c8c4bba499a4bbd6d6c8c4c6b8968492abb8b8ab8f8492afbdbdad99898d9fadabafcd
dfebeddfc2afbbbfbbbbc4cfcdc2b6c2d6d1a47270899284869ba48f827f96c4dfe1dbcb
cddde8e4cbaba8b4c2cdcdbda292897f8296b2c2cfd6dbe1e4d1afa6a29fb2b4ada8afbb
c2c4c4b8a8c2d1c8b2a696797f96afbfc6cdc6a4847b89abcfe6dfd6d4c8af9dabb8cddb
e1d6b400008b9d999bb4cbd1cdc2a2795d6999c6d6ddd8cdc2b4a69f8f86847f7f8699ad
b2a48b79726d7692b2c2c2ad8d8492a8bdcfd6cfc2b8bfcdcfbfa28b848d9f9f8d7b7484
a4b6bdb8ad9da6bbbfc4d1e4e6e1cfaf969bb4b6a494a8dbf4efefe6dfddcdb49f9dadc6
d1b6a4adb2b8bfc2c2c6c2a482768babcfe4dbb88d767d8fa2b2b29b79727f8f9689694d
4d575d72848d8979768ba2b4a68d99adb2b6ada49d867b8496b4bfafaba29babc2d6dddd
d6bf927b797d828fa8bbbbab999dc2e1d6b4948b7f7262595d6b7686a6c2c8c8c2ad8d7b
7d848d96a6b8c6c2b6bdcbcbb49d99948974646d94c2d4c4b4afa2928da8d1e8ebe4cba6
92a6c2bfa88f7f726d66626262646b76766b665b50597fadcbd8ddd6c6bfbfbb9d848baf
c2c6c6bbb8bfc8c8c8c2b4b6c6d8dfd6c2adadbdcbc2b4ada4998f969fa6abb8c4c2bbbf
af928f9ba6b2c4d6dddbc49d7d6d707689a6c2cfcfc4bdbfc2c2c2b6a6a8cde1e1cdb6ab
b2bfc2afa8c6cfbdafafb6ad998fa2c4d6cdb6b8bfaf8d849bbbcbc8b28d7d8fafb8b8a8
8d828fadb8b6bbd4e1e6e4dbc2abb4bbc4cdd4d8d4c6b6bbcdc69f74727f8474707f8f8d
86869fcfe4e4dbcfd4e4e6ddc8b2a8a8afc4d4cfb6ada28d8699b8cdd4d6dddfdbc6b2af
aba2b2b8bbb6aba6afc2cdbb9fadc2bba8aba88b8496b8cdd6d8d1b28d7d8dafd1e1dfd8
d6cdb4a4abb4c6dbe4dbbd0000749da8b2c8d4d8d4c6b4895d6b9dc8d8dfd6c2ad9d948b
7d706d7684898699afaf947b70707f9bafafab997f8ba6bbc6cdcfc6b8bbcdd8d8c29b86
8da6bdbba4867d869fb8c2bbab9b949ba2a2adcddbd8c8ab8b849fa8a2a2c2e4efebe6e1
dbd1bfb4b4b6bdc6cbb49b9b9fb6cbcfcbcbc49d797084a8d4efe6cb9d7d8499a8b29f82
747076899b997d5b595d627b99a89d7f6d7d99afafa4abbdcbcbab8b897b798492adb8ad
a494899bb4cdd8d4cbb69d8d867f848d9dafb2ada4a6c8e8e6d4bda88b70605d66707986
abcdd1d1c8ad8d7d828994969499a2a4a2b6cdd1c29b827f74625d698fbbcdbda69d948b
849bcdebede6c69b8496afb6a2846b5d62645d5d6266696b69605b57546289b4cfdbddd6
c8bdaf9d86747fabc6cfcbbdb2adb2bdc4bbababbfd8e6e1d4cfd1d6d6c6bbb6afa4969b
a6bfd1d1c8bfbdc4b8a6a6afb4afb4bdcbcfc6b6a279646d7d9fb8bfb6adb2c2c6c8cfcb
b8b2cbdfe1cfaf9b9db2b8ada6b4b29f9dadb6a68f86a2cbd6c6afb2bbaf94899fc4d1cd
ad7b6b82a6bbbba68b8292b2c6cbcdd8e4e6e1d8c2a8a8b4c8dbe1e1d6bfa29dada48d74
6d747974707d8f8f8d94afd4e4e4dbd4d6d8d4d4cfbdab9fa6c2dddfcbc4bba48f99bdd4
d4d1dddfd1bdbdc2b6a8bdcdd6d4bba2a4c8dbc8a6a2b4bfb6b2ab948289abc6d6d8d1ad
8d899bb6cfdfddd4cfcbc2b8b4adbbd4e1dfcf00005b8da6b8cbd4dbd4c6b48f697296bd
d4dfdbc4ab9d927b6b6266798b8b7b89b2c4a886767d94a8aba29489849fbdcbcdcfcfc4
b4bdd6dfddc49b8696b6cdc8a889828692a4adab9d92897f7d7f89a2c4c8b49476748b9d
a4b2cbe1e8e6dfd4c2adabb8c6c6c6cdc8b49b8f94b2cdd1cbc6b88b6b6679a6d6efedd8
bba69d9b9b9b8f86897d79869fa68f726462647b99aba27b647dabc2bfbdbbc4cfd1b48b
76707686949fa2998f827d92b4cfdbd4c6bbb4ab9984848f99a8b2b2aba4c2e6e8dfd4c2
9b74646066707b8bb6dbddddd1b88f7d89929f9f9692969da4bfd4d8cd9d707269606269
7fa2b6ad9b9ba8a69494bfe4ede6c4998494adb49b795b4d606254575d62605d5d5b5b59
5d7299bbcdd1cdc4bbaf9d8982767694bbcdc4b4a49da8bbbfb6afadb8d1e6e6d8d6dde4
e4d6c6bdb8a89999a2c4e1dfd1c2bfc4bbb2b6bdbdbbb8bdcbd8ddd6bf8464707f99a6a8
9f9496b4cbd6ddd8cbbfcddde1c89d7f869ba6adbbc2b2999bb6c4af928dafd4dfd1bfb8
bfb89b869bc4cfc49b66607999b4b6a89b96a6bfd1d8d8dde4e6e4d8c2a8a4b6cfe1e4e1
cfad8d7f827d7972707d8f92898f968f9fadbdcfdde1ddd6cdc4c6d4dbcdaf9dafcfe4df
cfd4d1bd9d94b2cdcfc6cbcdc2bbcdcbbdb6cfdbdfddc2a2a2cbddcfb4a8bbcdc6b29f99
898696b4cfd8cda6949fa8b8cbd8cfc8c8cfd4d4c8b6b4c6d8ddd60000598badbfcbd1d8
d4c6b49b7f74829fbdd4d8c6a4948b79726d6d7686897f9bc4d6bd9d86899da69b897f82
8db2c6cbcfd4cfbdafbbd6e1ddc6ab9ba4bfcfc4a2847d828b96948f8d929284797f8b92
a2a49274696d7d8fa6bbcbd6dbd8c6ad9694a2bbcdcdd1cfbfa48f8d99b2c4c6bfaf9476
6464749fd1edefdfcfc2b49d82797f8b969489899ba69d84695d698299a49b76668bbdd1
cbc6c6cdd4d8c8a47b6b748694968d827d7d7f94bddddfdbcfcbd1cbaf92868f9ba6b2b6
ad9dafd4dfdfdbcfa6847669696d7484b4dbe1e1dbc89d848994a4a49da6b4bfc6cfd8db
d4ab7d7f766b6d6d768b9fa4a4b2bfbfab9db4d6e4e1bf94869db8b6966d5249595b4b50
575957575b6262606279a2bfc2b8a8a4a8aba494827b797f9bb6bdaf9b929fb6bfb8b2ad
b8cfe6e6d6cfd8e6e6ddcdbfb8a8969299bfe6e4d8c6bbc2c4bbbbbbc2c8c8cdd8e6ebe6
cf96747b8699a2a4998b869bbfd4d1d1c6bdc2d6d8b88d767f8d9fb6cfd6c6aba2bbcbbb
a2a6c6dbe4dbcbbdc2bd9b7d89afb8a6825d5d728da2a8a49fa6b6c8d4dbe1e4e1dfdfd6
c4afabbfd8e4e1dbcfb89f89796d6d70748fa8b2afa89d92adc2c4c8d1dbddd1bdb2bfd4
ddd4b8a6b8d8e6dbcdd8dfc8a48996b6c2bbafa49da8c4c4bdc2d4dddfdbbb9694b8cfcb
bfbbc4cfcbad9ba4998d8d9dbfd8d4bdb6c2c2bdbfcbbdbdcdd4ddddd8c8bbbfcfd8d800
007db2c8cdcfd4d8d6c6b2a2947d7b94b4cdd6c8a2867f7f827f79727b868fb2d4dbc8b2
a29699948472707b8ba6b4b8bfc6bda69dadc8d8dbcfbfb8bbc4c8b4927d79849bb2ad99
8f9da696848f9f9f94826d5d5d646b7d9fbdc4c6c6bda48f92a6b4bfcdd1d4cdb2968b96
a4adafada48f7669646479a2cfebede4d8cbb48f70697b94a4a69b8d8b99a28f6d5b697f
8f948b746d8fc2d8d1c8cdd4d6dbd4bb947d767d8b928b7672798294c4e4e1ddd4d4dbd6
bfa28f94a2a8b2b4ab969dbfd6ddddd1ad94897976726b769fd1e4e8e1d6af8d848d9da4
adc4d4dbddd4d4ddd8bb999694897b7274829dabb6c6cdc6b4a2adc6d4cfa87d829fb8b2
865b443d494b4449525450525d6b6b625d729db8b8b2a29b9fa8ab9f898282797f9db8af
9b8b92a6b8bdb6b4c4dbebebddcdd1dddfd8c8bbb8ad9b9494bde8e6d8c4c2c8cdc4b8b8
c4d1d8dbe1edf1efddaf8f8b94a2a8ab9b8d868fafbdb2b6b4abadc2c2a484747d89a2bf
d8ddd4bfa8afbbb4adbbd6e1dfcfb8abb4b69676769299927f645b64798f9d9d9da4abb6
cddbe1e6dfd8d8d4c8b6b4c8dfe8e1d8d8cfbb9d846d696d768fadc4cdc2a699b2c4bfbf
bfcbd6c6afadb8cfd8d1c2b8c4d8e1d6cbd6ddc69f7f849fb6bbab8d828da2b2b8c4d1d6
d4c6a2847f94adbfc8cdc8bfb69f96a4a29b8f8da6cbdbd6d6d8cdb4a6afabb6cdd8dddf
ddd6cdc6c8d4d80000adcfd8d6d6d4d6d4c8b4a69f847f9bc2d8ddd4b694848b86847f72
747f94b8d6ddcdbfb6ab9d8d7f6d6d7b8d9fabafb4b8af9d929bb2c4d4d4cbc8cbc8b696
7b76768db6d1d1bba8adb4a48f9db4b4a68b6d595b626b7b9db8bbb8bdc2b8b4bbc6cbcb
cdcfcdbda494949fa496847f79706964666b82afd6e4e6e4dfc89f79666984a2afaf9d86
79869489726469707b84847d7b92c4dbd8cfcfd4d6dbdbcfb49f86767d89897d72768696
c2dfdfddd8d8d8d4c8b8a29da8abada89b8b8fabc8d4d1c29d847b7979746d748fbde1ed
e8dbb894828692a6bfd1dde4e4dbd6dddfd1b8afb2a884747489abc4cfd4d1c2a899a2af
b2a689747f929d8f644439343d42403d4247444b5b6d726457668fabb8c6bba69b9fa8a8
99897f79748fb2b2a2928b8d9da8abbbd1e4edede1d1cbcfd1c8b6afb4b2a69d9dbfe1df
d1c8cbcfd1cfc8c2c6d8dddfe6eff6f4e6c6a4969ba2a4a8a29b9db4c4c2b4b6bbb6b4b6
af94796d7486a4bfd4ddd8c6a89da2a8b6c8dbe4ddc6a899a2a68b706d828f9d997b605b
708da2a6a6a2999dbdcdcfd8d8d6d6cfcbc2bfd4e6ebe6dfd8cfb89d8d7f7676848fa8cb
d6cba88f9badafb4b6c6d4c2aba4a8bfcfcbc4c4cfd8dbd4cfd8d1b4927d8294a8b6af8f
7d7d869fafbbc8c4b4a2867674798dadcbd6c6a699949296a8afa49696b6dbdfddd4bfa4
94a2adb8c6d4dbddddddd8cbbdc6d10000b8c6cdd4d8d6cfcdcbb8ab9f8b89a4cddfe4dd
cdb49f9b8f897f7274849bc2dddfcfc4c6cbbfaf9d7f76849db2bdc6c8cdcbbba89d9fad
c2cbcbcbcfcdaf8972747d9dc6ddddcbbbbbb49d94a6c2c6bba68d6b646b7b8fa2adb2b4
c4dddfdddbdbdbd6d1d1c4ad9f9fa8afa68666646469707274798fc2dfe1e6e6ddbf8f6b
666682a4b2ab947d70767f7b7976726d798d928f8b9dc6dbdbd6cfd4dddfe1ddcbb49682
82899294827f8f99bfdddfe1e1dfd8cfd1d6c2b6b4ab9d8d7f7b8299bbc6bda8866d6264
6466727d8dafddebe6d8b899868692adcdd8dfe4e8e4dddfe4dfd1c6c6b68b747692b6cf
dbd8c8ad928b949b928484949b998670503b34343d423d343239404754697062526082a4
bfd1c4a6999fafb2a48672706d7b94a2a8a28f7d798292bddde6f4f6ebd8cdc8c2afa4a8
afb2aba29fbddbdbd4cdcdcfd4d8d6cfcfd6d6dbe4e8efefe4c6a6999d9b969b9fa8bdd6
ddd8cfd1d6d6d1c6ad866d647086a4bbcbd6d8cfb8a299a8bfcfd6ddddcfbbada89d8672
70829bb2ad8b6960728da4adada6968da2adb6c8cfcfcbc8c8cbcddde8edefe8d8c2ab99
928f898b9b9da8c2cfc29b7d7b8b99a8bbd1dbd1bba499a8bbbbb2bdd6d6d1cfd8dbc69f
8f84828fa2b2af9684828da4b2b6b6ad99847974747682a2c6d1bb9994969292afbfb6a4
96afdde4dbc8b8aba2adbdc2c2cbcdcfd4d8d8c6afb4bf00009494a2bbd4d6d1cdcbbbab
9d8b8fafd1e4e6e6ddcdbdb6a28d7b72849db4cfe1e1cdc2cbdbdbcfb48b7d8fafc6cfd4
d6dfe1d8c6afa4abb2bbc6cdd1cdb89f847b8fb4d4ddd8cdc8c8b49996a8c2cbbfb4a27d
6d70849ba4a6a8adc4dfe6e6e4e4e6dfd8d4bb9fa2adbdc2af896666727f867f82899dcf
e6e4e4e1d6b88f7670667da2b2ab927966666d76828b8b8d99a6a4a29fafcdd8d8d4cdd6
e4e4e4dfcfaf99948d8f99a2928f999fbfdbe1e8e8e4dbcfd6e8ddcdbba6948274768ba4
bbc6bfa6866d5d595b667f94a2b8dfe6e1d6b89b8b8d94afd1dde1e4e4e4dfdfe4e1d4cb
cbbb967d7d9bc2d1d6cdb28d767d8b948b849bbbbdad8d6b50403b3d474940342e34424b
5462695b506286adc8d6c4a299a8bbbfb68f76827f7676849ba4967f707086bfe4e6f6fd
f4ddcfc4afa29fabafb2ada296a8cbd4d4cdcbcbd1d6d4d6d1cbc6d1e1e4e6e4d8bda49d
998b828999bbd6dddfdddbdbe4ebe4d8b88b695d667f9db4c2cfd8dbcfbbabadbfcbd1d8
dbd6cdc4b6a28d767286a8bdb4947269768699a6a6ab9d898b99afc6c8bfb6bdc8cfd4df
e8eff4efdbb6a49f9d9694a2afb2abadb4a68d7d767f8d9db4cddde4d6b89f9494969bb6
d8ddd1c8d4d4bfa4968d8d9da8b4b8afa4a6b6c4c4b8ada2927f797f847f828fa8b4a69b
a8a28d92b2c2b6a692a6d1dbcdbdbfbbb6bfcbcdcbcbbdb2bbc8c8b8afafb8000060596d
99c6d4d1c4b8ada2927f8bb2d4dfe6ebe1d4cbcbb6997d7b96b4c6dbe6e4d1c6cbdbdfd4
af847d96b8c8d1d6d6e1e8e1d8c4b6b8aba8bfcfd1c6bbaf9b899fc6d8d6cdc8cbc8b299
96a6bfcfc4b6a48470707f8f969fadafbbd1dfe6ebebe8e6dbc4a8969fb2c2c2a8846d6b
7d8f9289898f9fcde6e4e1dbcbad9d998d767999b2ad947459596d828f99a2adb4b4b4b6
bdc6d4d8d6d1cfd6e1e4e6e1cdab94948d8d99a6a29d9f9fb6d4e4e8e6dfd8d1dbebe1cb
b4a8a69b84849db8c2c8c6b49476645d64799dafb6bfd6e1ddcfb8a4999b9fb6d6dfe4e4
dfdfdddde1e1d6c8c6b6968486a2c6d1cbb6997d70768692928fb2d4d1bd997659494752
59574d3b343944505960645b576b8dafcbd8c6a6a2b4c8cdc2a8a2b4b29679798994968f
7b6d84bfe4ebf6faedd6cdc2a8a4abb2adb4b8ad9fa2b6c6cbc8c6c8cdcfd1d1cdc2b6bf
d4dde4e1d8c2af9d847979849fc6dddfdfdfdbdbe1e8e8dfc6996d5b627492abbfcfd8df
dbd1c2b4b8c2cbd4d8d8d6cdbda68f7b7484a8bdb4997d797f868b92a2b8b69f999fb2c6
c6b8abb2c2cfd6dde4edf4f4ddb6a6adaf9b9bb2c2c2af9d8f867f868994a8afb6c2d6e4
e1c8a484798299bbdbe1d6c2bbb8b8af9f949badb2b6c2c8cdd1dbdfd6c6bdb29f89868f
9996928d8f9dabb6c2ab8d92b2c2b6a88d8dadb4b2b6c6cdc8c4c8cdd1d4c2a8a2b4b2a6
b2b8bf00004749608dbdd1cdb28f8b8d827982add4d6dbe6dfd6d1d4bd997d82a4bfcddf
ebe6d6cbcddddfcfab7f7f9bafb8bfcbd1e4ebe1ddcfc6c2afa8bdd6d8c8bbaf9f8fa4c2
cdc6bdbbb8ad9f9494a4bfd4cfbfa6897974767d8ba4bdbbb6c6ddebede8e6e4d1ab9292
9fb6c4bf9d867d72828f928d8d8d96b6d4dfddd4c2adadb4b29b8d94a2a28966545d7fa2
a29fafbbc2bdbfc8cdcfd1cfcdcdcdd4dde4e6e4d6bfa6928b8d9dafafaba4a2b4cfe1e4
dfd6cfd1dde4d8c4b2afb8b49f929fb4b4bfc8c2a88972667696b4bdbdbbbdcfd4c6bdb4
afb2afbdd4dde4e4e1e1dfdfe4e4dbc8b49b827d869fbfc8bfada28f7b7f86929ba8c6dd
d6bd9f8464504d60696960493d3d444d57606664647b94adc6cfc4a8a2b6cdcfc2bfcbd4
cdb499969b9b9b99846d82b6dde8efeddfcdc8bfa8afbdc2b4bbc8c6bdafabb2c2c8c4c2
c8d1cfc6b8b2a8adc4d6e1e1d8c8bfab827b8992a4bfd8e1e4dfdddbdbdfe1d6bb927060
6679899fb8cddbdfdddbd1c2afb2c6d4ddddd6cfc6b28f767284a4b8af8f82868b8d8486
a2cbd6c8bdb6bdc6c4b8aba6b2c4cfd6dbe8f1f1ddbdadb4b49f9fb8cbc6b2967b707486
94afc8c8c6c8d4dfdfc89b7b798dadc8dbe4dbbb9492a4a89d929bafafafbdcfdfe6e8e8
dfd1c8c2af96969fa4a4a2998fa8c2cfd1b48f8ba2b8b6a2867d868d9db6d1d8cdbbb8c2
cbd4c8b29fa6a49da8b4b8000052546086b6cdcba6767984827f86abd4d4d4dddbdbdbd8
bb92767d9db8c8dbe4e4d8cfd1d8dbcdab8489a2afb4b4b6bdd8e6e1dfd8d4cdbbb2c2d8
d6c2b2a499929fb2b4a8a6a296928f9294a4bdcfcfbfa48b86847b7d92b2c8c2b6c4dfed
e8e4e1d8bb948694a2b6c4c2aba2967b7b868f8f8d868692afcdd6cfc2bbb8bdc2b6ab9b
8b8f8466647294ada49dafc2cbcbcfd1d6d1cbc4c2c2c4cddbe1e4e1e1d6bfa2929badb8
c2bfb4abb8cdd8dbd8d4cbcfd6d8d6c4b2b8c2bfad928f9da6bfd1cfbd9f84748bafbfc2
bfb4a2a8b8bfc4c4c4c8c4c2cbd6e1e1e1e4e4e1e4e4ddcdab8470798b9db4bdc4c8bfa4
868b8f9babc2d6ddcbab9484624b4b60727970504040444b54606d72768b9dafc2cbbda2
949db4c2c4cbd4cdc2b8b8b6b2ada8a28d72769bc4dbe1d8cbc6c4b8adbbcdcbbfc6d4d4
cfbba29badc2c4c2cddbd1b4948f9dadbdd4ddddd6cfcbb88d86969fa8b6cfe1e6e4e1d8
d4d8d8c49f826d6d7d8f8f94abc2d4dbdddfdfcfada6c2d6dfdbd6d1cfbd9276768fb2b8
a27f7f8d928f84849fcde1dfd8cfcdcfc4b6afa4a4abb2b6c2d8e8ebd6bdadadaba8abb6
bfbba48469667289a6c4d1cfd1d6d6dfddbf8f7b8da8c8d4d6ddd6b47f798d99928b99af
b2afbbcfe1ebede8dbcbc4bfaf96999f9f9da29d94adc8d6cfb28d8292a4a694847d7d89
9fbbd1dbcdb6b2bbc2c2bbb4a89b969692999b00007466647ba4bfbd9b797d8b8b8d94af
cdc8bfc2cbdbe6ddbd92797b92abb8c4d1dbd6d4d1cfc8bda48b94adbdc2bdb2abc6dbdb
dbdbdbcfbbabb4c2c2af9d92929babb4a6867d7d798692999fabbbc6c4b49d929494868b
a6bfc6bfbfcfe4e8e1dfddc69d898994a2adb8bdb8b4a47f727b8d928d847b7d8fb2cfd4
cbc6c4c2c2c2bdab96998f797b8694998f8b9dbdcfd6d8d8d4c8b6b2b6b6bbc8d8dddddf
e6e4d1b4a2abbbc4d4d8cbb6bdcdcbc6c6cbcbcfd4d1d1bda8b4bfbda88b8499afcddbd6
c8af8f829fc2cbcdc6b4948699b8c8cbcfd6d4cbcbcfd8dfdfe1e4e4e4e1dbcfbb927282
969fadbdcfddd6b6948f8f99b2cfddd4b494847657474b5d798272544244494d5462727d
848f9dabbbc4b49d9d9299b4c4cfcbb4a8b2c2bfbbb6b4af9d7d697292adb6ada8b6bdb6
b2bfc8c6c4cfd8d6cfb28d8296b6c6c6cdd8cfad847d99adb8d1ddddd8d6d1bb968fa2ab
adb4c8dde4e4e1d4cdd4d1b48b766b7486969499adb8bdc4d4dddbcbab9fb2cddfdfdddb
d4bd947f8dadc2bb9976798b928f89899dc4dde1dbd1d1d1cbbfb8a69b968f8f9dbbd8db
c8b6a8a6abbbc2b49b8f7f665d667b96b8d1d6cdd1d6d4dbd6b88b7d9bc4dddbcdc8c2ab
847b8b948b8da4bbbfbdc4d6e4ebe6d6bfb4b6b4a49292948f8b929694afcfdfd1ad867b
848f8f86827f8292adc6d1d6cdbbafb6bfb4afafa28d868676767d000082706b7489a29d
8984898f949ba4b4c2bbada6b2d4e6dbbb96828296abb4b2b4bdc4cdcdc2b4aba2929db6
c8cdc2b2a6b8cbcbc6c8cfc6ad969da8b2ad96898fabc4c8ab7662666b8296a2abb2bbbb
b2a69fa8a89f9299b4c8c6c6cfdfe4e1ddddd6bb928d9499a2a4adbdbdb8a2796b7b8f8f
89847d7d86a6cfddd4cdc4c2c4c8c6bba89d8d7f8d999482767686a8c8d8dbd8cdb6968f
9da4abb2bdc8d4e1e8e6d6bbabb2c2cbd8ddd6c2bdbfb8afafbbc4cfd1c8b49d949da6a6
9d8b8ba6c8dde1dbcdb49689a6cbd6d6cbb2867484a4bfc8cfdbd8d1cfcbcbd4dfe1dfdf
dddbd6d4c6a27d8fa2a8b2bdd1dddbc4ab9d9294adcbd1b692827f705d50505970796d57
4b505452546476868d929ba6b2bbafabb6a29fbbc8cbbba299a4b8c6c6c2bfbbad8d6969
7f8f94949b9fa8afb4bfc2c2cdd8ddd6c6a4827d96b4c2c2c2c8c8ad8479899badcddddf
dbdbd4bf9d99adbbb6b8cbd8ddddddd4cfd4d6bd92746d76828f9badc2bdada4b4bfbdad
9d99a6c2dde4e1e1d6b8928fa6bdc6b89f827b84929b9b9499b4d1dbd1c8cddbd8d1c8b4
a494828496b4cdcdbdada4a6afc2cbb27d696259606b7f99bbd1d8cfcfd1cfd4cbaf8f7f
99cbe1dbc4ada69b7f7986928b94abbbbdb8c2d8e6e8dfbd9d949da29b9492897f7b7f84
92bbdbe8e4bd8b797b82828686898b96b4cfd6d1c8bdababb4b4b2ab9b847b766b6d7600
00706b70798289827f8f94969da8b4bdc2b6a6999bb6cdc6ab8d7f7f99adafa496949db6
c2b49f9b9d96a8c2cdcdc2ada2abbbbfb4adb2af9d8d94a4bbbfa68f94b8cfcda8726062
667d99adb2b2ab9d9699adc2bda89b9fbbd1d1d4dfe8e1dbdddfd6b89d999d9f9f9ba8c2
c4b899706d84948f89827b7b89add6e1d6cfc8c6c6c8c6b49276697296a28d747074798b
afcdd6d6c8ad89797f898d8d8f9fbdd8e1dbc8b2a4abb8bfcbd6d6c4ad9f9fa2a8b6c2cb
cbb899868b8f8d8b969499b2d1dfdfd6c8af9489a2c8ddddc8a67d6d768fafbfc8dbdbd6
d4cdbfc2d8ddd8d6cdcdd4d6c49f8494a8b2b6b8c6d6d6cbbbaf9f99abbdaf8b76797b70
70665b5b64696257545d605959697b8d928d929ba8b8c4cbc8b4adbdbfb8a89b969dadc6
cbc8c8c6b899747d9fadada69d8d8f9dadbdc2c4d6dfdfd6c4ab928d9bb2bfbbb2b4b69f
7f7479849bbfdbe1dddbd8c6a6a4b8c4c4c4cdd1cdcbd1d1d4d8dfd6bd967d798496a8bf
cdbfa6999b9d968f8f94a2bddbe6e4e4d8b68f92adbbb8ab9b8982899badad9f99a4c4d6
cbbfc8dfe4dfd8c2ad968494b2c6cdc2afa8abb2b8bdc6bb8d7466626d7d8d9fbbd1dbd6
cfcbc8c6b8a6968fa2cbddd8bfa4968970728da4a29d9b9d9d9db2d8e8ebe6c49b84848b
929b948f897f7b829fc6dde8ebcd9d7d7b7f8499a2a6a49fb4cfcdc4b6ab9d999dabafa6
99867d7b76828f0000626670797f828489949499a4b2bdc4bfab968b899baba48b76747b
94a6a28d7b76829dab9b8484999db2c8cdcbbfad9fa8b8bfbdaf9d998d868fa8c2c6b69d
9dbdcbc29b6b5d6262728da6a69682747b9fc6cfc4ab9b9fbdd6dbdbe4ebe6dfdfe4dbc2
ada8a6a29d96a4bfc4b8997979899492867b747489b6dde4d6cfcfcdc6c4b89462494757
7b8472606976767b96bdd6d6cbb6997f7474727b8f9fb4c8cfc6ad968f96a2adb8c8cdbf
a49299a4afbbc2c4b8a28d8d99998d8b9b9d9fadc8d1cfc6b49d8b8fa6c4d6d1bb9d897d
7b899dafbdcbd6d6d1cfc2bdd1d8d8d1b8b6c6c6af8f828ba4b6b6afb8d1d8d6cbb8a49b
9f9f8d72707474767d79695d59575254595d6462626d7f8f948d848fadc2d6dbcfb8afb2
afa8a2a2a6abb2bfc6c6cbc8b899849bbfc8c6bba88d848d9fb2bbc4d8e4e1ddcfbfab9b
99a6b6b4a69d9d8d7670727f94b2cfdfdddddbc8a8adc4cbcdcdcdc8bdb6c4d1d8d8dfe4
ddbf968492a6bdcdd1b8a29d9f96867f828d9fbfdbe8e8e4d4b4928d9ba6a49d9b9ba4a8
a8afafa69da4c2d8c8bdcbe1e8e4d8bb9d898bafcfd4c8b2a6adbdcbcbbfc8cdb6997f82
94a6a8a8c2d6d8cfc2bdbfbdafa29ba2b8d1ddd8c6a88f7969749dbdbba48d848492afd6
e8ebe4cbad927d82929b9ba4af9f929bb8cfdde6e8d6b2928b8b92afbfc6c4b6b6c2c6b4
9b8f89848999a29f99999f9f969fa60000696669727d89969f9f969499a6b6bdb4968489
94a4a69b7b697084a2ada4846b6b768484766d79929fbbcdcdc8bbafafbdcbcfd4cbb4a4
9486849dbbc4b8a6abc2c2a87952546464667082847260647dafd4d1c4ab9ba2b6cddbdd
e1e8e4e1e4e1d6c4b6b4ab9d92848fafb8b29f8d84868b86796962647dafd8dfd4d1d1c8
af9f896949444442494b47475d767d7d8db4d6ddd4c6ad8b706d6b84b2c6cbcbcdbb9b84
7d848d9ba8b6bfbdad9d9fb2bfc2bdaf9d8989949d9d8d899b9f9b99a6b2b2a694898ba4
bdcdd4c6ab94948f86898f9da8afb8bdbdc8c6c4d6dbd6c6afa8ad9f897b7f8294a6a8a2
a8c6dddfcfb29d96948b827b76797d82827f746252494d595d606b70747b828689897b84
abc4d4d8cfbdaba8adb6bbbbbbb8b8bfbdbdc4c4af928dadd1d8d6cbbb99827d8d9fb4c6
dbe6e8e4d8c8b49d969ba2a2948484796d6d7d929dabc4d6ddddd1b89babcdd4d6cfcbc4
b8afbbd1dbd8dde4e4d1ab969fb4cbdbdbbfa69fa299897d7b849dc2dde8ebe4cdaf9d8f
8d9999969db8c8c8bbaba6a8a4adc8dbcbc4d1e1e6ddc89f847d8dadc6c8b6adafb6cddb
d4c4cddbcbab99a8c2cdbfb4c2d1cdb8a8adb6b6a89b99b2cdd8ddd8c6a482706d7da2c6
c4a889848492a6c4d6d6c4b2aba28989969ba4b8cdc4b6b6cbd4dde4e6ddc8b6afa29bb2
cbd6d4cfc6c6cfbba296827b848d94949fb8cdcdc4b6a80000706666708296a8afada696
8b8fa2ab9d867f94afbdb8a27b646d8fadbfb88d6b6b72746b6469747f92b8d1d1cbb6ab
bfd4ddddddd8d1c8b89b8292abb2abafbdc4b88d543244646b69646b6d69646d86b4d4cd
bfada4abb8c8d6dddfe1e1e1e4dbc6b6bbbdaf968274798d999f9f9b8f7f7b796d5d5254
70a2cddbd6d4cdb486665752545b57423227293b5d849b999bb4d6dfdbcbab866d6b708f
c4dddfdbd6c29f82797d86929fafbfcbbfadabbdcdc6b6a4968b8b8f928f84828d8f867b
7d898b84828294b8cfd8ddd1b69d99948f8f8d89898f9da6adb8c4cfd8d4c4b4adada282
6b707f797982848f9db8d8dfc8a29294928b8d8d7f86949f9b94846b5249546266708692
99998274767d797992b2c8cfcdbba49fb4cdd4cdc2bdc2c4b6a8adb8b29692b4d8dddbd1
c4a6897b869fb8cddbe4e6e4d6c4af9d9d99929b947d7469667294abadb2bbcbd1cbb499
8dabcbd4d4c8bdbdafa8b6cfdbd8dbe1e1d4b4a4abb4cfe4e4cfad999b9489847d7f96bb
dde8e8dfcbb4ab9b8f928f8d9fc8d8d6c8aba2abafbbcbd4cbc8cdd1dbd6bd927b7d8694
9da29fabb8bfd4dbd4c8cfdbcdab9fbdd1d6cdc4c6c6b8a29ba6adad9f9496b8d8dfddcd
b8a289767b89abcbcdb294929494929daba8968d99a49b999b99a4bdd4d1c8c6d1d8dbdf
e4e1d8cdc6ad99adc8d8d8d6d8ddddcbbdb4928da2a4948ba2cbdfdfdbc4a80000706974
7f8fa4b2b6b4b29d828296a4948b94adc4cfc49f7d6d7b9bb4c2bd8f666679827464646b
6d7fb4d6d1c8afa8c4d8e1e1dfe1e1ddcfb2928f94949db2c2c2af8d5b3244666d706d6d
6b72767989afcfcdc4b8b4b4b6bbc2c8d1dbdfe1e1d1b4afc8cdbfa694847b7d8994a2af
9f84747270665759729fc4d4d8d6c49b6b5250575d645b4730273250749db8b6adb6d1dd
d4bb94766b6d7b9bc6e1e8e4dfcba279747b8696a8bbcddbd1bdb2bbc8c6b8a89f9d9994
8f8984868b8b7f747b898b827d7f99cbdbdddfddcfb6a6a2a49f947d707d9db6bfbfcfdd
d1bda8a6a8a89976647284796d69697f96b2d1d8c29d8f928d898b8f828da6bbbbad926d
544d5d707989a8b6bdb2896d6d7474727992abbbbfb4a29dbbd6dfd8c4bdc8c6af9496ad
b69f92b2d8dfdbcfc2a89494abbbcbd6d8dddfdbcbb4a29b9f9b949fa28d796966769bb4
b8b8bbbfbdab8f7f8dafc8cdcbb49b9d9ba2bbd6ddd6d8d8d6c6aba2a8b2d1e6e8d6af92
8f8b89928d8489abd6e6e4e1d4c4bbab948286899bc8d8d6c49f9fb6c2cfd1cdcbc8c6c4
cfd4c6a6897f7f7f7b7f899badc2d1d4cdcbcfd1bfa2a4c6d1d4cfcfcfbfa49ba4aba4a2
998b8db4d6e1ddc2a29d8f848b99b6cfd8c8afa4a4a49b9b9696948992a8a8ab9d8b8ba8
c8d4cfc8d1dbdfe1ebebdfcfbda499abc6d8dbd8dfe6ddcfc8c2a4adc8bf9d89abd1e4e6
e4cba80000666d8b9da2abb2b4afaf9b7b7f9db2aba8b4c8d1d6c69d7d7d94abbbc2b889
646b8d9f8b645b62667db8ddd4cbada2c4dbe1e4e4e4e4ddcdbbada292868fa2afafa8a4
864d54707076726b667684848babcdd1cfc8c4b8aba29da8bdcfdbe1dbc2a8b4dbdbcbb6
ada492868d9badbfad8b7266696960607496b4c6cfcbb4865d5b5b544d4d4b4034304974
8da8c2bfb8b8c6cfbb947f726d7486a6c8e1ebe8e4cf9f72727b869fbbcdd6dfd8c6b4b6
c2cbc6af9fa4a4a8aba6a6adb4ab94828ba2a69286849dcfdfdfdfdfdfcfb6abada8997b
6676a6cbd8d8e1e4cfb4a6a69b999472626b7d79706962728ba6c4cfc8b6a4968d7d7b7d
7b89a8c4c8b696765d596d84898fadbfc8bf9d796b72747070768da8b4ad9d9dbbd6ddd1
bfbdc6c2a6929db2b6a28da8d1dbd4c6bba29babc8d4d8dddbd8d4cfc4ad96949ba4afb4
b4a4867069748fadbbbbbdbfb8a68d869bb2c2c8c8a87d828da4bfd8d8cdc4bfbbad9d92
96abcfe8e8d8b28d84828da2a4948babd1e4e1e4dfd4c8bd9d747d8692b4c8cfbd9da8cd
d8dfd4c6c6c2bfc8d1d6d4bb967f827972747d8da6c6d6d8d4cfcbbb9d94add1d6d6d4d1
cfb699a4b8b8a29f967f82a4cdddddbf9b99968d92a2bdd4dfd8c4afadb6bfc2b4adb299
96afbbb89f7d748fb8d1d1cdd4dde1e8f1eddfcdad9ba2b4cbdbdfdfe4e4d1c8c2b6a8b8
d4c89f89b2d6e8ebe8cfab000060749fb4afafb2afa69f8f7d84a2bdc4c4c8d4d6d6bb8b
798badbbc4c6b2866b7d9fb29b705d64708dc2dfd8cfab99c2dbe1e4e1e4dfd1c4bdbfbb
a486797f92a4bbc6ab706676767f7b6d62728b9294a6c6d4d4d1d1c6bba89499abbbd1d6
c8aba2bddbd6c2b4b8b8a48d929fb4bfa27f6b5d5d5d5d66768ba4b8bdaf8f6950575747
373439393b40577d94abc2c8c8c4c2c2a67f7d76707b94b4d4e6edebe6cf9f74747982a4
c8dddfdfd6c8bdb8c2cdcdaf969ba2b2c2c2c8d1d8cda88486a2ad9b8f8d9fcbdfdfdfe1
e1d6bda8a4a28d7262749dc6dde4e8ebdfcdbbad9694997f64596b797b6d6069829fbbcd
d1cbb89f867069707b96b2c2bbab9d8d746b7d8f8d869dbbcdc6af8b798284766b7499b8
b89d8996b4cdc8b2abb4bfbfb6b2bbc4bfa28b9fc6cfc6b8ad9ba2bbd6e4e6e4ddd4cdc8
c4af999496a8c8cfcbb68f74697082a2b6b8bbbdbbad9fa4bbbfbbbfc2a2797b8b9fb6c8
cbb8a29b9d9d9d9b9bafcbdfe1dbbf967b7b8fabb6adabc4d8e1e4e4e4dbcfbf9b747f89
8996b2c8c4b2c2dde4e6d4b8b6b2b2c4d1d8d6c29f8f998f7d7b8292afd4dfe4e1d1b694
7b8db8dbdfdbd1c8b69d99b6cdc4afb6ad8d8494b8d4ddc8afaba6a29fa4b4cddfddcbb6
adbdd4d8cfc6bb9996b4c6c2a47d748db6cfd6d6d8dde8f4f4e4d6cdb4a6adbfd4dfe4e6
ebdfbbaba69fa8c2cfb69289afdbebebe6cdad0000627da8bbb8b6b6ad9489828494adc6
cfcfd1d6d6c49d72749bbdc8cbc2a67f7b99adbba882727989a2cbe1ddd1b29bb6d6dfdf
e1e4dbcbc4c4c4c4b28969698bb6d8ddbf8f797b7f848276606b8b9f999dbbd1d6d4d8d8
d4c6b2abadb4c4c6b4969bbbd4cfbdb8c6c6ad8f929ba4a489726b66625b60798f949da6
a89474544949473b3237424b525762798da8c2cfd4d1cdcbb8998b7d7984a8c8dbe8e8e8
e4d1a8827f7f89abcfe4e6e1d1c8c6bfc4cfcbad8f969fb4c6cdd4dbdfd1a6767d94a29d
999ba8c4d8dfdfddddd1b8a2948b7964627699bfdbe8edefede1cdb49b9494846654647d
8474646986a8c2cfd4cdbfa68469697f9db8c6bfa299a6a69482848b8b89a2c6d6cbb89d
96a8a2826979add1cba28494adbba88f92a4b4c4d4d8d4d1c2a48994b4bfb4a29994a6c4
dfe8e8e6ddcdc2c2bfaf9d968f9dbfd1d1bda48b82848496adafafb6bbb4b6c8d8d1bbaf
a89479798696a2b2b4a696929ba8b8bdbdbfc6d1dbdbc89f7f829db4bdbfc8d4dbdde1e4
dfd4c4ab8d7f8d928992adc4c8c8d1e1e6e6d1b6ada6a4b6cbd6d1bbadb2bdb89f8b94ab
c4dde1e6e1c299746b86b8dde1dbcfbb9b8da8cbd6cbbfcbcbb4aba2afcbd8d4c8bdb8b4
ad9da2bdd6ddd1bfa8b2cdd4cfc2af999fbbc8c4a886748bb2cddde1dbdfeffff8e1cfd1
c6b8b4c6d6dde4ebf1dda8928f92afcbcba68686addbebede6c8b200006b7d9fb4b8bdbd
a87f747b92b4c6cfd8d8d8d8cdad826d7ba2c2c8c6bb9f8692b2bbc6b48b7d869bb8d6e4
dfd4b69ba8c6d6d8dbd8d1cdcfcdc8c8b69474769fcfe6e4cba2848289847f745d64829f
a2a2b6cfd1cdd8e4e6dfd4c6bbb8b8b8ad969bb6cdcdbfc2d4d4b896969b948d827b7470
72727696adaba6a6a8997457524d4b4447627d8b86827d7689a6c2cfd6d6d4d6c8ad8f82
8292b6d4dfe4e4e1d6c4ad9d928d9bbbcfdfe4dfd6cfcfcdcdcfc8a28494a6bbc8cdd6db
d8c4946b7b8b96a2abb4bdc8d4d6d4cfd1cdb8a28d7d6d666b82a6c6dde8efefefe8d6b6
92847f726059697d8476697092b8cbcfcdcdcbb692747ba2c6d4d4c8a69ba6afad9d8f8b
8b9bbfdbdfcfb6a8b2bfaf896d7bb2dbd6b49ba2adab96848492a8cde1e4dbcfc2a48994
b2bba88f8994a8c4e1e6e6e4d8c6b6b6b6ab9d96928f9fbbc6bfbdb4afaf968d969ba2ad
b6b4bfd4dbcbad9b8b7f74747f8b92a4aba8a69fa6c2cfd6d6d1c8cddbd6b894899bb4c2
c4c8d1d6d6d6dddfd4bdad9d9494a4a299a4b8c8cbd4dbe1e6e6ddc8af968fa6c4cfc4af
b6cbd1d4bfa6afc4d6e1e1e1d8af866b6276a6d1dbd8cdb69696bdd6d6c6bdbfc8cbcbbd
b2bdd4dfddcfc4b8ab999db8cdd6cfbb9b99adb6b4aba2a4b8cdcdc4ad8d7d849fbbd8e1
dddfedfaf8e1cdcdc6b8b4c4cdd4dfebf4e1af92929db6cdcda88482a8d6e8e8dfc4b800
00707b96abb4bdbba4796b799dcbd1d1dddbd6cdb48f74748fadbfbfb6b2aba2abbfc4cd
b88679849bb8d6e4dfd4b6999fafbbbfc2c4c8d1d6d4cfc8b4998b8fafd8ebe6cda8867f
8b847b6d5d627692a8afbbcfc6bfcfe6efebe4d6c6b6a8a8a8999dafbfc4bdc2d8d8c2a8
a6a69d969b9684767b868dabbdbbb6bbbfad8669707b745d628db6c2b6a89274829db6c8
d1d4d4d4c29f89828994b6d4dfdddbd4bfa6a4afa49ba4bdc8dbe6ddd6d1d4d4d1d1c496
768da6bdc6c8d4dbd1bd8f707b868d9fbfcfcfd4d4d4d1c8c4c2b6a48d7b74747b8ba6c6
dbe8edefede8d8b4826b695d5d6b7d897f6d646d94bfcfcdcbd1d6c8a2868db4d8dfdbcf
b2a29fa4a89f8f868dadd6e6e4d1b6adb4b49f826d79abd6d8bfabada8a69b89828ba6cb
dbd6c8c2b69f8f9dbdc4af928fabc4d1dfe1e4dfd1bfafadada49da6a89b8fa6bbc4cdcd
cdc8ab8d82848f9da8abb2c2c8ad8d8b7d797b828b8d8fa4b6bbb8adb2cdd8dddfdbc4bf
d1c29f848dabc2c8c8cbcdcdcfd6dbd8c6ab9da2a6a4adb2b6bfc8cdcfd8dfe4e6ebe6cf
a88b8999b6bfb2a2b2cfdbddc8b4bdcdd8dbddd8c6a282705d6d96bdc4c8c8b4969bc4d4
d4c6b8adb6cbd4cbb4adcbe6ebdfcbb8a4999dadbdcbc2a48b8996a2a6a6abb6c8d4cfbd
a48f84848ba2cbddd8dde4ededdbc6bfb2a6a6b6c2cfdde8eddfbba8a8adbfd1cfab8686
abd1e1dbc6b4b40000727f9dafb4b8b6a689727496bdcbcfd8d6cdb692767082a4b8b4a6
9fa8b4b6b6bfc8cfb884767f899dc6dfdfd4bba29fa69f8f96a6b4c8d1d1cdbda89ba2a4
b6d8e6e4cfaf86747f7f7b746b6b768fa6b4bdc6bdb4c4dfefedebddc6a694949b9ba2ad
b4b6b6bfcfcdbdb4b2ada2a4b2b29b827d8692b2c2bbb4c2cdb69b8b99ab9d7f7d9dc4cf
c6b69670768b9bafbfc8cdc4a886797d8286a2c2d1cfcbbda2898da8ada6a4afbbd1e6df
d4cbcfcfcfcbb68d76899fb2bdc6cdcbc2bba28486848499c2d6d4d8dbdbd4cfc4b4a694
867f7b7f868fa2b8cfe1ebebe6e4d6af795b595464849fa48f72606486b2cbcfcdd4dbc8
a49296b2d4e1dfcfad9996948d847f7b8fbbdfe8e1cfb4a6a49f8d7b798ba6c4d1c2b4af
999da496929fb8cdd4c4a8a69f8d8f9fb8c8b89fa2c4dbdddddddfddd1bfada29d9ba4bf
cbb6969fb8cddbdbdbd4bd997f7d82899ba6abafb4947b847f8696adbbb6a6adbfc8c6bb
bfd4dddfddd1b8adb6a2867b86a6bdc6c6cbcdc8c8cbc8bfb4a296a8b6aba8b4c8cfcfcd
d1d8dddfe1e4dbbf9f999d94a4ada499a6c4d6dbc4a8b2c2c6c6cdc6ad947d6b5d6b8da8
a8b2bdaf9699bdcbcdbdab99a6c6cbc2ada4b8ddedddc4ad9d999da4a8b4ad92898d9ba6
b8c6cbcbcfd1cdb49b9289868692bfd8d6dbdddbcdbbada499969ba8b6c8dde4e6dbc4c4
c4bbbfcbc49d8694b2c8cdbb9f949b00007082a2b4bbbfbdb6a47f768ba4bbcbd1cfbda2
8b7b7b92a8b2a686899fafb8bbc4cfd4b88679797682b4dfdfd6c2b4afab9270748694a6
bbc6c2ad9b9fadafb4cfe1e4d6bb8b6d7276767676707b99a8afb4b4ada6b2cfe6efede4
c69b898fa4b4b6b6b6b4b4b6b8ad9fa2a29996adbbbba682727989a8b8afa6b8c6b4a8a8
bbc2bdafadb6c6cdc6bb9d72707b848f9db6c8bd9b7d7274767b8ba6bbbfb29f927f7d92
a2a8a29b9fbddbd8cbbfbfbbb6ad96827b899ba8afb6b6aba8b8b8a8a492868fa8bdc4cd
d4d6d1cfc2a892868f9d9d948f8d99adc4dde8e6dddbcdab7f6054546484a6b6af8f625b
769dc2cfcfd4d4bfa4a4a4b2d1e1e4d8bb9d8f897b7276798db8e1e6ddcdab96949d968f
9db4b8b8c6c2bdab898d9b8f96adc6cfc8af929292868692adc8c4afafcfdddddfdfdfdd
d4c4af9f9699b2d6dfc89d94b2d6e6e6dfdbc8a68982848fa8bdc4bdad8970798b9db4cf
dbd6c6bfc6cdcdc6c8d8dfdbd4cfbfafa68d79727992a8b8c4cfd4cdc6b6a299928b8da8
bbb2a2a6bdc6c4c2c8d1cfc6c4c4b8a6a6b6b4969badafa6a2afc8dbcfb2adafafadbbc2
b28f74665d66829da8b8c2b49b9bb6bbb29d8d8ba2b8bbb2a49fb2cfddc8ad9b96949b9f
9dabafa8a8a6a4adc2d6dfd6cfcbbfa6969f968d8486a8c4c8cdc6b8a89b928d94999ba2
abbdcdd1d8d6c6cbcfc4b4b2a88b8ba2b8c6bda4867b7d0000797d94b4cbcdcbc4af8976
899bb6c4c4bda88f898492afbdbfa882849ba8b4bdc8d4cfb28974747482bbe4e1d6c6c2
bba47d646470767d92a4a89f999da4a4a6b8d4dfdbc28f69696d7274797076929da29f9d
9b9ba4bfe1f1ebe6cfa8949fbfd1cdc4c2bbb4ab9f867b7f82848da2b2b49d74647082a6
b6a89da8b6b2b4bfcdcdcfd1cfcdcbc8c2bba682767b7d8496b6cdc4a28274747279849b
b2b49f8f96897f8999a49f8f8ba2b6afa49d998d84827f7f7f84929d9d9d9b9babc2cbc4
bba494928b8b94a2b8c8d1cdc2ab8f92adc8c8bba68d8ba4c8dfebe8d8d4c4a28b705752
5d769db8bfa46d627b9bbfd4ddd8cdb8adbbbbbdd6e1e6dfc8a47f79767b7d7986b2dfe4
dbc69d8b94a8b2adb4c8c4b8bdbfbfa87f79827d8fabc6c8b8a299a4a28f86849bbfc8bd
b6cbd6dbdfdfdbd1c6bfb4a49fa6bfdfe6cfa896afd6e8e6ddd8d1bd9d8f8fa4c4d8ddcf
af82667494b2c4d6dfddd4cbcbd1d6cfcbd1dddbd1d8d1c2a88b7670748699adc8d8dbd6
c4a4827470727d9bb4af9f9ba6b2b2adb6bfb29b969b9b99b2c6b896a2bdc4bba6a2bddd
e1d1c6b8afb2bfcfc89f7d6d696b7b9dbfd4d8c8aba4b2a692848da2afb2b2aba8afc4d4
d4c2afa499928f9699adc2cbcfc6b8b6b8c6d6cfc6b8a48d8b9b9d927f7b8ba4b8c2bbb2
b4ada29d9fa29b999da4adb4c4cbc2c8cdbfa28f8b848da6bdc6c2ad8d76700000897b82
a8cfdbd8c8a8897d8692a8b6b4ab9682848da6c8d8d8c29f949da4b2bfcfd4c4a2827476
7d96c8e1d8d1cdcbbf96706462626064707f92a2a6a2999499a6c2d1cfbb8b69666b7984
82706b7b828482828996abc6e1ede8e6dbc4adb2cddbd6cfcdbfad9b8d7b707676828986
969d8d726d7b8bafbdab999db2bfc4c6cfd4dbdbd6d4cdc2bdbdb29686828692afd1dbcd
a6827f827f828ba4b8bdada2a2948d949ba8a6968482867b76726d6d6d747d868682868f
8f86899db8cfd6d1c6af9f9b86747489a6c4d8d1c6b49ba8c8ddddd6c49f8fa6d1dfebe8
dbd1b892867459525b799fb6bba274708babc4d8e4dbc4b2bbc8c4c2d8e4e6dfcb9d7070
849692848db6dfe1d4bd948b9db4c2bdb6bfbdb4b4b8bbad9689868696afc4bfab9fb4c2
b8a2968992b6cbc4b4b6bfcbd4cfc6bdb8b2a89fa6b8d1e4e4cdaf9fb2cfdbddd6d4dbd1
bbadadbbcfddddcba27664749bbbcdd8ddddd8d1cfd6ddd6c4bfcfd4cfdbdbcdb69f8979
7d899db8d1dddfddc2946d626262708da4a49d96999fa4a6adad9b868b929babc4cbb294
a4c2c6bfada8bfdde6ddd8cfc6c8cfd8d6bb9b867b7079a4cde1e6ddc2b2b49b8686a4bd
c4bbb4b6bdc8dde8e1d1c6c2bba896949bafc6d8dfddd4c6b2a6b2b6b4a68d7d7f8d968d
7f7f89a4c6cfcdcfd4d1c2b2afab9d8f8f949babbbc2bfc2bfaf928b9289899bb6bfbdaf
967b7200009276769bc8dfdfc69f8f928f898f9fa2a292828b9bb6d6dfe1d4b49f9da4ad
bdcfc8a8827b868d94abc4cbbfc6cdcbb692797976695b5b64768fa6b4afa49fa4adbbbf
bdb4947472798d9b9279696d6b6b6d7989a2bfd6e4e6e6e4ddcfbfb8c4d6d8d6d1bba492
8479747b828f8d747686897d849696adbdb29b9fbdc8c4bfcbdbe1dfddd6c8b8bdc4c4b6
a49492a4c6dfe1d6b28d929b9da2a8bbcdcfcbc2b2a49fa4abb4b4a27f70747270665d62
6d79828d8b7d797d7f79849db8d1dbd6cbb6aba48b747b99afc4d8d4cbb8a6b8d6dfdfdb
cdaf9dadd4dbe1e1d4c8ab8982745b576489abbbb296767996b2c6dbe1d1b6adbfc6bbb6
cfdfe6ddc296767f9fb4ab9da4c2dddfc8a88b899db8c8c4b4aba4a4a6abadafb8bbb8b2
afb4c2c6b6adc2cfc4a8998d92afc4bfa89fa6b6c2bbb2b2b2a69b9da8c4dde4dbc4afa6
b2c2c8cbcdd1dfdbcdc8cdcfcdd4cdb48d6d627094bdd4d8d8d8d8d6d4d8ddd4bba6b4c4
cddbddd4c6c2ad928d92a8c6d8dbdddfc89b6d5d5d60728f9f9da29d96949dabb4b4a494
949db2c8d6d6bb8d8fa4abafabadbfd8dfd6d6d4d1d1d6dbd4bfab9b897279a6cfe1e6e6
d4bfad92828dafc8cfc4bbbfcbd1e1ebebddd4d4d8c8b2a6abbdcfdbe1e4e1d6b4999b9d
9f9b928f929299969296a2bddbd8d8e1e6e4d1bfbbb6a48d8d9dafc4c6bdb8b4afa2929d
b2a68d869da6a89f928b890000926d7296c2dfe1c6a299a29d89828b94a8a28f96abc6df
e4e1d4b29fa2abafbdc6af846b84a4ada4a6b6bbafb8c4bda28b8d999b8470696b768fab
bfc4bfbdbfc2bdb6b6bdab928b99adb2a48b766d6669707b92afcfdddfdfdfdbd6d4c8b4
adc4d4ddd6bba4998f8b82828fa29d7d6d7d8f8996a69ba6b8bda6b2c8c6bdb8cbdde8e6
e1d8c6b6bfcbcfcdc6b29fb2cbdde4dbc2a4a2a6adb6c4cfd4d8ddddcfbfb4b4bbc4c2a8
84727d8482705d606b76868f8974707072798fa8bbcdd6d4c4b4afab947d86a6afb2c4c2
b6a8abbfd4dbd4cbbfb2a8b4cfd6dddfcdaf8f827b6d5b607699b6c4b48d707996b2c8d8
d6bda8a8b6b8afabbdd6dfcfb49d949fb6c4b8a6a6c2d8d6b896898b99afc4c6b6aba6ab
ada4a4b4c8d6d6cfc6bdc2d1cfc6c8d1c49f8b828996abad9f9ba6b6bbafabb2ad9f969f
abc8e1e4d4bdb2afb2b4b2b2b6c6d8dbd1d4dbd6c6c6bba4866d647294bbcfd1d6d8d8db
dbdbddd4bfa8a8b8cbd4d1c8c6cbc2ab9d9bafcfd8d6d6ddd4ab796460627994a4adb6b8
ad9d9ba8b8c4bba8a2b4cbdbe4e4c88f767d8b9da6afbdd1d1c2c4cdd1d4d8d6c6b2a49b
8b76769bc8dddfddd1bb9b7d7689a6bdcbcbbfbfc8d4dfe8e8e1dbdde4dbc6b4b2bfd1db
e1e8ebdfbb9fa29b969dabbbbbb2a8a8abb2bbcddbd4d6e1e6ebe1cdbfb6a68f96afcbd8
d4bda29b9b9499afc6c299747b82898d94adb60000926b769dc6e4e6d4b29b9b9d8f8b92
a2b6b2a2a6bdd8e6e6d8bd9494adb4b2b6b89b7f84a6bfbfa89fb2c2b4a69f947d869fab
ab967f7b797d94b2cbd4d1cfcfcfc4b6bbc6bdabadbfcdc8bb9f89797070747b94b4cdd8
d6d1cdc4c4cbc4afa4b8cfddd6bba49d9da296899dafad94797b8d8b9ba8999fb8cbc2c6
cdc4b8b6c8dbe6e8e4d1c2bbc4cfd6d6d6c4adb4c4d4dfd8cbbbb2b2afb4c4cdcdd6e1e6
dbcfc2bdc2c8bfa4867d8b969682696d767f929d968479747484a8c2c6c2bbb2a4a4adad
968999afa694998f898da8bdc6c8bbaba8b8bfc2cbd4dfdfc6997d827b66576484a6bdc6
af8466708dadc8d1c29d94a2ada89f9ba4bbc2b4a8a6adb2bfbfad9994adcdcba8898d94
929babb8bdbfc6cdc4a69db8cfdbdbdbd4c8c4d4d8d4d4d8cba68b848989949fa4a6adb8
b8aba8b2a89f9da8b4cde1dfcdbdc4c2bdb6afa6a2b2c8d4d6dde4dbbfafa49686767286
abc2c2c4d4dddbdfdddddfddd1bdafadb8c2b8b2bbbfb6a69b9bb4d4d4c8c6d1cfaf7d6b
6666798fafc6cdcdc6b2a2a4bdcdc4afb2cde1e6ebebd6a47972899fb4bfc8cfc2abafc2
cfcdcfc2ad9d948f847b7d94b8c8c8cbc8b48d6d697d92a4bbcbbdb2afb8cddfe6e1dfe4
e8dfcbb8b2b8c8dbe4ebefe4bfa2aba2a6b6c6d4d6cfb8b2bbbdc6cfd8d1d6e1e6efeddd
c4b6a68f9fc2d8e1dbbd8979828da8c2cdc69f74696b7689a8cbd40000867284afd4e6eb
dfbf9b8d999f9fa2abb6b8b6bfd1e4ebe1c89b7282a4a8a4a2a699929fbbc2b4a49fb6c6
b48d6d605d84a4a8a28f847f7d7f9bbfd4dbddd6d4d4c4b4b8c6c2bbc4d1dbd1bba4948f
948f7f7b8ba6bdcbcbbdab9da4b2afa6a6bbcfdbd1b49b9299a29b8d9dadab94746d7b84
99a49ba8c4d8d6d1cbc2bbb8bfd1e1e8dfcdc4c6cbd1d4d1cbbbafb4bbc8d8d6cdc8c4bd
b2abbbc6c8d4e1e4d8cdbbafb4b8ad99898999a8ad997b7b8694adb6af9b8f84829bc2d6
d1b8967b7b8da2a28f94adb4a69489746d7fa2afada6948ba2cbd6d1cfd8e1d4b28f8489
7f6450628db4c4c4a87d666b829fbdbd9f7d7d8f99948d8f969b99999da8ada6a49b8b84
8696ada68b7b8d948b8b9db4c4cdd4d8cba296bbd1ddddddd8c6bbcfd6d6dfe1d1b2999d
afada4a8bbafadafab9b969d9ba6b4bfc6d4dbcbb6bbd4d6d1c8bba699a2b8cfdde1e6db
bb9f928f847d7f96bdcbc4bdcfdfdfe1e1dddfe1ddcfb8a2999f9fa4b6bbaf9f999db4cb
c4b4adbbc2a47b7272727d99bdd6d8d8d4c4adabc4cdc2b4c2dbebededebdbb27f708da8
c4d6dbd8c6aba2b4c4bfb49b848484848d99a2abb2b4b4bdc4af8469646d7989a6c2bdab
9996adc8dde1e4e6e8d8c6bdb6b6bdcfdfebefe6bfa2a8a6bbd1d6dbddd8bdafb8b8bbc6
d8d4d6dfe6efefdfcbb8a48ba2cbe1e8dfbd8270768bb4cdcbb4967f72727d9bc2d4d800
00828da8c6d8e1e4ddc29689a2b4b4a8a6afbbbfcddfebe8ddc69f7b7f9294999b9d9b9f
adb8ad9d99a2b4bfb4865d525d7d969d96897d7d797d96bbd4dbdfdbd4cfbda8a6b8c2c8
d4d4d4cbb29d969fbbb89d897d899fadab9b867f89969696a2bbcfd6cbad94898d969289
949f997f645d64748d9d96a4c4dfdfd6cdc8c4bfbfcddfe6dbcdc8cfcdc8c2b8a89fa4a8
adbbcdcdcbcbc4bbaba2b2c2cddbe1dfd4c6ad94969d9d968b8b9db2b6a486828fa4bfc4
b49d99969bbbd4ddd1b282626b7d8686869bb4b8b6ab9679707d89928f847682a8d1dddb
d8dbddc8a28b8b8d82624b5784b2c6bf9d7b747479899d92766b6d7f8d898d9ba28f7f89
9bada8927f7b7d7b7f898b7d6d707f8b868ba6bbbbbdc2c4b2948dafcfdddbd8d4bdabc2
cdd6e4e8d6b49fafc8cbbbc2d1bbab9d8f847b7d8fb2cdd1d6dbd4b8a4b4d4e1dfd4bfa6
9499b2cddfe1e1dbc4ab948b84828296bfd4cbc4d1dfe1e4e1e1dfe4e4dbbd9b868992a4
bdc8c4b6a69fa2a2a2999bafb6a4867b7b7d8bafd1dfdfdfddcfc4c2c8c2b6b6c4ddebed
ede4cfab7b6b7f9dc4dde4e1d1b6a4b2c4bb9f7d6b6d7b8fadc2cbcdc4b8bbc8c4a47d70
6b66667b9fbbb8a89996a8c4dbe4e4e8e8d6c2bbb8ada6b4cde4ebe4bf9d9fa6bfd8dddf
e1dfc4aba8ada8b4d4d6d8dde1e8e4d1c2b29b8494c4e4ebddb88270798dbbd1c49b8484
848996b4d1dbd8000096b8cbd4dbdddfd6b49292afc2bdaba4b2bfc2cddde6e4dfd1b89b
949b99968f8d8f969fa2948f999fa8adab896b69747f868f948674726d7086abcbdde4df
d6cdbb9f92a2b6c4cbcdcbc2afa2969bbdc8b89d7b7489949d9b8b7f7f898b8f9fb6c8cf
c4a48d89898b867f899b9b7d665b5b698292898db8e4e4d8cfcdcbc4bfc8d8dfd8cdc8cb
c2b4a89d8f8d999b9fabbbc2c6c8bfad9b99abc6dbdfdfd8cbbfa6929ba6a696868494a8
ab967d7d8d9fb4b4a28d8d9bb2cddbdbcb9f72627282827d8494abc4c8bba27f74797076
7b76707fa6cfdfdfe1e1dfcfb69b8d897b5d474d6d9dbdb4947d7f7f7976797466646674
82828b9da4928492a8b8ad94899294898d9d99846d6b7b84848fabbbb2a8abad9d8b89a2
cbddd8cfc6b2a4bbcfdfe8e8d4b4abbbc8c4bbc8d8c4a892898276728dbbd6d8e1e1d1ad
9da8c4e1e6d8c4ab9996adc8d8dbd8d4cfc2a48b8989848fb6cdcbc4cbd6dbdfdfdddde1
e4dbbf9b827f8fafcfd8d6cbb49b7f7279828da4b4b6ad96827b8dbbdbe4e4e4e1d1c8c8
cdbbb8bdbbcfe1e4dfd4bb927064728fbbd6dddfd1bbb2c2d1cbaf8464698bb2c8d1d6dd
d6c4bbcbbb967b7b796b647b9ba8a49b969bb4cfdfe1e1e6e4c8b2afada49b9fafcde1df
c2a29b9fb2cbdbdfe4e6cdab99a29ba4cfd8dbdbdfe4ddcdb49f8d7982b2e1e8d8b48272
7f9fc6d4bf8f7d8b99a4adbfd6dddd0000bbcdd1d4d8dbddcba48d99b6c6c2afabbbc6c8
cfd6dbdbddd6c4ada4abab9b7f72727674727989949492949484828f948b7d86948d746b
60607496b4c8d4d4d1cdb89b898fa8b4b4bfc6bfb2a2928fafc8cbb48972849fbfcbb896
868f8d96a6b4c4cdc29d8b8d8d867b7d8ba8b49d8670667992998b92bbe4e4d8cfcfcfc4
b6bbcdd6cfc4b6a89d99999286848b8f949dabb6bdbfb89f8f99afcfe6e4dfd4c8c2b6b4
bfc4b8997b768694968b7b767f898b898684869bbdd1dbd6bf8f6b697b8f9286868fa6c8
d1c29f796d7470747b7b79798fb8d4e1e6e6e1d6c4a8927d6b57494b5979999b8f848286
827b827d706966696d7484969b9292a6b2b4a6969faba49ba6bfc4af8b8299a49b9babb8
b2a8abb4af9f92a2cbdfd8c6b6a6a6c6dbe6e8ddc4b2b6c4bda8a8b8c6bbab9b928d8282
9dc2d6dde6e4cda89699abdbe6d6c4afa49da4b2c4c8c2bfc8c6ab8b8989898fadcbd1c4
bfc6cdd6d6d4d8dddfdbc69b767992bbd8dfe1dbc29670666b7b92adc4cdc6a6847282b6
dbe4e4e6e1cdb4b4cbc8cdc6a8afc2c4bbad997969667494b4c8cfcfc2b4bdcfdbdbc899
696d9dc8d4d4d6dddbbda6b4a68974797b7064728f9f9b8d848da8c4d6dde4e4d4ad94a2
adafaba8a2afcbd1c6b2a29496adcbdbdfdbbb9b949b8f99c6d8dfdfe1e4e1d6b6998472
799dcbddd8b88f7f92b2d1d8c49d929fb4bfbbbbcddde10000d6d6cfcbd1d8d8c49f8b99
b4c6c6b8afc2cfcdd4d6d4cfcfcdc4afa6a8ab9d7d625b5b575764767f7d7b7b7d8fa6b4
ad9984899d9d826b5b60728996a2adb8c2c2ab948b8fa8b2a8afbbbbb2a4948b9fbfd1c4
9b7b86add6e4d6b29ba2999fadb8c4cdc69f8d92897d727f9fbdc4b6a2867994adad9d9f
c2dfdfd6d1d1cdb499a2bdc6b4a6927b767d84827d7d8289868694a4adafaf9b8ba2bdd8
e8e6ddcfc2c8cfd1d1d1c49f7b74848b999f99827979696b7b898da4c6d6d8cbaf866b6b
7f969d928f9bafc6cdbd946d626d747f848486797699c2dbe1e4dfd1bbab9f896b59524d
5460707f8989848b929ba8a6968b847b7072869da4a6afbbb8ad9f9ba8ada49db2cdd4c6
aba8bdc6b29d9da8a89fa6bbc2b6a2a4c4d8d6c2a8a2b8d4e1e6e1cbb6b4b8b69f8b94a8
ada29b968d8d96a8b8c8d4dfe6e4cfa89496addbe6d4c2b2a89f96949fa8a6a8bbb89f7f
7b8494a8bdd6e1cfb6adbdc6cbcdd4dbdfe1cd9d6d748fb6d8e1e8e1c49d796d7086abcd
dbdbc89d796b7db2d8e4e4e4d8bda4afcfcfd4c89d92969b968b7f7069697696adb4b2ad
a6a8c2d4d8d8cda26d709dcbd6d1cdd1cdb69d9b998f827674726b728da8a68d797b8fab
c4d8e4e4d1a2899fb8c4c4c2ab9fadc2c4bdb49b8b94b2cdd8cb9f8692968989b2d4e4e4
dfd8dbdbc4a48470768ba8c6cfbf9d8f9bb2d1dbcdafa6b6c8cbbbafbfd8e60000e1dbcf
c6cbd1cdbba29299b2c4c6b8b2c4cfd1d6d6cfc6c4c4bdad9f99998d7660575454596064
6666696976a6c4c2b49d898b9fa68d6d606b7b8994a2adb6bdbda48f8b92a6ab9fa2abb2
b2ad9f929bbbd4cdad8b89b2d8e6dbc2b6b6a8a8b2bdc8cfc69b7f7b72707089b2cdcdbd
a88f86a2bbbdaba2b8d8ddd6cfcfc29d7f8dabb29b89796b6970767679797b82827d828d
999fa69d9bafcbdbdfdfdbcbbdcbdbdddbd6c4a4847d8b8fa6bbb8a28b7b696b7b8d96b2
d1d8cfbba286797b8da2a49294a8bfcdd1bf997664647282898b8f827689adcddbddd8c8
adb2b8a6846b646062646b7d8f9b9fa2a8b4c2c6c2bbb6a88d7989adc2cdd1d1c6bdbbb8
b2a69b94abc8d1cbbfbfc4c2af9ba2afa89499b4c4bfada6b8d4d6c2abb2cfdde4ddcdb8
b6bfb8a286848b999d998f847d86a8c8c8c8cfdbe4e4cfa48f9dc2e6edddc6b4a89f9489
8994969ba69f8972707f9fc2d1e1ebddbba2a8afb8c4cfdbe6e4d19f747d92afcfe1e6db
c2a88f767b96c2dfe8e1c896726d82afcfddddd6c6afabbfd4d4d8cfa68d8d9fa49b866d
6669728da2a496949babc2cdcdcbbb9976799dc8dbd1c4bfc4bda6949fada28276828689
96aba8967b727f99b6cbd1cfc29b8ba4c2d1d6d1b2999bafbfc6c8b49f94a4c4d4c49b86
8f8d827d99bfd8ddd4cbcfd6c6a68270768996adc2c4afa4a2a6bdc6bba6a4bbcfcfbba8
b8d1df0000e1dfd8cdcbc8bbaba29d9fa8afb2b2b6c6cdcfcdc6c4c6c6c2b8ab9b8f8679
695954575d646964626669667bb2cbbfa88f84849ba48f726b768492a2b8c8cbcbc8af94
868d9b9f9b999fa8afafa89fa6c2d6d4c29f8fb6dde8ddcfcbc6bdb6bbc2cdd1c28b6662
60697286abc6cdc4b2998da2bfc6af9db2d6d4c8c2c8b8967f92afb29b847b7b7d7d7d7d
8486898f897d797f8b96a4adb6c2cbd4dbdbd8cbbdc6d6e1dfd8c8a88f868d99adbfc4bb
a4866b697b8d9fbddbd8c4a699928f94a4b4a88d99b2c6d1d1c2a2866d606979868d8f84
7b7d8dabc8cbc4b2a2b8cfc2a68676797b726b7d9bb8cbc4bbc2c8cfd4d6cfc4ab8489b2
d4e1dfdbcdcbd1cfbba4968b99b6cdd1cdc6b8ada8afbfc8bb9d8f9fb8b8aba2b2d1d6c2
bfcddde1dfcdafafbdc4bb99828b8f94a2b6b496797da8cdcbc2c6d6dfdfcba28fa2c8eb
f4e4cfb4a8b2ab94899fa8a4998679706d7da4c8d6e4ede1cbad9d9da6b2c6dde8e4d4ab
8692a4b2bfc8cdc4b8b4a68b869dc4dfebe4cb967474849fb4bdb8b6b8bbc2c8cfd4d8cb
a28b99b6c2b4927064696d7d8f968f99afc2c8c4b6ada49b928999bddbdbc6bfcbc4a696
abc2b694899db2b2afb2a49482767d92a4a8a49d9b9499abbfd1d8cdab8f8b9bb4c8cfc8
b8adb2c4cdc29b8282847f7d8b9fbfd4cdc4c6cbb894746b768b9dafc4cfc8bdada6b2af
9d949db8d4d8c2adb4bdc60000d8dfddd4cbbfada4a6aba89d8f96abb8bfbdb8b2afb8c6
c6bfb8ad9b897d70625959626970797f848b8f8b8fb4c2ad94827d8299a4967d767f8b9b
afc4cdcfd4d1bd9d8b8d9ba29f9b9da2a6a29fa4adc4d6d4c8ab99bde1ebe4ddd6cfc8c4
c2c6cfd4bf845d5b5b6b727689adc8c6b69f949bb6bfa8a4bdd8cdb6a8aba48f89a2bdc4
b8a69fa8aba28d868d9ba2a4927d7b7b869db8cdcfcdc6cbd6d8d8cdbfbfd1e1e4dfcfad
948b929fb2bfc8cbb8946b62748ba6c6ddd8b48f929ba4abb6c2af92a2bdcbcfc8b8a28d
705b64747f84868482827d89a8b2a6969fc2d6cfb696898d8f827282add6dfd4c8cbcdd4
dbddd1c6b68f84a8d6e4e4dfd1d1d6d4c2ad9d8f92abcfdbd6c8ab99a4bfcdcfc4a48686
9fa6968da4c4cbc2d1dde1e4d6bdabb6c8cdbf9b848b96a8c2d6d8b884749bc4c2b6b8c4
c6c6bf9f96a8cbe8f1e8d8b6abbfbdab9fbbc8bd9d7b6d707284a8cdd6e1ebe4d4b89f9d
9da2bbd8e6e4d8b699a6bbbfb4a69da2adbfbda2929fbfd8e1dfcb9b868f9699928d868f
abc8cdc4c6d1d1b88f8499b8cdc6ab826d6d767b868d8fa8c4d4d4c4ad9fa2b4bda8a2bd
dbdbcbc4c8b28f8fa8c4c4b4b4c2cdcbc2b4998b82797d898d867f8699adb8bfc6cdcfbf
9b828694a6b4bdbbb2abadb2b4ab9279747d898f9ba8c4d8d8cbbfbba2846d667489a4bd
cdd1cbc4b8b6c2b69b96a2bfdbdbc6afaba8a60000d1dddfd6cbbbafabafb4af9d828294
a2a6a4a29da2afc2c4bfb8b29f8474706d69707479829bb2bfc2bfb6afb6b8a88b7d7f86
9da69b847b8292a8bfcdcbcdd4d6c4a48f94a2a8a6a4a29f9f948d94a6c2d6d4c6b2afcd
e1e4e1dfd8cfcdcbc6c8cfd1b87b595d6274746b729dc2bdb6a6948fa2afa6b6cdd8c8ab
8d82848692b4c8cfcfcbc8cdcdc4a89294a4afb49b7f827f89a4c8dfdfd1c2c2cfd6dbd4
c4bdcfe4e8e6d4b6998f99a8bbc8d1d4c6a27260708db4cfddddb28b929fb2bdc6cbbba2
adbfcdd1c4ad9b8b6d5460727d7d7d8286867f849ba6a6a4adc6d4c8ab9492928f89828b
b8e1e6dfd4cfd1d8dddbd1c6b896849dc8dddfdbd4d6d8d1bdadab9d99afd4d6c8b4948b
9db8c4c4b89d827f9294847d99b4bfc8dde4e1e1cfb4abb8c8cdbfa28b8b9bbbd6e6e6cd
9d798bada8a2a2a6a2a4aba4abbbcfe4ebe6dbbfb2bfc2b4adc6d4c8a47462707f92afcf
d6dfe6dfcfb8a4a29b94a8cbdfddd4b6a2b4c6cbbd9f8f96abc8c6a899a4bdcdd8d6c29f
9fb4b6a88d79727996bbbdb2b6bfbda27f768dafd1dbc8a2848499a2a29f9dafc4d4d6c8
b2a6b4cbd4c2b6c2cfcfc6c2b89b7d869bb6cbd1d8dbd6cfc8bb9d8f86797f86847b7b8f
afc6d1d6d4d1c8b292848f999b969694949699948f8f897b727d8d9dabbfd6e6e4d8cbbf
a88f796b7489a2b8c8cbbfbdbdbdc6b8a4a4afc6d8d6c2a8a29f9f0000d6d8ddd8cfbfbb
b8b4b4af9d847b84929fa4a29b9dadc2c2bfbdb49f84727276797d828fa6bdd1d8d4cbc4
c2c4c8bf9f8f8986969f96828496adc2cbc8c6cdd8dbc29f8b96a8afafada8a29d8d8286
96b8d1cfc2bdcddfe4dbcfc8c8c8c8c8c6c4c8c2a6766069768682706d94b6b6b8ab948d
99a6abbfd4d6c4a686768296adc8d4d4d6d6d6d8d8d4bd9d9da8b2bfa48486848b9fbfdb
e1d1bfbdc8d4d8d6cbbdcde6ebe8d8bda49ba4b2c4cfd6d8cfad79606d92c4dbe1ddbb99
9da4b4c2cfd4c6b2adb6c6cbc2ad96866b52596d7d7d7b7d847f7f899fb4bdbbb6bfbfaf
9992968d86868f96b6dbebede1d6cfd1d1cbcbc6b4968494b8cdd1d1d1d6d6c6a69ba49d
9fb2c8c2a68f82868f9da2a49f8d82869492827d99b4c6dbe6e8e4dbc8afa2a4b2bbb29b
898da6c6dfebebd6a87f7f9b9994949996a4b8b8bfc4cddde6e4dbc8bbb8b2a6a4bfcfc4
9d70606d829db8cdd8dfdfd1bba6a4a49b8b8ba8c6cbc6b2a2abbbc6bfab9da4afc2bba2
99a4b4bfc6bda89dadc2c2b6997b767b8fb4b8b4afaba694797486afd8e8ddbfa2a2bbc8
c6bbb6afb6c8cbbdababc4d8d6c2b2afadafbbc4b6967f8ba2b8cbd6e1e4ddd4cdc2ada6
99828994999494a4bfcfdbdfddd6c8b2a49d9b998f84848b9badb2a4928f968d7d828f9f
afc6dde8e8dfd6cfc6b496797f9db2bdc6cbc4c8c6b8a89fa4adb8cbd8d4b8a2a6a8ab00
00d8d4d8d8d1c8c8c4b4ada69684828b9fb2b8afa6a4afc2c4bdb8ad9d86747074767684
9fbbcbd6d8c8c6c4c6d1d8cfb8a48f82898f8b8da4c2d1d8d1c6c4cdd6d1b4948d99a8b2
b6b4ada49986797986a8c4c4b8bbd4dfdbc6afa4a4a8b4bdbfb6afa6947b707d8f9b8f79
6b7b99abb6ab94999fa4afbbc8cdc2a88d849bb4c4d1d6d8d6d8dddfdfddcbada4a8b6bf
a686898b8d99b6d6e1d4c8c2c4cbcfd4d1c4cde1e8e6d8c2ada6abb6cbd8dfddcfb2846b
769dcde1e4ddbba4adadb4c4d8d8cdbbabb2c4c8c4b29b8b725954667b7f79797b727284
a6c4cbc4b8afa29499a29f94949ba4afb8cfedf6efe1c8bbafa4afb6a8968992abbbc4cb
cfd6d1bd9b89929fafbbbfb69f8b84868682848d948d868994948689a6bfd4e8efede6dd
cbb2998d96a69f8d7f89a4c8e1e8e4c89679869d9fa2a6a8a6bbd4cbc2bbbdd1dfe1d8c8
bdb29d8b8da8b6a88f7f797b89a6c2cfdfe4dbc49f8f9da2998272798da2aba28f8f99ab
b6a89fa8b4bdb4a29da4afb2a89b9296adc2bfb69b7d8292abcbcfcbc2b2a8967b7489b2
dfefe6cdb6b2c4d1d6d1cbb4a8afb2a89da8c6d4c8b6a896848dabbdad928294b8cbcfd8
dddfdfddd1bfb6b4a68b92abbbb6b2bbcbd8dfe1ddd8cfc6c2b8a49489868fa6bfcfd1c2
aba8b4b29b8f99abb8cbdbe6e4ddd6d8dbcdab898dabc4cdd1d6d6d6cfb8968999adb6c2
d1c8b2a8b8c2c20000d8d6d8dbd6cfcfcbb6a89b8f898d9bb2bfbdb6b6b2b4bfc2bdb2a4
9b8b7970707070829fbbc8d6d6c4c8cfcfd8d8cbb8a69484868b94abc4d6dfdfd4c6c4c6
c6b8a499a2adb6b6b4afaba2968476767b92abb4afafbfc8c6b8a89d928b9fb6c2bda694
897b7b869ba2947d6d7286a2ada69da4a4a2adb2b8bfbbab9da4b8c6c8cfd4d6d8dbdddf
e1e1d4b6a6a6b2bba48b8f8d8d9bbbd8e1d6cfcbc8cbcbcdd1cbcfdbe1e1d6c4b4afb2bb
d1e1e4ddcdb2927f8dafcfdfe6dbb69fb4b8bbc6dbd8cfc2abb2c6cbc4af9b9282625257
6b76767470626684adc6cbc2b29b8b92a8b2a8a4adb8bbc6c4cfeffaf6e6c29d868699a4
9d968f94a4afb4bfcfd4cbbb9b8994afc4c8c8c8bba4948b8476798694948b898d8f8f99
b2c8d8e8ede8e4e1cfb4998994abad8f768296bddfe4d4ad847d96afb4b8b8b2abbfd8cd
bfafadc2d4d8d4cbc4b8a28276828b8b8f9b9b8f96adc4d4e4e8dbb88d82969b8f7d6d62
62768b8d827d79869b9b9ba4b2c2c2b4adb2bbb29b8d99a4b4bdbfb2927b8badc8dbdfdb
d1c6b89d79728bb6dfeddfc2b4b6bfd1dde1dbc4a8999f9f969bafbbb2afab99747994a6
99827b92c2d8d8d8d1d4dfdfd1bdb6b6a68d96b4c8c4bdbfcddbddd8d6d6d6d4cdbfad96
949ba6bfcfd6dbcbb8bdc6c4b6afb4bdc2cddbdfd8cfcdd4d8cdaf8b86a2bfd1dbdfdddb
cfbb968492a8adadb4b2b2bbcbd6d60000d6dfdfdbd6cdcdcbbdab968b94a8bdc8c2b2a8
b4b6b6bfbdb6a89d92867972706d70829fb6c4d4d8cbd6e1dddbcdbbab9f968d8d99adc4
d1d8dddbcbb6bbc2b8a4a2abb8c6c8bfb4a8a49f9b8f847d797f8d9da4a4a8b6c2c6c4bb
a896a6bbc8cbb4967f767f8f9d9b8d7d767f94abb4b2afafa49ba6a8abb4bfbdbdc8d1cf
cbcbcfd4d6d8dbdfe4e6d6b29fa2adaf9f8f8b84869dc2dbdfd6d1cfcbcbc8c6c8c6c6cd
d6d4cdc6bdb6b6bfd4e1dfdbc8ad99929bb6cbdbe4d6ad99bbc4c4cbdbd8d4cfb6b4c4c8
bda69b9b8d6d50495969706b6054648db8c4bdb29f8b8296afb6afb2bfcbcdcfc8cfeff8
f6e8c49479869da6a29d9494a4a8a8b4cdd1c6b8a299abc4cbcbcfd1cbb69b8b8274727b
8b928d868b99a8b4bbc8d8e4e6e1dfddcdad948fa8c4c49d7986a2c6ddd8bf9d8d899dbb
c4bdab9b94afcdc8bdada6b4c2bfb6bbc6c4b696796d7084a2ada69696a6bfd6e1e8dbaf
8276898f897f79696069767d7b766d6d7d8b9294a6bfc8bfbdc4cbbfa89fb6c4cbc6bba6
89798fb6d4e1e4e1dbcfb8997b7b96bbd8e6d6b4abb2b8cfdde4e1cda68d9ba496898f9d
a6b2b8a67b6d7d8d8679768fc2ddddd6cdd1e1e4d4bdb4ad99899fbbc6c4bfc6d4dddbd1
cbcfd6d4c8c4bfadabafb4c8d1d8d8c6b4bdc8cbc6cbcdcdcbd4dbd6cdc8c8cfd1c4a484
7b89a2bfd1dbdddbc8a68b828fa6a69d9fadbdc6d1dbd60000c6e1e4ddd1c4c4cbc8b296
8da4c6d8d6c4a89babb6bfc8c2b29d8b827b7674747274829bb6c6d1d6d1dfe6e1dbc4ab
a49f9fa4a4adbfcfd4d6d8d4bda4adbdb69fa4b2c2cfcfc6bbb2afb2b2a694827674797b
8b9db2c8d1d1d6d4c6b6bdc4c8c8b2947f7b8b9d9f927f767f96afbfc6c8c4bfa6929b9d
9fadcbd4d4dbdbd6cdcdd1d6d4d6dde1e6e8d8b4928fa4a89f92847b84a2c4d6d8d4cfc6
b8b8b6b4b4a8a2adbdb8b8c6c2bdbbc2d4dddbd4bda69d9b9fadbbcdd8cfa696bfc8c6cb
dbd8d1d1bfb8bfc6b8a49f9d967d5d50607b82705950648fb6bbaf9d897d7f94afb6b4c2
c8cfd4cfc4cbe8f1f1ebcd9b7f99abafaba4968f9b9f9da6c4cdc6c2afb2c8d6d6d1d4cf
c6b69d8b82766d72828d949ba6b4c4cbc4c6cdd4dde1dfd8c29f8f9dbdcfcba47d8dbddb
ddd6bfa8a29fb2cbcbb89982829fbdc2bdada2a6a69b929bafbbbda47f6b728fadafa496
8f96adcdd8ddcda68479868f897d7f796d69666b6b6964626b747b7f96bbcbbfbbbfcbcd
c2bdcbd6dbd4c2a6897992bbdbe6e8e6dfcbab8b869dbbcfdde1d6b4a2a4b8cfdbdfdbbd
968494a69f898494abbdc6b68d70707f7d797d99c2d8dbd1cfd8e1e4d1b29d8f868bafc4
c4c6c2c6d8e1dfd4cbcbcfcdc8cdd4c6bbb4b6c4d1d8cdb29ba6bbc6c8d1d4d1d1d8d6cd
c8c6cbcfcfbb968276768296b2cbdbd8b892847f84969b9da6bbc8d1d8d8d10000afd8e1
dfd4c4c4cdcdb89b94add1dfd8bfa296abc6d6d6cfc2a889746d70747474767f9bbdcdd1
d1d4dfe4ddd4b8a2a6afb8bdbfbfc4cdcbcbcfc4ad9fa8b6af9b9fb2c2cbc8c2bdbfc6cb
c6b69d82727272707da2cbdbdbd6dbddd4c6c8cbc6b89d867d7d899b9d8b76768babbfcf
d6d4cbc2a282868b92a6cbdbdde1ddd4cdcbd1d6d1d4dbe1e8e6dbbd8d7f9baba694847b
86a8c4d1d1cfc4ad969292949989828d9b9ba2bfc6c6c4c6d1d4cdbdada6a4a6abb4b4b8
c4c4a696afb6b6bfcfcdc2bbafadb8c2b6a49d9da49f7f6d7b999f8964526084a8ada28f
796d6d7b929fabbdbdc2cdcdc8c8ddeff6ebcd9f86a4b8bbb2a8998d96a2a6abc2cbcbcb
c6cddbdfdbd4d1c6b6adaba6947d6b6b7d94abbfcdcfcfcbbbafafb6d1e1e1d4b69692ab
c6d1cba47f8dc2ddddd6c8bbb4b2c6ddd8c6a6898ba2b6bdb6a6969496999b9694a4af9b
7064728fa8ada494827689afbfbfb6a492868fa294797b797064605b57595d6060626472
8dbdd1c8b8b4c2cdcbcbd6dbdfdfd1af897d92bbd8e4e8e4d6b6927f92bdd6d8dfe1dbbd
9b99b8cdd1cdc2a4867d89a2ab9b929db6cdd6c89f7466747d8ba2bbcbd1cfc8d4dfe4e1
c499847f828db2c4c4c6bfc2d6dfe1dbd1cbc8c8cdd4d8cdb6a6abb4c8d4c29f848494a8
b8c8d1d1d4d8cfc2bfbfc2cbd1bb96847972727b96bddbd4b4999996827b89a2afbbc6d1
d6cfc60000a6d8e4dfd8cbcbd1cdb89f9bb2cdd6cdb2999bb6d6e4dfd8d1bf9d7f6d6b72
797b7d8ba4bfd1d6d4d4dbe1dbc8ad9da6bbc6cdcdc8c4c2bbb6b6ada8adb4b4ab9b96a6
bbc4c4bfbdcbd4d1c8b69b7f7676797b89afd6dfdddbdbddd8cfcdcbb899827974768294
998679849fb6c6d6ddd4c6b896767479829dc6dbdfdfdbd4cfcfd1d1cfd1d8dfe4e4d6bb
8f829db2af9b897b89a8c6d1d1cdbb9d82797b8b9d998b89929292a8bdcbcbcdcfcbb69b
94a2a2afbfc8bdb4b8c2b29b8f898fa2bbbbafa6a6abb4bdb8afa6a6b2b4a499a2afab94
7054546d8b968f7d70645d62708296a6a8b4cdd1cfc8cbdfede6cfab92a2bdc4b8ad998b
9bb2bdbdc2c4c6cfd8dfe1dfd6cbc4ab9499afbdb499766b7d9fbfd4d8d8d1c2a48f8b99
c4dfe1d4ad8f94adc2c6c2a68d96b6cfd1cfc8c6c2bbcbddddd6bda4a8b8bdaf9d8b828b
9babb2a2867f897b605d6982999f947f6657627b898f96998f8692a49474746d62575250
4b50596060606d829fc4d8d6c2b4bbc8cbcfd8dbdfe1d4ab848494afcbdfe4ddc4947b7f
96c6dbd8dde1ddc49d94b2c4c4b4a89d948f96a2adafa2abc8d8dfcda27666748bafcdd8
dbcfc4bfd4e4e1d8b69694968f8fa4bfcbc6bdbfd1dfe4e1d8cdc6cbd1d4cdb89f929ba6
bfcbb4927670798da2b4c8d1d4d1c4b6bdb4adbfcbb892847b7674798fbbdbdbc2adb6b6
99767fa4b4b8c2cdc4b4af0000a4d8e1dfdbd4d1d1cdbba4a2b8c2bdb4a2949dc2dfe8e6
ddd4c8b49f8b7d828d9699a4b2bdcfd8d8d4d6dbd6c2a69ba4bbcbd1d1cbc4bdafa4a4a4
afbdbfb6a8998992abbdc4bfbdcdd1c8bba89b92827f868492b2d4dfdfdfdfddd8d1c6b8
a2827b7b74747d8d8f868b9fb2bdc8dbdfd1bba88f76727484a6cfdfdfddd6cfcfd1d4d1
d1d1d6dde1dfcdab86829bb4b4a4948286a2bfcfcfc8b69b7f767d96b6b8a28f96999496
a8c2cdcdcbbfa2867f8b8fa4bdcbbfbdc8cdc4a279697086a2adadafbdc2bdbdbfc4c4bf
bbb4afb2b6b8ad94725d5960707d796d6b6962626b7b92a8b2bdcdd4cbb6adc2d8ddd4bf
a69bb2bfb2a6928da6bbc4c4bdb8c2d6dfe1e1d8c8b8a6897986a6bfc2b4947b84a4c6d8
dbd8cfbb9f827486b4dbe6d8b28f94a6b6bbb8b2ababb2b8bdc2cbcdc4bfc8d8d8d8cdbf
c6cdc4a68d7d7b8ba2afb4a48464606466696d798b8d7f69544747505b667482827f8d94
8269645d52474747494d545b627496b4c2cdd8d8c2adafc4cfd1d4d6ddddcfb299969bab
bfd4ddd1ad7f74869dc4d6dbdde1e1cdad9fb4c4c2afa8abb2b6b2a2a8bda8a6c8dde6d4
a8867982a4cbe1e8e4d4bdbbcfe1ddc6aba4b4b29f8f9bb8cfcdc4c2cfdbe4e1d6cdc8c8
cbc8b69d8b8994a2b4bdab8b726d74828f9db6c8c6c4b2a6aba299a6b2a48b847f7b797b
8fb8dbe1cfb8c2c6a67679a2b6bbc8d4bfa89f000089b4cbd6dddbd6cfc8bbadadbdb8a6
9f96969fc2ddebe8ddd1c6bbb6b2a8a6abb4b8bdbfc4cbd1d4cfd1d6cfbba49fabc2cfd1
cfc8c2b6a499a4afc2cbc6bfb69f89869fb6c2bdb8bdbfb4a69da6ad94898d868fa8cbdd
e4e4e6e1d6cbbbad9b848489827f848b868da4bdbfc2cbdbddc8a69286766d748fb6d6e1
e1e1d6c8c4cfd4d1d1d1d4d6d6d1bb96868fa8bbbbaf9f8b8ba4b8cbcbbfa689767986a4
c4c8af9499a49f9296abbdc4c4bda68f82827d8ba6bbb6c2d6d6cdab7f696b798b9badc4
d6d6cdc4c8d4d8d1bdadafb8bfbfb496796962626b747672747670666d82a2c2c8c6cfd1
c4aba6bdcfcfd4cbad8f9dada49b8f9bb2b8bbbdb8b8c6dde4e4ddcfb294867b79869fbd
c8bfaf96849dc2d6d8d6cdbda4897984b6dde8dfbd9b99a8b6b6b4bbbfb8b6ab9fabc2cd
c2bfc6d1d4d8d6d1d4d4cbb29d999ba2a8adab9d866d62708284868b928d7b625040393b
424b5d74828d99897462524b494447495059605d6482afcdd1d4d6cfb6a6abbfd1d4d1cb
cbc8c2c2bdafa8afc2cdd4c4a27d7b92a8c2d4dbd8e1e6dbc8bbc2cfcfc4bbbdc6c8b49d
a2b69f8fafd1e4d6b2948992b6d4e6efebd4b6afc4d8d6bd9f9db2b49f8f92a6b8c4bfb6
b6bfc6c6bfbfc2bfc4c2b8a892848d99a4a8a4927f7470798999b2bbaba494868682828d
96948b867f7b7d7d8dafd6dfcfbbc2c29f747296b4bfd1e1d8c4ad00007d8fa6c4dbdfdb
cdc6c2bbb4bdad999994949db4d6e8e8ddcdc2bbc4cdcbc2bdc2c8cbcbcbc8cbcdc8cbc8
bba69b9fafc4cfcfcbc6bba69499b2c2cdcfcbcdc8b4948b9badbdbbafa8a49d9ba4b8c4
b29f96898fa2bdd6dfe1e1ddd1c2b6afa284848f9292928d899bb8cbc8c6cbd4d4b69286
89827682a2bfd1dbdfdfd4c6c4cdd6d4d4d4d8d6c6b2a29999a8bdc6c4bbab9b9dafbbcd
d1bfa88f848692a8c4cdb89b9daba68b8692a6bdc8c8c4b29d89767d96adb2c2d8d8d1bd
9f8474727b8ba6cbdddfd6c8cfdbdfd6b8a4b2bfc4c4b89d7f766b6d828f948f8b897d6b
7082a4cdcfc8cfd1c4afafcbd4cbd1c8ab898f9f999499a8afadadb8bfc4cddfe4e1d8c8
a27d7f848d94a2bdcdcbc4a27b89abc8d1d4cfc2a88f8292c4e4ebe1c2a4a6b6bdb6b2b8
bdb8b6a496a6bbbfbbc6cdcfd1d4d4d6d8d4c6b4afb6c2c2af9d9b998d82767f92969699
9b927f6949373032374052697b8b9274696950494949545d62696d6b6d82a6c8d6d8cfbd
aba4abbbcdcfc4b6afadb4c4c8bbafb6c8cdcfc4a6827d94afc6d6dbd8e1e8dfd8d1d1d8
d6cbc4c6c8bfa49299ab9f929fbbd4cba48b8494bbd4e4f1edd1afadc4d8d8bf99899da6
9b8d8f8f929fa69f92949da4abbbc8c8c6c6cbc6a2828b8f94999da29d8b7d7f8fa8bfbb
9b8b8279707079828f968f847b767979829dbfcfc6b2b2a88b706d8db4c6d6e4e4dbc200
0094999fb8d8e4ddcfc8cbc6bfb499868d8d8f99adcfe8ebddcdc4bfcbd6d4c4bdc4cbd1
d1d4cfcbc6bfbbaf9f9294a4b2bfc4c4c6c6b89b8f9fb6bfc6cdcfd4d1bf9f8b8d9bb2b6
a69b9699a2b6cbd6cfc2ab928f9fb6cdd6d6d4cfc2afa4a49d82828f9b9f968d8fabc8d1
cdc8cbcdc6ab8b929f9b8d96b2c6c8cbcfcfcfcdcdd1d6d6d4d6dbd4b4948fa2afbbc8cd
cdc4b4abb2bfc4d1d6cdc6b6a6a29fa8bdcbc2ada6afa484828b9dbbcbd1d4cbb28f7b82
9db2b8c2cdd1d1cbbda68b79767f99c4dfe4d8cbcdd8d8c8a89bb6c4c4c2b8a4897d7682
9db2b4aba29d8d76707996bdcbcdd4d4c8b2adcbd8cdcdbb9b868f9b969da8b2aba29faf
c4cbcfdbdfddd4c49f8289929b9fa6b8cbcdc8a26d7499bfd1cfc8bb9f898699c2dfe8dd
c2adb2b8bbb6afafa8a29f9999b4b8afb4cdd8d4d1cfd1d6dbcdb6b2b8c8d4d1bb9b969d
9d8f79798b9296948d847d694230303034404d545b646652596957545450606b6d6d6d72
7b86a2c4dbd8c6b4aba8abbbcdcbb8b2aba6b2c4c6b2a6b4c8cdd1cbaf847b96b2cbd6d8
dbe4e8dbd6d6dbdbd1c4b8bbb29b8b8ba2b6b2a6a4afc8c4997d7d96c2d4ddede8cdafbb
d1e1dfc89d829bada4948d847b84928f84868f9fb6cbd4d4cdcdd8d8bb9d9d8d898d9bb2
b8afa69fa6bfd1cbb4a2968472727f8d9fa69b7f727070727b8b9dafb2a4998b796b6b8d
bbcfdbe1e4ddcd0000a8adadbfdbe4dfd6cfcdcdc8b69682848694a4b4cde1e6dbcdc6c4
cdd4cfc2bdc6cdd6d8dbdbd1c2b4a69992929fb2bdbfbdc2cbcdb8998fa2b4bbbfc8d1d8
d6c8ab8d828b9b9d92999da2b2c8d8dbd8d1bb968f9fb4cdd4cfc6bfb49f96999689898f
9da2998b92adc8d1cfcbc6bfb69d8ba2b8b6a4a6bbc6bfbdbdb2bfcdd4d6d4d1d4d8ddcf
a6868ba8bdc8cfc8c8c4b6b4bbbfbdcbd4d4d4cdc2b8ada6b2c4cbc2b8b6a88b94999db6
c6d1d8d1b6928692a8b6bbbfc6cdcfcdc6b6997d79829fc8dfe1d4c8c2c6c6ab9296b8c4
bfbdb6a89282869bb2c4c2b4afa8997f727689a4b8cdd8d1c4b2a6c4d6cdc4a68b848f9d
9fa6adafa89996a6bbc6cfd8ddd4c2a8948b8f949da4a6afbdc6c29966709fcddbcbb29d
867f8696afc8d6d1c2b6b8afababa89d8d84848696b8bdafb2cfddd4d1d6dbdddbc4abb8
c8d4dbdbc6a89ba2ab99726476797f7d76726d5d40303032373d44424750575057605962
645b60697070747d8b9db2cbdbcfbdb8b2adb2c2d1cfc2bdb4adafbdbda69dafc6c8c6bf
ad8684a2bbd1d8d8d8dfddcfd1d8dfddcfbdafa492797b94b6c8c6b6adafcbcd9f84849d
bfcfd6e4e1c8b4c2d6e1ddc49b86a8bbaf9989827f868d8d868d99a8c6d1d8ddd6d4dde1
d4c8bf997d8494b4c2bdbdb8b8cbd8d8cbbda88d798499a2b4bba87f6b696b7079828992
999b8d7f72666989b8cfdbdfdfd8cb0000b2b2adb2c8dde4dfd8cfcdcbc4ab8f84899fb6
bdc8d8dfd8cfc8c6cdd1cbbdbbc8cfdbdfdddbd1b89b89848b9db2bfc4bfbfcdd4d4c29d
94abc2c6c2c6d1dbd4c4ad9686898b8b8f9da2a8bdd4dfdddbd8c299929fb2d1dbcfc2bb
b6afb2a899949699999f968992a8b6b8bfbbab9d968d8bb4cfcdb8b2b8bdb8c2c2adafc4
d8d8d4cdcfd6d8c69d8992a6b4bfbfaba2adb8bbb8b4abc2d6d6d4cdc4b4aba29fb2c4cb
c4bfb2a4afb4b2bbc2cbd6cdad898699a4a4a6afbbc6cbc8c4b6a28b8492b6dbe4dfd1bb
a8a6ada2969bb4bfbdb4a89d928d99b2c4c8bfb2afad9b7f7479899dafbfcbc2b8b2b2c8
d6cfc4af998b929fa8afb2afa49b99a6bbc8cfdbdbc6a2847f8b9292949b9da2abbbb896
707bafdbe1cba68b7d7f8694a2b6cdd4d1c8c2ab9d9d9f92827d7b7f99bdc6b6b8d4ddd1
d4dbe4e4d6b29dbbcfd8ddd8cbb29d9b9d8966545b5d6666625d594b3930303239403d39
445b6b64595449576060646b70727f8d9bafc4d4d4c4b6b4b2b4bbc8d4d6d1cdbba4a4ad
b2a499a4b8bbaba29d898ba4bfd1d6d4d4d1c6b8cddfe1dfcfb89f8f82797b96bdcfcbbd
b8c2d6d6b2928fabbbc2d1e6e4c8afc6d8dbd1af8b8bb6c6b294848d999d968b86929fb2
cdd4d8e1dbd4d6e1e1dfd4a27b7d8dafbfb6b8bbc2cfd6d1c6b69f89829db2b4c4c8b68b
6b646672797f848d969d8d7b695d627fadcbd6d6d8d4cf0000a6a2948da6d4e6e4d8cfcb
cbc6b2927f829dbbc4c8cfd8dbd4cbcbcfcdbfadadbdcfdde1dfd8c8a88676798babc6cb
bfbbc6dbdddbcba8a4bbcfcbc2c4c8cfc4ab9d928d8d8d96a49d969fb2cddde1dfd8bf99
96a4b2d8dfcfbfc4cbcbcfbfa49ba2a8a29f948b99a8a4969b947d74797d89b4d4d8c6b8
b4b4b8c8cdb8b2bdd1d6d4cbc8cfcfbda69d9d9b9494947f7d99bdc6bfb6a6bdd4d4d6cf
bfa6a4a29294a6bbc2bdb4b4c4cdcdcbbfbdc8c4a47d76848f8d8b8f9dadb8bdbdb6a692
8fa4c8e6e4dbc8a4928f9ba8a299a6b2ad9b84797b8da2bbcbc4b8afada8967f79869fb4
bbb6b2b4b6bbc6d4dbd6cdc4b8a69b9da8b2b2a89f9da2adc2cfd6dbd6b482747f94998b
7f7f898b92a4a48f7b8dbbdddfc8a68b8282848b9bbbd8e4e1dbcfb8a49d9992867f7d86
a4c6c6bbc2d8dbd1dbdde1dbbd9992b2c8d1d1c8bfb29d8d7f7666575260747260574b40
373432323b4240394762767666503737425262696b728499a6b6c8d4d1bfadabadbbc6c8
d1d6d6d4b6928f9ba49b868694998f898d84899bb2bfc4c8cfc8b2a8c6dfe1dfcfb29284
847f798badc2bdb4bdcfe1ddbf9699bbbdbbcbe6e6cbb4cbd6d4cbab8f94bfcbab867f92
a4ab99898b94a2b8d1d6d8e4ddd6d6dfe1e1d8a6827f899fababafb8cbd4cbb8afa28d7f
8dabbbbbc6cdc29b74646d82929b9b9fa8ad967660575b749dbdc8c6c8d4dd00008b8279
7fa2d1e6e1d6c8c6c4b49b7f727286abbfc2c6d6dbd6d1cdcbbfab9492abc8dde1dfd8c8
a684798499b2cbd1c4bfcfe4e1ddcfafafc4cdbdb6bdc4cdc6ad9f9999969babad928289
99b4cddbddd4b68d92a4b2d6ddd1c8d1dddddbcbaf9ba6b8bdb8a4969dada6928f7f6969
707684abcfd8cdc4bbb2b6bfc6bfb6bdd4d8d4c6bdbfbdafafafab997b6b6d6b7999bfcb
c8bba4afc4cbd4d6c6a69994847f8da6b4ada6b6cdd8d8d1b8adbfbfab86747684898689
929299a2a8a8998692abcfe8e1d4bb96848289999992999b8d74625b627d9bb6c6bdb6b4
aba2948b8b9fbdcfcdc2b8c2c8c8d1d6d8d4d1cdcbc2b2a6a29f9d99969fabb4c8d8ddd8
c89f727286999f8f7b747d7b79848482829bc4dfdfc8a6897d7f7f829fc6dfe8e8e4d6c4
b6b29d92897f7d89a6c2c4bdc6d8dfdde4e6e1d1ad9499a6b4b8b2ababb2ad9984827260
5b748f8b705d4b393439342b3740403b40526979765d37242b3d52606670829babafb8c8
cbbdaba8afc2cbc8cdd4d8d6b68f848b92867972797b7b7d827f8696a6abadb6c4c6bdb6
cbdbdbd8cdb492898984798299a6abadbdd4e4dfc69d9fc6cbbdc2e1dfcbbdcfd1cdcdbb
a29dbdc2a88479869ba4998d94969db2cbd4d8e4e1dddbdbd8dbd8b6948d96a2a2a4a8b8
cfd6bfa8ad9b7f7289abbbbdc4cbc6ab826b7ba6c4cbc4bfbfb496725b545d7292adb4af
bbd6e600007b747992b6d8e1ddd1c4bdaf927970706b748fa6abb4d1d6d6d4c8bda88f7d
798bb6d4dddbd6c6a6898296afb6c2cdc4c6d4e1dfdbcdb4b2bbbba6a2b8cddbd4c4bfbb
afa6adb6ad8d767b869fb8cbd4cfb28d8fa4b6cfd4cfd1dbe1ddd6c2a89ba6c2d1cfb69f
a2b2b8b2a88d7270727684a8cbd8d4cfc4b6b8b8b8bbb2c2e1e4dbc8b8aba4a4adb6b6a2
7d6464697994b2c4c4b69f9dadc2d1d6c8ab8f7f7676849ba49694b6d4e1d8c6afadbfc6
b89b7f7b8692969fa89b8f8989867d7d8fa6c4dddbcdb28d79767d898b8b99927b665b57
5d7492afbdb6b4b6a899949fa8bdd1d8d6d1d1d6d6d1d4d4d6d6d1cdc8c6c4bdab948989
8fa6b2b8cddbddd1b48d74768696a29986828d847270707984a2c4dbd8c29d7f797d8492
b8d1dbe6ede8d6c6c4c2a68f827972768fb4c2c2c8d4dde1e6ebe8d6b49d9fa6afab9999
a2b2c4b8a89d7d6262798f8d7459423737403d3032393b37343d52626b5b37272e3b4954
5d667d96a6a4a4adb6b2a6a8b8c8cfcfcdd1dbdbc49b7f7b84827f7f7f797674767f8b99
a4a49d9db2cdd6d4dddfd4cfc8b6968d8d867b849ba6b2b6c2d4e1dfcbabafd1d6c6bfd6
d1c4c2c4bfbfcbbda28fa6bbb8a2868babb8a6949b9496a4b6c6d4dfe4dfd8d1d4dbddc4
a49badbdb6a4a4b4cbd6c2b2b6a4846b7ba4bdc2c8cbc6b68d7086bfdfe1dbd1c4ab8666
595b6b849fafaba6bddbe80000867f89a6c8d6d6c8b8afa48970646972727079898b9dc2
cdcdc4b29f8f847b6d708fb8d1d4cbb69f8b8ba2bdbbbbbfc4c8d1dbddd6c8b6b4afa499
9fb8d4dfd6cbd4d6c8bbbdc2b296827d8296a8b8c6c6b49b96a6b8c8cbcbcfd8dbd4bf9f
89899bbbd4cbb4a4a8bfcdcfc8b2927f7974768fadc6d4d8cdbdbbb2ababa4b8dde6e4d6
c8b2a6abadb6b6a67f6b727076869babb4b4aba8b4c8d1d4cbaf9486827b849dad998db2
cfdbcdafabbdc8c8bba27d727d94a6b4b6ab9d8d7f76727b94a6b4c2c2b89f7f6d707f89
898f9d8f76695d5b698496a4adabadaf9f8d8fabbfcfd8d8d8dbdbdbd6d4d6d8dbd6d1cb
c6c6cbcfc6a88d8492adbbbdcbd8d8c29b7b767982929f9d96969f9476646b79849dbbcb
c4ad8d79767d8fadcdd8d8e6f1ebd4c8cbcbaf8f7b766b66728dabbfc8cfcfcfdbe6ebdf
c2a8a6afbdb6a49fa4b4cbcfc6b6926d6474827d66473734374450493d3b3b3430323b47
50472e293440474d545d708699999699969b9ba4bdcfd6d6cfcdd6d8cda87f727f8d8f96
9b8d86796d798d9fadb4a899abcbdde1e8e1d1cbbfab94949486767fa2b8bdbdc4c6cdcf
c8b4b6d4d8cdbdbfbdbdbbafa2a6b8af928299bfd1c4a2a2c6d1b694948b8b8f9db6cfdd
e4e1d8cdd6e1dbc8ada8b8cbc4a89fabc2d1c8b8b8af8d69749bbdc6cbc8c6b8927089c8
e6e4dfd4c6ad7f605d6b8dabb6b4abafc6d6dd00009d9494adc8cbc2ad92897b66606064
6b6d696972798badbfbfad927d7b827d70667294b4c2bdaf9b8b92abc2bfb2adbdcbd1d6
d4c6b4afafab9fa2abbbcdcfc4c2d4dfd4c6cbcfc2a892898b96a4b2b6b6ad9f9fabb6bf
c4c6c4c4c6bd9d82797f8fabc4c6bbadb2cbd8d6dbcfaf89746b667286a8cddbd1bdb4a6
9d9fa2adc4dbdfdbd4bfb8b8b2afad9f867d867f7b7f92a4b2bbbdc4c8cdd4d6cbad9da2
a49992a8bba48fabb8bfad94a4bfc2b8a68d6d627092b2bdb8afa4998f867d89afbfbfbd
bbb49f8270727b86929da2896b665d6479949d9d9fa4abab9b898babc8d6d6d8dddfdbdb
d8d8dbdddbd4cdc8c6c6cdd6d6c29d8ba2bdc8c8cbd1c8a47b6970767f8b9ba2a6adad94
7266707f8d9dafbbad967f747682a2cbd1d4dbe4efebd8d4d6d1bb947b7f7b72697086a2
b6c2bbb2c2dbe6dfc8b6b2b6c6c4afa8b2c4cfd6d4cdb4866670796d52372b2e32405764
594b44373432323940392b2b343d4952595b6472848d9b9d8d898d9bb6cdd8d8cfc8cbcf
cbb492797b898f9ba2968d7b6b7489a2bbcbc6b6b4c2d4dfe4d8cbc8b6998d9b9f8b7474
99b8b8b6b6a29ba2a69da2bbcbc8b4a6abb4b4a89fa6ab968289a2c6d8cfb4b2c8cfb89f
9f9286828fabc8dde6e4dbd4dddfcfb8a8adbfd1cfb4a4a8bdc8c6bdb8b294727996b4bf
c2c2c2b88d697fb8ddddd1cbc6af866b6b7ba6c2bdadabb8c4c4c40000aba499a6bbb6ab
9982766d666264666969646269727d94a8b4ad8f746d76746b696d7f96a8afa8998d99b2
c2c2afa4b2c4cfd4c8b29fa8afb2b2afb2b6bbafa2a8c4d4cfc8d1ddd1bb9f949ba4adb6
afa69f9dadbdbfbbbdc4b69f929484828d9296a2b4c6c6b8b6cfdbd8ddcfaf8970666976
8dadc8dbcfb49f9699a4adb2b8cdd6d4c8bdbdbfafa29b94929499928489a6b8c4cbcdd1
d1cdd4d8c8a89fafbbb6a6a6b69f899fa8a4928492a29d8d7d705d5b6b89a4b4b6b4a89d
969496a8cbd6d1cfd1d1c29f8982828694a4a88d6b6059627b9ba29d9fa4aba496898dab
cbd6d4d8dfdfdbdddddddfdfddd6cbcbcdc8cfd6d8cfb29fb6cfd8d4cfc8b48970697076
7d8696a2adb8b69670727b8fa2afbbbdb29f84707686addbd4d1dbdfedefe6dfd6cdc2a2
86898d84706b768b9da8a6a2adc8d6cdc6bfb8b4c4c4afb2c4d4d4d6d8d8c69b6d697062
422e272b323b57746d5b4b403b373940443d322e3444525d605d606b7b8fadb89f898499
b2c8d6d4c8bfc2cbcbbda48676797d7f848682746b727d96bdd6dbcdc2c2d1ddddd1cbcf
b8928fa4b4a27b708ba8afa89b7f797d7f828da8bfbba6a2afb8b4abadb4ab8b7d96adc8
d4cdb8b6cbcdbdb2b8ab92828ba2b8d1e6e4d8d8e1ddbda29fb4c6d8dbcbb6b2bdbdb8ad
a6a499898b9badbbbbbbbbad8264749fc8cfbbb4b4a69486868db4cdc2a8a8bdbfb2a800
00b2af9d9296928b867f767070707d8986796b6469798694a6b8bba2826b6666696d7484
949da29b8b849db8c4c4b6abb6c6d1cfbda49dafbbbbbbada8a89f99929bb2c2c6c8d6df
d8bfa8a2a6b4bdb6a28b8494b4c6c6bdbfc2ad8670797f94a4a49b9fb4bbbbb4b8cfdbd8
d1bb9b826d6b7d94a8b6c4cfc29b898b9fb2c2c6c4cfd8d4c4bbb8b69d8b848999a4a496
868fb6cbd1d4d1d4d1cdd4d8cdada2b2c2bfa699a8947d94a4a8998d898982746966605d
64798b9fb2b4afa2999dadc2d6d8d6d6d8dfdbc2ab998b848d9fa69d7f665b5d708d9da4
adafa6998f868ba6c6d1d1dbdfe1dfdddddddddfddd4cbcbcdcdd4dbdbd8c8b8bfd4ddd4
c2af9b7f767274797b828f9dadbdc29f797d86a2bbbdc4c6c2b4997d7f8db2ddd6d4dddf
ebf1ede1cfc6c4a8929996866d6674899dabafafb2bdc2b8bdbfb8adb4b8b2bfcdd6d8d6
d6d6c8a6765d5d573929272e39405b7b79624d49423b404b52493b3039505b6264646972
849dc4d1bb9d96abb4b8bdbfbdb6bdc8cdbda48d7f747272767f7b706b727b8fb8d6ddd4
c8c8d4dfe1dbd6d4b68f92afc6b88d7b92a8ab9d8d7d7d828b94a8bfc6b8a8adc2cdc2ad
a8ada6928d9dabbfc8c2b4bdd1d1c2b8c2af96898f9fafc4dde1d6d6ddd4af999fbbcdd8
ddd6c4c2c8bdaf9f9492969d9fa4adb4b6b4ad9676647ba8cbcfbda8a2aba8a49da4c4db
d1b4abbfbfb2a40000bbc8b896796d6d767b7472797d94a6a49279666d8ba6b6c2c8c6b2
94745d6066707f96a6a8a496847fa4c4c6c6bbb4c2cbcfcdb69d9bafbbbbb2a2a2a69d99
9294a8bbc8d1dbdfd8c4afadb6bfbfb2927b768ba8bbbdbbbfc2a88672768294a4a299a4
bbb4aba6a8bbc8c6af968479727b9dbbc6c2bbb6a68f92a4b6c2d4dbd6d6dbddcdbbb6b6
9d89828699a8a8968696bfd1d8d6d1cfcbc6d1d8cdb29fa6b6b29486998f7f92a8b4ada2
8d898f8b7f766d64647289a2b2b6b2a89da6bdd1dbd8d4d6d6dfe1d4bda494868999a6a6
92796d696b7689a2b8bda8948f848499b2bfc6d4dde4e1dbdbdddfdfdbd1c8c8cbcfd8dd
ddddd1c6c4d4ddcda88f8986827972747b828d9db2c6cbab868694b2c6bfbdbdb6ad9f99
999bb6dddbd8dfe1ebefeddfcfc4bfa6949f927b696974869dbbc8c6c6cbc4afafb6b49f
9fadbbc6cdd1d6d8d6d4c8a67959575034292b37444d5d7676624b443d373d4b57524037
405259606b748292a4b8d1dbcfbdbbc8c2ad9fa8b2b6bfcfcfb89f8f897d7b7d8d947f69
69748499bbcfd6cfcbcdd8e4e4e1dfcfa8868ba8c4c2a496a8bdb6a69986869bb8c2cddb
d6cbbfbfd1ddd4b29da4afaba49f96a6b2adb2c2cfcfc6c2c4ab96929babb8c8dbdfdddd
d8c4a29ba6b8cdd8dbd1c2c6d1c8bdafa29294a6b2afa6a2a29d8d7b696682b8d4d4c4ad
afc4c2b2a6abc6ddd8bdafb8bbb8af0000cbddd6b88f6d66727d7d82898494a4a89f8269
7699bbcfd4d4cdc2a67b5b5b667694afbfbdb4a6968dadc6c2bfbdbfc4c4c8cfbfa499a6
ada89f99a4afafa6968f9fb6c8d4dde1ddcbb8b6bfc4bfaf927d798294a8b6b8b8b8ab8f
79797f8b94968f9db8b2a4999fadbdbfa48272727b9bc6d8d8c6ab968d94afc4c8cbdde4
dbd4d6dbd1bdb8c6bbab96898f9b9b8d8ba6c8d6d8d6d1d1cbc8d4d6c6ab928f9f99867d
8b8f8b96adb6b2ab9494adb4ab947b6b6979a2bbc2bbab9d99a8c4d8ddd6d1d6dbe1e1d8
c4afa28f94a4a8a4927f7b7b79797f99b8c4b29d9b92898f9ba6b6d1e1e6dfdbdbdbdddd
dbd1c8c6c8d1d6dbdbddd8cdc6cfd4c29d8b92948d7b70707b8994a4b8cbcdaf8f96a8bb
c4bdafa299969fafb4afbfdbdddbdfe6eff1e8dbcbbbaf9d9292847b7b7b797d94bbd1d4
d8dbcfaf969ba49494a8c2cbcbcbcdd4d6d4c6a476605b4d342b324049494b5b695d443d
3734373b47494039404d546074869fb2bdcbd6dbd4cdcfd6cfaf8f9ba6b2c4d4cba88d89
8b827f8b9d9d7d646b7b92a6b8c8cdcbcbcfdbe4e6e1d8bf96798296afbdb6adb6c4b4a4
9b898dadcfd1d6e1ddd6cdcbd8e1d6b296a2bdbfb29d828b9da4b6c6cbc8c8cbc2a8928f
9babbbcbd1d8ddd8c6ab94969da4bbd4d8c6b6c2d1c4c2c8c4ad9da2a6a29489867f746b
666d89bdd6d4c6bbc6d8cfbbaba6b8cdd1c4bbbdbbb8ab0000cdd8ddcdaf8d7b84999f9d
968284949b947f727f9dbdd4d8d4d1cbab7d6469727fa6c2cdcbbfb4a89fb2bdb6bdc4c8
cbc2c2cbc2a8929494929299a6b4b6ad9b8d9bb2c4cfd8dfdbcfbfb8c2c8c6b89b847d82
899fbdc2bbb6b6a68b797f898b8b828da4a2928fa6bdcbcfb88f70728dbbdde1dbc49d84
86a2c4cfcfd6dfe1d6d1d1d1c6b8bfcfd4c6a8897f827f7d8db2d4dbd8d8d4d1cfcfd4d1
bfa2827d8b89848282949d99a8b2ada69ba6c6cbc6b494766b84b8cfc8b69b868496b4cd
d4cfcdd6dfe4e1dbd1c8b8a2a6bbb2a28f8b82868b847f8fafc6bfada69b8d868b96b2dd
e8e6e4dfdddbdbdddbd1cbc8cbd1d6d6d6d8d8d1c4bbb6ab9292a29f9482767986949fad
bdcbc4a68d9fb4c4c8c4ab8f868da6c2cbc8cbd6dbdddfe8f1f1e1cbb6a89d96928b8f99
9d8b7d7989abc8dbdfddd1b28d89968b8996adb2b2b2b6c6cfcdc29d766b64523b343942
443930394949403b3432322b303b3d3d3d444d607994afbfc4cdd8ddd4d1d8dfddb88f92
99abc4cfbd927b7b827d7d8b9b92746676849dafb8c6cbcbcdd6dfdfdfd8cdb48d747684
99abb4b4b2ad9689897d8badcbcfd1d6cfc8c6c8cfd1c4ad999badafa28b72798d9db6c6
c8c8cdcfc2a4897f8fa2b4c6c8c8c6c2af968b8b89869bbfd1c4b8bdc2afbdd4d6bfa28f
82827f8289847670707b96c6dbd6cfcfdde1d6bfab9f9fabbbc2c4c2bbab940000c4d4dd
d4bda89ba4bdbfb49d7d768289867f7d8ba2bdd6d6d1cfc69f797984868db6cbcfcdc4bd
b8b8b6ada6b6c8cfc8bbb4bbbba68982848b96a2abb4b8b2a49da4b2bdcbd6dbddd6c6b8
bdc8cfc49f8b8d8d92abcdcbc4c4c8bfa489848b9496898692928b94b6cbd6d8c69d7272
94c8e6e4ddc8a48f96b4d1dbdbe4e1d8d1d4d4c4ababbdd1d8d1b68f7d7b79798fb8d4dd
d8d6d4d1d1d6d6cbb2947d767f82848b8ba2ad9f9fa2a2a6abbdcfcfcdcbaf846d8fc4d8
c6a68b7f7f8996a6b2b8c6d8dfe1ddd8d6d4c8afafc2bba89fa28d8d968b7f84a6c6c8b6
ab9b8b7f848fb2dfe8e4e4e1dfd8d8dbdbd4cfcdcfd1d4d4d4d6dbd1b89b8b898294aba8
a2928486949da6b6c4c4b4968ba4bbc8cfcdb89b8b94adc6d8d8d1d1dbdfdfe6edebd4b4
a2a69f9f9da2b6bfb4997f7b869bbddbdfdbcdb48f8992827b7b7f89929fabc2cbc8c2a6
8676695b4b404247473b2e2b2b2e3440403b392e2e373d3b393b4457769dbbc6c8cfd6d8
d4d6dfe6e6c69d9699abbfcdbd967974797476899686706d7f899badb6c6cfcfd4dbdbd1
cdc8bfb28d706d7b8b96a4b6bda48474767282a4c4cfd1cdbbbdc8cdc8bbb2b4afa2928d
86766b7089a8bbc8d1d1d4cfbd9b7f7b89a2b8cdcfc8c8cbbb9d867f7d7986a8c6cbc4b8
a899adcdd4bb96827b828b9dada4867476869fcbdddbd6dfebebdbb89d9b9fa6b6c8c8bf
b8a48d0000c6d8ddd1bfafabb6c8cbb6947b76828b8d8b929dadbdcfd8d6cfbd8d728d9b
999fbfcfd1cdc6c8cdcfbfa69ba8bfc8c2b4a69fa6997f7f8d9da4adb4bdbdb6b4bbbfc2
c6cdd1d8ddd6c4b4b8c8d1c6a299a29d9fb8d8d4cdcfd4cdbba49496a4ab96848b8b8fa4
c4d1d8dbc6996d749dcfe8e6ddcbaf9f9fb6d6dfe1e8e1d6d1dbdbc49f9fb8cbd6d6bf94
8692968999bbcdd8dbdbd8d4d1d4d1c4ab8f7d797f7f7f8999b2b6a4928b96adbdc8cfcd
d1d4bb8d769dcddfc8a48d8d94948f8b8996b2cfd8d8d6d1cfd1cbb4adb8bbbbb6ad9b9b
a2947f84a8c6c4b2a699897f828dafdbe6e1dfddddd8d6d8d8d1cfcfd1d4d4d1d1d8ddd4
b48b74747b94abb4afa294929da6adb8bdaf94828ba4bbc6cdcbb89d8d99abbdd8ddd1cd
d1d8dbdddfd6bba29fabadadb4c4d1d4c4a88b7f8b99bddfe1dfd4bb94868b7b76747b8d
9da8bbcfd8d4cdb48f796b60574b474949403229201e243b50544d47403d403b37394050
709dbbc8cfd1d1d1d6dbe1ebe8cda89b9ba8bbcbc8b292827b767b868d847272848f9ba2
abc4d4d1d6dbd6cbbfb8b6ad8d6d6b7b898f9dbfd1b8927d7f767fa2c8d8d8cfbdc8dbdb
cfbdb4bfc6af8b7b746b6d7492b6c4cbd6ddddcfb48f767b92afc8dddfdfe4e6dbb88f7f
7f848b9fbbc6bfa89494abc4c6a8897f8fa2afbfcbb88d74798b9fc8dbddd8dfebe8d6ab
84899bb4cdd8d4c8c4b2a20000c6ddd8cbbdadadb8c6c6a882797d89969ba4b4bfc6c6c8
d6dbcfb4867699a6a4a6bfcfd4cfc8cdd6d6bfa49dafc2c8c8c2a6848b8b797b8fabb4b6
b6bbb4a8abc4cfd4d4d1cdd1dbd4bdafb8c6cbbfababb4adabbdd6d6d4d6d6d4cbbfafa8
aba68674848f9fb4cdd6dbd6bb92798fbbdbe6e6d8c6af9f9db4d6e1e1e1dbd4d4dbddc6
9b94abbfcfd4bf9296afb49d9db6c6d1d8ddd8d4d1d4cdbfad947d76827f797d96adaf9b
86869db6c6cbcdcbcfd1bf9b89add6e1cdad99999f9f9992828299b4bfc6cdcfd1cfc4ad
a4adb8bfbbb2a6adb4a28986abc4c2afa494867d7f8dabcfe4e6dfdddbd8d6d6d6d4cfcf
d1d1d1d1d1d6ddd6b6896d72798da8bbbdb2a2949dabb2b8b29b7d798b9fafbdc6bda286
89999da2c2d6d6cbbfbbbdbdbbb2a299999fabb4c4d8dbd6d1c2a2898f99bbdbdfdfd8bf
9b84827f868d96b2b8b4c4d6e1e4d6b2846b6059524b494944403930271b1b2e495b5d5d
504244423b3b444d6086adc6cfd1cfd1d6dde4e6e4cdada29fa6b6cdd4cbb89f8b7f7d7b
7b7f7d7d89969fa2a6bfd1d6dbddddd4bfadaba88b696b7d898b9bbdd4c4a896948282a4
d1dfd8cbbdcfe1dfd6cbc4cbcdb88b766d69697289a4b6c2d1dfdbcdb48b7986a2c4dbe4
e6ebededebd8b4948b969da4adb6a69294abbfc4bda489829fbdc8c8c6b4947f7d869dbf
d6dfdfe1e6e4cf9f747486abd4e1dbcfcbbda80000bfd8d4cbc2afb2bdc8c6ab867b7d86
94a4bbcfdbdbd6d1d4d4c29f7b7b99aba8a6b8cdd6cfc8c6c8c4b2a4b2c8d1d1d1cdab7d
82897b7689a6b4b2a8a49b8989adcbdbddd8cfcbcdc4afa4b4bdb8adabb6bdb4a4abc8d4
d8d6d4d4d1cfc6b8a2866b647d9dafbdcdd6d8cfb28d89afd6e4e4e4d8c6ad9696b2d6e1
e1ddd4cdcbd4d6bb8d8699afc4cfbf9da2b8b6998fa8c2cfd6dbcfcbcbcdc2b6ab967f79
82827d84a2b6af968992a8bfcdcbc4c6cdcfc8af9fafcfd8cdb8a299a2a8a69b8b868f96
999fb4c6cfc6b2a6a8afb4b2b2b8b6bdc2af8d84a4b6b6aba699867b8299afc8e1ebe1db
d8dbd8d6d1cfcdcfcfcbcdd1d4d6dbd1b28670747989a4bdc4b8a49299adb8bbb49f847d
8da2afb4b4a88d7989948d849bbbcfc8b49f9b99999694969292a2adc2dbdbd4d4cdad8b
8d99b4cdd8dbcfb69d8b848fa2a8adbfc4bdc8d6e1e4d4ad7b5b4d49494b4d4b42424237
2e22202b3b4752595247444240424b4d526b99b8c4c8cdd6d8dbdbd8d6c2ada6a6a8b8d6
ddd6cfbfa489766d72869494929ba4a29fb2c8d6dbdddfd8bda4a29d7f6066747d7d8fb4
cfc8b2a4a28b84a6d4ddd1c4bfcfdbd6cdc6c6cbcdb88b7269646269748499b4cddbd1bd
a4867f94b4d6e6e6e8ebebe6ebe4cbab9ba4b4b6afa8928b9fbbc8c4b8ad968ba8c6cfc2
afa4a299847d99bbd6e1e6e4e1dbbd8f6d6b7996bdd1cbbfbdb6a60000b8d1cfcbcbc2bd
bfc8cbbfa2867b7d8dabc8dbe4e1dbd4d4c8ab826d7692a6a8a6b4cbd4cfc8b8a49d9da8
c2d6dbd8dbd6b88f89897d727b94a29f8d827d767b9bbdd6dfddd4cbc4b2a6a6afb4ada2
a6b4bbad928dafc6d4d4d1d6d6d1cdb8926d5d6482a8bbbbbbbbc2c29f828bb6dbe6e6e4
dbc4a28b8ba4cbdddfdbcfc4c2cbcbaf847d8da4bdc2b29da2ab9f7f798dabc8d6d4c8bf
bdb8ada49b8f8d969fa4a2a8c6cfc4af9fa2b6c8d1cdbfbfcdd4cfbba299adc4c8bba8a4
b2bbb29b8f9292867b7b8ba2b4ad9da4adada69fadc4c4c4c4af897b969d9996a29d8976
7f9db4c6dde6dfd8d6dbdbd8cfc8cdd1cfcbcdd1d6d8ddd1ad86747b828fa8bfc6b8a292
96a8b8bbb8ad94848fadbfbfb4a48d828d8d82797d92adbbada29f998f898b969b96a2af
c4d1d1cdcbc4ad948f96abbfcbc8b8a69d96949fafb2abafbbc8d4dfe4e1d1b286604b47
4b4d5757474b4d3930292b3942444b575d57474244475050506089abb6bdc8d6d4c8b8b2
b2afa49b96a2bfd8ddd8d8d1b88f746b7999adada6adada29699afc8d1d8ddd1af948f84
6d5b6672727489b4d6d1b4a2a4928da6cfd8cdc4c2c4c4c2afa8afb8c2b696796d6b6466
727d8ba2bfcfc6a4867f899dc2dbe4e4ebedebe8ebe4cdb6a8afc2c8bdab9499afbfc8c4
bbad9f9babc2c4ad9699aba6897289b4d4dbd8d8dbcfa88272727d8b9fb4bbb6b4afa400
00b8c8cbcdd1cdc4bfcdcfcdb8927d8299bbd4dddfddd6d1d4c8a87f6d768b9da4a4a8bd
cbcbc4ab94999fa6b8cddbdbdbdbcbab9686797074828b8276747b7984a4b8cfdfdfd6cf
cdbfb4afb2b4afa8a2a6a89d8b8499adbbc2cbd8d8d1cdb48b6d647492abb6b4a6999da6
928289a8cfe1e4e4dbc49f8b828bafcfdbd1c4bbc4cbc8ad847d899bb2ab9b99a4a89b82
7d8692afc4cbc4b6aba49b8d868da2b6c6c8c6c8d8ddd6cbb8b8c8cfcfc6b8b6c4cfc6ad
8f7f8da8b8b8b2b8cdd4c2a49b9692867b7b899ba8a494969f9f969bb2c8cdc8bda27f79
929b8f8494927f727692afc6dde6e1d8d6d8d8d6cdc6cdd1d1cdcfd4d6d8ddd1af92868b
92a2b2c2c8b89b92949fabb4bbb69d8689a8c2c8b89f8d8b8b89898b929296a6adb2b2a2
9282829dafafb6c2cfd1d1c8bfb8b2ab9f999fadb4b2adadb4b4adadb4b4a296add1e1e6
e1dfd6bf9966525052545b5949525747373037444d525b707966494247495254545d7f9d
a6afbfc8bfab948d94968d827f96bfd8dddbddddcdab8b7982a4bbbfbbbfbfaf998b99b4
c6d1d6cba8867b6962647479767b94c2e1dbb2969f9994a2c6d1c4b2afa499998d868d9b
adb6ad9b8f84747282969996a2afa88d7b7d8da4cbdbdfe1e6edede8e8e4d1b8abafbdc6
bdab9da8c2cbcfd1c6ab9da2abb8b299868d9f9b7d6b84b6d4cfbbb8c4bfa8948d89949d
a4b8cbcfc4af9b0000c6c6c8cdd1cdc2bfcdd1d1c29d8b96b2cbd6dbd6d1cdcdd1cfbb94
7b798492999b9ba6b8c6c2afa4afad9d9dafcfddd6dbd6c4a686726d767d7b72727f8986
99bbc4cbd8dfddd8d8d1c4b4b4b6b4a89992928b7d76828b929bb6d1d8cdc6b494797082
9fabada696898b9ba29b949dbbd6dfddd1bb9d8b847f89a8c2bfbbbfcbd1cfbb927b7684
969696a8bbc4b8a2969694969dabafa2949496928b9dafc6d6d6d4d6dbdddbd1c2c6d4d4
cbbfb4a4a8b2a89484848492a4b2b8c8e1e4d4bfb2a299948996b4c4c6b69b8b96a4999d
afc4cdc8b28d7d8499a69984898479768294a6c2dbe6e4ddd8d6d4d1cdc8cbcfd1d4d4d8
dbdbdbcfb29d969da6afbbc4cdbd9f8f8d949fa8b2b299827f99bbc6b6998d8d8d99a6b6
bfad9da8b8bfb4a28f8489afc6c6c8cdd4d6d8d1c4b6b8bbb4afafadadb4bdc2cdc8b8b2
afab9994b2d8e6e4e1dfdbc89f6d5b5d575959544b576460504040475060798b8b724d42
494b545b5d5b6b7d8b9badb4a899929b9b8d7b747b96bbd1d8dbe1e6e1cfaf8d86a6bfc6
c2c2c4b89b8b96adbfc6cbc8ab8b7b6b6970797f828dabcfe6ddb49496999299b6bba68f
8d847976797b7d869fbbc8c4b49f89869dbbb499868b8d86868692abcbdbdddfe4ebede8
e4dfd1b49d9fa8afab9d96a4bfd1dbdbcda89299a6b8bbab92898b7f74728fc4dbcba496
a2adb4b2a899a2adb4cbdddfcfb6a40000d1cdcbcbcbcbc2bfc8cfd4c6a89dabbfcdcfcf
c8c8c6c6cdd1cbb2927d7f828d9b9fa2b2cbcbbdb4bbad968b96bdd8d8dbddcfaf826669
7276746d727f8d9db6cfcbc8d1dfe1dddbd1c6b8b2afa8998b898b846d64727d7f89a8c4
cdc2b4ad9f827992b4bbb4a2897d869fbbb6a49fa6bdcbbdafa28d89847d727f99a6b4c2
cfd4d4bf9979696d7d8fa6c2cdcfc8bdafa69d94867f8b89899dafb4afb2b6c4d8d8d8d6
d6dbd8cdc2c6d6d6cbc2b8a29ba29f968d8d898992a4b8cfe4e6e1d8c8b4a8a496abcfd8
d8c6a899a6af9d9ba2a8b4b49f828292a2afa48b827f8699a6aba8b4c8dbe1dfd8d4d1d1
cdcdcdcfd1d4d8dbdddbd4c4a89b9ba6b4bdc4c8cdc2a4847b86949fa49d8b82899fbfc8
b69d8b8b99b4c8d6dbbfa4b4c4c6b49f8b7f8fbdd8d8d4d4d4d4d8d8cdbdbbbfc2cbcdc4
bbc4cfcfcdc2b4b2ab9f949fbfd8e1e6e6e1d8c8a87b646059595757626d7470604d4447
506b8d9b967f5b4b4b505b6b767269697684929d9b969fafab99827b849bb2c6d1dbe4e8
e4d6bb927f9fbfc8bfbdc2bdaba4abb6bfbfc4cdb4947f727070767f899dbdd8e1dbbb9f
9b998f94aba8968682796d6d72767b829bbfd6cfbfafa4a6bbd4cbab8f8b8f99a29da2b4
c8d6d8dde1e8ebe4ddd4c4a68f8f8f94928b8289a6cbd8d4c4a28f9badbdc8c6b29b8b7f
828da8d1dbbf948496adc2c6b49b9dabb6cfe1e1cfbfb80000d4cbc8c6c4cbc4bdc4cdcf
bfa69dadc2c6c2bbb6bfc4c4cdd1cfc6a68676768499a4a2b2d1d6cbbfbbad96868db6d6
dbddddd4b48462646d6d6b69727d89a6c6d1c8c4d1dde1ddd1c4bdb6aba4998984868d86
7062707d7f86a4bbbdafa4a29b847f9fcbcfc4a8867982a2c4c4afa299abb89f8d867b76
74726b727f8fa6bdcdcdc8b6967b6b6d86a6c2d1d1cdcdc8c6bdada28d79828f9fb4cbcf
c6c2b8b8c8d6dbd6d6d6d4cbc4c6d1d4cbc4c4b8adadb4afa4998d847f8dadcddbdfe1dd
cdb2a4a699adcfdbd8c6b2adb6af96949d9f9b92897f8b9fb2bdb2947b7d9bbbc6c2b4ab
b2c6dbddd8d4d1d1d1d1d4d4d1d6d8dbd6cdbfa68f8f9dadb8c4cdcdc6b699767486949b
9282767b8fabcbcfbfa68f8d9fc2d8e1ddbfa4afc2c4b4a2867b92c2dfe1dfdbd6d1d4d6
cfc4c4cbcbd1d6d1c2cbd6d1bfadadb2a6928b96b8d1ddebebe1dbcfb68d644d4d545d70
8d948976604d4447547294a4a89f826654596b8b9f997f6d767b89999d9b9fadafaba29d
9fa4adc2d1dde6e4d8c6af8d7b96bbbfadafbdc6c4c6c6c4c2b8bbc8b8997f726d6d7482
92a8c8dbddd4bbadb2ab9f99a4a49f9d927d7076797d7f8294bbd4cbbbb8bfc8d6e1d4bd
adadafb2b6abadbbc4cbcfd6dde1dfd4cfcbb89d8b86868d8d84767492bdcbc4b6a29dad
bbbfc6cdbba89b8f9ba8b8d1cba8847f9bb8cfcfb8928d9fb2cbd8d8cbbfbf0000d1c8c6
c6c6cdc8c4c6c6c4b69d99a6b2b2aba8b2c2c4bfc4cdd4cfb694766d74869fa6b6d4d6cd
c2b8a68f848db8d6d4d4d8d1bb8f6d696d6d696b76828fadc4c6c2c4d4dfe1dbcdbbb6b6
aba69f968f8f999f866b697079869daba89b94928b8289a6cbd1c2a282767b94bbc2b2a2
96abbfa88f7f726d696969727b7f96b4c4c2bdaf967b707b9bc4d6d6cfcdcfcfd6d4c4b4
9d8d92a2b4cbdbd8cdc8bdafb2cbd8d6d6d6d4cdc8c8cdcfc8c6cdcbbdb6c2bfab94867d
747b99bfd6dddfddc49d899492a4c2cdd1c4b4b6b8a48d8fabb89f867f8299b2c4cbc2a2
7b82a8cbd4cdbbadabb6cbd6d8d4d1d4d4d4d6d8d8d6d4cfc2ad9b8b828b9dadb8c6cfc8
b2947f7284a4afa88f74667089afcbcfc2ad9b8d94b8d4d6cbbbada8b4bdb8a68982a2cb
dfe1dfddd8d6d4cdc6c4cbd1d4d1cbbfb4bdc2b8ab9f9f9f8f7d7d849fbfd8e8e8e4e4db
c296593747597499b4b8a2846450494b5d7b9bafbdbfaf8b707084a6bbb2947d7b7b8696
9f9f9dabbdc8cbcbc4bdbdc2cbd8ddd1bda899827689a2a28f96adc2cbcdc8c4c8bfb6c2
ad8d766d696672849bb6d1dfe1d8c2b8c4c6b4a2a69d9fa292827d8b949b9f929fbbc8bb
afbdd4dde1e4d4c6c4cbcfcbc4b6b4bbbdbfc4c8cdcfcdc6cbc8b89d868286929284746d
86afb6afad9d9fb6c6cbcdcbbbab9d92a6b8bfc6b28d8294b4cbd6d4b886798fadbfcbc8
b6afb60000d4cdcdcbc8cfcfcfcfc6bdb29d96949492949fb4c4bfafb6cbd6d1bda28674
7082a6bdcdd6cbbdb6af9d847d89b4d1cdcfd6d6c4a68b7f7d767270798da8c2c4b6b4bf
d4e1e1d8cdbbb8b8b2b6b8b4ada6abb6a47f666986a4ab9b8b86827f7d7f92adc4cbb896
7d79797d99a8a8a29db6cdbda694897d74767f8f8f8292b2cbc8c2b4967b7284a8cfdfd6
cdcdd6d8dfe1d1bfa6928d9dbbd6dfddd4cbbdaba4bbd1dbd8d6d4cfc8c6c8cfcdcdd4d1
c2b4bfbfa47f7674707282a8cfdddfd8bf947f8d8f99a4afc4cbc2bbad998d99b4bfa486
7d7f99b4cbcfc6a87f82abcdd4c4aba2a8afbdd4d8d1d1d1d4d4d6d8d8d4cbb69d89848b
94949babb2c2cbbf9979727699bbbfb8a486696684afc8cbc2af9b847d9bb6bdbfc4c2ad
abb4b29b8492bbd1dbdfdddbd8d4c8b6abafbdcdd4d1bfa69d9f9d96928d8d8f867b7d84
8fabcfe1e4e8ebdfc28d492e4b648bb4c8cbb6946b544d526684a6bfcbcdc4a88d8692ab
b4a69689827b8294a2a6adbfd1dddfe1dbd4cfc6c2c2bda68f89827976899b9d928fa2bb
c8c8c2bdc2bfbdbfa47f6b696462748babc6dbe1e4dfcdbfc8d1c2b2b8a2928d7f7f8da6
b6c4c4b4bfcdc2afa8bfdbe4e4e1cfc6cfd8ddd8d1bfb4b2b6bdbdb8bbbfc4cbd1cfc2a4
8b86929d9d8d76697494a6adad9b9fb6c8d1d1cbb29b8d869bb2bbb89d7f86adcdd8dfd8
bb8474869db2bfb89f9fab0000ddd4cdc8c8cfd4d8d6cbbbad9d8f84797b899fb4c2bba8
adc2d1cdbfa8927f7d96bbd8e1ddc6a896948d7f797d99b6c6cfd6d8cbb4a2998f827b7d
849dc2d1c8b6b6c2cfddddd4cbb8b2b2b4bdc6c6bfb6b4b8ad8f7472a4cdc2a484797474
7b8da2b4bfc6bb9d8d948f7b7b8d9d9ba6c4ddd1c2b6ad9f999fabb4a894a2c4d4d4cfbf
9f827682a2cddfd4cdd1dbdbdfddd1bda48d8694b2d1dfdfd8cbb8a29badcbdbdbd6cfcb
c2bdc4cfd1d4d8d6bfabb2ab8d7479848279748dbbd4dbd1b896899696928d99bbcfc8bd
a28f9fadb6b69f84798294adc4c8bfa27d7da2c2bfa48d8f9fb2c6d8dbd4d1cfd1d6d8d8
d6d4bf9d827b89a2ad9f96a4afc2cbbb9272727da6c2bfbdb8ab846d84b6cdcdc4ad9276
708299abc6d8d6bbaba69d827694c4cfd1d4d1d1cdc4b29f9694a4b4bdc4bbab9b9b9d94
847b8292928d969499b2d8e1e4e8ebdfbd824939576b8db8cdd1c29f705252596989b4c8
d1d1c6b8a49496998d7f82868276798d9fb2c4d4dbdddfe4dfdddbc8af9b8b7970747679
86a4bbbdb2a2a8bdc6cdcbc6c2bfc4c2ab8b76726b70899db4cbdde1e6e8d4c6c8cbbfbf
cba8867d798ba6c4cfcfcbcdd6d8c4afafc6dbe4dfd6bfbfd4dde1ddd8cbb4abb6bbb4ad
afb8c6d6dbd6cdb8a499a2afad947666708fb2c2bba4a2b6c6d1d1c4a68b7d79869bafaf
997d86b6d8dfe4dfc2897b8694b4c6c2aba4a80000e4d8cdc6cbd4d6d8d8cbb6a69b9692
897d8babbdc6bdada8b8cdcfbfa68f7d86abcfe4e8e1cda4827f848279727992afc8d4d4
c6b2a6a69b8f8f99a2afcdd6d6d1cfcfd1d4cfcbc2ab9b9fb2bdc4c6bdb2adb4ab96827f
b2dbcfbb9d867b79829badb8c2cbc6b2a4afb4967b7d8d92a6cbe1dbd1cbc6bdbbc4c8c4
afa2b6d1dbdbdbcfb2927d7f92bfd6cfd1d8dddbd8cfbfa896928d8b96b8d4dbcfbfab9b
9babc2d1d6cbbdb4abadbbc6cdd1dbd6bb998f82747994aba894797b9fbfcbbd9d8b8f9f
9d8f828dbbd4cbbb9f96afb6b4af9b847d8d9fadbdc4bb9b7b748da69d89828ba2bddbe4
ddcfcbcdd4d6d8d4d1cbab867b7d9bb8bda6929db4cbcdb894747286b4cdc6c4c8c8ab86
8dc2d4d4c8ab967f6d768ba6cbe1dbbfada28d727094bfcbc6c2bbbfbdafa6a4a2949294
99abb4b4b2b8bfb4967d7f96a4afbbafb2cbe4e8e1e4e4dfbf8b625d696d7fa8c8d1c8af
7b5d60697696c4cfd6d1c2bbb2a49f8b70646974746d7084a2bfd4dddbdbdddddbdfe6d4
ab7f70696970798299bfd4d4c6b4b2bdc8d1d6d6d6cfc8c6b69f8b7f767d9ba6b2cbdbe4
e8ebd8c6bbafadb8bf9d7b797b9fc4d6d4cbc8d4dddbc8b6b6c6cfd6d4c6b2b6cfdbe1e1
dfd4bba8adb4b2a8a4afc6dddfdbd8d1bfadafbbb28f74667299b8c8c6b4adb8c6cfcdc6
ad94847d8ba2b2ad947b7fb6dddfe4e1cb96898d96bbd1d4c8bbb40000e4d8cdc6c8d4d8
dbd8cdb4a2a2abb2ad999fbfd1d4c8b8adb6cbcdc2a486798fbbdbe6e8e4cfa8827f8686
7d72707d99b8cdcdb2a2a6ada29babb6bfc4cddbe1e1dfdbd1c4b4afaf998d96a4ababab
a8a29fa4a49b8b8bb6dbd6cdbbaba4a4a6a8b4bfc6d1cdbbadb8c6bb997f7b86a4cbe4df
d6d4d1cbc8cfd1c6aba4c2dbdfdfdfd8bfa28b868fafc8cfd4dbdfd8cdbba28b8b999689
8299bbc8bbaba2a2a8bbc8cfcdb69d9b9ba4b2bdc4cddbdbbd8f766d728badc8c8af8679
8da2a89d7f7b8fa49d89798bc2ddcfbda6a2b4b8b2a8998f8b8fa2afb6bfaf927d707d99
998f8d9badc6e1e6d6bbabb6c8d4d6c6b6af947f7d86afd1d1b89fa2b6c8c4af8d747992
bbd4d1d1d1cdb8948fbfd4cfbba6a294746d7b99bbcfcbb6a69986767fa2c4c8bdafa8b4
b4a8adb4b29f86797d92a8b6bfcbd1cbad8d86a2bbc8cfc2c2d4e6ebe4dddddbbf8f828b
84707096bdcdcdc49270728292afd4d8d8cbb4b4bbbbb69f7d60575d64667089b2cbd6dd
dddbd8dbdbe6f4e6b87f6b666970798babcfddddd1bfbbc6cfd8dde4e4d8cdcdbfab9682
76829f9b9fbfd8e4e6e4d4c2ab948f999984747984add1dbd6cbc8d4dfddcbafa8b8c4cd
c6b6adb4c4d6dfe4e4d8bfa4a2adb4a89dabcde1e4dddfdbc8afadb2a68670646d8da8b6
bdbdb4b2c4cdcfcbb4a69b8da2bdc2ad8d7982bddfdde6e4cba2999d9dbbd4dfdbcfc200
00dfd8cfc8c8d4dddddbcbad9badc2cdc8b4b8d1dfddd1c6bbbdcbcdc2a4827b9bc6dde6
e6e1cfa4828d9b96847d797d99b4c2bb9b8b9da89f9db6c2cbcdcfdde6e6e4ddcbad9492
9b949496948f847f828b92999d968d94bddbd8d6cdc4c2c8cbbdbdbfc6d1c4adafbbcbd1
bf9b7d89abd1e4dfd4d4d8d6d1d4d4c4a49dbbd6dddfdfdbc8af9b928f9fb8c8cbd1d8cf
bfa2847b8b9d96867b89b2c4b6ababb6c4d4dbd8d1b69d96969fafbfc6cddbddc69b766d
829fb8d1dbc4a48d8d8d8b7f70708496927d728bc4dfd6c4afadbbb6a8a2a2a4998b9bab
adb29f84766d7b969b9696a8b6c8dddfc89f8692b2cdd1c2a6948d8f929bb8d6dbcfb8ad
b4c2bda6897b869db8cfdddfd6c8b49289b2cbc4ab9fa69f7f798696a4a6a8a69b8d8992
a8bfcdcdb89f9dabab9fa8b2afa6866d70798fa6b8c8cdc8ad9292b4c4c8cbb8b8cbdfeb
e6ddd8cdad8f96a699766684adc8d6cf9d797f99abc2dfdfd6c4b2b6c4c8c4b494695454
5b647294c2d1d8e1ddd6d6dde4effaf1c68b6d666d6d7284abd1dfddd6c8c6cbd1d8dfe4
dfd1c8cbbda88f797484968b8db2cbdbd8d4c6b49b847f868276748294b6d1ddd8cbc6d1
ddddc8a499b2c6cdc2afb6b8bbcfdbe1e1d8bd9b9badb6ada4b4d4e6e8e4e4ddc8adabab
9f846d667694a4abb6b8ada8bfcdcfcdb4a8a49db2c8c8af8f8499cbe1dfe8dfc4a49fa8
abb6cbdddfd8c20000d6d6d1cdcfd6ddddd6c4a89db8cfd8d4c4c4d6dddbd4cdc8c8cdcf
c4a28492b2cddde1e1ddd1ab92b2bfb499867d86a6b8bba88b7f8b9d9b9db2bfcbd1d8df
e6e6e6ddc2998286949da4a4948674666b7f96a8ada69da6c8dfdbd6d1cdcbd4d6c6b6b4
bfcbb6a6bdc6cfd8d4b49299afd1e4dbcdcddbdfdbdbd6bd9b92adcddddfddd8c8b69f8d
7f8496a8afbdc8bfab8b707994a496847d92c4d1bdb4bbcbd4dfdfdbd4c6b6a4999fb4c8
cfd4dbdbcda6796d8fb6c2d6e4d4c4ab8f847b706b798b9496847689b2d4d8c8b8b2b2a6
9694a6ada2929daba29b8979726d768b949496a4b2c2d4d4b68d7d829fc2cfc4ad9da2af
b4b2b8cbdbdbcdb8b2b8b8a4928d9bafbdcde1dfd6cbb69489adc8c4ab9fa8a48b94abb2
a49492928d8999b8d1d8d4cdb28d8f9b9d9696999da486696664728ba6b8b8ab8b7986ad
b6adab9fa8bfd8e1dfdbd1b8998d9fafa27b697fa6c8d8cfa2797996afc6e1e1d4c2bdbf
c6c8c2b4946b595959606d96cbdddfe1dbd8dde4ebf4fdf4c68b767679726b7699c4d4d6
d1c8c8cbd1dbdddbcfc6c4c6b4968276849ba49692a2b2c4c6bfb69d7f79869b9f8d8696
a8b6c8d8d6cdc6cdd8d8cba8a2bbcfd1bfb4b8b8b6c8d4d8d8cba88996afb8afa8bbdbe8
ebe8e4d8c8bbbbbbab8d74748fb4bbb6b4a69fa8c2cbcdc6a89b9fa6b8c6c6af9694afd4
e4e6e8d8bba8a6adb2afbfd1d8cfb40000c4cbc8cdd1d4d4cfc4b29d9dbfd6ddd6c6c6d1
d6d6cdc8c8cdcfcdbb9984a8c8d1dbddddd8d4b6a6cbd8c8ad8d7d86a4b8b6a28d828b9d
a4abb4b8c6d4e1e6e6e4e1d8bb8f848d99a8b4af9b86746b748ba8c2c8bfb6bfd4dfddd8
d4d1d1d8d4bda69da6ab9fa4c8d1d4d8cfb4969db2d1e4d8c8cbdde1dfddd8b88d8696bd
d6dbdbcfb6ab997f7072828f969fa8a4947b6b7999ab968484a2cfcfb4b4c2d1d6dddbd6
d1cfc2ada2a8bdcfd6d6dbd8c8a4766d92bfc8d8e6ddd4bd9d8476727d96ababa68f797d
96b8cfc8bdb4a8927f899daba49da2a899827474767072848d92949ba6b4bdbba6897d82
99b2bdb6abadbbc6c6bdb6c2d8ddd4c6b2afab9b9da8b6c4c8d4e4ddd4cdb6968ba8bfbd
a69faba68fa8c4c2ad998d827f89a6cbe1e1dbcfab828d9d9f967d707986745b59576279
929d99846b62769da69d9da6b8cbd6d1cbcdb8997f849dab9d7b6d82a4c2cdc69f797289
a2bfe1e4d4c6c8c4c4c8c6b894695d625d60668bc8e1e1dbd8dde4e8ebf4fdf1c2898282
7f746b728badbfc6c6c4c4c8d1dfdfcfc2bbc4c4a6867b7996bbc6b6a4a2abb8bbb2a689
6b748dabb6a49fb2b8b6bbcdcfc8c6cbd4d6cbb6b2c2d1cbb4adafada8bbc8cbbfa88d7f
92a8b4afadc2dde8ede8ddc8c6d1d1d1bf9d7b7699c2c6b4a4949db4c4c8c8bfa296a6b4
bfc4c6b49b99b6dbe8e6e6d1b8b4afafb2b2b6c2c6b8a20000bfc4c2c6cfd1c4afa2948f
99b6d4ddd4c6bbb8bfbdb4b4bfcbcbc4ab847296bbcdddd8d1d1cfbba8bfcdc4a88f7d7d
96aba89b99999dabb2b6bbbbc2d4e4e8e4e1dbc8a68686949ba8b2af9b84767b8fa2b4cb
d4cfc6cbd6dbd6d4d1d1d6d8cdb4a299948d8ba6cddbdbd6c2a694a2b6d1dfd1c8cfdde1
dfdfd8b68b8286a6c6cfcdbd9f9b9984798299a29f8f82827f7976798d9d999dabc2d6cd
b6bbc8d1d4ddddd6d1cfc4afadb8c8d1d4d1cfcbb692726d8bb6cddde4ddd8cbb496827f
8fa4b2b6ad8f72768fa8bdc8c6bdaf8f76849faba2a4adad997666707272727f8f9fa4a4
afb6b4b8af9984899ba6a29da4b2c6cfcbc2b6bdd1d6d4cbad9b9496a8bdc8cdcbd6e6df
d6c8a4898696a299929faba499adc2bda28b847f868b9fc4e1e6ddcfa67f94abb29d725b
626660504b4d5d72797674797f8289a4adafbbc2cdd6d8cdbfb69d7f6d7486948d746b7f
99abafa88f746d7d96bfe1dfd1cdcfcbc6cdd1c89f6d666d64666986bddddfd6dbe1e8eb
edf1f8efbf8d8f8f86797076899da6a6abbbc6cbd1dfddc6b8bbc4bb967b7b7d9fc8d6c6
ada6afbdbbab8f705d6b899fa89fabc6c6b6adbdc8cbcbcdd1cfc4b8bdc6c4b4a29da49f
96a4afaf9f897f868d969fa6afc6dde8ede6d4bfc8dfe1dbc49f7b7089afb8a48d86abcb
cbc6c6c2a8a2b4c2c6bfb6a89696bddde8e4d4c2b8bfb4a8a8a6a4a4aba2960000c8c8c6
c4c8d1b89284848b92a8c8d6cdc2ad999b968f96adc2c6bb9469596b92b6d1cfc4c4c8bb
a6a4a6a2998f827d8d99948d9ba6abbbbbbbbdbbc4d4e4e6e4e1d8bb8f7b828d92969f9f
8f7b727f9dafbbcbd4d1cbc8cbcbcdcfcfd1d4d4cbb8afaba28b89a6cddddfd4b69f9ba8
bdcfd8cfcdd1d8dbdddfdbb68f8b92a4b8c2bba48f969b8d8499b8c2b68f706d79868f8f
8d92a2bfd1d6d8cbbbc2cdd4d6dfdfd6cdcdc6b4b6c2d1d6d4cbc4b496766b6b7fa6cddb
d8d4d6d4c29f868999a4abb4ad94797f99abafbfc6c4b6947b84a4a89ba4b8bfa6826b6d
7676727b96b2bdbdcbcfcdcdc2a88f8f9fa28f8d9fb2cdd4cbbbadb6cfd4d4cbaf928494
afc4cbcfcbd1dfddd6bf8b727b827f7b8babb6aba4a6afab8d76798b928b8fb4ddebddc6
9f89a8bfc4af7b6069666050444754605d545d86b6c4b8bdbbc2cbcdd4d8d6cdc2bba88d
746b707b796966747f898479726b66749dcbe1dfd6d4d4cfcbcfd6cba47670766d6d7292
c6dbd6d4dde6ebedebedf1edc49ba4a8a28f828499adab9692abc4cdd6dfd8c4b8bdc8b8
92797d84add4d8bd9f9fafbdb69d76595260798b8d8da4c4c2ab9db2c4cbc6c2bdafa4a4
b2bfb6a69b96968f898f928d827b7f8b8d898996adc6d6e6ebddc4b6c6dde1d4b696796d
7d99a69b8282afd8d6d8d6c8afa8bbcbc8b2998b8696c4dde1d1b4afbfc6bba69b928d8f
999b960000cdd1cfc6c2c8b28b797b848d9db8c8c6c4b29b928982849db4bba87f595062
84a8bbb6abb2c4c4afa48b7d89949494a2a4968fa2afb6c4c6c2bfbfc8d1dfe1dfdfd6c2
a4928f8f8b8486897b72707b96b2c6d1cdc8c6c4b8b4c2cdd4d4cfcdc8bfbbb4a28686a4
c6dbdfd1afa2a8b6c2cbd1cfd1d4d4d6dbddd8b6969fa6adadafa4948f948f8284a4c6cf
c29d766d829fafaba2a6b6cdd8d8d4c4b4bfd1d6d1d6d8d1c2bfbfb6b8c4cdd1cfcdcbb8
8f69646b7999bfcfcfd1d1cbb28f8292a4abafbfc4b4998f9ba49fa6afb8b89f827f9696
8999bdcdb89f7f747f7f767f9fbfcfd6e1e6e1ddc8ab928f9d9b89899db2cbd1c4ab9bab
cdd6d6cfbb9f8b94afc4cdd4d1cdd1d4cbad846b707b7b7d94b8c8c2bbb2ab9d826d728f
9b9494abd6e6d4b6999bb8c8cbbb846b7470624d4440424740405996d6e4d8d4c6c2cbd1
d4cfcdc6c4c8c6af8b6d6972726b6b76767060575d626479a8d1dfe1dddbd8d4cdcbcfbb
927b828474747ba2d1d8d1d4dbe4e8e8e4e4ebe8c8a8b2bdbfb29692a8bfbd9f8499bbd1
dddfd4bfb4b8c2b48f7b848fb4d1d1af96a4b4bdad89624b4d546676797b8da49f928fa4
b8bfb8af9f8b7d8296a8aba49f998b7f84897f72727d8d9ba4998b94abc2d4e4e8d6b6ab
bbd1d1c6b29b867b829bafa6867da6d4e1e8e1cfb4abbbcdcdad86797d96bfcfc8b29fb2
cfd6cdb49b8b8b94a2ada80000cbd1c8c2bdb29d82767d898f99abbfc8cdc2af9d8b7d7f
94a8a88d69525b7ba2b2a48d899dbdcbc6bb96798296adbdc8c6b4a6b6c4c4cbcfcdc6c8
cdcdcdcfd1d1d4d1c6b8b2a2867472766d6d768692afcdd6cfc2bbb4a8a4b6cbcdc4bfbb
b8bbb49f897b8299b6cbcfbb9999b6c6cbc6c8cbcfd1d4d8dddfd6b69fb2bbb2a29b9286
847f797689a8c6cdc2a2827b92b4bfbbbbc6cdd1d1d1cdbba8b4c8cbbdc2c6c2afb2b8b4
b4bbc6c6cdd6dbcd9b666976899fb4bdbfc6c2ad8f7b7f9bafadb2cfdbd4b8a29d9b9294
9ba8ad9f84747d7f7b8db8d1cdbb967d82827f92b4cdd6dfebefede4c8a699999f998b89
96b2c6c6b2948999bbcfd6cfbba49699abc2d1dbdfdbd1d1c4a8997f727d84899bc2d6d6
d4cbbba2846b6d89969496b2d4dfcdaf9fabb8c6c6b27f69726d5d49423d3d3b373b5b9d
dbebe6e1cbbdcddbd1bdb8b8bfc8cfc49f79747f7d797d8d8f7d5d505762697da6cddde1
e1e1e1d8c8bdc2ad898292967d767fa6d6dbd1d4d8e1e1dddbdde6e1c8afb6c4cfc4a299
adbfb896797fa4c8dbd8cbbbb4bbbfb48f7d8f9fadbbbfada8b8bbb49d7b5b4b4b525d69
7279848d8d8b8d9dabadada8947b7070849ba6a6a2998686948d7d6b6d849db2c2b8aba8
afbdd1e6e4d4bda4a6b8c2c4bdb4ab9994a8b8ab897d9fcfe4ebe4cdafa6b8cbcdad8276
8296afbbb29b9bb4d4ddd6bb9f929badbdc8bd0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000
pgsave restore
showpage
end
%%EndDocument

 endTexFig
 2020 2328 a
 14208860 14066766 8288501 14208860 31969935 37890293 startTexFig
 2020 2328 a
%%BeginDocument: axopen.ps
/pshalftone 50 dict def pshalftone begin
/inch {72 mul}def
/setimstr {/cols exch def /imstr cols string def}def
/placeim {/sy exch def /sx exch def sx inch sy inch translate}def
/scaleim { /ih exch def /iw exch def
	   iw inch cvi ih inch cvi scale
	}def
/setcirc {/ang exch def /freq exch def freq ang
	{dup mul exch dup mul add 1 exch sub}
	setscreen}def
/setline {/ang exch def /freq exch def freq ang
	{pop abs 1 exch sub}
	setscreen}def
/pgsave save def
512 setimstr
1.750000 3.000000 placeim
5.000000 5.000000 scaleim
512 512 8 [512 0 0 -512 0 512] {currentfile imstr readhexstring pop}
image
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000abababababababababababababababababa09da3a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959292929292929292929d9d9d9d9da5ababababab
ababababababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0a0a0a0a0a095
898189979797979797979797979797979797877870706d78848484848484848484848c8f
9595959595959595959595959595958c898f959595959595959595959595959595959595
95958c8c8c8c8c8c8c8c8c8c8c8c8473707070707070707070707070706a68708c929292
92929292929292929292929276625f708c9292929292929292929292929292928f898989
8989898989898989897b7b819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39789817e78767e84898c8c8c8c8fa5abababababababaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeab8776707089b6c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7b6a084
786a6a7076767676767678818989898989a3b1b1b1b1b1b1b1b1bcbcbcbcbcbcbcbcbcbc
bcbcbcbcbcbcbc978481818181818181818181818178786d737e8f979797979797979797
979797979797978478787e7e7e7e7e7e7e7e7e7e7e7e7e7e898c8f8f8f8f8f8f9aa5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a39d9797979797979797957b
7373819d9d9d9d9d9d9d9d9d9d9d9d0000abababababababababababababababababa09d
a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959292929292929292929d9d9d
9d9da5abababababababababababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0
a0a0a0a0a0a0a095898189979797979797979797979797979797877870706d7884848484
8484848484848c8f9595959595959595959595959595958c898f95959595959595959595
959595959595959595958c8c8c8c8c8c8c8c8c8c8c8c8473707070707070707070707070
706a68708c92929292929292929292929292929276625f708c9292929292929292929292
929292928f8989898989898989898989897b7b819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d
9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a39789817e78767e84898c8c8c8c8fa5abababab
abababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab8776707089b6c7c7c7c7c7c7c7c7c7c7
c7c7c7c7c7b6a084786d6a70767b7b7b7b7b7b818989898989a3b1b1b1b1b1b1b1b1bcbc
bcbcbcbcbcbcbcbcbcbcbcbcbcbcbc978481818181818181818181818178786d737e8f97
9797979797979797979797979797978478787e7e7e7e7e7e7e7e7e7e7e7e7e7e898c8f8f
8f8f8f8f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a39d9797
979797979797957b7373819d9d9d9d9d9d9d9d9d9d9d9d0000ababababababababababab
ababababababa09da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59592929292
92929292929d9d9d9d9da5abababababababababababababababaeaeaeaeaeaeaeaeaeae
aeaeaeaeaea0a0a0a0a0a0a0a0a0a0958981899797979797979797979797979797978778
70706d78848484848484848484848c8f9595959595959595959595959595958c898f9595
9595959595959595959595959595959595958c8c8c8c8c8c8c8c8c8c8c8c847370707070
7070707070707070706a68708c92929292929292929292929292929276625f708c929292
9292929292929292929292929292929292929292928f8989897b7b819a9a9a9a9a9a9a9a
9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a39789817e78767e84898c8c
8c8c8fa5abababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab8776707089b6c7c7
c7c7c7c7c7c7c7c7c7c7c7c7c7b6a08478737076787b8184848789898989898989a3b1b1
b1b1b1b1b1b1bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc97848181818181818181818181
8178786d737e8f979797979797979797979797979797978478787e7e7e7e7e7e7e7e7e7e
7e7e7e7e898c8f8f8f8f8f8f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3
a3a3a3a3a39d9797979797979797957b7373819d9d9d9d9d9d9d9d9d9d9d9d0000ababab
ababababababababababababababa09da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5959292929292929292929d9d9d9d9da5abababababababababababababababaeae
aeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0a0a0a0a0a095898189979797979797979797
979797979797877870706d78848484848484848484848c8f959595959595959595959595
9595958c898f95959595959595959595959595959595959595958c8c8c8c8c8c8c8c8c8c
8c8c8473707070707070707070707070706a68708c929292929292929292929292929292
76625f708c9292929292979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8989897b7b81
9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3978981
7e78767e84898c8c8c8c8fa5abababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab
8776707089b6c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7b6a08478787878787e848989898989
8989898989a3b1b1b1b1b1b1b1b1bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc9784818181
81818181818181818178786d737e8f979797979797979797979797979797978478787e7e
7e7e7e7e7e7e7e7e7e7e7e7e898c8f8f8f8f8f8f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a3a3a3a3a3a3a3a3a3a3a3a3a39d9797979797979797957b7373819d9d9d9d9d9d9d9d9d
9d9d9d0000abababababababababababababababababa09da3a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5959292929292929292929d9d9d9d9da5ababababababababab
ababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0a0a0a0a0a09589818997
9797979797979797979797979797877870706d78848484848484848484848c8f95959595
95959595959595959595958c898f95959595959595959595959595959595959595958c8c
8c8c8c8c8c8c8c8c8c8c8473707070707070707070707070706a68708c92929292929292
929292929292929276625f708c929292929297a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a
9a8f8989897b7b819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39789817e78767e84898c8c8c8c8fa5abababababababaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeab877b737389b6c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7b6a0847b7b7878
7b89898989898c8c8c8c8c8c8ca3b1b1b1b1b1b1b1b1bcbcbcbcbcbcbcbcbcbcbcbcbcbc
bcbcbc978481818181818181818181818178786d737e8f97979797979797979797979797
9797978478787e7e7e7e7e7e7e7e7e7e7e7e7e7e898c8f8f8f8f8f8f9aa5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a39d9797979797979797957b7373819d
9d9d9d9d9d9d9d9d9d9d9d0000abababababababababababababababababa09da3a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959292929292929292929d9d9d9d9da5ab
ababababababababababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0a0a0
a0a0a095898189979797979797979797979797979797877870706d788484848484848484
84848c8f9595959595959595959595959595958c898f9595959595959595959595959595
9595959595958c8c8c8c8c8c8c8c8c8c8c8c8473707070707070707070707070706a6870
8c92929292929292929292929292929276625f708c929292929297a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a39a9a9a8f8989897b7b819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39789847e78767e84898c8c8c8c8fa5abababababababae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab877b7b7689b6c7c7c7c7c7c7c7c7c7c7c7c7c7c7
c7b6a0847b7b787b89898989898995959595959595a3b1b1b1b1b1b1b1b1bcbcbcbcbcbc
bcbcbcbcbcbcbcbcbcbcbc9784818181818181818181818181787873737e8f9797979797
97979797979797979797978478787e7e7e7e7e7e7e7e7e7e7e7e7e7e898c8f8f8f8f8f8f
9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a39d979797979797
9797957b7373819d9d9d9d9d9d9d9d9d9d9d9d0000ababababababababababababababab
ababa09da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959292929292929292
929d9d9d9d9da5abababababababababababababababaeaeaeaeaeaeaeaeaeaeaeaeaeae
aea0a0a0a0a0a0a0a0a0a0958f8489979797979797979797979797979797877e76706d78
848484848484848484848c8f9595959595959595959595959595958c898f959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a97958c8c8c8c8c8c8c8c8c8c8c8c84737070707070707070
70707070706a68738c9292929292929292929292929292927b6865708c929292929297a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a8f8989897b7b819a9a9a9a9a9a9a9a9a9a9a9d
9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a397958c7e7b787e84898c8c8c8c8fa5
abababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab877b7b7b89b6c7c7c7c7c7c7
c7c7c7c7c7c7c7c7c7b6a0847b7b788189898989898995959595959595a3b1b1b1b1b1b1
b1b1bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc97848181818181818181818181817b7b7b
7b7e8f979797979797979797979797979797978478788181818181818181818181818181
898c8f8f8f8f8f8f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3
a39d9797979797979797957b7373819d9d9d9d9d9d9d9d9d9d9d9d0000a8a8a8a8a8a8a8
a8a3a3a3a3a3a3a3a3a39d929aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58c
9292929292929292929d9d9d9d9da5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89a9a9a9a9a9a9a9a9a9a958f848997979797979797979797979797
979787817873737b8484878787878787878f8f8f92929292929292929292929292929289
8789959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958c8c8c8c8c8c8c8c8c8c8c8c8473
707070707070707070707070706a68738c9292929292929292929292929292927b6d6876
8c929292929297a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a8f8989897b7b819a9a9a9a
9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a397958c7e7e7e7e
84898c8c8c8c8fa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877b7b7b
899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d847b7b7881898989898989959595959595
95a3aeaeaeaeaeaeaeb1bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb1928481818181818181
81818181817b7b7b7b7e8f97979797979797979797979797979797847b7e818181818181
8181818181818181898c8f8f8f8f8f8f9a9a9a9a9a9a9da3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39d9797979797979797957b7878819d9d9d9d9d9d9d9d9d9d9d9d00
00a5a5a5a5a5a5a5a0979797979797979797979297a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9d9d9d9d9d9d9d8c929292929292929292979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a979797979797979797958f84899797979797
9797979797979797979787817e7878818484878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8c8481848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958c8c8c8c8c8c
8c8c8c8c89898473707070707070707070707070706a68738c9292929292929292929292
929292927b6d6a768c929292929297a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a8f8987
847b7b819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3
a397958c7e7e7e7e84898c8c8c8c8f929292929292929295959595959595959595959595
95959595877b7b7b898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847b7b7b8189898989
898995959595959595a3a5a5a5a5a5a5a5b1bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb6a089
7e7e7e7e7e7e7e7e7e7e7e7e7e7b7b7b7b7e8f9797979797979797979797979797979789
898989898989898989898989898989898181818181818181818181818187979797979797
9797979797979797979797979797979797979797979797979797957b7b7b819d9d9d9d9d
9d9d9d9d9d9d9d0000a0a0a0a0a0a0a0978f92929292929292929292979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a958c929292929292929292929d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a97979797979797979795
8f89899797979797979797979797979797978781817b7881848487959595959595959595
9595959595959595929292928f8f87817e848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
97958c8c8c8c8c8c8c8c8c8476767368625c5c626868686868686868686868738c929292
9292929292929292929292927b6d6d768c929292929297a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a59a9a9a8f897b7b7b7b819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3a3a3a3a3
a3a3a3a3a3a3a3a3a397958c7e7e7e7e84898c8c8c8c8f92929292929292929292929292
929292929289848484848484847b7b7b8989898989898989898989898989898989898984
8181818189898989898995959595959595a0a0a0a0a0a0a0a0b1bcbcbcbcbcbcbcbcbcbc
bcbcbcbcbcae9d897e78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7e8f979797979797979797
979797979797978989898989898989898989898989898989817e7e7e7e7e7e7e7e7e7e7e
6a7b898989898989898989898f979797979797979797979797979797979797979797957b
7b7b819d9d9d9d9d9d9d9d9d9d9d9d00009d9d9d9d9d9d9d95878c929292929292929292
97979797979797979797979797979797979595959595878c8f8f8f8f8f8f8f8f8f8f9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797
97979797979797958f8f8f9797979797979797979797979797978781817e7b8184848795
95959595959595959595959595959595959595928f8f878181848f9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a97958c8c8c8c8c8c8c8c8c766a625c514338383e5168686868686868
686868738c9292929292929292929292929292927b7070768c8f8f8f8f8f97a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a59a9a9a8f897b7b7b7b8197979797979797979797979797979d9d
9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a397958c7e7e7e7e84898c8c8c8c8f9292929292
92929292929292929292929292877e7e7e7e7e7e7e7b7b7b898989898989898989898989
898989898989898484848484898989898989959595959595959d9d9d9d9d9d9d9db1b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9ae9d897870707b7b7b7b7b7b7b7b7b7b7b7b7b7b7e8f97
9797979797979797979797979797978989898989898989898989898989898989817e7e7e
7e7e7e7e7e7e7e6d6273818181818181818181818f979797979797979797979797979797
979797979797957b7b7b8192929292929292929292929200009a9a9a9a9a9a9a97818792
929292929292929297979797979797979797979797979797979592929289878c8f8f8f8f
8f8f8f8f8f8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9797979797979797979797
979797979797979797979797979797959292929797979797979797979797979797978781
81817b818484879595959595959595959595959595959595959595928f8f898181848f9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958c848484848484847e685c54493e2d241f22
304c686868686868686868738c9292929292929292929292929292927b76707684848484
848497a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a8f8787877b7b7e7e7e7e7e7e7e7e7e
7e7e7e7e848f9797979797979797979797979797979797979797958c7e7e7e7e84898c8c
8c8c8f929292929292929292929292929292929292877e7e7e7e7e7e7e7b7b7b89898989
8989898989898989898989898989898484848484898989898989959595959595959a9a9a
9a9a9a9a9db1b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6ae9d89786d707b7b7b7b7b7b7b7b7b
7b7b7b7b7b7e8f9797979797979797979797979797979789898989898989898989898989
89898989817e7e7e7e7e7e7e7e7e78655c6a818181818181818181818f97979797979797
9797979797979797979797979797957b7b7b8184848484848484848484848400009a9a9a
9a9a9a9a9a7e849292929292929292929797979797979797979797979797979797959289
8989878c8f8f8f8f8f8f8f8f8f8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a97959292
959595959595959595959595959595959595959595959595929292979797979797979797
979797979797878181817e84848487959595959595959595959595959595959595959592
8f8f898181848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958c818181818181816d5a
4e463b322d2724222a3e515c68686868686868738c929292929292929292929292929292
7b7b76767b7b7b7b7b7e97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a8f8787877b7b7b
7b7b7b7b7b7b7b7b7b7b7b7678899595959595959595959595959595959595959595958c
7e7e7e7e84898c8c8c8c8f929292929292929292929292929292929292817e7e7e7e7e7e
7e7b7b7b8989898989898989898989898989898989898984848484848989898989899595
95959595959a9a9a9a9a9a9a9ab1b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6ae9d89766a707b
7b7b7b7b7b7b7b7b7b7b7b7b7b7e8f979797979797979797979797979797978989898989
898989898989898989898989817e7e7e7e7e7e7e7e7e785f576281818181818181818181
8f959595959595959595959595959595959595959595957b7b7b81848484848484848484
84848400009a9a9a9a9a9a9a9a817e929292929292929292979797979797979797979797
97979797979592898989878c8f8f8f8f8f8f8f8f8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9797928c8c8f959595959595959595959595959595959595959595959592929295
959595959595959595959595959587848484848484848795959595959595959595959595
95959595959595928f8f898181848c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958c87
8787878787876a54494038302a2a2d2d383e4e5a65686868686868738c92929292929292
92929292929292927b7b7b7b7b7b7b7b7b8197a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a
9a928787877b7b7b7b7b7b7b7b7b7b7b7b7b7b7678899a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a978c7e7e7e7e84898c8c8c8c8f9292929292929292929292929292929292
927b7b7b7b7b7b7b7b7b7b7b898989898989898989898989898989898989898484848484
898989898989959595959595959595959595959595b1b6b6b6b6b6b6b6b6b6b6b6b6b6b6
b6ae9d89766a707b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8787898989898989898989898989
8989898989898989898989898989898989898989817e7e7e7e7e7e7e7e7e785f545a7381
818181818181818187878787878787878787878787878787878787878787877b7b7b8184
848484848484848484848400009a9a9a9a9a9a9a9a8c8492929292929292929292929292
929292928484878787878787878787878787878c8f8f8f8f8f8f8f8f8f8f9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a979797928c8c8c95959595959595959595959595959595959595
959595959292929595959595959595959595959595958784848484848484879595959595
959595959595959595959595959595928f8f898181848c9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a97958c878787878787876a574e493e302a30383b3b3e4c575a68686868686873
8c9292929292929292929292929292927b7b7b7b7b7b7b7b7b8f97a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a59a9a9a928787877b7b7b7b7b7b7b7b7b7b7b7b7b787678899a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a978c7b7e7e7e84898989898989898989898989898989
898989898989898987818181818181818181817e7e7e7e7e7e7e7e7e7e7e7e8184848484
84848484848484848989898989899595979797979797a3a3a3a3a3a3a3b1b6b6b6b6b6b6
b6b6b6b6b6b6b6b6b6ae9d897e76767e7e7e7e7e7e7e7e7e7e7e7e7e7e7e76737b848989
89898989898989898989898989898989898989898989898989898989817e7e7e7e7e7e7e
7e7e785c4e51658181818181818181818181818181818181818181818181818181818181
8181817b7b7b818484848484848484848484840000aeaeaeaeaeaeaeae9d929292929292
9292929292929292929292847878878787878787878787878787878c8f8f8f8f8f8f8f8f
8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797928c878c9595959595959595959595
959595959595959595959595929292929292929292929292929292929292878484848484
8484879595959595959595959595959595959595959595928f8c898481848c9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a97958c8787878787878776655c544030303b3b3b3b3e464c
4e5c6868686868738c9292929292929292929292929292927b7b7b7b7b7b7b7b7b8f97a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a928787877b7b7b7b7b7b7b7b7b7b7b7b7b7876
7889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9a978c7b8484848484848484848484
8484848484848484848484848484848484848484848484848484817e7e7e7e7e7370737b
7e7e7e818484848484848484848484848989898989899595979797979797a3a3a3a3a3a3
a3b1b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6ae9d897e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e707684898989898989898989898989898989898989898989898989898989898989
817e7e7e7e7e7e7e7e78624e494c5c818181818181818181818181818181818181818181
7e78787b7b7b7b7b7b7b7b7b7b7b818484848484848484848484840000bfbfbfbfbfbfbf
aea3959292929292929292929292929292928f847e7e8787878787878787878787878787
878787878784848f8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979792877e84959595
959595959595959595959595959595959595959595959595959595959595959595959292
92928784848484848484879595959595959595959595959595959595959595928f898989
89898c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958c8787878787878784847b654632
383b3b3b3b3e434649515c6265686873899292929292929292929292929292927b7b7b7b
7b7b7b7b7b8f97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a928787877b7b7b7b7b7b7b
7b7b7b7b7b7b78767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9a978c89898989
8989898989898989898989847b7b7b87878787878787878787878787878787878787817e
7e7e7e7e736d707b7e7e7e81848484848484848484848484898989898989959597979797
9797a3a3a3a3a3a3a3b1b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6ae9d897e7e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e767b9595959595959595959595959595958989898989898989
8989898989898989817e7b7b7b7b7b7b6d5a4e46464c5a73818181818181818181818181
81818181818181817e78787b7b7b7b7b7b7b7b7b7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e00
00bfbfbfbfbfbfbfaea3958c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87848484878787878787
878787878787878787878787877e787e8f8f979797979797979797979797979797979797
978c81767895959595959595959595959595959595959595959595959595959595959595
959595959595929292928784848484848484879595959595959595959595959595959595
959595929292929292898c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97958f8f8f8f8f8f
8f8f8f8f8f7e573b3b3b3b3b3b3e3e4343494c51575c68737e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7b7b7b7b7b7b7b767b8f97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a928787
877b7b7b7b7b7b7b7b7b7b7b7b7b78767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d
9a9a978c92929292929292929292929292929287787b7b87878787878787878787878787
878787878787817e7e7e7e7e7670707b7e7e7e8184848484848484848484848489898989
89899595979797979797a3a3a3a3a3a3a3b1b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6ae9d89
7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b95959595959595959595959595959595
89898989898989898989898989898989848484847e786d5c4e46403e40464e575a6d8181
818181818181818181818181818181817e78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7870
6d6d6d6d6d6d6d0000bfbfbfbfbfbfbfaea3958c8c8c8c8c8c8c8c8c8c8c8c8c87848484
8484878787878787878787878787878787878787877e76788c8f97979797979797979797
9797979797979797978c7e76789595959595959595959595959595959595959595959595
959595959595959595959595959592929292878484848484848487959595959595959595
9595959595959595959595929292929292898c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
97958f8f8f8f8f8f8f8f8f8f8f8f6546403e3e3e3e3e3e4040434c545a5f6a737b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b767e8f97a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a59a9a9a928787877b7b7b7b7b7b7b7b7b7b7b7b7b78767889a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d9a9a978f929292929292929292929292929292927e7b7b8787878787
8787878787878787878787878787817e7e7e7e7e7876767b7e7e7e818484848484848484
848484848989898989899595a0a0a0a0a0a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1ae9d897e7e7e7e7e7e7e7e878989898c8c8c8c8c8c8c8ca3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39589898989929292929292929292929292929292928c70574335302d30
32383e3e3e548181818181818181818181818181818181817e78787b7b7b7b7b7b7b7b7b
7b7b7b7b7b7b786a6d6d6d6d6d6d6d0000bfbfbfbfbfbfbfaea39a8f8f8f8f8f8f8f8f8f
8f8f8f8f878484848484878787878787878787878787878787878787877e76788c8f9797
9797979797979797979797979797979795897e7878959595959595959595959595959595
95959595928f959595959595959595959595959595958c81848484848484848484848795
95959595959595959595959595959595959595929292929292898c9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a97958f8f8f8f8f8f8f8f8f8f8f8f734e403e3e3e3e3e3b3e4049575f
656a73737b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b78818f97a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a59a9a9a928787877b7b7b7b7b7b7b7b7b7b7b7b7b78767889a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9a979595959595959595959595959292929292
7e7b7b87878787878787878787878787878787878787817e7e7e7e7e7878787b7e7e7e81
8484848484848484848484848989898989899595a0a0a0a0a0a3a3a3a3a3a3a3a3b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1ab9d897e7e7e7e7e7e7e7e878989898f8f8f8f8f8f95a0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958989898992929292929292929292929292929292
92785138241c1f1f222d3b3b3b496581818181818181818181818181818181817e78787b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b786a6d6d6d6d6d6d6d0000bfbfbfbfbfbfbfaea39d97
97979797979797979795958f878484848484878787878787878787878787878787878787
87787378878f97979797979797979797979797979797979792897e78788f959595959595
959595959595959595959595928f959595959595959595959595959595958f8184848484
848484848484879595959595959595959595959595959595959595929292929292898c9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9795959595959595959595959595815c463e3e3e
3e3e3b404954626a737676767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
818f97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a928787877b7b7b7b7b7b7b7b7b7b7b
7b7b78767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9592929292927e7b7b87878787878787878787878787878787878787817e7e7e7e7e
7878787b7e7e7e818484848484848484848484848484848484899595a0a0a0a0a0a3a3a3
a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39a897e7e7e7e7e7e7e7e87898989
8f8f8f8f8f8f95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898989899292929292929292
9292929292929292928f6a402214161c22303b3b3b494e5f6d6d78787878787878787878
787878787878787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b786a6d6d6d6d6d6d6d0000bfbfbf
bfbfbfbfaea39d9d9d9d9d9d9d9a9a979795959289878787878787878484848484848484
848484848484848481767378848f9797979797979797979797979797979797978f877e78
788f959595959595959595959595959595959595928f9595959595959595959595959595
959592929292929292928484848487959595959595959595959595959595959595959592
9292929292898c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979797979797979797
979789705f544e494949494c545a626d787878787b7b7b7b7b7b7b7b7b7b7b7b7b7b8787
8787878787878787878f97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a928787877b7b7b
7b7b7b7b7b7b7b7b7b7b78767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9592929292927e7b7b8787878787878787878787878787878787
8787817e7e7e7e7e7878787b7e7e7e818484848484848484848484848484847e7e899595
a0a0a0a0a0a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19a87877e7e7e7e
7e7e7e7e878989898f8f8f8f8f8f95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39589898989
9292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a925127191f1f30323b3b3b3b3b4351627878
7878787878787878787878787878787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b786d6d6d6d6d
6d6d6d0000bfbfbfbfbfbfbfaea39d9d9d9d9d9d9d9a9a9797959595928c8c8c8c8c8c89
818181818181818181818181818181817e767378848f9797979797979797979797979797
979797978f877e78788f959595959595959595959595959595959595928f959595959595
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92848484848795959595959595959595959595
95959595959595929292929292898c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797
979797979797979797979284766a655f5c5c5a5a5a5a626d787878787b7b7b7b7b7b7b7b
7b7b7b7b7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f959a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a928787877b73767676767676767676767676767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a09d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9592929292927e7b7b878787878787878787
87878787878787878787817e7e7e7e7e7878787b7e7e7e81848484848484848484848484
84848478737e9595a0a0a0a0a0a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b18f7e7e7e7e7e7e7e7e7e7e878f929292929295959595a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a395898989899292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae703e24221f30323838
38383840516278787878787878787878787878787878787b7b7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7b786d6d6d6d6d0000bfbfbfbfbfbfbfb3a8a0a0a0a0a0a09d9a9a9797959595
9592929292929289817e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b7673788487878787878787
87878787878787878787878787877e78788f959595959595959595959595959595959595
928f9595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9284848484879595959595
959595959595959595959595959595929292929292898c9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a97979797979797979797979797979292877b7673706a5c5c5a5a626d7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7b7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f929a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a928787877b6a737676767676767676767676767889a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9592929292927e7b7b87
878787878787878787878787878787878787817e7e7e7e7e7878787b7e7e7e8184848484
84848484848484848484846565708995a0a0a0a0a0a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a0847e7e7e7e7e7e7e7e7e7e878f929292929295959595a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a395898987899292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c
6832221f3032383838383840516278787878787878787878787878787878787b7b7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e7b786d6d6d6d6d0000bfbfbfbfbfbfbfb3aba8a5a3a3a3a3
9d9a9a979795959595959595959595898178787878787878787878787878787878767378
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b78788f95959595959595959595
9595959595959595928f9595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928484
8484879595959595959595959595959595959595959595929292929292898c9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9797979797979797979797979797979792929289877b736a5c5c
5a5a62738484848484848484848484848484847b7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928787877b6a73767676767676767676767676
7889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9592
929292927e7b7b87878787878787878787878787878787878787817e7e7e7e7e7878787b
7b7b7b7b8484848484848484848484848484845f5f687e95a0a0a0a0a0a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a089817e7e7e7e7e7e7e7e7e7e878f929292929295
959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898981899292929aaeaeaeaeaeaeaeae
aeaeaeaeaeaeae8c764c271f303238383838384051627878787878787878787878787878
7878787b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b786d6d6d6d6d0000bfbfbfbfbfbfbf
b3aba8a8a3a3a3a39d9a9a97979595959595959595959589817878787878707373737373
737373737373737676767676767676767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b78788f9595
95959595959595959595959595959595928f9595959595959a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a92848484848792929292959595959595959595959595959595959292929292
92898c929292929292929292929292929292929797979797979797979797979797979595
95958c7b736a5c5c5a5a62768484848484848484848484848484847b7b7b8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9287878778707376767676
76767676767676767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a9592929292927e7b7b87878787878787878787878787878787878787817e
7e7e7e7e7878787b7b7b7b7b84848484848484848484848484848462626a7b95a0a0a0a0
a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09795958781817e7e7e7e7e7e7e7e7e7e
878f929292929295959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898989899292929a
aeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c7668322430323838383838405162787878787878
78787878787878787878787b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b786d6d6d6d6d00
00bfbfbfbfbfbfbfb6aba8a8a5a5a5a59d9a9a9797959595959595959595958981787878
706a656873737373737373737373737373737373737373767b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b78788f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9595959595959a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9284848484878f8f929295959595959595959595959595
959595929292929292898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f979797979797979797
979797979797959595958c7b736a5c5c5c5f6a7e8484848484848484848484848484847b
7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a957e78
737373737676767676767676767676767889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a9592929292927e7b7b87878787878787878787878787
878787878787817e7e7e7e7e7878787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7868
686d7b95a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0978f89817e7e7e7e
7e7e7e7e7e7e7e7e878f929292929295959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395
898989899292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c767651403b35383838383840
516278787878787878787878787878787878787b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7b786d6d6d6d6d0000bfbfbfbfbfbfbfb6aba8a8a8a8a8a89d9a9a979795959595959595
9595958981787870655f5c626d737373737373737373737373737373737070767b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b78788c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f9595
959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9284848484878f8f8f929292929292
9292929292929292929292929292929292898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f97
9797979797979797979797979797959595958c7b736a5c626268768c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c847b7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9297979797979797979797
9797979797977b7673737373737373737373737373736d6d7387a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9592929292927e78768787878787
8787878787878787878787878787817e7e7e7e7e7878787b7b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b7b7b7b706a6a707889a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0
97928f877e7e7e7e7e7e7e7e7e7e7e7e878f929292929295959595a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a395898989899292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c76767068
543b323838383840516278787878787878787878787878787878787b7b7e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7b786d6d6d6d6d0000bfbfbfbfbfbfbfb6aba8a8a8a8a8a89d9a9a97
97959595959595959595958981787368625c5c5f68737373737373737373737373737373
706568767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b78787e7e7e7e7e7e7e7e7e7e8c8f8f8f8f
8f8f8f8f8f8f9595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9284848484878c
8c8c92929292929292929292929292929292929292929292928989898989898989898989
8989898989878f979797979797979797979797979797959595958c7b736a5c656a73878c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c847b7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f929797
97979797979797979797979797977e7673737373737373737373737373736d707687a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d9a959292929292
7e737687878787878787878787878787878787878787817e7e7e7e7e7878787b7b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b767e81878989a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a09d9d92877e7e7e7e7e7e7e7e7e7e7e7e878f929292929295959595a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898989899292929aaeaeaeaeaeaeaeaeaeaeaeae
aeaeae8c767670685749353838383840516278787878787878787878787878787878787b
7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b786a6a6a6a6a0000bfbfbfbfbfbfbfb6aba8a8
a8a8a8a89d9a9a97979595959595959595959589817870655c5a5a5f6570707070707070
7070707070707070685f627378787878787878787878787878787878787b7b7b7b7b7b7b
7b7b7b878f8f8f8f8f8f8f8f8f8f9595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9284848484878c8c8c9292929292929292929292929292929292929292929292898184
84848484848484848484848484848f979797979797979797979797979797959595958c7b
736a5c65707b8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847673788f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8c8c9797979797979797979797979797978776737881818181818181818181
818181818187a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a9592929292927e7676878787878787878787878787878787878787877b7878787878
7878787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b76788989898989a0a0a0a0a0a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d92877e818f8f8f8f8f8f8f8f8f8f8f8f9292
92929295959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898989899292929aaeaeaeae
aeaeaeaeaeaeaeaeaeaeae8c767670685749403838383840516278787878787878787878
787878787878787b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b7870707070700000bfbfbf
bfbfbfbfb6aba8a8a8a8a8a89d9a9a9797959595959595959595958981736d625a575a5f
656d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6862627378787878787878787878787878787878
78787878787878787878787e8f8f8f8f8f8f8f8f8f8f9595959595959a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a92848484848789898c929292929292929292929292929292929292
929292929289817e7e848484848484848484848484848f97979797979797979797979797
9797959595958c7b736a5c6573818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877673788f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f818197979797979797979797979797979787767378818c
8c8c8c8c8c8c8c8c8c8c8c8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a9592929292927e7b7b8787878787878787878787878787878787
8787847b7b7b7b7b7b7b7b78767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7370788989898989
a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d928784878f9292929292
929d9d9d9d9d9d9d9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39589898989
9292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c76767068574946383838384051627878
78787878787878787878787878787878787e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7b7b7b7b
7b7b7b0000bcbcbcbcbcbcbcb6aba8a8a8a8a8a8a39a9a9a979595959595959595959589
817068625a575a5f656d6d6d6d6d6d6d6d6d6d6d6d6d6d6d68656a767878787878787878
78787878787878787878787878787878787876768f8f8f8f8f8f8f8f8f8f8f8f8f8f8f92
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92848484848787878c92929292929292929292
9292929292929292929292929289817e7b848484848484848484848484848f9797979797
97979797979797979797959595958c7b736a5f6d87878c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878497979797979797979797979797
979787767378818c8c8c8c8c8c8c8c8c8c8c8c8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9592929292927e7b7b7b7b7b7b8795959595
95959595959595959595958c8c8c8c8c8c8c8778767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
706a788989898989a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d9287
87878f9292929292929d9d9d9d9d9d9d9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a395898989899292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c7676706857494638
38383840515c5c5c5c6a7878787878787878787878787878787e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e0000b9b9b9b9b9b9b9b6aba8a8a8a8a8a8a89d9d9a97979797
97959595959595897e7068625a575a5f656d6d6d6d707070707070707070707070707676
787878787878787878787878787878787878787878787878787876767e8f8f9292929292
92929292929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9281818181818487899292
929292929292929292929292929292929292929292898181818484848484848484848484
84848f979797979797979797979797979797959595958c7b736a6d8787878c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8f9797979797
9797979797979797979787767378818c8c8c8c8c8c8c8c8c8c8c8c8c8c8ca0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9592929292927e7b7b7b
7b78767b959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7b
7b7b7b7b7b7b7b7b736d7b8989898989a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a09d9d928787878f9292929292929d9d9d9d9d9d9d9d9d9d9d9d9d9da3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a395898989899292929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c
767670685749463838383840494949494957787878787878787b87878787878787878787
878787878787878787878784848484848484840000c1c1c1c1c1c1c1b6aba8a8a8a8a8a8
a8a5a09a9797979797959595959595897b7068625a575a5f656d6d6d6d76767676767676
767676767676767678787878787878787878787878787878787878787878787878787676
7e878f959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a928181
787e7e8187898f929292929292929292929292929292929292929292928c8c8c8c8c8c8c
8c8c8c8c8c8c8c8484848f979797979797979797979797979797959595958c7b736d8787
87878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f
8f8f8f97979797979797979797979797979787767378818c8c8c8c8c8c8c8c8c8c8c8c8c
8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d9a957e
7e7e7e7e7e7b7b7b7b787378979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c
8c8c8c8c7b7b7b7b7b8181818181818181848f8f8f8f8f8fa0a0a0a0a0a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a09d9d928787878f9292929292929d9d9d9d9d9d9d9d9d9d9d
9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898989899292929aaeaeaeaeaeaeaeae
aeaeaeaeaeaeae8c76767068574c463838383838383838384051737878787878787b8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c0000c7c7c7c7c7c7c7
b6aba8a8a8a8a8a8a8a5a09a9797979797959595959595897b7068625a575a5f656d6d6d
6d7676767676767676767676767676767878787878787878787878787878787878787878
78787878787876767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a
9a9a9a9a9a92817b767b7e8187898f92929292929292929292929292929292929292959a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8484848f9797979797979797979797979797979595
95958c877878878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d8f8f8f8f8f97979797979797979797979797979787767378818c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c95a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a877e7e7e7e7e7e7b7b7b7b7b7878979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d97978c8c8c8c8c8c8c8c7b7b7b7b788181818181818181848f8f8f8f8f8fa0a0a0a0
a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d979595878f9292929292929d9d9d
9d9d9d9d9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395898989898c92929a
aeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c767670686251463838383838383838383e4e6a78
78787878787b8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092928f8c8c8c00
00cacacacacacacab6aba8a8a8a8a8a8a8a5a09a9797979797959595959595897b6a6562
5a575a5f656d6d6d6d767676767676767676767676767676787878787878787878787878
787878787878787878787878787876767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9a9a9a9a9a9a927e78767b7e8187898f92929292929292929292929292
929292929292959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8484848f979797979797979797
979797979797959595958f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8f9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8f9797979797979797979797979797978773
7378818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a848484847e8c8c8c8c8c8c8c8c8c979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7b738181818181818181848f8f
8f8f8f8fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095878f92
92929292929d9d9d9d9d9d9d9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395
898989898c92929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c76767068625c46383838383e
40404040495a6a7878787878787b8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a092928f8c8c8c0000cacacacacacacab6aba8a8a8a8a8a8a8a5a09a9797979797959595
9595958970625a5a5a575a5f656d6d6d6d76767676767676767676767676767678787878
7878787878787878787878787878787878787878787876767e929a9a9a9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a8c7b78767b7e8187898f9292929292
9292929292929292929292929292959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8484848f97
97979797979797979797979797979595959592929292929292929292929292928c8c8c8c
8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8f979797979797979797
979797979797877b7b7b818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c819da0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d8f898989847e8c9797979797979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7b7b818181
8181818181848f8f8f8f8f8fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a095878f9797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95959595959595
959595959595958f898989898c92929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8c76767068
6262463232353b404049494c57626a7878787878787b8c8c8ca0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a092928f8c8c8c0000cacacacacacacab6aba8a8a8a8a8a8a8a5a09a
979797979795959595959589655a514e54575a5f656d6d6d6d7676767676767676767676
76767676787878787878787878787878787878787878787878787878787876767e929a9a
9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a817676767b7e81
87898f92929292929292929292929292929292929292959a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a8c8484848f9292929295959595959595959595959595959592929292929292929292
929292928c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c8c8f8f8f97
97979797979797979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c819d
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d9d9d9d8c8c8c8c847e8c
9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c
7b7b7b7e7e8181818181818181848f8f8f8f8f8fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a095878f9797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c7676706862624632354040404049494e5c656a7878787878787b8c8c8ca0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a958f8c8c8c0000cacacacacacacabcb1a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a895959595959578574e43434c575a5f656d6d6d6d767676
767676767676767676767676787878787878787878787878787878787878787878787878
787876767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a
89767070767b7e8187898f92929292929292929292929292929289898989959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a8c8484848c8c8c8f929595959595959595959595959595959292
9292929292929292929292928c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d8c898f8f8f9797979797979797979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c819a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8f8c8c8c847e8c9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797
8c8c8c8c8c8c8c8c7b7b7b7e7e8181818181818181848f8f8f8f8f8f9a9a9a9a9a9a9a9a
9a9a9a9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095878f9797979797979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d8f8189898989898989898989898989898989898989898989898989
898989898989897b7b7b7b7676767068626249384040404040494c57656a707878787878
787b8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958f8c8c8c0000cacaca
cacacacacac7bfbfbfbfbfbfbfbfbfbfbfbfbfbfb69595959595816551463b3e49575a5f
656d6d6d6d76767676767676767676767676767678787878787878787878787878787878
7878787878787878787876767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d92929292897b6d6a70767b7e8187898f9292929292929292929292929292927e76
7e89959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c84817e7e818c8f92959595959595959595
95959597979797979797979797979797979797978c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d8c898f8f8f9797979797979797979797979797978c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c81878787878787878787878c9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d95929292847e8c9797979797979797979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7e7e8181818181818181848f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f89979da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095878f9797979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f848989898989898989898989898989898989
8989898989898989898989898989897b7b7b7b767676706862624e4c4c4c4c4c434c5765
6a70707676767676767b8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958f
8c8c8c0000cacfcfcfcfcfcfd2d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5b695959287786a5a
4e433b3e46545a5f656d6d6d6d7676767676767676767676767676767878787878787878
78787878787878787878787878787878787876767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9292928c8476686a70767b7e8187898f929292929292929292
92929292929278707e89959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c84817673848c8f9295
959595959595959595959597979797979797979797979797979797978c8c8c8c8c8c8c8c
8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c898f8f8f97979797979797979797979797
97978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c81818181818181817e7e7e899d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95929292847e8c9797979797979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7e7e81818181818181
81848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8f9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
95878f9797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f84898989898989898989
89898989898989898989898989898989898989898989897b7b7b7b767676706862625454
5454544e464c57686a70708484848484848c8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0958f8c8c8c0000cacfcfcfcfcfcfd2d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5
b695958c817062574e433b3843545a5f656d6d6d6d767676767676767676767676767676
767676767676767676767676767676767676767676767676767676767e929a9a9a9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9292928c847e6d6d70767b7e8187898f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f736d7e89959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c84
817370878c8c8c8c8c8c8c8c8c8c8c8c8c8c929797979797979797979797979797979797
8c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c898f8f8f9797979797
979797979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c818181818181
81817b76818f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95929292847e8c97979797
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7e
7e8181818181818181848f8f8f8f8f8f8f959595959595959595959da0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a095878f9797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8489
898989898989898989898989898989898989898989898989898989898989897b7b7b7b76
76767068626262625757544e464c57686a70708c8c8c8c8c8c8c8c8c8ca0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0958f8c8c8c0000cacfcfcfcfcfcfd2d5d5d5d5d5d5d5
d5d5d5d5d5d5d5d5b6958f847b70655c51433b323e545a5a5a5a5f5f6876767676767676
767676767676767676767676767676767676767676767376767676767676767676767676
7e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9292928c847e7b6d70
767b7e8187898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e706d7e89959a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a8c8481737087878787878787878787878789898992979797979797979797
97979797979797978c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c89
8f8f8f9797979797979797979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c81818181818181817b78848f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d959292
928f7b8c9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c
8c8c8c8c7b7b7b7e7e8181818181818181848f8f8f8f8f8f8f959595959595959595959d
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095878f9797979797979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d8f848989898989898989898989898989898989787b7b7b7b7b7b7b7b7b7b7b
7b7b7b7b7b7b7b7676766562626262625757574e464c57686a70708c8c8c8c8c8c8c8c8c
8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958f8c8c8c0000cacfcfcfcfcfcf
d2d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5b695877b78736d65514338383e5151515151515a
687676767676767676767676767676787878787878787878787878787878707676767676
76767676767676767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d92
92928c847e7b6d70767b7e818789898989898989898989898989898987736d6d7e89959a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c848173708787878787878787878787878989899297
979797979797979797979797979797978c8c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d8c898f8f8f9797979797979797979797979797978c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c81818181818181818484898f9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d959292928f878c9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d97978c8c8c8c8c8c8c8c7b7b7b7e7e8181818181818181848f8f8f8f8f8f8f959595
959595959595959da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395878f9797979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d8f84898989898989898989898989898989898973737b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7676766a68686868625757574e464c57686a70708c
8c8c8c8c8c8c8c8c8ca0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0958f8c8c8c00
00cacfcfcfcfcfcfd2d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5b692817b7b7b7b6d51403e3e
3e5151515151515468767676767676767676767676767678787878787878787878787878
787870767676767676767676767676767e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9292928c847e7b6d70767b7e8187898989898989898989898989898989
7e6d6d6d7e89959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c84817373878787878787878787
878787898989929797979797979797979797979797979797878c8c8c8c8c8c8c8c8f9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c81818181818181818484898f9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d959292928f878c9797979797979797979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7e7e8181818181818181848f8f
8f8f8f8f8f959595959595959595959da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395878c97
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8489898989898989898989898989
8989898473737b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7676767070707070655c5c5a4e
464c57686a70708c8c8c8c8c8c8c8c8c8ca0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0
a0a0958f8c8c8c0000cacfcfcfcfcfcfd2d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5bf958484
848484845c403e3e3e4e4e4e515151546876767676767676767676767676767878787878
7878787878787878787870767676767676767676767676767e929a9a9a9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9292928c847e7b6d70767b7e818789898989898989
89898989898989897e7070707e89959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8481737387
8787878787878787878787898989929797979797979797979797979797979797878c8c8c
8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c898f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f7b8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8484
898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292928f878c9797979797979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c7b7b7b7e7e818181
8181818181848f8f8f8f8f8f8f959595959595959595959da0a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39584899797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f848989898989
89898989898989898989898478787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b7065655a54494c57686a70708c8c8c8c8c8c8c8c8c8ca0a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a0a0a0958f8c8c8c0000cacfcfcfcfcfcfd2d5d5d5d5d5d5d5d5d5d5d5
d5d5d5d5cfa5979797979797844c3e3e3e43434651515154687676767878787878787878
78787878787878787878787878787878787870767676767676767676767676767e929a9a
9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9292928c847e7b6d70767b7e81
878989898989898989898989898989897e7b7b7b7e89959a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a8c848184878787878787878787878787878989899297979797979797979797979797
97979797878c8c8c8c8c8c8c8c8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c898f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e7678787878787878
7878787878788484898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292928f878c
9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8c8c8c8c8c8c8c
7b7b7b7e7e8181818181818181848f8f8f8f8f8f8f959595959595959595959da0a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a38f8f9797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a8f8489898992929292929292929292929292929292929292897e7e7b70738184848484
84848484848484848484847065655a54494c57686a70708c8c8c8c8c8c8c8c8c8ca0a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0958f8c8c8c0000cacfcfd5d5d5d5d5d5d5d5
d5d5d5d5d5d5d5d5d5d5d5d5cfc7b6b6b6b6b6b1a05c3e3e3e3e3b404e51515468767676
818181818184878787878787878787878787878787878787847870707070707070707070
707070737e929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9292928c84
7e7b6d70767b7e8187878787878787878787878787878787818181818189959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8989929797979797
97979797979797979797979787878787878787877878849a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a8c89898989898989898989898989898987878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e
76787878787878787878787878788484898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a959292928f878c9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d978c
8c8c8c8c8c8c8c8c7b7b7b7e7e8181818181818181848f8f8f8f8f8f8f959a9a9a9a9a9a
9a9a9a9aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a08f9797979797979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a8f8489898992929292929292929292929292929292929292897e7e
7e7373848484848484848484848484848484847065655a54494c57686a70708c8c8c8c8c
8c8c8c8c8ca0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0958f8c8c8c0000cacfcf
ddddddddddddddddddddddddddddddd5d5d5d5d5cfcfcfcac7c1bcb1a05c3e3e43434346
4e5151546876767681818181818487878787878787878787878787878787878784787070
7073737373737373737373737e929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9292928c847e7b6d707378787878787878787878787878787b8181818181818181
8189959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a848c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c
8989929797979797979797979797979797979797878787878787878778788c9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a8c89898989898989898989898989898484878f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f7e76787878787878787878787878788484898f9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a959292928f878c9797979797979797979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d978c8c8c8c8c8c8c8c8c7b7b7b7e7e7e7e7e7e7e7e8181848f8f8f8f8f8f
8f959a9a9a9a9a9a9a9a9a9aa0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f9797979797
979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f848989899292929292929292929292929292
9292929292897e7e7e7e7b848484848484848484848484848484847065655a54494c5768
6a70738c8c8c8c8c8c8c8c8c8ca0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0958f
8181810000cacfcfddddddddddddddddddddddddddddddd5d5d5d5d5cfcfcfcfc7c1bcb1
a05c3e3e434343464e515154687676768181818181848787878787878787878787878787
87878787847870707078787878787878787878787e929a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9292928c847e7b6d6a6a70767676767676767676767676767b
818181818181818181899595959595959595959595959595958f7e8c9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a8c89899297979797979797979797979797979797978787878787878787
87879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c898989898989898989898989898784848f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e76787878787878787878787878788484898f9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292928f878c9797979797979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d978c8c8c8c8c8c8c8c8c7b6d737e8181818181818181
81848f8f8f8f8f8f8f959a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a38f9797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f84898989929292929292
92929292929292929292929292897e848484848484848484848484848484848484848470
65655a54494c57686a70768c8f8f8f8f8f8f8f8f8fa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a0a0a095817e7e7e0000cacfcfddddddddddddddddddddddddddddddd5d5d5d5d5
cfcfcfcfc7c1bcb1a06a4e49494343464c4c4c4c626d7376818181818184878787878787
878787878787878787878787847870707078787878787878787878787e929a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292928c847e7b6d65686a767676767676
7676767676767b7b818181818181818181898989898989898989898989898989897b7b8c
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8789929797979797979797979797979797979797
878787878797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c898989898989898989
898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e7b7b7b7b7b7b7b7b7b7b7b7b
78788484898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292928f878c97979797
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d978c8c8c8c8c8c8c8c8c7b70737e
818181818181818181848f8f8f8f8f8f8f959a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a38f979797979797979797979797979797979797979797978f8489
898992929292929292929292929292929292929292897e84848484848484848484848484
848484848484847065655a54494c57686a70768c8f8f8f8f8f8f8f8f8fa0a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a0a0a09d878787870000cacfcfdddddddddddddddddddddddd
ddddddd5d5d5d5d5cfcfcfcfc7c1bcb1a08468544c434346464646464e5a627681818181
8184929292929292929292929292929292928c8784787070707878787878787878787878
7e929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292928c847e7e7065
65687676767676767676767676767b7b8181818181818181818181818181818181818181
8181818178787b8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8c8c92979797979797979797
979797979797979787878787879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8989
8989898989898989898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8181818181
818181817e7e7e7e78788484898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292
928f878c9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d978c8c8c8c8c
8c8c8c8c7b76767e818181818181818181848c8c8c8c8c8c8c959a9a9a9a9a9a9a9a9a9a
a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f9797979797979797979797979797979797
97979797978f8487878792929292929292929292929292929292929292897e8484848484
8484848484848484848484848484847065655a54494c57686a70768c8f8f8f8f8f8f8f8f
8fa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a09d9a9a9a950000cacfcfdddddddd
ddddddddddddddddddddddd5d5d5d5d5cfcfcfcfc7c1bcb1a08f765f4c4343494e4e4e4e
54575f7b818181818184929292929292929292929292929292928c878478707070787878
78787878787878787e929797979797979797979797979797978784817e7e7e7e7e7e7e7e
7e7e7e7e7e7e73655f657676767676767676767676767b7b818181818181818181818181
818181818181817e7e7e7e7b78787e8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8c8c9297
9797979797979797979797979797979787878787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9795959589898989898989898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8181818181818181817e7e7e7e78788484898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a959292928f878c9797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d978c8c8c8c8c8c8c8c8c7b78787e818181818181818181848c8c8c8c8c8c8c959a9a
9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f979797979797979797
979797979797979797979797978f847e8184929292929292929292929292929292929292
92897e84848484848484848484848484848484848484847065655a54494c57686a70768c
8f8f8f8f8f8f8f8f8fa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a09d9a9a9a9500
00cacfcfddddddddddddddddddddddddddddddd5d5d5d5d5cfcfcfcfc7c1bcb1a08f7e6d
5a4943494e5a5f657070707b818181818184929292929292929292929292929292928c87
847870707078787878787878787878787e92929292929292929292929292929292878781
7e7e7e7e7e7e7e7e7e7e7e7e7e7e73625c627676767676767676767676767b7b81818181
8181818181818181818181818181817e7e7e7e818181818c9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a8c8c8c92979797979797979797979797979797979787848787879d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9795959589898989898989898989898989898f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8181818181818181817e7e7e7e78788484898f959595959595
95959595959595959595959595959292928f878c9797979797979797979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d978c8c8c8c8c8c8c8c8c7b78787e818181818181818181848989
8989898989959a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f97
9797979797979797979797979797979797979797978f847e818492929292929292929292
929292929292929292897e84848484848484848484848484848484848484847065655a54
494c57686a70768c8f8f8f8f8f8f8f8f8fa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0
a0a09d9a9a9a950000cacfcfddddddddddddddddddddddddddddddd5d5d5d5d5cfcfcfcf
c7c1bcb1a38f817062544c494e5a686d7070707b81818181818492929292929292929292
9292929292928c87847870707078787878787878787878787e9292929292929292929292
929292929287878781818181818181817e7e7e7e7e7e73625f6876767676767676767676
76767b7b8181818181818181818181818181818181818176767681818181818c9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a8c8c8c92929297979797979797979797979797979787848787
879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979595958989898989898989898989
8989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8787878787878787877e7e7e7e78788484
898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c9797979797979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d978c8c8c8c8c8c8c8c8c7b78787e81818181
81818181818181818181817b87959a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a38f979797979797979797979797979797979797979797978f847e81849292
9292929292929292929292929292929292897e8484848484848484848484848484848484
8484847065655a54494c54686a70768c8f8f8f8f8f8f8f8f8fa0a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a0a0a09d9a9a9a9500009dbfcfddddddddddddddddddddddddddddddd5
d5cfcfcfcfcfcfcfc7c1c1bfa89a877362574e4e545f686d7070707b8181818181849292
92929292929292929292929292928c87847870707078787878787878787878787e929292
9292929292929292929292929287878781818181818181817e7e7e7e7e7e736868707b7b
7b7b7b7b7b7b7b7b7b7b7b7b818181818181818181818181818181818181817673738181
8181818c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8c8c8c847b8187878787878787878787
8787878787848787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97959595898989
89898989898989898989898f8f8f8f8f8f8f8f8f8f959595959595959595959595959595
7e7e7e7e78788484898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8787
8995979797979797979797979797979797979797979797979797978c8c8c8c8c8c8c8c8c
7b7878788181818181818181818181818181817381959a9a9a9a9a9a9a9a9a9aa3a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a38f979797979797979797979797979797979797979797
978f847e818497979797979797979797979797979797979797897e848484848484848484
84848484848484848484847065655a54494c54686a70768c8f8f8f8f8f8f8f8f8fa0a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9d9d9a9a9a95000087a5cfdddddddddddddddd
ddddddddddddddd5d5cfcfcfcfcfcfcfcfcfcfc1a89a8c7e685a51515c5f686d7070707b
818181818184929292929292929292929292929292928c87847870707078787878787878
787878787e9292929292929292929292929292929287878781818181818181817e7e7e7e
7e7e7b7070737b7b7b7b7b7b7b7b7b7b7b7b7b7b81818181818181818181818181818181
818181766d7381818181818c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8c7b78767884
84848484848484848484848484848787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9795959589898989848789898989898989898f8f8f8f8f8f8f8f8f8f95959595959595
95959595959595957e7e7e7e78788484898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8784878787878787878787878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c818181818181818181818181818181818181817076879a9a9a9a9a9a
9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f848c9292929292929292929292
9292929292929292928f847e8184979797979797979797979797979797979797978c7e84
848484848484848484848484848484848484847065655a54494c54686a70768c8f8f8f8f
8f8f8f8f8fa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9d9d9a9a9a9500008197cf
ddddddddddddddddddddddddddddddd5d5cfcfcfcfcfcfcfcfcfcfc1a89a8c81705f575c
5c5f686d7070707b818181818184929292929292929292929292929292928c8784787070
7078787878787878787878787e9292929292929292929292929292929287878781818181
818181817e7e7e7e7e7e7b7878787b7b7b7b7b7b7b7b7b7b7b7b7b7b818c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c81766d7381818181818c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f
8f8f8c7b78787b8484848484848484848484848484848787879d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9795959589898989848789898989898989898f8f8f8f8f8f8f8f8f
8f9595959595959595959595959595957e7e7e7e787884848989898f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f9797979797979797979797979797979797978c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8181818181818181818181818181818181818173
737e9a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f7e81818181
818181818181818181818181818181818181817e81849797979797979797979797979797
9797979797978c8484848484848484848484848484848484848484786d6d5a544943545c
5f70768c8f8f8f8f8f8f8f8f8fa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9d9d9a
9a9a9500007e87aeddddddddddddddddddddddddddddddd5d5cfcfcfcfcfcfcfcfcfcfc1
a89a8c81735f5c5c5c5f686d7070707b8181818181849292929292929292929292929292
92928c8784786d6d7078787878787878787878787e929292929292929292929292929292
9287878781818181818181817e7e7e7e7e7e7b7b7b7b7b7b7b7b7b7b7b7e7e7e7e7e7e7e
8192929292929292929292929292929292928176707381818181818c9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a8f8f8f8f8f8987848484848484848484848484848484848787879d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9795959589898989848789898989898989898f
8f8f8f8f8f8f8f8f8f95959595959595959595959595959587877e7e7878818181818181
818181818181818181818181848484848484979797979797979797979797979797979797
97979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c818181818181818181818181
818181818181817878879a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a38f7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8184979797979797
97979797979797979797979797978f848484848484848484848484848484848484848484
816d5a57493b4c51516276898f8f8f8f8f8f8f8f8fa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a09d9d9d9a9a9a9500007e7e97ddddddddddddddddddddddddddddddd5d5cfcfcf
cfcfcfcfcfcfcfc1a89a8c8173625f5f5c5f686d7070707b818181818184929292929292
929292929292929292928c8784786d657078787878787878787878787e92929292929292
92929292929292929287878781818181818181817e7e7e7e7e7e7b7b7b7b7b7b7b7b7b7b
7b818989898989898992929292929292929292929292929292928484848481818181818c
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c8484
84848787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9795959589898989848789
898989898989898f8f8f8f8f8f8f8f8f8f9595959595959595959595959595958f8c7e7e
78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7376787878818497979797979797979797
979797979797979797979797979797978987878787878787878787878787878781818181
81818181818181818181818181818178878f9a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a38f7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e8497979797979797979797979797979797979797978f84848484848484848484848484
8484848484848484846d5a5a544c575a5a6d8c8f8f8f8f8f8f8f8f8f8fa0a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a09d9d9d9a9a9a950000818197dddddddddddddddddddddddd
ddddddd5d5cfcfcfcfcfcfcfcfcfcfc1a89a8c81736565655c5f686d7070707b81818181
8184929292929292929292929292929292928c8784786d68707878787878787878787878
7e9292929292929292929292929292929287878781818181818181817e7e7e7e7e7e7b7b
7b7b7b7b7b7b7b7b7b818c92929292929292929292929292929292929292929292928989
898981818181818c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f8f8f8f8f8c8c8c8c8c
8c8c8c8c8c8c848484848787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979595
9589898989848789898989898989898f8f8f8f8f8f8f8f8f8f9595959595959595959595
95959595958c7e7e78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b737070707076849797
979797979797979797979797979797979797979797979797898787878784848484848484
848484818181818181818181818181818181818181818178898f9a9a9a9a9a9a9a9a9a9a
a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f7e7e7e7e7e7e7e7e7e7e787e7e7e7e7e7e
7e81818181818181818797979797979797979797979797979797979797978f8484848484
8484848484848484848484848484848484765c5f6873737373848c8f8f8f8f8f8f8f8f8f
8fa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d9d9a9a9a950000818197dddddddd
ddddddddddddddddddddddd5d5cfcfcfcfcfcfcfcfcfcfc1a89a8c81767373735c5f686d
7070707b818181818184929292929292929292929292929292928c8784786d6870787878
78787878787878787e929292929292929292929292929292928787878181818181818181
7e7e7e7e7e7e7b7b7b7b7b7b7b7b7b7b7b818c9292929292929292929292929292929292
9292929292928989898981818181818c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f8f
8f8f8f8c8c8c8c8c8c8c8c8c8c8c878484848787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9795959589898989848789898989898989898f8f8f8f8f8f8f8f8f8f959595
959595959595959595959595958c7e7e78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b73
7070706d7384979797979797979797979797979797979797979797979797979789878787
878484848484848484787b818181818181818181818181818181818181818178898f9a9a
9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f7e7e7e7e7e7e7e7e7e
786d767e7e7e7e7e7e878787878787878787979797979797979797979797979797979797
97978f848792929292929292929292929292929292929292929273687e84848484848c8f
8f8f8f8f8f8f8f8f8fa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d9d9a9a9a9500
00818197ddddddddddddddddddddddddddddddcfcfcfcfcfcfcfcfcfcfcfcfc1a89a8c81
7b7b76765c5f686d7070707b818181818184929292929292929292929292929292928c87
84786d687078787878787878787878787e84848787878787878787878787878787878787
81818181818181817e7e7e7e7e7e7b7b7b7b7b7b7b7b7b7b7b818c929292929292929292
929292929292929292929292929289898989818181818181848f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c878484848787879d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9795959589898989848789898989898989898f8f8f8f8f
8f8f8f8f8f959595959595959595959595959595958c7e7e78787b7b7b7b7b7b7b7b7b7b
7b7b7b7b7b7b7b7370707070708497979797979797979797979797979797979797979797
979797978987878787848484848484848481818181818181818181818181818181818181
81818178898f9a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f7e
7e7e7e7e7e7e7e7e736d6870787878787e87878787878787878797979797979797979797
979797979797979797978f8487929292929292929292929292929292929292929292927b
8484848484848c8f8f8f8f8f8f8f8f8f8f979aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0
9d9d9d9a9a9a950000818197ddddddddddddddddddddddddddddddd2d2d2d2d2d2cfcfcf
cfcfcfc1a89a8c817e7e76765c5f686d7070707b81818181818492929292929292929292
9292929292928c8784786d686878787878787878787878787b7b7e818787878787878787
878787878787878781818181818181817e7e7e7e7e7e7b7b7b7b7b7b7b7b7b7b7b818c92
9292929292929292929292929292929292929292929289898989818181818484878f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c878484848787
879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979595958987878784878989898989
8989898f8f8f8f8f8f8f8f8f8f959595959595959595959595959595958c7e7e78787b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7370707070707e9797979797979797979797979797
979797979797979797979797898787878784848484848484848181818181818181818181
818181818181818181818178898f9a9a9a9a9a9a9a9a9a9aa3a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a59d877e7e7e7e7e7e7e7e7e7e70686d767e81818c8c8c8c8c8c8c8c8c8c9797
9797979797979797979797979797979797978f8487929292929292929292929797979797
97979797979797979797979795848c8f8f8f8f8f8f8f8f8f8f9292a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a09d9d9d9a9a9a950000818197d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d2
d2d2d2d2d2cfcfcfcfcfcfc1a89a8c81818176765c5f686d7070707b8181818181849292
92929292929292929292929292928c8784786a686d767676767676767676767676788181
8787878787878787878787878787878781818181818181817e7e7e7e7e7e7b7b7b7b7b7b
7b7b7b7b7b818c9292929292929292929292929292929292929292929292898989898181
818187879292929292929292929292929292928f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c
8c8c878484848787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97959595877878
848487898989898989898989898989898989817e7e959595959595959595959595959595
958c7e7e78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7373737373737e979797979797
979797979797979797979797979797979797979789878787878484848484848484898c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8178898f9a9a9a9a9a9a9a9a9a9aa3a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a59d979797979797979797978976707b92a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a097979797979797979797979797979797978f848792929292929292
929292979797979797979797979797979797979795848c8f8f8f8f8f8f8f8f8f8f8f8fa3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d9d9a9a9a950000818197d2d2d2d2d2d2d2d2
d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a8c81818176765c5f686d7070707b
818181818184929292929292929292929292929292928c87847670767878787878787878
78787878788181818787878787878787878787878787878781818181818181817e7e7e7e
7e7e7b7b7b7b7b7b7b7b7b7b7b818c929292929292929292929292929292929292929292
929289898989818181818992a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8c
8c8c8c8c8c8c8c8c8c8c87848484847b849d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d97959595877b7b7e848787878787878787878787878787877b78787e95959595959595
9595959595959595958c7e7e78787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8181818181
81979797979797979797979797979797979797979797979797979797897e7e7e7e7e7e7e
7e7e7e7e7e898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8178898f9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797979797979797897b7b9a
a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea097979797979797979797979797979797978f84
8795959595959595959597979797979797979797979797979797979795848c8f8f8f8f8f
8f8f8f8f8f8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a950000818197
d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a928989817676
5f5f686d7070707b818181818184929292929292929292929292929292928c87847b7b7b
7b7b7b7b7b7b7b7b7b848484848484848787878787878787878787878787878781818181
818181817b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b818c92929292929292929292929292
92929292929292929292898989898181818189a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a08c8c8c8c8c8c8c8c8c8c8c87848484847b849d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d979595958f898787848787878787878787878787878787877b7878
7e959595959595959595959595959595958c7e7e7878687b7b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b9292929295a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097979797979797979797979797
897e7e7e7e7e7e7e7e7e7e7e7e898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8178
898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898f9797979797979797979797979797
97979797929295a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea09797979797979797979797
9797979797978f8487959595959595959595979797979797979797979797979797979797
95848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f897878818c95959595959595959595
9595950000818197d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1
a89a9289898176766565686d7070707b7b7b7b7b7e848787878787878787878787878787
87878787847b7b7b7b7b7b7b7b7b7b7b7b84848484848484878787878787878787878787
8787878781818181818181817b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b818c9292929292
929292929292929292929292929292929292898989898181818189a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c8c8c8c8c8c8c8c8c8c8c87848484847b849d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9292929292929292929292928f8487878787878787878787
878787878784848484959595959595959595959595959595958c7e7e786d656d7b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b92929292a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19797979797
9797979797979797928484848484848484847e7e7e898c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c7078898f959595959595959595959595959595958c84818f979797979797
979a9a9a9a9a9a9a9a9a9a9a9a9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0979797
97979797979797979797979797978f848795959595959595959597979797979797979797
979797979797979795848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8473737b8f9595
95959595959595959595950000818197cdcfcfcfcfcfd2d2d2d2d2d2d2d2d2d2d2d2d2d2
d2cfcfcfcfcfcfc1a89a9289898176766565686d6d6d6d6d6d6d6d6d6d7b818181818181
818181818181818181818181817b7b7b7b7b7b7b7b7b7b7b7b8484848484848487878787
87878787878787878787878781818181818181878787878787878787878787878787877b
7b818c9292929292929292929292929292929292929292929292898989898181818189a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c8c8c8c8c8c8c8c8c8c8c8784
8484847b849d9d9d9d9d9d9d9d9d9da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f848787
8787878787878787878787878787878787959595959595959595959595959595958c7e76
57515c626a737373737373737373737373737692929292a3b9b9b9b9b9b9b9b9b9b9b9b9
b9b9b9a0a0a0a0a0a0a0979797979797928989898989898989897e7e7e898c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c707b898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8478
818f979797979797979a9a9a9a9a9a9a9a9a9a9a9a9d9da8a8aeaeaeaeaeaeaeaeaeaeae
aeaeaeaea097979797979797979797979797979797978f84879595959595959595959797
9797979797979797979797979797979795848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8173738497979797979797979797979797970000818197c7cfcfcfcfcfd2d2d2d2d2d2
d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a928989817676656568686868686868686868
6a78787878787878787878787878787878787878787b7b7b7b7b7b7b7b7b7b7b7b848484
848484848484848484848484848484818181818181818181818181878787878787878787
878787878787877b7b818c92929292929292929292929292929292929292929292928989
89898173737889a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c8c8c8c8c
8c8c8c8c8c8c87848484847b849d9d9d9d9d9d9d9d9d9da3a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a58f84878787878787878787878787878787878787879595959595959595959595
95959595958c7e705449515c65737373737373737373737373737692929292a3b9c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1bfbfbfbfbfa8979797979797928f8f8f8f8f8f8f8f897e7e
7e898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c737b898f92929292929292929292
9292929292928f7e818f979797979797979a9a9a9a9a9a9a9a9a9a9a9a9d9da8a8aeaeae
aeaeaeaeaeaeaeaeaeaeaeaea097979797979797979797979797979797978f8487959595
95959595959597979797979797979797979797979797979795878c8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8176788f9d9d9d9d9d9d9d9d9d9d9d9d9d9d0000818197b3cacdcd
cfcfd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a92898981767665656262
626262626262625f6278787878787878787878787878787878787878787b7b7b7b7b7b7b
7b7b7b7b7b84848484848484848484848484848484848481818181818181818181818187
8787878787878787878787878787877378818c9292929292929292929292929292929292
92929292929289898989817068738fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a08c8c8c8c8c8c8c8c8c8c8c87848484847b849d9d9d9d9d9d9d9d9d9da3a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a58f8181818181818181818181818181818787878787959595
959595959595959595959595958c7e6d5f57575c65737373737373737373737373737692
929292a3b9dbebebebebebebebebebebebebebebebebebebd5a8979797979797928f8f8f
8f8f8f8f8f897e7e7e898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c787b898f9797
97979797979797979797979797958f8f898f979797979797979a9a9a9a9a9a9a9a9a9a9a
9a9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0979797979797979797979797979797
97978f848795959595959595959597979797979797979797979797979797979795878c8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f817b78959d9d9d9d9d9d9d9d9d9d9d9d9d9d00
008181979797979dbfcfd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a9289
898176766565626262626262626262626276787878787878787878787878787878787878
787b7b7b7b7b7b7b7b7b7b7b7b8484848484848484848484848484848484848181818181
81818181818184878787878787878787878787878787877376818c929292929292929292
92929292929292929292929292928989898981736a768fa0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a08c8c8c8c8c8c8c8c8c8c8c877b7b7b7b7b849d9d9d9d9d9d9d
9d9d9da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7b7b7b7b7b7b7b7b81818181818181
8787878787959595959595959595959595959595958c7e73737373737373737373737373
7373737373737695979797a3b9dbf7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7d5a89797
979797979292929292928f8f8f897e7e7e898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c7e7e898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f979797979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea097979797979797
979797979797979797978f84929595959595959595959797979797979797979797979797
9797979795878c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f817e78959d9d9d9d9d9d9d
9d9d9d9d9d9d9d00008181848484848fb9cfd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcf
cfcfcfc1a89a928989817676656562626262626262626262627378787878787878787878
7878787878787878787b7b7b7b7b7b7b7b7b7b7b7b848484848484848484848484848484
848484818181818181818181818184878787878787878787878787878787877678818c92
9295959595959595959595959595959592929292929289898989817b6d768fa0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c8c8c8c8c8c8c8c8c8c8c8770787b7b7b
849d9d9d9d9d9d9d9d9d9da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7b7b7b7b7b7b7e
898c8c8c8c8c8c8c9292929292959595959595959595959595959595958c878787878787
87878787818181737373737373737695a3a3a3a8bce3f7f7f7f7f7f7f7f7f7f7f7f7f7f7
f7f7f7f7d5a89797979797979292929292928f8f8f897e7e7e898c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c7e7e898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f9797
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a097979797979797979797979797979797978f8795959595959595959595979797979797
97979797979797979797979795878c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f818181
9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d00008181818181818cb3cfd2d2d2d2d2d2d2d2d2d2
d2d2d2d2d2cfcfcfcfcfcfc1a89a92898981767665656262626262626262626262707878
78787878787878787878787878787873767b7b7b7b7b7b7b7b7b7b7b7b84848484848484
848484848484848484848481818181818181818181818487878787878787878787878787
8787878181818c9292959595959595959595959595959595929292929292898989898181
76788fa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a0a0a0a08c8c8c8c8c8c8c8c8c
8c8c8770787b7b7b8495959595959595959595a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
8f7b7b7b7b7b7b7e898c8c8c8c8c8c8c9292929292959595959595959595959595959595
958c878787878787878787878181816d6868686d6d6d7695a3b1b3b6c7f4f7f7f7f7f7f7
f7f7f7f7f7f7f7f7f7f7f7f7d5a89797979797979292929292928f8f8f897e7e7e898c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a958f8f8f8f979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9da8a8aeaeaeaeaeaeae
aeaeaeaeaeaeaeaea095959595959595959595959595959595958c879595959595959595
959597979797979797979797979797979797979795878c8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8989899a9d9d9d9d9d9d9d9d9d9d9d9d9d9d00008181818181818caecfd2d2
d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a9289898176766565626262626262
62626262626a707878787878787878787878787878787370767b7b7b7b7b7b7b7b7b7b7b
7b8484848484848484848484848484848484848181818181818181818181848787878787
87878787878787878787878787878c929295959595959595959595959595959589898989
8989898989898181818c97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a0a0a0a08c
8c8c8c8c8c8c8c8c8c8c8770787b7b7b818181878f8f8f92929292a3a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a58f78787878736d7e898c8c8c8c8c8c8c929292929295959595959595
9595959595959595958c878787878787878787878181816d626262686d6d7695a3b1b3b6
c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7e9b99792929292929292929292928f8f
8f897e7e7b898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e898f9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a958f8f8f8f979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9da8
a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0958c8787878787878787878787878787878487
9595959595959595959597979797979797979797979797979797979795878c8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8989899a9d9d9d9d9d9d9d9d9d9d9d9d9d9d0000818181
8181818caecdd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1a89a928989817676
6565626262626262626262626262707878787878787878787878787878787370767b7b7b
7b7b7b7b7b7b7b7b7b848484848484848484848484848484848484818181818181818181
818184878787878787878787878787878787878787878c92929595959595959595959595
959595958c8c8c8c8c8c8c898989878f8f9797a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3
a3a3a3a0a0a0a08c8c8c8c8c8c8c8c8c8c8c8770787b7b7b7e7e7e7e7e7e7e87929292a3
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f78787876686a7e898c8c8c8c8c8c8c92929292
92929292929292929292929292929292928c878787878787878787878181816d5c5c5c5f
686d7695a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7ddb39797979797
9797979797928f8f8f897e8181898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e
898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f979797979797979d9d9d9d9d9d9d
9d9d9d9d9d9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0958c878787878787878787
878787878787848795959595959595959595979797979797979797979797979797979797
95878c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8989899a9d9d9d9d9d9d9d9d9d9d9d
9d9d9d00008181818181818caec4d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2cfcfcfcfcfcfc1
a89a9289898176766565626262626262626262625f5c6d78787878787878787878787878
78787370787b7b7b7b7b7b7b7b7b7b7b7b84848484848484848484848484848484848481
81818181818181818181848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c92929d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8187878795979797a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a3a3a3a3a3a0a0a0a08c8c8c8c8c8c8c8c8c8c8c8770787b7b7b7b7b7b7b
7b7b7b7b929292a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7878787673737e898c8c8c
8c8c8c8c9292929292929292929292929292928484878787878787878787878787878787
8181816d5c5a5a5a5f6a7695a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7
f7f7d8aba0a0a0a0a0a0a0a0a0928f8f8f897e8189898c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c7e7e898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f979797979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0958c87
878787878787878787878787878784879595959595959595959597979797979797979797
97979797979797979587898989898989898989898989898989898989898989899a9d9d9d
9d9d9d9d9d9d9d9d9d9d9d00008181818181818caec1d2d2d2d2d2d2d2d2d2d2d2d2d2d2
d2cacacacacacac1a89a92898981767665656262626262626262626262626d7878787878
7878787878787878787873707b7b7b7b7b7b7b7b7b7b7b7b7b8484848484848484848484
848484848484848181818181818181818181848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f878c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a0a0a0a08c8c8c8c8c8c8c8c8c8c8c8770
787b7b7b7b7b7b7b7b7b7b7b929292a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f787878
7673737e898c8c8c8c8c8c8c9292929292929292929292929292927e8487878787878787
87878787878787878181816d5c5a57575a657695a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f7f7f7eec1a3a3a3a3a3a3a3a3a0928f8f8f89848989898c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f
8f8f979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9da8a8aeaeaeaeaeaeaeaeaeaeae
aeaeaeaea0958c8787878787878787878787878787878487959595959595959595959797
97979797979797979797979797979797958787848484847e7e7e7e7e7e7e7e7e7e7e7e7e
878989899a9d9d9d9da3a3a3a3a3a3a3a3a3a300008181818181818cabb9c7c7c7c7c7c7
c7c7c7c7c7c7c7c7c7b3b3b3b3b3b3b3a89a928989817676687070707070707070707070
70707078787878787878787878787878787873707b7e7e7e7e7e7e7e7e7e7e7e7e848484
8484848484848484848484848484848181818181818181818181848f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f878c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c89
89898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a08c8c8c8c8c
8c8c8c8c84848470787b7b7b7b7b7b7b7b7b7b7b929292a3a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a58f7878737373737e898c8c8c8c8c8c8c92929292929292929292929292929287
878787878787878787878787878787878181816d5c5a54545a657895a3b1b3b6c7f4f7f7
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7d8bcb6b6b6b6b6b1a8a0928f8f8f89898c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e898f9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a958f8f8f8f979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9da8a8aeaeae
aeaeaeaeaeaeaeaeaeaeaeaea0958c878787878787878787878787878787848795959595
95959595959597979797979797979797979797979797979795878784848484767e7e7e7e
7e7e7e7e7e7e7e7e878989959a9d9d9d9dabababababababababab00008181818181818c
abb1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3abababababababa89a92898981767668707070
707070707070707070707076767676767676767676767676767673707b81818181818181
81818181818484848484848484848484848484848484848181818181818181818181848f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8f8c8c8c8c8c8989898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0
a0a0a08c8c8c8c8c8c8c8c8c81818170787b7b7b7b7b7b7b7b7b7b7b929292a3a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a58f7870737373737e898c8c8c8c8c8c8c9292929292929292
92929292929292928f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878181816d5c5a54545a688495
a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7ebd2c7c7c7bfbcb1a8
a0928f8f8f89898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e848c9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f929292929292929d9d9d9d9d9d9d9d9d9d9d
9d9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0958c87878787878787878787878787
8787848795959595ababababababababababababababababab9797979797979795878784
848484767e7e7e7e7e7e7e7e7e7e7e7e878989959a9d9d9d9daeaeaeaeaeaeaeaeaeae00
008181818181818cabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aeababababababab9d929289
897e68686870707070707070707070707070707070707068657070707070707070707070
7b8c92929292929292929292929292929292928784848484848484848484848181818181
818181818181848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c92929d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5a5a5a5abaeaeaeaeaeaeaeae
aeaeaeaeaeaeaea0a0a0a08c8c8c8c8c8c8c8c8c81818170787b7b7b7b7b7b7b7b7b7b7b
929292a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7873737373737e898c8c8c8c8c8c8c
92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9595959595959595959595959595878181816d
5c5a57575a708495a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4
dbcfcdc7bfbcb1a8a0928f8f8f89898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c7e7e7b819a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8f87878787899d9d9d
9d9d9d9d9d9d9d9d9d9d9da8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0958c8787878787
87878787878787878787848795959595ababababababababababababababababab979797
9797979795878784848484767e7e7e7e7e7e7e7e7e7e7e7e878989959a9d9d9d9daeaeae
aeaeaeaeaeaeae00008181818181818cabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababab
abababa37e78787878786565687076767676767676767676767676767676736865707070
70707070707070707b8c9292929292929292929292929292929292878484848484848484
8484848181818181818181818181848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c92
929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5a5a5a5ab
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0958f8f8c8c8c8c8c8c8c8c8c7b73737078787878
787878787878787878788fa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7876767676767e
898c8c8c8c8c8c8c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595959595959595
9595958781818170625c5c5a5f768495a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a0928f8f8f89898c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c818181819a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8f
87878789a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a0958c878787878787878787878787878787848795959595abababababababababababab
ababababab958f8f8f8f8f8f8f878784818181767e7e7e7e7e7e7e7e7e7e7e7e87898995
9a9d9d9d9daeaeaeaeaeaeaeaeaeae00008181818181818cabb1b3b3b3b3b3b3b3b3b3b3
b3b3b3b3b3aba8a8a8a8a88f7070707070706d6268707676767676767676767676767676
767676767676767070707070707070707b8c929292929292929292929292929292929287
84848484848484848484848181818181818181818181848f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f878c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795
979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeae95898787878787878787878787
6a686d70767676767676767676767676767684a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
8f7876767676767e898c8c8c8c8c8c8c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9595
95959595959595959595958781818178706d6d6565768495a3b1b3b6c7f4f7f7f7f7f7f7
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a0928f8f8f89898c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848484849a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a958f8f8f8f8f8f84818489a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8aeaeaeaeaeaeae
aeaeaeaeaeaeaeaea0958c878787878787878787878787878787848795959595abababab
ababababababababababababab958787878787878787877e737676767e7e7e7e7e7e7e7e
7e7e7e7e878989959a9d9d9d9daeaeaeaeaeaeaeaeaeae00008181818181818cabb1b3b3
b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a3897673707070706d656870767676767676
7676767676767676767676767676767070707070707070707b8c92929292929292929292
9292929292929287848484848484848484848478767878787878787e7e7e848f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f878c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c
8c8c8c8989898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8f81818181
818181818181817e62656d707070707070707070707076767b81849aa3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a38f7878787878787e898c8c8c8c8c8c8c92929d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a95959595959595959595959595878181817e7e7e7e7e787e8495a3b1b3b6
c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a0928f8f
8f89898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848484849a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a958f8f8f8f8f8f84788189a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8787878787878787878787878787878487
95959595ababababababababababababababababab958787878787878787878170787878
7e7e7e7e7e7e7e7e7e7e7e7e878989959a9d9d9d9daeaeaeaeaeaeaeaeaeae0000818181
8181818cabb1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a3928773707070706d68
6a707676767676767676767676767676767676767676767070707070707070707b8c9292
929292929292929292929292929292878484848484848484848484706d7878787878787b
7e81848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c92929d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeae
aeaeae8f87878787878787878787817862686d707070707070707070707076767b818497
979797979797979797979797979797978f7878787878787e898c8c8c8c8c8c8c92929d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595959595959595959595878184848484848484
84848495a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7
bfbcb1a8a09289898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8484
84849a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8f84787e89a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9d9795959595958c878787878787878787
878787878787848795959595ababababababababababababababababab928c8c8c8c8c8c
8c8c8c8c767878787e7e7e7e7e7e7e7e7e7e7e7e878989959a9a9d9d9daeaeaeaeaeaeae
aeaeae00007070707070818ca5abb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a392
8c73707070706d6a76767676767676767676767676767676767676767676767070707070
707070707b8c929292929292929292929292929292929287848484848484848484848470
6d78787878787e7e7e87898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878c8c929d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5a5a5a5abaeaeaeae
aeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a581706a6a6a6a6a6a6a6a6a6a6a6a
6a7376767b81848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7878787878787e898c8c8c
8c8c8c8c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9595959595959595959595959587
818484848484848484848495a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7
f7f7f7f4dbcfcdc7bfbcb1a8a09284848989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c848484849a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8f847b7b89
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3929292929292929292929292928c8c8c8c8c8c87
8787878787878787878787878787848795959595abababababababababababababababab
ab8f8f8f8f8f8f8f8f8f8f8f7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e878989959a9a9d9d
9daeaeaeaeaeaeaeaeaeae00005a5a5a5a5a5f7387a0b3b3b3b3b3b3b3b3b3b3b3b3b3b3
b3aba8a5a3a3a3928c737076767676767676767676767676767676767676767676767676
7676767070707070707070707b8c92929292929292929292929292929292928989898989
84848484848484706d78787878787e7e7e8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f877b81929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5
a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababababababababa5817676767676
7676767676767676737376767b8184878787878787878787878787878787878787787878
7878787e898c8c8c8c8c8c8c92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a959595959595
959595959595958c878787878787878787878795a3b1b3b6c7f4f7f7f7f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a09281818989898c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c897e7e848484848484848484979797979797979797979797979797958f8f
8f8f8f8f89898989a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3959292929292929292929292
928c8c8c8c8c8c878787878787878787878787878787848795959595abababababababab
abababababababababa09a9a95959595959595958c898989898989898989898989817e7e
878989959a9a9a9a9aaeaeaeaeaeaeaeaeaeae00004e4e4e4e4e546581a3b3b3b3b3b3b3
b3b3b3b3b3b3b3b3b3aba8a5a3a3a3928c73707676767676767676767676767676767676
7676767676767676767676707070707070706d707b8c9292929292929292929292929292
929292898989898981818181818181706d78787878787e7e7e8c8c8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f87787e929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c89
89898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababababababab
aba88f898989898989897b7b7b7b7b7b7b7b76767b818487878787878787878787878787
87878787877878787878787e81818181818181818c929d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a959595959595959595959595958c8c8c8c8c8c8c8c8c8c8c8995a3b1b3b6c7f4f7f7
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a08c787e8989898c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c89707e84848484848484848489898f8f8f8f8f8f8f8f
8f8f9595959595959595959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395929292
9292929292929292928c8c8c8c8c8c878787878787878787878787878787848795959595
abababababababababababababababababababa895959595959595958f8f8f8f8f8f8f8f
8f8f8f8f8f817e7e878989959a9a9a9a9aaeaeaeaeaeaeaeaeaeae000040404040464e62
81a3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a3928c7370767676767676767676
767676767676767676767676767676767676767070707070707070707b92929292929292
929292929292929292929289898989897b7b7373737373706d78787878787e7e7e8c8c8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878189929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8f8c8c8c8c8c8989898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab
abababababababababa8a0a0a0a0a0a0a08c7b7b7b7b7b7b7b7b76767b81848787878787
8787878787878787878787878778787878787878787878787878767881929d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a959595959595959595959595958c8c8c8c8c8c8c8c8c8c8c8995
a3abababbfe9f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8
a084737e8989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c897b848484848484848484848484
84878f8f8f8f8f8f8f8f979d9d9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3
a3a3a3a3959292929292929292929292928c848484848484848484848481848484848484
8484848795959595abababababababababababababababababababab9595959595959595
8f8f8f8f8f8f8f8f8f8f8f8f8f817e7e878989959a9a9a9a9aaeaeaeaeaeaeaeaeaeae00
003e3e3e3e3e465a81a3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a3928c737076
767676767676767676767676767676767676767676767676767676707373737373737373
8192929292929292929292929292929292929289898989897b706a6d6d6d6d6d6d787878
78787e7e7e8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c929d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d8f8c8c8c8c8c8989898795979797a5a5a5a5abaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeababababababababababa8a8a8a8a8a8a8a88c7b7b7b7b7b7b7b7b7676
7b8184878787878787878787878787878787878787787878787878787878787878787376
7b929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a959595959595959595959595958c8c8c8c8c
8c8c8c8c8c8c8995a3abababbfe0f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4
dbcfcdc7bfbcb1a8a084737e8989898c8c8c8c8c8f8f8f8f8f8f8f8f9292929292929292
92929292929292928f8c8f8f8f8f8f8f8f8f979d9d9d9d9d9d9da5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a3a3a3a3a3a3a3959292929292929292929292928c8c8c8c8c8c8c8c8c8c8c
8c898989898989898181818181817e8cabababababababababababababababababababab
95959595959595958f8f8f8f8f8f8f8f8f8f8f8f8f817e7e878989959a9a9a9a9aaeaeae
aeaeaeaeaeaeae00003e3e3e3e3e435781a3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5
a3a3a3928c73707676767676767676767676767676767676767676767676767676767670
76787b7e8484878995959595959595959595959595959595959595898989898976737373
737373737378787878787e7e7e8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f929797979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f89898989898989898795979797a5a5a5a5ab
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababababababababa8a8a8a8a8a8a8a88c7b7b
7b7b7b7b7b7b76767b818487878787878787878787878787878787878778787878787878
78787878787873767b929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595959595959595
9595958c8c8c8c8c8c8c8c8c8c8c8995a3abababbccff4f7f7f7f7f7f7f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a0847e7e8989898c8c8c8c8c8f8f8f8f8f8f8f8f
929292929292979797979797979797979797979797978f8f8f8f97a3abababababababab
ababababababababababababa5a3a3a3a3a3a3a395929292929292929292929797979797
9797979797979797979797979797958c8181818181787b8cabababababababababababab
abababababababab95959595959595958f8f8f8f8f8f8f8f8f8f8f8f8f817b7e87898995
9a9a9a9a9aaeaeaeaeaeaeaeaeaeae00003e3e3e4343435781a3b3b3b3b3b3b3b3b3b3b3
b3b3b3b3b3aba8a5a3a3a3928c7370767676767676767676767676767676767676767676
767676767676767076787b7e848487979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a89
8989898989898989898989898978787878787e7e7e8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f929797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c89898989898795
979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababababababababa8a8a8
a8a8a8a8a88c7b7b7b7b7b7b7b7b76767b81848484848484848484848484848484818181
817878787878787878787878787873767b929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9595
95959595959595959595958c8c8c8c8c8c8c8c8c8c8c8995a3abababaeb3ddf7f7f7f7f7
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a0847e7e8989898c8c8c8c8c
8f8f8f8f8f8f8f8f929292929292979797979797979797979797979797978f8f8f8f97a3
abababababababababababababababababababababa5a5a5a3a3a3a39592929292929292
92929297979797979797979797979797979797979797958c7e7b7b7b7070848cabababab
abababababababababababababababab959595959595959595959595959595928f8f8f8f
8f817b7e818189959a9a9a9a9aaeaeaeaeaeaeaeaeaeae00003e3e3e4349495781a3b3b3
b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a3928c737076767676767676767676767676
7676767676767676767676767676767076787b7e84848797a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a0a0a09a898989898989898989898989898978787878787e7e7e8c8c8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f929797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c
8c89898989898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababab
abababababa8a8a8a8a8a8a8a88c7b7b7b7b7b7b7b7b73767b8181818181818181818181
818181817b707378787878787878787878787878787873767b929d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a959595959595959595959595958c8c8c8c8c8c8c8c8c8c8c89959d9d9d9d
9d9dbfebf7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7bfbcb1a8a0847e7e
8989898c8c8c8c8c8f8f8f8f8f8f8f8f9292929292929797979797979797979797979797
97978f8f8f8f97a3abababababababababababababababababababababababa5a3a3a3a3
959292929292929292898c979797979797979797979797979797979797979595958c8176
70768c8cabababababababababababababababababababab959595959595959595959595
959595928f8f8f8f8f8c897b70737b959a9a9a9a9aaeaeaeaeaeaeaeaeaeae00003e3e3e
43494c5781a3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a3928c73707676767676
76767676767676767676767676767676767676767676767076787b7e84848797a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a0a0a09a898989898989898989898989898978787878787e7e
7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c929797979797979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d8f8c8c8c89898989898795979797a5a5a5a5abaeaeaeaeaeaeaeaeaeaeb3b3
b3b3b3b3b3b3b3b3b3b3b3b3b3a8a8a8a8a8a8a8a88f7e7e7e7e7e7e7e7e7b8c95959595
9595959595959595959595847b707378787878787878787878787878787873767b929d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a959595959595959595959595958c8c8c8c8c8c8c8c8c
8c8c898c929297979797a8d2f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4dbcfcdc7
bfbcb1a8a0847e7e8989898c8c8c8c8c8f8f8f8f8f8f8f8f929292929292979797979797
979797979797979797978f8f8f8f97a3abababababababababababababababababababab
abababa5a3a3a3a3959292929292929292898c9797979797979797979797979797979797
97979595958c8c8978898c8cabababababababababababababababababababab95959595
9595959595959595959595928f8f8f8f8f8c8c876d707b959a9a9a9a9aaeaeaeaeaeaeae
aeaeae00003e3e3e43494e5781a3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aba8a5a3a3a392
8c736d767676767676767676767676767676767676767676767676767676767076787b7e
84848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a095959595959595959595958c89
8978787878787e7e7e9292929292929292929292929292928c8c929797979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c89898989898795979797a0a0a0a5abaeaeaeae
aeaeaeaeaeaebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b3977e898c8c8c8c
8c8c8c95959595959595959595959595959595847b707378787878787878787878787878
787873767b929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a959595959595959595959595958c
8c8c8c8c8c8c8c8c8c8c8989848795979797a8c4e9f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7
f7f7f7f4dbcfcdbfb9b9b1a8a0847e7e84848484848484898f8f8f8f8f8f8f8f92929292
9292979797979797979797979797979797978989898c97a3abababababababababababab
abababababababababababa5a3a3a3a3958c8c9292929292929292979797979797979797
979797979797979797979595958c8c8c878c8c8cabababababababababababababababab
abababab959595959595959595959595959595928f8f8f8f8f8c8c8c76767b959a9a9a9a
9aaeaeaeaeaeaeaeaeaeae00003e3e3e4349515a78a3b3b3b3b3b3b3b3b3b3b3b3b3b3b3
b3a8a8a5a3a3a3928c737076767676767676767676767676787878787878787878787878
7878787076787b7e84848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a09595959595
9595959595958c898976737878787e7e7e9292929292929292929292929292928c8c9297
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8c8c8c8989898989878989898989
8989a5abaeaeaeaeaeaeaeaeaeaebcc1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1a38c898c8c8c8c8c8f9595959595959595959595959595959595847b70707878787878
7878787878787878787873767b929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959595959595
959595959595958c8c8c8c8c8c8c8c8c8c8c8c8c848795979797a8c4d8f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f7f7f7f7e3c4c1b9aeabababa8a0847e7e7e7e7e6d6d737e898f8f8f8f
8f8f8f8f9292929292929797979797979797979797979797979784817b8ca0ababababab
abababababababababababababababababababa5a3a3a3a3958989a0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a39a979797979797979595958c8c8c8c8c8c8cabababababababab
abababababababababababab959595959595959595959595959595928f8f8f8f8f8c8c8c
877e7e959a9a9a9a9aaeaeaeaeaeaeaeaeaeae00003b3b3b434e5c657ba3b3b3b3b3b3b3
b3b3b3b3b3b3b3b3b3a5a5a5a3a3a3928c7e7e7e7e7e7e7e7e7e7e7e787676767e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7878787b7e84848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0
a0a0a095959595959595959595958c8989765f6265767e7e7e9292929292929292929292
929292928c8c92979797979797979797979797979797979797979797978f8c8c8c898989
8989878787878787736a8cabaeaeaeaeaeaeaeaeaeaebcc4c4c4c4c4c4c4c4c4c4c4c4c4
c4c4c4c4c4c4c4c4c4c4b3a3a09a9a9a8c8f959595959595959595959595959595959584
737068787878787878787878787878787878737370708495959595959595959595959595
95959595959595958f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c8c8c848795979797a8c4
d8eef7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7dbb9b3aba09797979797847e7e7e7e7e6a
65737e898f8f8f929292929292929292929297979797979797979797979797979797847b
7895abababababababababababababababababababababababababa5a3a3a3a3958989a0
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979797979797979595958c8c8c8c8c8c8c
abababababababababababababababababababab95959595959595959595959595959592
8f8f8f8f8f8c8c8c8c7e7e959a9a9a9a9aa3a3a3a3a3a3a3a3a3a3000040404043516a78
95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3928c8484848484848484848484
7876767687898989898989898989898989898989847e7b7e84848797a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a0a0a0a095959595959595959595958c8989765c6270787e7e7e929292
9292929292929292929292928c8c92979797979797979797979797979797979797979797
978f8c8c8c8989898989878787878784624e5a78929292929292929da3a8bcc4c4c4c4c4
c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4bca39a9a9a8f9595959595959595959595
959595959595958f7065657878787878787878787878787878787373686276878c8c8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
848795979797a8c4d8e0e0e9f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7dbb9b3aba08c8c8c8c
8c847e7e7e7e7e6d62737e898f8f8f929292929292929292929297979797979797979797
97979797979784787e97abababababababababababababababababababababababababa5
a3a3a3a3958989a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979797979797979595
958c8c8c8c8c8c8cabababababababababababababababababababab9595959595959595
95959595959595928f8f8f8f8f8c8c8c8c8481959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a00
004949494c5a789595a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d928c848484
84848484848484847876767687979797979797979797979797979797928f817e84848797
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a095959595959595959595958c898978656d
76787e7e7e9292929292929292929292929292928c8c9297979797979797979797979797
9797979797979797978f8c8c8c89848484848484848484845c43434962737373737e899d
a3a8bcc4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4ae9a9a9a9a9a9a9a
9a9a9a95959595959595959595959595785f5f7878787878787878787878787878787373
655a6573848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c848795979797a8c4c4c4c4c4e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9db
b9b3aba08c8c8c8c8c847e7e7e7e7e736d787e898f8f8f92929292929292929292929797
979797979797979797979797979784788497abababababababababababababababababab
abababababababa5a3a3a3a3958989a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a97
9797979797979595958c8c8c8c8c8c8cabababababababababababababababababababab
959595959595959595959595959595928f8f8f8f8f8c8c8c8c8481959595959595959595
9595959595958f0000545454545f879595a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c
8c8c8c8c8c84848484848484848484847876767687979797979797979797979797979797
97978c8484848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0959595959595959595
95958c898978787876787e7e7e929292929292929292929292929292898c929797979797
97979797979797979797979797979797978f8c8c8c877373737373737373737054403b38
3b43545a6276899da3a8bcc4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4
ae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595815f5c707373737373737373
7373737373737373655a5c70848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848795979797a8abababababcadbdbdbdbdbdbdb
dbdbdbdbdbdbdbdbb9b3aba08c8c8c8c8c8481818181818181817e898f8f8f9292979797
979797979797979797979797979797979797979797977e7b8c9dabababababababababab
abababababababababababababababa5a3a3a3a3958989a0a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a59a979797979797979595958c8c8c8c8c8c8cabababababababababababab
abababababababab959595959595959595959595959595928f8f8f8f8f8c8c8c8c848195
95959595959595959595959595957e00006565656568899595a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5878484848484848484848484848484848484787676768797979797979797
979797979797979797978c8484848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a095
959595959595959595958c898978787876787e7e7e929292929292929292929292929292
899597979797979797979797979797979797979797979797978f8c8c8c87707070707070
7070684c40403b3530323b4657738f9d9da3bccacacacacacacacacacacacacacacacaca
cacacacacacacacaae9a9a9a9a9a9a9a9a9a9a9595959595959595959595959581625f68
737373737373737373737373737373736a6a6a7b848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848795979797a8a8a8a8a8a8
bcdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbb9b3aba08c8c8c8c8c8787878787878787877e89
8f8f8f929297979797979797979797979797979797979797979797979797878797a8abab
abababababababababababababababababababababababa5a3a3a397958989a0a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0979797979797979595958c8c8c8c8c8c8cabababab
abababababababababababababababab9a9a9a9a9a9a9a9a9a959595959595928f8f8f8f
8f8c8c8c8c8481818181817b6d6d6d626d6d6d6d6d6d6d00007878787878979797a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a59276768184848484848484848484848484848478767676
8797979797979797979797979797979797978c8989848797a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a0a0a0a095959595959595959595958c898978787876787e7e7ea0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09a9a9a9a9a9a9a97979797979797979797979797978c8c8c8c8c8c8c
8c87787676767676766d4935353535353538383e517092abaeaebccfcfcfcfcfcfcfcfcf
cfcfcfcfcfcfcacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a959595959595959595
95959595816d6d655c5c5c5c5c5c5c5c5c5c5c5f787b7b7b7b7b7b7b848c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e787b81
8997a8a8a8a8a8a8bcd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2b9b3aba08c8c8c8c8c878787
8787878787877e898f8f8f92929797979797979797979797979797979797979a9a9a9a9a
9a9a9a9dabababababababababababababababababababababababababababa595958c7e
7b8484a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979595958c8c8c
8c8c8c8c9aa5abababababababababababababababababab9a9a9a9a9a9a9a9a9a959595
959595928f8f8f8f8f8c8c8c8c8481818181817b6d6d5a464c4c4c4c4c4c4c00009a9a9a
9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877373818484848484848484848484
8484848478767676879797979797979797979797979797979797979289848797a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a0a0a0a095959595959595959595958c898978787876787b7b
81a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a97979797979797979797979797
978c8c8c8c8c8c8c8c878484848484848476433235353535353b3b3e4e6d95c4dddddddd
ddddddddddddddddddddddddd8d5cacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a95
959595959595959595959595847873655c5c5c5c5c5c4e4646545a5f787b7b7b7b7b7b7b
848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c7e736d788797a8a8a8a8a8a8bcd2d2d2d2d2d2d2d2d2d2d2d2d2d2d2b9b39d9d
8c8c8c8c8c8787878787878787877e898f8f8f9292979797979797979797979797979797
979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6aeaeaeaeaeaeaeaeaeab
abababa592897b70707884a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9a979595958c8c8c8c8c8c8c92a0abababababababababababababababababab9a9a9a9a
9a9a9a9a9a959595959595928f8f8f8f8f8c8c8c8c8481818181817b6d684c4349494949
49494900009a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5816d7081848484
848484848484848484848484787376768797979797979797979797979797979797979797
89848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a095959595959595959595958c89
89787878767881899aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a9797979797
9797979797979797978c8c8c8c8c8c8c8c87848484848484848468463b3b3b3835404040
4e709dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacacacacacacaae9a9a9a
9a9a9a9a9a9a9a95959595959595959595959595877e73655c5c5c5c5c463e3e3e49575f
787b7b7b7b7b7b7b848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c7e7e7e8495a8a8a8a8a8a8a8bcc4c4c4c4c4c4c4c4c4c4c4
c4c4c4c4b99d898989898989898787878787878787877e898f8f8f929297979797979797
9797979797979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6aeae
aeaeaeaeaeaeaeababababa58c817b73737381a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59a979595958c8c8c8c8c8c8c929dabababababababababababababab
abababab9a9a9a9a9a9a9a9a9a959595959595928f8f8f8f8f8c8c8c8c8481818181817b
6d5a514c5151515151515100009a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a57b7076818484848484848484848484848484847b6d7076879797979797979797979797
979797979797979789848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a09595959595
9595959595958c89897878787884959da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3
a09a9a97979797979797979797979797978c8c8c8c8c8c8c8c8784848484848484847849
3b3b3b383540434665929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacaca
cacacacaae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595877e73655c5c5c5c
4c403b3b3b49545f787b7b7b7b7b7b7b848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878c9aa5a8a8a8a8a8a8a8a8b9b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b389818787878787878787878787878787877e898f8f8f92
92979797979797979797979797979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1ababababa58c817b73767889a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979595958c8c8c8c8c8c8c929dabababababab
abababababababababababab9a9a9a9a9a9a9a9a9a959595959595928f8f8f8f8f8c8c8c
8c8481818181817b625a5c5c6262626262626200009a9a9a9a9a9d9d9da5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5817b7b818484848484848484848484848484847b6d687687979797
9797979797979797979797979797979789848797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0
a0a0a095959595959595959595958c89897878788195959da5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a3a3a3a09a9a97979797979797979797979797978c8c8c8c8c8c8c8c878484
84848484848478493b3b3b383540435178929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
d8d5cacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595
877e73655c5c5c5449403b3b3e49545f787b7b7b7b7b7b7b848c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878c9aa8a8a8a8a8
a8a8a8a8b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3a8897e87878787878787878787878787
87877e898f8f8f9292979797979797979797979797979797979797aeaeaeaeaeaeaeaeb6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1ababababa58c817b73767889ab
ababababababababababababababababababababababa5a59a979595958c8c8c8c8c8c8c
929da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a9a9a9a95959595959592
8f8f8f8f8f8c8c8c8c8481818181818181786d6a7b7b7b7b7b7b7b00009a9a9a9a9a9d9d
9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595929292929292928c84848484848484848484
7b6d6d7e879797979797979797979797979797979797979789848797a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a0a0a0a095959595959595959595958c89897e7e7e8795959da5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a97979797979797979797979797978c8c8c
8c8c8c8c8c87848484848484848478493b3b3b3835404c5a7b929dcae6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6d8d5cacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a9595959595
9595959595959595877e73655c5c5a5449403b3b49545c687b7b7b7b7b7b7b7b848c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
878c9aa8a8a8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea88c7e8787878787
878787878787878787877e898f8f8f9292979797979797979797979797979797979297ae
aeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1ababababa5
8c817b73767889abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a59a979595
958c8c8c8c8c8c8c929da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a
9a9595959595958c8c8c8c8c8c8c8c8c8c84848484848484848484738181818181818100
009a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595959595959595958c8484
84848484848484847b78787e879797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d89848795
95a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095959595959595959595958c8484848484
8795959da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a979797979797979797
97979797978c8c8c8c8c8c8c8c87848484848484848478513e3b3b38354057627e929dca
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacacacacacacaae9a9a9a9a9a9a9a
9a9a9a95959595959595959595959595877e76655c5c574e46403b3b4e62707b7b7b7b7b
7b7b7b7b848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c878c9aa8a8a8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a895848787878787878787878787878787877e7e7e848f92929797979797979797979797
97979797978f97aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b1ababababa58c817b73767889abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1aea5a59a8c8c8c8c8c8c8c8c8c8c8c929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a959595959595929292929292929292929292929292929292928473
8181818181818100009a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959595
95959595958c848484848484848484847b78787e87979797b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b19d8984879595a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959595959595959595
95958c7e7e9292959595959da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a97
979797979797979797979797928787878787878787878484848484848484786d54463e3b
3e495c6a8c929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacacacacacaca
ae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595877e786a655f4e433b32303b
51707b7b7b7b7b7b7b7b7b7b848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878c9aa8a8a8a8a8a8a8a8a8aeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea8a8929292929292928f878787878787878778787e848f9292979797
979797979797979797979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b1ababababa58c817b73767889abababababababb1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1aea5a59a8c8c8c8c8c8c8c8c8c8c8c929a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95959595959592929292929292929292929292
92929292929284738181818181818100009a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a595959595959595958c848484848484848484847b78787e87979797b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b19d8984879595a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095959595
959595959595959595958c7e7e9595959595959da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a3a3a3a09a9a9797979797979797979797979787878787878787878787848484848484
8484787870574e49494e5c7392929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5caca
cacacacacacacacaae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595877e7e73
6a5f544c40323243627b7b7b7b7b7b7b7b7b7b7b848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878c9aa8a8a8a8a8a8a8a8a8
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a09595959595958f87878787878787877b78
7e848f9292979797979797979797979797979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1ababababa58c817b73767889ababababab
ababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a59a8c8c8c8c8c8c8c8c8c8c8c929a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9595959595959292929292
929292929292929292929292929284738181818181818100009a9a9a9a9a9d9d9da5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a595959595959595958c848484848484848484847b78787e
87979797b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d8984878f959a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a8989898989898989898989898989897e7e9595959595959da5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a3a3a3a09a9a9797979797979797979797978c8484848484848484
84848484848484848484787873625a57575a6d8492929dcae6e6e6e6e6e6e6e6e6e6e6e6
e6e6e6e6d8d5cacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a959595959595959595
95959595877e7e7e7362626257464c6a767b7b7b7b7b7b7b7b7b7b7b848c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8484848484848484848484848484878c9aa8
a8a8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a39595959595958f8787
878787878787878181848f9292979797979797979797979797979797979797aeaeaeaeae
aeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1ababababa58c817b73
7b7b89abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a59a8c8c8c8c8c8c8c
8c8c8c8c92979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959595
9595959292929292929292929292929292929292929284738181818181818100009a9a9a
9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595959595959595958c848484848484
848484847b78787e87979797b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d897e7884959a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e9595959595959d
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a97979797979797979797979787
7e8484848484848484848484848484848484787873686268686d848c92929dcae6e6e6e6
e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a95
959595959595959595959595877e7e7e7e6a6a6a6a5f6d78787b7b7b7b7b7b7b7b7b7b7b
8489898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84848484848484848484
84848487878c9aa8a8a8a8a8a8a8a8a8ababababababababababababababababa8a8a895
95959595958f878787878787878787818184878f92979797979797979797979797979797
979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1ab
abababa58c817b73818189abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a5
9a8c8c8c8c8c8c8c8c8c8c8c84898f8f8f8f8f8f8f929595959a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a958f8484848f92929292929292929292929292929292929292847e81818181
81818100009d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9595959595959595959595
958c7b7b7b7b7b7b7b7b7b7b7b78787e87979797b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d
897e707e959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c78
7b9595959595959da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a09a9a9797979797
97979797979797878484848484848484848484848484848484847878736d6d7b7b818c8c
92929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacacacacacacaae9a9a9a
9a9a9a9a9a9a9a95959595959595959595959595877e7e7e7e7e767b7b7b848484848484
848484848484848484898989898989898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e7e
7e7e7e7e7e7e7e7e7e7e8187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a89a9a9a9a9a9a8f8787878787878787878181817e818f97979797979797
9797979797979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b1ababababa58c817b73818189abababababababb1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1aea5a59a8c8c8c8c8c8c8c8c8c8c8c787e87878787878787878795959a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a95816d70788f9292929292979797979797979797979797
979797928181818181818100009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0979595
9595959595959595958c7b7b7b7b7b7b7b7b7b7b7b78787e87979797b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b19d897b6d7b959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c7b7e9595959595959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3
a09a9a9797979797979797979797978c8c8c8c8c8c8c8c84848484848484848484847878
736d767b7b818c8c92929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5cacacacacaca
cacacacaae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595877e7e7e7e7e7e7e
7e898989898989898989898989898989848484848989898f959595959595959595959595
959595928c8c84848484848484848484847e8187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a8f8787878787878787878181817e7b
84979797979797979797979797979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1a3a3a3a3a37e706a73818189abababababababb1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a59a8c8c8c8c8c8c8c8c8c8c8c7b7b818181818181
81818181899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a957b6a6a7b8f929292929297979797
9797979797979797979797928181818181818100009da0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a09795959595959595959595958c7b7b7b7b7b7b7b7b7b7b7b78787e87979797
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d8973707e959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87879595959595959da8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a3a3a3a09a9a9797979797979797979797978c8c8c8c8c8c8c8c8484848484
84848484848478787870787b7b818c8c92929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6
d8d5cacacacacacacacacacaae9a9a9a9a9a9a9a9a9a9a95959595959595959595959595
877e7e7e7e87878787898989898989898989898989898989847b7b7b8489898f97979797
9797979797979797979797928c8c84848484848484848484847e8187878c9aa8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d9d9d9d9d8c8c8c8c8c8c
8c8c8c8c8c8c878484979797979797979797979797979797979797aeaeaeaeaeaeaeaeb6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1a0a0a0a0a08f787073818189ab
ababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a59a8c8c8c8c8c8c8c8c8c8c8c
878787878787878787878787899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a957b70767e8f92
92929292979797979797979797979797979797928181818181818100009da0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a09795959595959595959595958c7b7b7b7b7b7b7b7b7b7b
7b78787e87979797b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d8973767e8997979797979797
97979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c9595959595959da8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a09a9a9797979797979797979797979292929292
92929284848484848484848484847b7b7b7b7b7b7b818c8c92929dcae6e6e6e6e6e6e6e6
e6e6e6e6e6e6e6e6d8d5cabcbcbcbcbcbcbcbcbcae9a9a9a9a9a9a9a9a9a9a9595959595
9595959595959595877e7e7e7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989847b7b7b
8489898f979797979797979797979797979797928c8c8484848484848484848484818187
878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5
a5a5a5a3a3a3a3a3a3a39d9d9d92898989979797979797979797979797979797979797ae
aeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6aeaea5a0a0
a08f877e818189abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea5a59a8c8c8c
8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a957b7b7b7e8f9292929292979797979797979797979797979797928181818181818100
009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09795959595959595959595958c7b7b
7b7b7b7b7b7b7b7b7b78787e87979797b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d89737b7e
849292929292929292929292929292928c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c959595
9595959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a09787878787878c9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d84848484848484848484848181818181817b818c8c92929dca
e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8d5b3a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a92
9292928f8c8c8c8c8c8c8c8c8c8c8c8c877e7e7e7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8989847b7b7b8489898f979797979797979797979797979797928c8c848484848484
8484848484818187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3958f899797979797979797979797
97979797979797aeaeaeaeaeaeaeaeb6b6b6b6b6b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbf
bfbfbfbfb6a5a0a0a09a8c7e818189abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1aea39d9a8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c818c9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a957b7b7b7e8f929292929297979797979797979797979797979792
8181818181818100009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097959595959595
95959595958c7b7b7b7b7b7b7b7b7b7b7b78787e87979797b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b19d89737b7e819292929292929292929292929292928c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c9595959595959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a08f8484
8484848c9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8484848484848484848484818181818181
7b818c8c92929dcae6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6d8b1a09d9d9d9d9d9d9d9d9d
9d9a9a9a9a9a95929292928f878787878787878787878787877e7e7e7e8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8989847b7b7b8489898f97979797979797979797979797979792
8c8c8484848484848484848484818187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a39589979797
979797979797979797979797979797abababababababababababaeb1b6b6b6b6b9bfbfbf
bfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a09a8c7e818189abababababababb1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1ae8f8787878787878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c
898f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a957b7e7e7e8f92929292929797979797979797
97979797979797928181818181818100009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a09795959595959595959595958c7b7b7b7b7b7b7b7b7b7b7b78787e87979797b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b19d89737b7e818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c9595959595959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a89d9d9d927e7e7e7e7e7e8c9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d787b84848484848484
84848484848484847b818c8c92929dcad5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5c7ab9597
97979797979797979797979797978f8f8f8f8f8f8781817e7e7e7e7e7e7e7e7e7e7e7e7e
7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989847b7b7b8181898f9797979797979797
97979797979797928c8c8484848484848484848484818187878c9aa8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3
a3a3a39d8995979797979797979797979797979797979797979797979797979797979db1
b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a09a8c7e818189ababababab
ababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae8c84847878787b8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b7e7e7e8f9292929292
979797979797979797979797979797928181818181818100009da0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a09795959595959595959595958c7b7070707076787878787878787e
878c8c97b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d89737b7e818c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c95959595959597a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89d9d9d8c76787e7e7e7e8c9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d87
8484848484848484848484848484848481818c8c92929dcad2d2d2d2d2d2d2d2d2d2d2d2
d2d2d2d2c7ab928c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8781818181818181
81818181818181817e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989847b7b7b7e7e898f
979797979797979797979797979797928c8c8484848484848484848484818187878c9aa8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a3
a3a3a3a3a3a3a3a3a3a3a39d8f9597979797979797979797979797979797979797979797
97979797979795a8b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a09a8c7e
818189abababababababb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae8c8c8c7e78787b8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88c7b7e
7e7e8f9292929292979797979797979797979797979797928181818181818100009da0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09795959595959595959595958c7b686d6d6d76
787878787878787e7e7e7e97b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d89737b7e81878787
87878787878787898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c95959595959a9a
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d8f78737e7e7e7e8c9da0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09592929292928f84848484848484848484848c8c92929dc7c7c7c7c7
c7c7c7c7c7c7c7c7c7c7c7c7c7ab92898989898989898989898989898987878789898989
898989898989898989898989898981817e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989
847b7b7b8484898f979797979797979797979797979797928c8c84848484848484848484
84818187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8abababababababab
abababababababababababababababababa8a89d9a9a9a9a9a9a9a9a9a9a9a9a9a979797
979797979797979797979797979795a3b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbf
b6a5a0a0a09a8c7e818189a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae8c8c
8c8c78737b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a892878787878f92929292929797979797979797979797979797979281818181
81818100009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09795959595959595959595
958c7b5c4e57687678787878787878787878788fb1b1b1b1b1b1b1b1b1b1b1b1b1b1b19d
81737b7e8181818181818181818181899292929292929292929292929292929292929292
9295959595959a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d8f7b73818f8f8f92
9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a09797979797978f84848484848484848484848c8c
92929da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39289898989898989898989898989
897b7e8495959595959595959595959595959595958981817e8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8989847b7b7b8484898f979797979797979797979797979797928c8c8484
848484848484848484818187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a89d9d9d9d9d9d9d9d9d
9d9d9d9d9d979797979797979797979797979797979795a3b6b6b6b6b9bfbfbfbfbfbfbf
bfbfbfbfbfbfbfbfb6a5a0a0a0a09d8c8787899d9d9d9d9d9d9d9daeaeaeaeaeaeaeaeae
aeaeaeaeaeae8c8c8c8c8c81818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c929d9da0a3a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8928f8c8c8c8f9292929292979797979797979797979797
97979792817b7b7b7b7b7b00009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097958f
8f8f8f8f8f8f8f8f8f8c6d493540577676767676767676767676788fb1b1b1b1b1b1b1b1
b1b1b1b1b1b1b19d81737b7e7e7e7e7e7e7e7e7e7e7e7e89979a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a929292929295959595959a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d
8f847b879d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a09797979797978f8484848484
8484848484848c8c92929292929292929292929292929292929292929292928787878787
8787878787878787847378849a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8981817e8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989847b7b7b8484898f979797979797979797979797
979797928c8c8484848484848484848484818187878c9aa8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8
a09d9d9d9d9d9d9d9d9d9d9d9d929297979797979797979797979797979795a3b6b6b6b6
b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a0a09d958989878787878787878787a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a095959595959595959595959595959595958f8f8f8f8f
8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f8c8c8c8f929292929297979797
9797979797979797979797928178787878787800009da0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a09795898989898989898989625a493b3238577676767676767676767676788f
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d81737b7e7e7e7e7e7e7e7e7e818184959a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a929292929295959595959a9aa8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a89d9d9d8f848492a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a097979797
97978f84848484848484848484848c8c9292929292929292929292929292929292929292
92928984848484848484848484848484847676849a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a898181848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989847b7b7b8484898f97979797
9797979797979797979797928c8c8484848484848484848484818187878c9aa8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1
b1b1b1b1b1a8a8a8a09d9d9d9d9d9d9d9d9d9d9d9d8f7e95959595959595959595959595
959595a3b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a0a09d958f8c8789
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a958f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8c8c8c8c84
847e879297979797979797979797979797979792897b787878787800009da0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a09795898787878787878773464032323238517676767676
767676767676788fa8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d81737b7e7e7e7e7e7e7e7e7e
81929da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a929292929292929292929a9aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d8f848492a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a3a09797979797978f84848484848484848484848c8c8c8f92929292929292929292
929292929292929292928989898989898484848484848484878787879a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a898181848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898478767b
8484898f979797979797979797979797979797928c8c8484848484848484848484818187
878c9aa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8a09d9d9d9d9d9d9d9d9d9d9d9d958c8c8c8c8c8c
8c8c8c8c8c898c95959595a3b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0
a0a09d958f8f8789959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95958c979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a89a8f8c8c8c8c848481899597979797979797979797979797979797978f818181818100
009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0979587848484848484846a46352a30
32323b5a76767676767676767676788fa8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a81737b7e
7e7e7e7e7e7e7e7e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a929292929292928f
89899a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d8f848492a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a3a09797979797978f84848484848484848484848c8c8f8f9292
92929292929292929292929292929292929289898989898984848484848484848c8c8c8c
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898181848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8989847876848484898f979797979797979797979797979797928484848484848484
8484848484818187878c95959aa5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8a09d9d9d9d9d9d9d9da5a5a5
a5a5a5a5a5a5a5a5a5a5a5a59d7e8795959595a3b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbf
bfbfbfbfb6a5a0a0a0a09d958f8f8189959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959595
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89a8f8c8c8c8c848795a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d
9d9d978c87878700009da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0977b7b7b7b7b7b
7b7b7b6a4c322d2d2a2a2a3870767676767676767676788fa8a8a8a8a8a8a8a8a8a8a8a8
a8a8a89a81737b7e7e7e7e7e7e7e7e7e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a
929292929292928f818c9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d8f848492
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09797979797978f848484848484848484
84848c8c9292929292929292929292929292929292929292929289898989898984848484
848484848c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898181848c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8989847884848484898f97979797979797979797979797979792
8989898989898989898989898981818787878787878ca5a5a5a5a5a5a5a5a5a5a5a5a5a5
a59a9a9db6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8a09d9d9d
9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d7e8192959595a3b6b6b6b6b9bfbfbf
bfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a0a09d958f8f8489959a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a95979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8c929d9d
a0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8c8c8c8c848cababababababababababab
ababababa8a0a0a0a0a0978c87878700009aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0977676767676767676766a4c3e3b382a2a272d62767676767676767676788fa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a89a81737b7e7e7e7e7e7e7e7e7e8192a3a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a59a929292929292928f878c9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a89d9d9d8f8489a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09797979797978f84
848484848484848484848c8c929292929292929292929292929292929292929292928989
89898989847b76767b7b7b7b8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898181
848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8989848484848484898f9797979797979797
97979797979797928c8c8c8c8c8c8c8c8989898989817e7e7e7e7e7b787e8c9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a929db6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1
b1a8a8a8a09d9d9d9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c8987959595a3
b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a0a09d958f959595959a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a95979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f
8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8c8c8c8c899dababab
ababababababababababababa8a0a0a0a0a0978c87878700009797979797979797979797
979797979797979797978484848478767676766a4c3e3b382a2a272d5776767676767676
7676788f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a76737b7e7e7e7e7e7e7e7e7e8192a3a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a929292929292928f8c8c9a9a9a9a9a9a9a9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d8f8489a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3
9797979797978f8484848484848484848484878c92929292929292929292929292929292
92929292929289898989898970686d767b7b7b7b8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a898181848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8987848484848484898f
979797979797979797979797979797928c8c8c8c8c8c8c8c898989898981787878787878
7b7e8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1
b1b1b1b1b1b1b1b1b1a8a8a8a09d9d9d9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9d9d9797979797a3b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb6a5a0a0a0a09d95
8f979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95979a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a958f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8c
929292959dabababababababababababababababa8a0a0a0a0a0978c8787870000979797
9797979797979797979797979797979797978484848478767676766a4c3e3b382a2a272d
49767676767676767676788f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a766d7b7e7e7e7e7e
7e7e7e7e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a929292929292928f8c8c9a9a
9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8489a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a3a0a0a0a0a0a08f848484848484848484848484929292929292929292
929292929292929292929292929289898989898989706a767b7b7b7b8c8c8c8c9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a898181848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c897e
848484848484898f979797979797979797979797979797928c8c8c8c8c8c8c8c89898989
89817e848c9292929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8a09d9d9d9d9d9d9d9dababababababab
ababababababababababa8a8a89797a3b6b6b6b6b9bfbfbfbfbfbfbfbfbfbfbfbfbfbfbf
b6a5a0a0a0a09d958f979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8c929d9da0a3a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a89a8f8c929292959dabababababababababababababababa8a0a0a0a0a0978c
8787870000979797979797979797979797979797979797979797848484847b767676766a
4c3e3b382a2a272d40687676767676767676788f95959595959595959595959595959595
76657b7e7e7e7e7e7e7e7e7e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a92929292
9292928f8c8c9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8489a5a5a5a5a5
a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea08f84848487878789898989899797
97979797979797979797979797979292929292929292898989898989898770767b7b7b7b
8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898181848c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c847e848484848484898f979797979797979797979797979797928c8c8c8c
8c8c8c8c89929595959a9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a9a9a9a9a9a9aa3
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8a39d9d9d9d9d9d9d
9dabababababababababababababababababa8a8a89797a3b6b6b6b6b9bfbfbfbfbfbfbf
bfbfbfbfbfbfbfbfb6a5a0a0a0a09d958f979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a97979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f8c929d9da0a3a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f929292959dababababababababababababababab
a8a0a0a0a0a0979797979700009797979797979797979797979797979797979797978484
84847b767676766a4c3e3b382a2a272d3e627676767676767676788c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c6a5f7b7b7b7b7b7b7b7b7b7e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a59a929292929292928f8c8c9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
8f8489a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea08f8484848989
898f8f8f8f8f979797979797979797979797979797979292929292929292898989898989
89897b767b7b7b7e8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898787878c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8484848484848484898f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8c8c8c8c8c8c8c8c89929a9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d
9a9a9a9a9a9a9aa3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1a8a8a8
a8a8a3a0a09d9d9d9dabababababababababababababababababa8a8a89797a3a8a8a8a8
a8aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a5a0a0a0a09d958f979797979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a97979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f8f8f
8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f929292959dababababababab
ababababababababa8a0ababb6b6b6b6b6b6b60000979797979797979797979797979797
979797979797848484847b767676766a4c3e3b382a2a272d3e5a7676767676767676787b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b5c5c7373737373737373737e8192a3a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a59a929292929292928f8c8c9a9a9a9a9a9a9a9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d8f8489a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aea08f8484848989898f8f8f8f8f97979797979797979797979797979797929292929292
9292898989898989898984767b7b7b7e8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8989898989898989898989898489
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89929a9d9d9d9d9da5a5a5a5a5a5a5a5
a5a5a5a5a5a5a59d9a9a9a9a9a9aa3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1a59d9d9d9dabababababababababababababababababa8a8
a8979797979797979aaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a5a0a0a0a09d958f979797
979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a958c8c8c8c8c8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f92929295
9dabababababababababababababababa8a0ababb6b6b6b6b6b6b6000097979797979797
9797979797979797979797979797848484847b767676766a4c3e3b382a2a272d3e4e7373
737373737373787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b5157686d6d6d6d6d6d6d737e
8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a929292929292928f8c8c9a9a9a9a9a9a
9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8489a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaea08f8484848989898f8f8f8f8f9797979797979797979797979797
97979292929292929292898989898989898984767b7b7b7e8c8c8c8c9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a979797979797979797979797979797928c8c8c8c8c899595959595
9595959595959595959595959595959595959595958c8c8c8c8c8c8c89929a9d9d9d9d9d
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a9a9a9a9a9aa3a3b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59d9d9d9dababababababababababab
ababababababa8a8a8979797979792899aaeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a5a0a0
a0a09d958f979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9587818c8c8c8c929d9da0a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a89a8f8f929292959dabababababababababababababababa8a0ababb6b6b6b6b6b6b600
00979797979797979797979797979797979797979797848484847b767676766a4c3e3b38
2a2a272d3e464e65656565656568787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b65464e5457
575757575a68737e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a929292929292928f
8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f8f8f8f8489a5a5a5a5a5a5a5a5a8
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea08f787b848989898f8f8f8f8f979797979797
97979797979797979797928f898989898989898989898989898984767b7b7b7e8c8c8c8c
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8c8c
8c898995959595959595959595959595979797979797979797979797979797978c8c8c8c
89929a9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a9a9a9a9a9aa3a3b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59d9d9d9dababab
ababababababababababababababa8a8a8979797979792899aaeb6b6b6b6b6b6b6b6b6b6
b6b6b6b6b6a5a0a0a0a09d958f979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9587818c8c8c8c929a9aa0a3a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89a8f8f929292959dabababababababababababababababa8a0abab
b6b6b6b6b6b6b60000979797979797979797979797979797979797979797848484847b76
7676766a4c3e3b382a2a272d3e43465757575757575c737b7b7b7b7b7b7b7b7b7b7b7b7b
7b7b764e46464340404040465168737e8192a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a
929292929292928f8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8489a5
a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0927b767e8989898f8f8f
8f8f97979797979797979797979797979797928989898989898989898989898989898476
7b7b7b7e8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a928c8c8c8c898995959595959595959595959595979797979797979797979797
979797978c8c8c8c89929a9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d95959595
979aa3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
a59d9d9d9dabababababababababababababababababa8a8a8979797979792899aababab
abababababababababababababa5a0a0a0a09d9595979797979a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a97979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9587818c8c8c8c929a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f929292959dababababababababababab
ababababa8a0ababb6b6b6b6b6b6b600008f8f9797979797979797979797979797979797
9797848484847b767676766a4c3e3b382a27272d3e3e464c4c4c4c4c4c54687b7b7b7b7b
7b7b7b7b7b7b7b7b7b7b5146464643403b38353e4e68737e8192a3a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a59a929292929292928f8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8489a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae92
84848989898f8f8f8f8f9797979797979797979797979797979792898989898989898989
89898989898984767b7b7b7e8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a928c8c8c8f8f8f9595959595959595959595959597979797
9797979797979797979797978c8c8c8c89929a9d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5
a5a5a59d8c929295979aa3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a59d9d9a9dabababababababababababababababababa8a8a8979797
9797928995959595959595959595959595959595959595959595959595979797979a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a97979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9587
818c8c8c8c9297979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f929292959dababab
ababababababababababababa8a0ababb6b6b6b6b6b6b600008f8f979797979797979797
97979797979797979797848484847b767676766a4c3e3b381f1f272d35353e3e3e3e3e43
4649575c5c5c5c5c5c5c5c5c5c5c5c5c5c5c40404040404040404043495a707e8192a3a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59287929797979797979797979797979797978f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8489a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeae9587878989898f8f8f8f8f979797979797979797979797979797979289
898989898989898989898989898984767b7b7b7e8c8c8c8c979797979797979797979797
979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8c8c929595959595959595959595
95959595979797979797979797979797979797978c8c8c8c89929a9d9d9d9d9da5ababab
abababababababababababab9a9a9295979aa3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59d9d97a8ababababababababababababababab
ababa8a8a8979797979792899292929292929292929292929292928f9595959595959595
95979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9587818c8c8c8c9297979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f
929292959dabababababababababababababababa8a0ababb6b6b6b6b6b6b60000898f97
979797979797979797979797979797979797848484847b767676766a4c3e3b382a24272d
303030323232323840434c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c3e4e4e4e4e4e4e4e4e4e
4e515f737e92a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797979797979797979797
97979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7b89a5a5a5a5a5a5a5a5a8aeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9587878989898f8f8f8f8f97979797979797979797
9797979797979289898989898989898989898989898984767b7b7b7e8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8781818f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8c8c92959595
959595959595959595959595979797979797979797979797979797978c8c8c8c89929a9d
9d9d9d9da5ababababababababababababababababa09295979aa3a3b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5979aa8a8ababababababab
ababababababababababa8a8a89797979797928992929292929292929292929292929292
959595959595959595979797979a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9587818c8c8c8c9297979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a8f8f929292959dabababababababababababababababa8a0ababb6b6b6b6
b6b6b60000818f97979797979797979797979797979797979797848484847b7676767368
4c3e3b3838352a2a2a2a2a2a2a2a2a2a323b3b3b3b3b3b3e3e3e3e3e3e3e3e3e3e404657
575757575757575a5a5a5c6a7081a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59797979797
979797979797979797979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95a5a5a5a5a5
a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9787878989898f8f8f8f8f9797
97979797979797979797979797979289898989898989898989898989898984767b7b7b7e
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84787b8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
928c8c8c9295959595959595959595959595959597979797979797979797979797979797
8c8c8c8c89929a9d9d9d9d9da5ababababababababababababababababa09295979aa3a3
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a3a8a8
a8abababababababababababababababababa8a8a8979797979792899292929292929292
9292929292929292959595959595959595979797979797979797a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9587818c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f929292959dababababababababababababababab
a8a0ababb6b6b6b6b6b6b60000818f979797979797979797979797979797959595958484
84847b76766a5a4c4c3e3b3838352a1f1f1f1f1f1f1f1f1c22303030303030303e3e3e3e
3e3e3e3e3e40515a5a5a5a5a5a5a5a5a5a5a5c656a788fa0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a09797979797979797979797979797979797978f8c8c8c8c8c8c8c8c8c8c89898f8f
959595a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae92898989
898f8f8f8f8f979797979797979797979797979797979289898989898989898989898989
898984767b7b7b7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877e81929a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a928c8c8c929595959595959595959595959595959797979797979797
97979797979797978c8c8c8c89929a9d9d9d9d9da5ababababababababababababababab
aba09295979aa3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1a5a3a8a8a8abababababababababababababababababa8a8a897979797979289
89898989898989898f8f929292929292959595959595959595979797a0a5a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958781818181
8181818181818181817e7b8487878f8f8f8f8f8f8f8f8f8f929292959dababababababab
ababababababababa8a0ababb6b6b6b6b6b6b60000818f97979797979797979797979797
979795959595848484847b76765a4940403e3b3838352a1f1f1f1f1f1f1f1f1c222d3030
303030303e3e3e3e3e3e3e3e3e40575a5a5a5a5a5a5a5a5a5a5a5c626a788c9a9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9797979797979797979797979797979797978f7b7b7b7b7b7e
7e7e7e7e81898f8f959595a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaea0898989898f8f8f8f8f97979797979797979797979797979797928989898989
89898989898989898989847678787b7e8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f9292
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8c8c92959595959595959595959595959595
979797979797979797979797979797978c8c8c8c89959a9d9d9d9d9da5ababababababab
abababababababababa09295979aa3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1a5a3a8a8a8abababababababababababababababababa8a8
a89797979797928989898989898989818f8f929292929292959595959595959595979797
a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8959595958989898989898989898989
898989878181818181818181817068656a6d767e84878f8f8f8f8f8f8f8f8f8f92929295
9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9dababb6b6b6b6b6b6b60000818f9797979797
9797979797979797979795959595848484847b767357433b3b3b3b3b3b352a1f0e191c1c
1c1c1c1c222d30303030353543434343434343434343575a5a5a5a5a5a5a5a5a5a5a5c62
6a7889959797979797979797979797979797979797979797979797979797979797979797
978f7b7b7b7b7b7e7e7e7e7e81898f8f959595a5a5a5a5a5a5a5a5a8aeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaea3898989898f8f8f8f8f9797979797979797979797979797
979792898989898989898989898989898989847373707b7e8c8c8c8c8f8f8f8f8f8f8f8f
8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c89899295959595959595
959595959595959597979797979797979797979797979797878184848f959a9d9d9d9d9d
a5ababababababababababababababababa09295979aa3a3abababababababababababab
abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a3a8a8a8ababababababababababab
ababababababa8a8a89797979797928989898989898989818f8f92929292929295959595
9595959595979797a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a895959595929292
8c89898989898989898989878181818181818181785a575c656d767e84878f8f8f8f8f8f
8f8f8f8f929292959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979dababb6b6b6b6b6b6b600
00818f97979797979797979797979797979795959595848484847b767057433e3e3b3b3b
3b352a1608161c1c1c1c1c1c222d30303030353843495454545454545454575a5a5a5a5a
5a5a5a5a5a5a5c626a788795959595959595959595959797979797979797979797979797
9797979797979797979781787b7b7b7e8181818181898f8f959595a0a0a0a0a0a0a0a5a8
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3898989898f8f8f8f8f979797979797
9797979797979797979792898989898989898989898989898989847373707b7e8c8c8c8c
8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8489
929595959595959595959595959595959797979797979797979797979797979792929a9d
9d9d9d9d9d9d9d9da5ababababababababababababababababa09292979aa3a3a8a8a8a8
a8a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a3a8a8a8ababab
ababababababababababababababa8a8a89792929292928989898989898989818f8f9292
92929292959595959595959595979797a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8959595959292928c8989898989898989898987818181737373737373544e57656d767e
84878f8f8f8f8f8f8f8f8f8f9292929595959595959595959797979797979797979dabab
b6b6b6b6b6b6b60000818484848484848484848484848484848484848484848484847b76
68544340403b3b3b3b352a1606161c1c1c1c1c1c222d30303030353843495a6262626262
626262626262626262626262626262626a6d7b959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9d9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0897b7b7b7b7e8181818181898f8f959595a0
a0a0a0a0a0a0a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5898989898f8f8f
8f8f97979797979797979797979797979797928989898989898989898989898989898473
7370737e8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a928c848992959595959595959595959595959595979797979797979797979797
979797979597a0a5a5a5a5a5a5a5a5a5a5ababababababababababababababababa09797
979aa3a3a8a8a8a8a8a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
a5a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d8787878787878787878787
87878781898f929292929292959595959595959595959595a0a5a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8929292929292928c89898989898989898989878181685f5f5f5f5f
5f4c404c5c6d767e84878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c929797
97979797979dababb6b6b6b6b6b6b6000078787878787878787878787878787878787878
78787878787878766a5a4946463b3b3b3b352a160b161c1c1c1c1c1c222d2d2d3030353b
43495a656565656565656565656565656565656565656565655f6d929aa5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59d9797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0978f7e767e81818181
81898f8f959595a0a0a0a0a0a0a0a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
ab9d8989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f898989898989898989
89898989898984737373737e8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a928c84899295959595959595959595959595959597979797
9797979797979797979797979597a0a5a5a5a5a5a5a5a5a5a5ababababababababababab
abababababa0979a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a5a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d95878787
878787878787878787878781898f929292929292959595959595959595959595a0a5a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8959595959592928c8989898989898784817876
766a5c5757575757573e35465a6a737878787878788489898989898989898c8c8c8c8c8c
8c8c8c8c8c92979797979797979dababb6b6b6b6b6b6b600006d6d6d6d6d6d6d76767676
767676767676767676767676767676766d6d544c463b3b3b3b352a1911161c1c1c1c1c1c
22222222222a353e43495a686868686868686868686868686868686868686868655c6889
9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9797ababababababababababababababababab
aba892929292929292928f8f959595a0a0a0a0a0a0a0a5a8aeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeabababababa3a39d898989817b898989898989898989898989898989
8989898989898989898989898989847b7b7b7b7e8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f
8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8489929595959595959595959595
95959595979797979797979797979797979797979597a0a5a5a5a5a5a5a5a5a5a5ababab
abababababababababababababa0979a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a89d9d958c8987878787878787878787878781898f9292929292929595959595959595
95959595a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8959595959592928c898989
898989816d656565655f575454545454543e35435a686873737373737381848484848484
84848c8c8c8c8c8c8c8c8c8c8c92979797979797979a9a9daeaeaeaeaeaeae00006d6d6d
6d6d6d6d76767676767676767676767676767676767676766d6d685a4c3b3b3b3b382d1f
1919191919191919191919141927384043495a6868686868686868686868686868686868
68686868655a68879aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9797ababababababababab
abababababababababa8a09d9d9d9d9d9d9d8f8f959595a0a0a0a0a0a0a0a5a8aeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d898989817689898989898989
89898989898989898989898989898989898989898989847e7e7e7e7e8c8c8c8c8f8f8f8f
8f8f8f8f8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c848992959595
959595959595959595959595979797979797979797979797979797979597a0a5a5a5a5a5
a5a5a5a5a5ababababababababababababababababa0979a9a9aa3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a89d9d958c8987878787878787878787878781898f929292929292
959595959595959595959595a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8959595
959592928c898989898989817668686868685f5a54545454543e3540575f5f6873737373
737884848484848484848c8c8c8c8c8c8c8c8c8c8c92979797979797979a9a9daeaeaeae
aeaeae00007070707070707076767676767676767676767676767676767676766d6d6d6d
6246403b3b383024221f1f1f1f1f1f1f1f1f19111c303e43464c5a737373737373737373
737373737373737373737373706570879aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9797ab
abababababababababababababababababa8a09d9d9d9d9d9d9d8f8f959595a0a0a0a0a0
a0a0a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d89898981
7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8484848484848484848484848484847e7e7e7e7e
8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
928c84899295959595959595959595959595959597979797979797979797979797979797
9597a0a5a5a5a5a5a5a5a5a5a5ababababababababababababababababa0979a9a9aa3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d958c8987878787878787878787878781
898f929292929292959595959595959595959595a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8959595959592928c89898989898981766d6d6d6d6d686254545454543e353b
4e5f5f6568686868686884848484848484848c8c8c8c8c8c8c8c8c8c8c92979797979797
979a9a9daeaeaeaeaeaeae00007878787878787876767676767676767676767676767676
767676766d6d6d6d6d5a433b3b383230271f1f1f1f1f1f1f1f1f1f1c223040464c5a6876
7878787878787878787878787878787e7e7e7e7e7e8181899aa8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a3a0ababababababababababababababababababa8a09d9d9d9d9d9d9d8f8f
959595a0a0a0a0a0a0a0a5a5a5a5a5a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababab
aba3a39d89898981818181818181818181818181818176707b7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a928c8489929595959595959595959595959595959297979797979797
97979797979797979597a0a5a5a5a5a5a5a5a5a5a5ababababababababababababababab
aba0979a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d958c898787878787
8787878787878781898f929292929292959595959595959595959595a0a5a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8959595959592928c89898989898981766d6d6d6d6d6d62
54545454543e3535465a5a5a5a5a5a5a5a5a6d848484848484848c8c8c8c8c8c8c8c8c8c
8c92979797979797979a9a9daeaeaeaeaeaeae0000878787878787877676767676767676
7676767676767676767676766d6d6d6d6d6a57463b3b3532271f1f1f1f1f1f1f1f1f1f24
2730404c5a6876767e818484848484848484848484848484848484847e84898c9ab1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1abababababababababababababababababababababa8a09d
9d9d9d9d9d9d8f8f9595959a9a9a9a9a9a9a9a9aababababaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeabababababa3a39d8989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f816d7b7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e878787898f8f8f8f8f8f8f8f8f8f8f8f8f8f9292
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c848992959595959595959595959595959595
929595959595959595959595959595959597a0a5a5a5a5a5a5a5a5a5a5ababababababab
abababababababababa0979a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a3a3a3b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1a5a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d
958c89878787878787878787878787818989929292929292959595959595959595959595
a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8959595959592928c89898989898981
766d6d6d6d6d6d6254545454543e35303b4e4e4e4e4e4e4e4e515c7b8484848484848c8c
8c8c8c8c8c8c8c8c8c92979797979797979a9a9daeaeaeaeaeaeae000089898989898989
76767676767676767676767676767676766d6d6d6d6d6d6d6d6d6d5a46463e32271f1f1f
1f1f1f1f1f1f1f242a324662767676767e818f9595959595959595959595959595959589
7e84898f9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababababababababababababababab
abababababa8a09d9d9d9d9d9d9d8f8f95959595959595959595959aababababaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d89898997979797979797979797979797
979792707e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e818487898f8f8f8f8f8f8f8f
8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c84899295959595959595
9595959595959595929292929292929292929292928c8f959597a0a5a5a5a5a5a5a5a5a5
a5ababababababababababababababababa0979a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a3a3
a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a89d9d958c8987878787878787878787878781898992929292929295959595
9595959595959595a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a895959595959292
8c89898989898981766d6d6d6d6d6d6254545454543e3527304c4c4c4c4c4c4c4c4e5f7b
8484848484848c8c8c8c8c8c8c8c8c8c8c92979797979797979a9a9a9d9d9d9d9d9d9d00
00898989898989897676767676767676767676767676767673737373737373737373735c
4c4c4c3e27222222222222222222222730436576767676767e818f959595959595959595
95959595959595897e848992a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababababababab
abababababababababababababa8a09d9d9d9d9d9d9d8f8f95959595959595959595959a
ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d8989899797979797
9797979797979797979792768181818181818181818181818181817e7e7e7e7b76818789
8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8489
92959595959595959595959595959595929292929292929292929292928f8f959597a0a5
a5a5a5a5a5a5a5a5a5ababababababababababababababababa0979a9a9aa0a0a0a0a0a0
a0a0a0a0a0a0a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d958c898787878787878787878787878189899292
92929292959595959595959595959595a0a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8959595959592928c89898989898981766d6d6d6d6d6d62544e4949493e2a1c27404c4c
4c4c4c4e5151627b8484848484848484898989898989898989898989898c8f8f8f8f8f8f
9a9a9a9a9a9a9a0000898989898989897676787e81818181818181818181818181818181
818181818181735c514e4e4c38302d2d2d2d2d2d2d2d2d30405f7676767676767e818f95
959595959595959595959595959595897e848997a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
abababababababababababababababababababababa8a09d9d9d9d9d9d9d8f8f95959595
959595959595959aababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d
898989979797979797979797979797979797927e8787878787878787878787878787877e
7e7e7e7b788787898f8f8f8f8f8f8f8f8f8f8f8f8f8f9292929292929292929292929292
92929292928c848992959595959595959595959595959595a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a097a0a5a5a5a5a5a5a5a5a5a5ababababababababababababababababa0979a
9a9aa0a0a0a0a0a0a0a0a0a0a0a0a3a3a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d958c89878787878787878787
878787818989929292929292959595959595959595959595a0a5a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8959595959592928c89898989898981786d6d6d6d6d6d625446403e
3e3b271c2740464646464c575a5a627b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
78878f8f8fa3a3a3a3a3a3a3a3a3a30000898989898989897373787e878c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c735c5454545449403e3e3e3e3e3e3b3b3b4051767676
7676767681879295959595959595959595959595959595897e848f9aa3b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1abababababababababababababababababababababa8a09d9d9d9d9d
9d9d8f8f95959595959595959595959aababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
abababababa3a39d898989979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d898989878787878787
878787878787877e7e7e81848c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f929292929292
929292929292929292929292928c848992959595959595959595959595959595a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a097a3a5a5a5a5a5a5a5a5a5a5ababababababababababab
abababababa0979a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a5a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797979797958c8987
8787878787878787878787818989929292929292959595959595959595959595a0a5a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8959595959592928c878787878787817b7b7b7b
7b7b7b6254403b383838241f273e3e3e3e495462626262767b7b7e848484848484848484
8484848484847b7678878f8f8fa3a3a3a3a3a3a3a3a3a30000898989898989896d6a787e
878f929292929292929292929292929292929292929278655c5c5c5c5c5a57514e515151
515151515a76767676767676819595959595959595959595959595959595959589878f9a
a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababababababababababababababababababab
aba8a09d9d9d9d9d9d9d89818181818181818181848f959aababababaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeabababababa3a39d89898997a5a5a5a5a5a5a5a5a5a5a5a5a5a5a597
9797878787878787878787878787877e7e7e81929797979797979797979797979797978f
8f8f929292929292929292929292929292929292928c8489929595959595959595959595
95959595a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09da3a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a59a9a9a9a9a9a9a9a9a9a9a9a979a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a3a3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a959595
95959595958c898787878787878787878787878189899292929292929595959595959595
959595959a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092928c848484
848484817b7b7b7b7b7b7b62543e383232301f22273535353b4e5c626262626d7b7b7e8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c7673787e7e7e8ca3a3a3a3a3a3a3a3a3a30000898989
898989896a6d7e7e878f9595959595959595959595959595959595959595846a62626262
6262626262625f5f5f5f5f5a5c7676767676767681959595959595959595959595959595
9595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababababababababababab
abababababababababa8a09d9d9d9d9d9d9d89818184848484848484848f959aabababab
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d89898997a5ababababababab
ababababababababab9d878787878787878787878787877e7e7e81929797979797979797
979797979797978c8c8c8c84878787878787878787878787878787878787848992959595
959595959595959595959595a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5978c95979797979797979797979a9a9aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a3a3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a89a95959595959595958c898787878787878787878787848187898f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f9595959a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a092928c848484848484817b7b7b7b7b7b7b624e3e353232302424272a2a2d3e516262
626262687b7b7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c765f686a6a738ca3a3a3a3a3a3a3
a3a3a3000089898989898989767b7e7e878f959595959595959595959595959595959595
959587736d6d6d6d6d6d6d6d6d6d5f656565656568767676767676768195959595959595
95959595959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababab
abababababababababababababababababa8a09d9d9d9d9d9d9d89818184848484848484
848f959aababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababa3a39d89898997
a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d878787878787878787878787877e7e7e8192
9797979797979797979797979797978c8c8c8c7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e8484
8484848992959595959595959595959595959595a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5978795979797979797979797979a9a9aa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a89a95959595959595958c8987878787878787878787877878
87898989898989898989898989898989898989898989898989898989929aa0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0929289848484848484817b7b7b7b7b7b7b62463b323232302724
272a2a30435a626262626268737b7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c734c515c707e
8ca3a3a3a3a3a3a3a3a3a3000089898989898989787b7e7e878f95959595959595959595
95959595959595959595897e7e7373707070707070705f68686868686876767676767676
819595959595959595959595959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1ababababababababababababababababa8a09d9d9d9d9d9d9d8976
8184848484848484848f959aabababababababababababababababababababababababab
aba3a39d89898997a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d8c8c8c8c8c8c8c8c8c8c
8c87877e7e7e81929797979797979797979797979797978c8c8c8c7e7e81818181818181
81818181818181818181818181818181817b87929292929292929292a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5977e9597979797979797
9797979a9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a3a3a3a3a3a5a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a95959595959595958c898787878784
848484848484787381898989898989898989898989898989877e7e7e7e7e7e7e7e7e7e81
929aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0928c87848484848484817b7b7b7b7b7b7b62
40352d2d2d2d2724272d30354662626262626268707b7e8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c78515c7b7e7e8ca3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c787b7e7e878f9595
959595959595959595959595959595959595897e7e7e7e707070707070705f6868686868
6876767676767676819595959595959595959595959595959595959595878f9aa3b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababababababababababababa8a09d
9d9d9d9d9d9d897e8184848484848484848f959aabababababababababababababababab
abababababababababa3a39d89878997a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d8c8c
8c8c8c8c8c8c8c8c8c87877e7e7e8192979797979797979797979797979797898989897e
7e8484848484848484848484848484848484848484848484847b818c9292929292929292
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5977e
8f8f8f8f8f8f8f8f8f95979a9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a3a3a3
a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a95959595959595
958c89878787878484848484848478738989898989898989898989898989898981767e81
81818181818181818c9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092817e7e7e7e7e7e7e7e
7b7b7b7b7b7b7b68403530303030272d3538383e4962626262626268707b7e8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c816a7e7e7e7e8ca3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c
787b7e7e878f95959595959595959595959595959595959595958c7e7e7e7e7070707070
70705f686868686868767676767676768195959595959595959595959595959595959595
95878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababababababab
abababababa8a09d9d9d9d9d9d9d897e8184848484848484848f959aabababababababab
abababababababababababababababababa3a39d89898f9aa5b1b3b3b3b3b3b3b3b3b3b3
b3b3b3b3b39d8c8c8c8c8c8c8c8c8c8c8c87877e7e7e8192979797979797979797979797
979797898989897e7e84848484848484848484848484848484848484848484848481818c
9292929292929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5977e84848484848484848495979a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d
9d9d9d9d9d9da0a0a0a0a5ababababababababababababababababa8a8a8a8a8a8a8a8a8
9a95959595959595958c8987878787848484848484848484898989898989898989898989
898989897e7078878787878787878787879aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09284
7b848484848484848484848484848484543e383b3b3b3e40404040434962626262626268
70787e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c897e7e7e7e7e8ca3a3a3a3a3a3a3a3a3a300
008c8c8c8c8c8c8c787b7e7e878f95959595959595959595959595959595959595958c7e
7e7e7e707070707070705f68686868686876767676767676819595959595959595959595
959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababa3
a3a3a3a3a3a3a3a3a3a3a0a0a0a0a09d9d9d9d9d9d9d897e8184848484848484848f959a
abababababababababababababababababababababababababa3a3a0a0a0a0a0a5b1b3b3
b3b3b3b3b3b3b3b3b3b3b3b3b39d8c8c8c8c8c8c8c8c8c8c8c87877e7e7e819297979797
9797979797979797979797898989897e7e84848484848484848484848484848484848484
848484848481818c9292929292929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5977e84848484848484848495979a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a979a9a9a9aa5ababababababababababababababababa8
a8a8a8a8a8a8a8a89a959595959595958c87878787878787979797979797979797979797
979797979797979797979797897884878789898989898989899aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0928c8c8c8c8c8c8c8c8c8c8c8984848484846a433e3e3e3b3e4343434646
496262626262626870787e8c8c8c8c8c929292929292929292929292929292928ca3a3a3
a3a3a3a3a3a3a3000092929292929292787b7e7e878f9595959595959595959595959595
9595959595958c817e7e7e70707070707070626868686868687676767676767681959595
9595959595959595959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1ababa09d9d9d9d9d9d9d9d9792898989898989898989898989897e81848484
84848484848f959aabababababababababababababababababababababababababa3a3a0
a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d8c8c8c8c8c8c8c8c8c8c8c878784
81818192979797979797979797979797979797898989897e7e8484848484848484848484
8484848484848484848484848481818c8f8f8f8f8f8f8f8fa0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5977e8484848484848484848f8f8f
8f8f8f8f8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979a9a9a9aa5ababababababababab
abababababababa8a8a8a8a8a8a8a8a89a959595958c8c8c878787878787878797979797
97979797979797979797979797979797979797978987878787929d9d9d9d9d9d9d9da0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0928c8c8c8c8c8c8c8c8c8c8c89848484848478514646
3e3b3e4343434649516262626262626870787e8c8c8c8c8c929292929292929292929292
929292928ca3a3a3a3a3a3a3a3a3a30000a0a0a0a0a0a0a0787b7e7e878f959595959595
95959595959595959595959595958c817e7e7e7070707070707070707070707070767676
76767676819595959595959595959595959595959595959595878f9aa3b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1ababa09d9d9d9d9d9d9d9d978f87878787878787878787
8787877e8184848484848484848f9597abababababababababababababababababababab
abababababa3a3a0a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d8c8c8c8c8c8c
8c8c8c8c8c878989898f8f92979797979797979797979797979797898989897e7e848484
848484848484848484848484848484848484848484818187878787878787878fa0a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5977e84848484
8484848484848484848484848484979797979797979797979797979797979a9a9a9aa5ab
abababababababababababababababa8a8a8a8a8a8a8a8a89a959595958c8c8c87848484
84848487979797979797979797979797979797979797979797979797898787878f92a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0928c8c8c8c8c8c8c8c8c8c8c8984
84848484846a4c463e3b3e4949494c54626262626262626870737e8c8c8c8c8c92929292
9292929292929292929292928ca3a3a3a3a3a3a3a3a3a30000a0a0a0a0a0a0a0787b7e7e
878f95959595959595959595959595959595959595958c817e7e7e707070707070707070
707070707076767678787878819595959595959595959595959595959595959595878f9a
a3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababa09d9d9d9d9d9d9d9d978f8c89
89898987878787878787877e8184848484848484848f9595abababababababababababab
abababababababababababababa3a3a0a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3
b39d8c8c8c8c8c8c8c8c8c8c8c878f929292929297979797979797979797979797979789
898989848484848484848484848484848484848484848484848484848481818787878787
8787929daebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a5a5a5a5a5a5a5a5
a5a5977e84848484848484848484848484848484817e9797979797979797979797979797
97979a9a9a9aa5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a8a8a8a8a8a8a8a8a89a959595
958c8c8c8784848484848487979797979797979797979797979797979797979797979797
898787878f92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0928c8c8c8c8c
8c8c8c8c8c8c898484848484847e54463e3b3e4c4e575c62626262626262626870707e8c
8c8c8c8c929292929292929292929292929292928ca3a3a3a3a3a3a3a3a3a30000a0a0a0
a0a0a0a08181817e878f95959595959595959595959595959595959595958c817e7e7e76
767676767676767676767676767676767e7e7e7e81959595959595959595959595959595
9595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababa09d9d9d9d
9d9d9d9d978f8c8989898987878787878787877e8184848484848484848f9292abababab
abababababababababababababababababababababa3a3a0a0a0a0a0a5b1b3b3b3b3b3b3
b3b3b3b3b3b3b3b3b39d8c8c8c8c8c8c8c8c8c8c8c878f92929292929797979797979797
97979797979797878787878f959595959595959595959595959595959595958784848484
8481818787878787878792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1
a3a3a3a3a3a3a3a3a3a3977e8484848484848484848484848484848473738c9797979797
979797979797979797979a9a9a9aa5aec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4a8a8a8a8a8
a8a8a8a89a959595958c8c8c878484848484848797979797979797979797979797979797
9797979797979797898787878f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0
a0a0928c8c8c8c8c8c8c8c8c8c8c898484848484848465544c4c494c4e5a626262626262
62626268686d7e8c8c8c8c8c929292929292929292929292929292928ca3a3a3a3a3a3a3
a3a3a30000a0a0a0a0a0a0a08c84817e878f959595959595959595959595959595959595
95958c817e7e7e7676767676767676767676767676767676818181818195959595959595
95959595959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1ababa09d9d9d9d9d9d9d9d978f8c8989898987878787878787877e8184848484848484
848f9292abababababababababababababababababababababa5a5a5a5a3a3a0a0a0a0a0
a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d929292929292929292928c878f9292929292
979797979797979797979797979797877e87879297979797979797979797979797979797
95959587848484848481818787878787878792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
b3b3b3b3b3b3b3b1a3a3a3a3a3a3a3a3a3a3977e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e76
7073819797979797979797979797979797979797979797aec4c4c4c4c4c4c4c4c4c4c4c4
c4c4c4a8a8a8a8a8a8a8a8a89a959595958c8c8c87848484848484879797979797979797
97979797979797979797979797979797898787878f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a0a0a0a0a0a0928c8c8c8c8c8c8c8c8c8c8c898484848484848473655f5f514c
4e6262626262626262626262626a7e8c8c8c8c8c92929292929292929292929292929292
8ca3a3a3a3a3a3a3a3a3a30000a0a0a0a0a0a0a08c84817e878f95959595959595959595
959595959595959595958c817e7e7e767676767676767676767676767676767684848484
849595959595959595959595959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1ababa09d9d9d9d9d9d9d9d978f8c8989898987878787878787877e
8184848484848484848f929297ababababababababababababababababababababa3a3a3
a3a3a3a0a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d97979797979797979595
8c878f929292929297979797979797979797979797979787848992979797979797979797
979797979797979797979787848484848481818787878787878792a0aebcbcbcbcbcbcbc
bcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a3a3a3a3a3a3a3a3a3a3977e7e7e7e7e7e7e7e7e
7e7e7e7e7e7e7e767073819597979797979797979797979797979797958c92b9d5d5d5d5
d5d5d5d5d5d5d5d5d5d5d5b19d9d9d9d9d9d9d9797959595958c8c8c8784848484848487
979797979797979797979797979797979797979797979797898787878f9aa5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0928c8c8c8c8c8c8c8c8c8c8c898484848484
848484736d6d625f626a6a6a6a6a6a6a6a6a6a6a6a6a7e8c8c8c8c8c9292929292929292
92929292929292928ca3a3a3a3a3a3a3a3a3a30000a0a0a0a0a0a0a08c84817e878f9595
9595959595959595959595959595959595958c817e7e7e76767676767676767676767676
76767676878f9595959595959595959595959595959595959595959595878f9aa3b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababa09d9d9d9d9d9d9d958f8f8c8989898987
878787878787877e81848484848484848489898989a3abababababababababababababab
abababababa3a3a3a3a3a3a0a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d9797
97979797979795958c878f92929292929797979797979797979797979797978c8c959797
9797979797979797979797979797979797979787848484848481818787878787878792a0
aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a3a3a3a3a3a3a3a3a3a3977e
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b767073818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8984
818497b9ddddddddddddddddddddddddddddddca9a959595959587878787878787878787
878484848484848797979797979797979797979797979797979797979797979789878787
8f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0928c8c8c8c8c8c8c8c8c
8c8c8989898989898989898987877e7e7e7b7b7b7b7b7b7b7b7b7b7b78767e8c8c8c8c8c
929292929292929292929292929292928489a3a3a3a3a3a3a3a3a30000a0a0a0a0a0a0a0
8c84817e878f95959595959595959595959595959595959595958c817e7e7e7676767676
767676767676767676737376878f95959595959595959595959595959595959595959595
95878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababa09d9d9d9d9d9d9d95
8f8f8c898989898470767676767b7e7e8184848484848484848484848495abababababab
abababababababababababababa3a39a95929da0a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3
b3b3b3b3b39d979797979797979795958c878f9292929292979797979797979797979797
97979795959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979797878484848484818187
87878787878792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a3a3a3a3
a3a3a3a3a3a397766a7070707070707070707070707070706a6d81818181818181818181
81818181817e7876767ea3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0a889898989818184
848484848484848484848484848484879797979797979797979797979797979797979797
97979797898787878f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a09292
929292929292929292929292929292929292929292929292848187878787878787878787
8787878c8c8c8c8c92929292929292929292929292929292847e95a3a3a3a3a3a3a3a300
00a0a0a0a0a0a0a08c84817e878f95959595959595959595959595959595959595958c81
7e7e7e76767676767676767676767676766a6a76878f9595959595959595959595959595
959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a89d9d
9d9d9d9d9d9d9d958f8f8c898989897865767676767b7e7e818484848484878787878787
8795a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3978c8c9da0a0a0a0a0a5b1b3b3
b3b3b3b3b3b3b3b3b3b3b3b3b39d979797979797979795958c878f929292929292929292
92929292929292928484899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979787
848484848481818787878787878792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3
b3b3b3b1a0a0a0a0a095959595958f73686a6a6a6a6a6a6a6a6a6a6a6a6a6a6a5a5f767e
7e7e7e7e7e7e7e7e7e7e7e7e7e7e78787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0
d2a38173707b818181818181818181818181818181817887979797979797979797979797
979797979797979797979797898787878f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9795959595959595959595959595959595959595959595959595959595959595848c9292
92929292929292929292929292928c8c9292929292929292929292929292929289898f92
979797979797970000a0a0a0a0a0a0a08c84817e878f9292929292929292929292929292
9292929292928c817e7e7e7676767676767676767676767676686a76878f959595959595
9595959595959595959595959595959595878f9aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1a58f8f8f8f8f8f8f8f8f8f8f8f8c898989898778707676767b7e7e81848484
84848787878787878795a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a898c9da0
a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d979797979797979795958c878f92
929292929292929292929292929292927b78899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9797979797979787848484848481818787878787878792a0aebcbcbcbcbcbcbcbcbcbcbc
bcbcbcbcb3b3b3b3b3b3b3b1a0a0a09d8987878787878778737373737373737373737373
7070706d575c6876767676767676767676767676767676787b89a3b9dde0e0e0e0e0e0e0
e0e0e0e0e0e0e0e0ddd29a736d7b81818181818181818181818181818181768797979797
9797979797979797979797979797979797979797898787878f9aa5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a597929292959595959595959595959595959595959595959595959595
95959595848ca3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5898c929292929292929292929292
9292929292929292979797979797970000a0a0a0a0a0a0a08c84817e878f8f8f92929292
92929292929292929292929292928c817e7e7e7676767676767676767676767676686a76
878f959595959595979797979797979797979797979797958c878f9aa3b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1a5978f8f8f8f8f8f8f8f8f8f8f8c898989898787877b76
767b7e7e7e7e7e7e7e7e87878787878787929797979797a3a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a08f8f9da0a0a0a0a0a5b1b3b3b3b3b3b3b3b3b3b3b3b3b3b3b39d979797979797
979795958c849292929292929292929292929292929292928178959d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9797979797979787848484848481818787878787878792a0aebcbcbc
bcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a0a0a09d9292929292929289847b7373
73737373737373737070707068686868686868686868686873767676767676787b89a3b9
dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0ddddc48c737b8181818181818181818181818181
81817b87979797979797979797979797979797979797979797979797898787878f9aa5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5978c898c95959595959595959595959595959595
959595959595959595959595848fa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f8f92929292
92929292929292929292929292929292979797979797970000a0a0a0a0a0a0a08c84817e
8484848f9292929292929292929292929292929292928c817e7e7e767676767676767676
7676767676686a7b878f959595959595979797979797979797979797979797957e7b8c9a
a0aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5978f8f8f8f8f8f8f8f8f8f8f8c89
8989898787878465627b8787878787878787878787878787878f97979797979aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a38f8f9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a097979797979797979795958c92a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a392879d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979787848484848481818787878787
878792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a0a0a09d9a9a9a9a
92929292927b73737373737373737373707070707070707070707070706d655f6d767676
767676787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0ddddddbf9797979797979797
9797978181818c8c8c8c8c8c979797979797979797979797979797979797979797979797
898787878f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5978c848c9595959595959595
9595959595959595959595959595959595959595899aa5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a59d9292929292929292929295959595959595959595979797979797970000a0a0a0
a0a0a0a08c84817e7e7e7e8f9292929292929292929292929292929292928c817e7e7e76
76767676767676767676767676686a7b878f959595959595979797979797979797979797
9797979281878c9292a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5978f8f8f8f8f
8f8f8f8f8f8f8c8989898987878784655f62878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9797
979797a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a38f8f9da0a0a0a0a0a0aeaeaeaeaeaeae
aeaeaeaeaeaeaeaea5a5a0a0a0a0a0a0a09a95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797978781818181
81818181818181817b8792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1
a0a0a09d9a9a9a9a92929292927b73737373737373737373707070707070707070707070
7070706268767676767676787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0dddddddb
d2cdcdcdab9a9a9a9a9a9a8181818c8c8c8c8c8c97979797979797979797979797979797
9797979797979797898787878f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9797
97979797979797959595959595959595959595959595959595959595899aa5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59d929292929292929292929797979797979797979797979797
9797970000a0a0a0a0a0a0a08c84817e7e7e7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c817e7e7e7676767676767676767676767676686a7b878f95959595959597979797
97979797979797979797979289898c9292a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3978f8f8f8f8f8f8f8f8f8f8f8c8989898987878784655c70878f9797979797979797
9797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea38f8f9da0a0a0a0a0
a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a95a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d97979797
9797978c81818181818181818181817b7b8792a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
b3b3b3b3b3b3b3b1a0a0a09d9a9a9a9a92929292927b7373737373737373737370707070
70707070707070707070706868767676767676787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0
e0e0e0e0dddddddbdbdbdbcfab9a9a9a9a9a9a8181818c8c8c8c8c8c9797979797979797
97979797979797979797979797979797898787878f9aa5a5a5a5a5a5a5a5a5a5a5a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a89d959595959595959595959595959595959595959595
899aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d929292929292929292929a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a97970000a0a0a0a0a0a0a08c84817e7e7e7e818181818181818181
8181818181818181818181817e7e7e7676767676767676767676767676686a7b878f9595
959595959797979797979797979797979797979289898c929297a3a3a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a3a3a3978f8f8f8f8f8f8f8f8f8f8f8c898989898787878454627e878f
97979797979797979797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3
8f8f9da0a0a0a0a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a95a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d
9d9d9d9d979797979797978c8c8c8c8c8c8c8c8c8c8c8c7e878992a0aebcbcbcbcbcbcbc
bcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a0a0a09d9a9a9a9a92929292927b737373737373
737373737070707070707070707070707070706a6a737676767676787b89a3b9dde0e0e0
e0e0e0e0e0e0e0e0e0e0e0e0dddddddbdbdbdbcfab9a9a9a9a9a9a8181818c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c878484848487878787878787878787878787878f9aa5a5a5a5a5a5
a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d95959595959595959595959595
9595959595959595899aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8f8f8f8f8f8f8f8f
8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97970000a0a0a0a0a0a0a08c8481787e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e76767676767676767676767676
76656a7b878f9595959595959797979797979797979797979797978c89898c8c8c8c8c95
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3978c8c8c8c8c8c8c8c8c8c8c8c8989898987
878787817b7e878f97979797979797979797979797979797979797aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaea38f8f9da0a0a0a0a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5
a5a3a0a0a09a95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0
a0a0a09d9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a0a0a09d9a9a9a9a92929292
927b73737373737373737373707076767676767676767676767676767676767676767678
7b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0dddddddbdbdbdbcfab9a9a9a9a9a9a7e
7e8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87848484848787878787878787878787878787
8f9aa5a5a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9595959595
95959595959595959595959595959595899aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d
8c8989898989897e7e899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97970000a0a0a0a0a0a0a0
8c8481737878787878787878787878787878787878787878787878787878787676767676
767676767676767676627081878f9595959595959797979797979797979797979797978c
89898989898989a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a0978c8c8c8c8c8c8c8c8c
8c8c8c898989898787878787877e878f97979797979797979797979797979797979797ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea38f8f9da0a0a0a0a0a0b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1a5a5a5a5a5a3a0a0a09a95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0aebcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b3b3b3b3b3b3b1a0a0a09d
9a9a9a9a92929292927b7373737373737373737373767676767b7b7b7b7b7b7b7b7b7b7b
7b7b7b7b767676787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0dddddddbdbdbdbcf
ab9a9a9a9a9a9a979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f8784848484898989898989
89898989898989898f9aa3a3a3a3a3a3a3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a89d9595959595959595959595959595959595959595958f9aa5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a59d8c8989898989897678899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979700
00a0a0a0a0a0a0a08c848173737373737373737373737373737073767676767676767676
76767676767676767676767676767676766a8181878f9595959595959797979797979797
979797979797978c899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a09792
9292929292929292929292878787878787878787877e878f979797979797979797979797
97979797979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea38f8f9da0a0a0a0a0a0b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a95a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797979a
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d9a9a9a9a92929292927b73767676767676767676787e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e767676787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0
dddddddbdbdbdbcfab9a9a9a9a9a9a9a9a9a978f8f8f8f8f8f8f8f8f8f8f8f8f8f878484
848489898989898989898989898989898f9a9a9a9a9a9a9a9a9a9a9da8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a89d95959595959595959595959a9a9a9a9a9a9a9a9a9a9aa5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c8989898989897e78899a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a97970000a0a0a0a0a0a0a08c847870707070707070707070707070706a6a6a
6a6a6a6a6a6a6a6a626d767676767676767676767676767b7b7b8181878f959595959595
9797979797979797979797979797978c899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a3a3a097929292929292929292929292898787878787878787877e878f97979797
979797979797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab959597a0
a0a0a0a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a95a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d
979797979797979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0979292929292929292
92929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797977e76787878787878787878
7881878989898989898989898989898989897e7e767676787b89a3b9dde0e0e0e0e0e0e0
e0e0e0e0e0e0e0e0dddddddbdbdbdbcfab9a9a9a9a9a9a9a9a9a978f8f8f8f8f8f8f8f8f
8f8f8f8f8f87848484848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f9a9a9a9a9a9a9a9d9da0a0
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d95959595959595959595959a9a9a9a9a9d
9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c8989898989898989899a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a97970000a0a0a0a0a0a0a08f8f78707070707070707070
70707070706a6a6a6a6a6a6a6a6a6a6a626a6a6a6a6a6a6a6a6a6a6a6a6a737b7b818181
878f9595959595959797979797979797979797979797978c899a9a9a9a9aa5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a3a3a097929292929292929292929292898787878787878787
877e878f97979797979797979797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeab9d9d95929a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0
a09a95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d
9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097
9292929292929292928f8f89819a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9595
95959595959595847881878989898989898989898989898989897e7e767676787b89a3b9
dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0dddddddbdbdbdbcfab9a9a9a9a9a9a9a9a9a978f
8f8f8f8f8f8f8f8f8f8f8f8f8f877b7e87959797979797979797979797979797979a9a9a
9a9a9a9a9d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d959595959595959595
95959a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c898989
9595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97970000a0a0a0a0a0a0a092927870
707070707070707070707070706a6a6a6a6a6a6a6a6a6a6a626262626262625c57575a62
6262737b7b818181878f9595959595959797979797979797979797979797978c899a9a9a
9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a09792929292929292929292929289
8787878787878787877e879797979797979797979797979797979797979797aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeabababa097898c929aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
a5a5a5a5a5a3a0a0a09a92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0978989898989898989898989786d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a847881878989898989898989898989898989897e7e
767676787b89a3b9dde0e0e0e0e0e0e0e0e0e0e0e0e0e0e0dddddddbdbdbdbd8ae9a9a9a
9a9a9a9a9a9a978f8f8f8f8f8f8f8f8f8f8f8f8f8f877b7e8f9797979797979797979797
97979797979a9a9a9a9a9a9a9d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d95
959595959595959595959a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a59d8c8989899595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f0000a0a0a0
a0a0a0a09292787070707070707070707070626262626262626262626262626262575757
57574943404349576262737b7b818181878f929292959595979797979797979797979797
9797978c899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a0979292929292
92929292929292898787878787878787877e899797979797979797979797979797979797
979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa09d9a9a9a9aa0b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09789898989898989898484847b739a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a84788187898989898989898989
8989898989897e7e767676787b89a3b3dbe0e0e0e0e0e0e0e0e0e0e0e0e0e0e0dddddddb
dbdbdbdbb19a9a9a9a9a9a9a9a9a978f8f8f8f8f8f8f8f8f8f8f8f8f8f89878795979797
979797979797979797979797979a9a9a9a9a9a9a9d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a89d95959595959595959595959a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59d8c8989899595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a958f0000a0a0a0a0a0a0a0929278707070707070707070707068686868686868626262
6262626257433e3e3e3e3b38383b40516262737b7b81818181818181818c959597979797
97979797979797979797978c899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3
a3a09792929292929292929292929292929292929292928787818f979797979797979797
9797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa09d9a9a9a9a
a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a97a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d97979797
9797979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097898989898989898989898989
899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9281848789
89898989898989898989898989897e7e767676787b8997a8cfe0e0e0e0e0e0e0e0e0e0e0
e0e0e0e0dddddddbdbdbdbdbbf9a9a9a9a9a9a9a9a9a978f8f8f8f8f8f8f8f8f8f8f8f8f
8f8c878f95979797979797979797979797979797979a9a9a9a9a9a9a9d9da0a0a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a89d95959595959595959595959a9a9a9a9a9d9d9da5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c8989899595959595959a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a958f00009797979797979792927870707676767676767676767676
767676766d6262625f5f5f5c4c352d32323232323238404e6262737b7b81818181818181
818c959597979797979797979797979797979787899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a3a3a09792929292929292929292929292929292929292928787899597
97979797979797979797979797979797978f97aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeab
ababa09d9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a97a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a09d9d9d9d9d
9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09789898989
8989898989898989899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a958c8c8c8c8c8c8c8c8c8c8c898989898989897e7e76686868707b8797bcdddddd
dddddddddddddddddddddddddddddddbdbdbdbdbd8b1abababababababa3978f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f95979797979797979797979797979797979a9a9a9a9a9a9a
9d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d95959595959595959595959a9a
9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d8c89898995959595
95959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f0000959595959595959292787070767676
7676767676767676767676766d6262625f5c5c5c4630242a2a2a2a2d35383e465762737b
7b81818181818181818c959597979797979797979797979797979787899a9a9a9a9aa5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a0979292929292929292929292929292929292
929292878795959797979797979797979797979797979797978c97aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeabababa09d9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5
a5a3a0a0a09a97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0
a0a0a09d9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a097898989898989898989898989899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a958c8c8c8c8c8c8c8c8c8c8c898989898989897e7e765f5a5a
5f70848ca8d2dddddddddddddddddddddddddddddddddddbdbdbdbdbdbcdb9b9b9b9b9b9
aea3978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95979797979797979797979797979797
979a9a9a9a9a9a9a9d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d8c95959595
9595959595959a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d
8c8989899595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f000095959595959595
92927870707676767676767676767676767676766d6262625a57575743322a272727272a
3538383e465f737b7b81818181818181818c959597979797979797979797979797979787
899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a097929292929292929292
9292929292929292929292878995959797979797979797979797979797979797978997ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa09d9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1a5a5a5a5a5a3a0a0a09a97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797979aa0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a097898989898989898989898989899a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958c8c8c8c8c8c8c8c8c8c8c8989898989
89897e7e765c54575f6d818997bcdddddddddddddddddddddddddddddddddddbdbdbdbdb
dbdbc4c4c4bcb9b9aea3978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9597979797979797
9797979797979797979a9a9a9a9a9a9a9d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a087899292929292929292929a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a59d897e81879595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f00
009292929292929292927870707676767676767676767676767676766d6262624e4e4e4e
43322a27272724273538383e465f737b7b81818181818181818c95959797979797979797
9797979797979787899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a39a9792
929292929292929292929292929292929292928792959597979797979797979797979797
97979797979297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa09d9a9a9a9aa0b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a97a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a09d9d9d9d9d9d9d9d9d979797979797979a
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097898989898989898989898989899a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292929292928c8c
8c8c8c898989898989897e7e765f5a5c656a76818cb1dbdbdbdbdbdbdbdbdbdbdbdbdbdb
dbdbdbdbdbdbdbdbdbdbd5cacabcb9b9aea3978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
9597979797979797979797979797979797979797978f959a9d9da0a0a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a089848c8c8c8c8c8c8c8c8c9a9a9a9a9a9d9d9da5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d89878f959595959595959a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a928f0000929292929292929292787070767676767676767676767676767676
6d62625c4c4646463b322a27272722273538383e465f737b7b81818181818181818c9595
97979797979797979797979797979787899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a39a9a9792929292929292929292929292929292929292928c9295959797979797
979797979797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa09d
9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a3a0a0a09a97a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a08c878c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978989898989898989
898989898989898792929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d928c8c8c8c8c898989898989897e7e766a5c5f656a6d7b8caed5dbdbdbdbdb
dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbcacabcb9b9aea3978f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f9597979797979797979797979797979797979797978f89959d9da0a0
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d8787878787878787878c9a9a9a9a9a9d
9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d929292959595959595959a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a8181000092929292929292929278707076767676767676
76767676767676766d62625c4e433e3e3b322a272727272d3535353e465f737b7b818181
81818181818c959597979797979797979797979797979787899a9a9a9a9aa5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59d9a9a9792929292929292929292929292929292929292928c
9295959797979797979797979797979797979797979797aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeabababa09d9a9a9a9aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0
a09a97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a09d8476
7b8c8c8c8c8c8c8c8c8c8c8c8c8c8c9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097
8989898989898989898989898989898789929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c898989898989897e7e76706265686d7081
8caec7dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbd2d2bcb9b9aea3978f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9597979797979797979797979797979797979797
979597979d9da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9292929292929292
92929a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d92929295
95959595959595959595959595959595958c8c8c8c818100009292929292929292927870
707676767676767676767676767676766d5c5a5a4e463e3b3b35302d303030303535353e
465f737b7b81818181818181818c959597979797979797979797979797979787899a9a9a
9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a39595959592929292929292929292929292
929292929292928c9295959797979797979797979797979797979797979797aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeabababa09d9a9a9a9a92979797979797979797979797979797
9797979797979797979797a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a09792928f8481848c8c8c8c8c8c8c8c8c8c8c8c8c8c9aa0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0978989898989898989898989898989898789929a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c898989898989897e7e
7670686a737373878caeb6dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb
d8bcb9b9aea3978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f959797979797979797979797
9797979797979797979797979d9da0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d
929292929292929292929a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a59d9292929595959595959595959595959595959595958989898981810000929292
9292929292927870707676767676767676767676767676766d5754545454493e3b3b3b38
383838383838383e465f737b7b81818181818181818c9595979797979797979797979797
97979787899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5978f9292929292929292
9292929292929292929292929292928c9295959797979797979797979797979797979797
979797aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa09d9a9a9a9a8c95959595959595
95959595959597979797979797979797979797a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a0817b7b7b7b84848c8c8c8c8c8c8c8c8c8c8c8c8c8c9aa0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8489929a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c89
8989898989897e7e76706d70767676878c9aa3c7dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb
dbdbdbdbdbdbdbdbd8bcb9b9aea39795928f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95979797
97979797979797979797979797979797979797979d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d929292929292929292929a9a9a9a9a9d9d9da5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59d929292959595959595959595959595959595959595848181
8181810000929292929292929292787070767676767676767676767676767676705c5c5c
5c5c5c4943434343403b3b3b3b3b3b3e465f737b7b81818181818181818c959597979797
979797979797979797979787899a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5978f
92929292929292929292929292929292929292929292928c929595979797979797979797
9797979797979797979797abababababababababababababababababababa09d9a9a9a9a
959595959595959595959595959597979797979797979797979797a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0787878787884848c8c8c8c8c8c8c8c8c8c8c
8c8c8c9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8489929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d928c8c8c8c8c898989898989897e7e76706d7076767e87898992b6dbdbdbdbdbdbdbdb
dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbd8bcb9b9aea39797958c8f8f8f8f8f8f8f8f8f8f
8f8f8f8f9597979797979797979797979797979797979797979797979d9da3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d929292929292929292929a9a9a9a9a9d9d9da5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59292929295959595959595959595959595
95959595958f8f8f8f8f8f0000929292929292929292786a707676767676767676767676
767676767673737373737354434343434340404040404040465f737b7b81818181818181
818c959597979797979797979797979797979787899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a978f92929292929292929292929292929292929292929292928c92959597
97979797979797979797979797979797979797ababababababababababababababababab
ababa09d9a9a9a9a979797979797979797979795959597979797979797979797979797a0
a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a07b7b78787884848c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7b8489898f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8489929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d928c8c8c8c8c898989898989897e7e7673737376767e87878789a8
d5dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbd8bcb9b9aea39797978f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f959797979797979797979797979797979797979797979797
9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d929292929292929292929797
9797979d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5929292929595959595
95959595979d9d9da0a0a0a0a0a0a0a0a0a0a00000929292929292929292767076767676
767676767676767676767676767676767676765a434343434340404040404040465f737b
7b818181818181818181818181818181818178878787878787878787898c8c8c8c8c8c8c
8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f9292929292929292929292929292929292929292
9292928c9295959797979797979797979797979797979797979797ababababababababab
ababababababababababa09d9a9a9a9a9797979797979797979797959595979797979797
979797979797979797979797979795929297a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8484
78787884848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84848484848489898f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8489929a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c8787878787877e7b7b76767676
76767e87878789a0cadbdbdbdbdbdddddddddddddddddddddddddddddddbdbdbd8bcb9b9
aea39797978f8f8f8f929797979797979797979797979797979797979797979797979797
97979797979797979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d92929292
92929292929295959595959d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a592
929292959595959595959595979d9d9da0a0a0a0a0a0a0a0a0a0a0000092929292929292
92927e7e7e7e7e7e7e7e7e7e7b7b767676767676767676767676766a4343434343404040
40404040465f7378787878787878787878787878787878787878787878787878767e7e7e
7e7e7e7e7e7e7e7e7e8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f929292929292929292929292
92929292929292929292928c9295959797979797979797979797979797979797979797ab
ababababababababababababababababababa09d9a9a9a9a979797979797979797979795
9595979797979797979797979797979797979797979795899297a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a59a848478787884848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848484
84848489898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848992959595959a9a
9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c8784848484
847e7b7b7676767676767e878787899ac1dbdbdbdbdbdddddddddddddddddddddddddddd
dddbdbdbd8bcb9b9aea39797978f8f8f8f929da0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39a9a979797979797979797979797979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a09d9292929292929292929295959595959d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a092929292959595959595959595979d9d9da0a0a0a0a0a0a0a0a0a0a000
009292929292929292928181818181818181817e7b7b7676767676767676767676767676
49434e4e4e4e4e4e4e4e4e4e4e5f6a6a6a6a6a6a6a6a6a6d707076767676767676767676
76767676767b7e7e7e7e7e7e7e7e7e7e7e8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929292
929292929292929292929292929292929292928c92959597979797979797979797979797
979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a97979797
97979797979797959595979797979797979797979797979797979797979795899297a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a59a848478787884848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c84848484848489898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84
898c8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c
8c8c8c8784848484847e7b7b7676767676767e878787899abcdbdbdbdbdbdddddddddddd
dddddddddddddddddddbdbdbd8bcb9b9aea39797978f8f8f8f929da0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39a9a979797979797979797979797979da8abababababababababab
ababababababa3a3a3a3a09d929292929292929292929595959595959595959595959595
95959595959595959595959595959592929292959595959595959595979d9d9da0a0a0a0
a0a0a0a0a0a0a000009292929292929292928181818181818181817e7b7b767676767676
76767676767676765c51515151515151515151514e5c5c5c5c5c5c5c5c5c5c5f6d707676
767676767676767676767676767b7e7e7e7e7e7e7e7e7e7e7e898f8f8f8f8f8f8f8f8f8f
8f8f8f8f97979797979797979797979797979797979797959292928c9295959797979797
979797979797979797979797979797979797979792979797979797979797979797979797
9797979797979797979797979797979595959595959595959595959595958f8989898989
898989899297a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a848478787884848c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c84848484848489898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f84898c8c8c8c8c9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d928c8c8c8c8c8784848484847e7b7b7676767676767e878787899abccfdbdb
dbdbdddddddddddddddddddddddddddddddbdbdbd8bcb9b9aea39797978f8f8f8f929da0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a959595959597979797979797979da8abab
ababababababababababababababa3a3a3a3a09d92929292929292929292959595959595
959595959595959595959595928f8f8f8f8f8f8f8f8f8f92929292959595959595959595
979d9d9da0a0a0a0a0a0a0a0a0a0a000008c8c8c8c8c8c8c8c8c8181818181818181817e
7b7b76787878787878787878787878787878787878787873736a5a544e4e4e4e4e49495a
5c5c5c5f6d70767676767676767676767676767676787e7e7e7e7e7e7e7e7e7e7e878f8f
8f8f8f8f8f8f8f8f8f8f8f8f97979797979797979797979797979797979797957e81878c
929595979797979797979797979797979797979797979797979797979597979797979797
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979797979795979797979797979797979797
9797979795898989898989899297a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a848478787884
848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84848484848484818f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84848484847b849a9a9a9a9a9a9a9a9a9a9a9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c8784848484847e7b7b7676767676767e87
8787899ab3bfdbdbdbdbdddddddddddddddddddddddddddddddbdbdbd8bcb9b9aea39797
978f8f8f8f929da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a8f8f8f8f8f97979797
979797979da8ababababababababababababababababa3a3a3a3a09d9292929292929292
9292959595959595959595959595959595959595929292929292928f8f8f8f9292929295
9595959595959595979d9d9da0a0a0a0a0a0a0a0a0a0a000007878788181818181818181
818181818181817e7b7e7e929292929292929292929292929292928787878773736a5a54
4e4e4e4e4e4949545c5c5c5f6d70707070707070707070707070707070787e7e7e7e7e7e
7e7e7e7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f8f97979797979797979797979797979797
979797957e7b878c92959597979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9797
95979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979797959da0a0a0
a0a0a0a0a0a0a0a0a0a0a0a095898989898989899297a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a59a848478787884848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84848484848484
848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848484848473849a9a9a9a9a9a
9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c8784848484847e7b7b
7676767676767e878787899aa8aed2dbdbdbdddddddddddddddddddddddddddddddbdbdb
d8bcb9b9aea39797978f8f8f8f929da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a8f
8f8f8f8f97979797979797979da8ababababababababababababababababa3a3a3a3a09d
92929292929292929292959595959595959595959595959595959595959595959595958f
8f8f8f92929292959595959595959595979d9d9da0a0a0a0a0a0a0a0a0a0a00000767678
8181818181818181818181818181817e7b929aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a87
87878773736a5c544e4e4e4e4e46464c5a5c5c5f6d707373737373737373737373737373
78787e7e7e7e7e7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f8f9797979797979797
9797979797979797979797977e78898c9295959797a0ababababaeaeaeaeaeaeaeaeaeae
aeaeaeaeae9a979795979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797
979797959da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958989897e8789899295959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a848473787884848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8484848484
73849a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928c8c8c8c8c87
84848484847e7b7b76767676767e7e878787899aa5a5bcdbdbdbdddddddddddddddddddd
dddddddddddbdbdbd8bcb9b9aea39797978f8f8f92959da3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a09a8f8f8f8f8f97979797979797979da8abababababababababababababab
ababa3a3a3a3a09d92929292929292929292959595959595959595959595959595959595
959595959595958f8f8f8f92929292959595959595959595979d9d9da0a0a0a0a0a0a0a0
a0a0a000007676788181818181818181818181818181817e7b92a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a39a8787878781818165544e4e4e4e4e433b3b4e5c5c5f6a6d7b8181818181
818181818181818181818181818181818181818181878f8f8f8f8f8f8f8f8f8f8f8f8f8f
9797979797979797979797979797979797979797897b898c9295959797a0ababababaeae
aeaeaeaeaeaeaeaeaeaeaeaeae9a979795979797979797979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9797979797979797959daeaeaeaeaeaeaeaeaeaeaeaeaeaeae958989846d788787
8787878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848478787884848c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c959797979797979797979797979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f848484848473849a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d92848484848484847e7e7b7b7b7b7b76767676767e7e878787899aa5a5aecfdbdbdddd
dddddddddddddddddddddddddddbdbdbd8bcb9b9aea39797978f8f8f9a9a9da3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a09a8f8f87818997979797979797979da8abababababab
ababababababababababa3a3a3a3a09d9292929292929292929292929292929295959595
9595959595959595959595959595958f87878992929292959595959595959595979d9d9d
a0a0a0a0a0a0a0a0a0a0a000007676788181818181818181818181818181817e7b92a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8787878781818168544e4e4e4e4e4e3e30405c5c5f
626d7b8181818181818181818181818181818181818181818181818181878f8f8f8f8f8f
8f8f8f8f8f8f8f8f9797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a89898c92959597
97a0ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a979795979797979797979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9797979797979797959daeaeaeaeaeaeaeaeaeaeaeaeaeaeae
958989847e7e87878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848484848484848c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c959797979797979797979797979797978f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f848484848473848f8f8f8f8f8f8f8f8f8f8f9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d847b7b7b7b7b7b7b7673737373767676767676767e7e878787899a
a5a5a8bfdbdbdddddddddddddddddddddddddddddddbdbdbd8bcb9b9aea39797978f878c
9a9a9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a8f8f8781899797979797979797
97a8ababababababababababababababababa3a3a3a3a09d929292929292929292929292
92929595959595959595959595959595959595959595957b767e89929292929292929292
92929292979d9d9da0a0a0a0a0a0a0a0a0a0a00000767678818181818181818181818181
8181817e7b92a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8787878781818170655c5c5c5c
5c5c5c51434c5a5a5a6d7b81818181818181818181818181818181818181818181818181
818787898f8f8f8f8f8f8f8f8f8f8f8f9797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9595959797a0ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a979795979797
979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979797959daeaeaeaeaeaeae
aeaeaeaeaeaeaeae958989847e7e87878787878787878787878787878787878787848484
848484848487878787878787878787878787878787899597979797979797979797979797
97978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8484848484737878787878787878787878
7887929292929292929292929292929292847b7b7b7b7b7b7b7673737373767676767676
767e7e878787899aa0a0a0abcddbdddddddddddddddddddddddddddddddbdbdbd8bcb9b9
aea39797978f89899a9a9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a8f8f87929a
9d9d9d9d9d9d9d9d9da8ababababababababababababababababa3a3a3a3a08c92929292
929292929292929292959595959595959595959595959595959595959595958184878787
878787878787878787878787979d9d9da0a0a0a0a0a0a0a0a0a0a0000076767881818181
81818181818181818181817e7b92a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8787878781
8181787873737370707070704343494e5a6d7b8181818181818181818181818181818181
818181818181818181817b78818f8f8f8f8f8f8f8f8f8f8f9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9595959797a0ababababaeaeaeaeaeaeaeaeaeaeaeaeaeae
ae9a979795979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979797979795
9daeaeaeaeaeaeaeaeaeaeaeaeaeaeae958989847e7e8484848484848484848484848484
8484848c8f8f979797979797979797979797979797979797979784848489959797979797
979797979797979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848484848473737373
7373737373737373686d787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b766d6a
6a73767676767676767e7e878787899a9a9a9aa3c1dbdddddddddddddddddddddddddddd
dddbdbdbd8bcb9b9aea39797978f8f8f9a9a9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a09a8f8f87959d9d9d9d9d9d9d9d9d9da8ababababababababababababababababa3a3
a3a3a0819292929292929292929292929295959595959595959595959595959595959595
9595959292929292929292929292929292928989979d9d9da0a0a0a0a0a0a0a0a0a0a000
007676788181818181818181818181818181817e7b92a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a39a87878787818181787878787870707070704340434e5a6d7b818181818181818181
8181818181818181818181818181818181817b787e898c8c8c8c8c8c8c8c8c8c9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9595959797a0ababababaeaeaeaeaeae
aeaeaeaeaeaeaeaeae9a979795979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97
97979797979797959daeaeaeaeaeaeaeaeaeaeaeaeaeaeae958989847e7e848484848484
84848484848484848484848c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797979797928f
8989959797979797979797979797979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84
84848484737373737373737373737373686268767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b70
70707070707065686a73767676767676767e7e878787899a9a9a9aa3bfdbdddddddddddd
dddddddddddddddddddbdbdbd8bcb9b9aea39a9a9a9a9a9a9a9a9da3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a09a8f8987959d9d9d9d9d9d9d9d9d9da8abababababababababab
ababababababa3a3a3a3a081929292929292929292929292929595959595959595959595
95959595959595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f979d9d9da0a0a0a0
a0a0a0a0a0a0a000007676788181818181818181818181818181817e7b92a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a08787878781818178787878787070707070433e434e5a6d7b81
81818181818181818181818181818181818181818181818181817b787e848c9292929292
929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9592929292a0abab
ababaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a979795979797979797979a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9797979797979797959daeaeaeaeaeaeaeaeaeaeaeaeaeaeae95898984
7e7e848484848c8c8c8c8c8c8c8c8c8c8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a97
97979797979797979795959797979797979797979797979797978f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f7e7e7e7e7e737373737373737373737373686268767b7b7b7b7b7b7b7b
7b7b7b7b7b7b7b65656565656565656d7073767676767676767e7e878787899a9a9a9aa3
b6cddddddddddddddddddddddddddddddddbdbd2b9b1b1b1aea3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a898987959d9d9d9d9d9d9d9d9d9da8abab
ababababababababababababababa3a3a3a3977e89929292929292929292929292959595
959595959595959595959595959595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9792
979d9d9da0a0a0a0a0a0a0a0a0a0a000007676788181818181818181818181818181817e
7b92a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a58987878781818178787878787070707070
5446464e5a6d7b8181818181818181818181818181818181818181818181818181817b78
7e848c92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9592929292a3ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a97979597979797979797
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979797929daeaeaeaeaeaeaeaeaeaeae
aeaeaeae958989847e7e848484849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a09a9797979797979797979795959797979797979797979797979797978f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c707073737373737373737373737373737368626876
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7070707070707070707073767676767676767e7e7e
7e84899a9a9a9aa3b3c1dddddddddddddddddddddddddddddddbc7a89da3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a898987959d9d9d9d9d
9d9d9d9d9da8abababababababababababababababab9d9d9d9d957e818c8c8c8c8c8c8c
8c8c8c8c8c959595959595959595959595959595959595959595959d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9797979d9d9da0a0a0a0a0a0a0a0a0a0a000007676788181818181818181
818181818181817e7b92a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8978787878181817878
7878787070707070544c4c4e5a6d7b818181818181818181818181818181818181818181
8181818181817b787b848c92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9592929292a3ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a9797
95979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95929292929292898f9daeaeae
aeaeaeaeaeaeaeaeaeaeaeae958989847e7e7e7e7e819797979797a0a0a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a09a979797979797979797979595979797979797979797
9797979797978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c706d6d6d6d6d6d6d6d6d6d6d6d
6d6d6d6d686268767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b73737373737373737373737676
76767676767e7e7e7e81899a9a9a9aa3b3c1ddddddddddddddddddddddddddddddc1a395
95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a89
8987959d9d9d9d9d9d9d9d9d9da8abababababababababababababababab9d9d9d9d9581
818c8c8c8c8c8c8c8c8c8c8c8c959595959595959595959595959595959595959595959d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979a9a9a9a9a9a9a9a9a9a9a9a9a9a0000707078
8181818181818181818181818181817e7b92a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a
87878781818178787878787070707070544c4c4e5a6d7b81818181818181818181818181
81818181818181818181818181817b73707e8c92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9592929292a3ababababaeaeaeaeaeaeaeaeaeae
aeaeaeaeae9a979795979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95928f9292
929292959daeaeaeaeaeaeaeaeaeaeaeaeaeaeae958989847e7e7e7e767b9797979797a0
a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a97979797979797979797959597
97979797979797979797979797978987878787878787878787878787878787706d6d6d6d
6d6d6d6d6d6d6d6d6d6d6d6d686268767b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7373737373
7373737373737676767676767687878787878c9a9a9a9aa3b3c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1bfa0928c8fa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a09a898987959d9d9d9d9d9d9d9d9d9da8abababababababababababababab
abab9d9d9d9d9589898c8c8c8c8c8c8c8c8c8c8c8c959595959595959595959595959595
959595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a00007076788181818181818181818181818181817e7b92a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a89a87878781818178787878787070707070544c4c4e5a6d7b8181818181
818181818181818181818181818181818181818181817b6a70848c92a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958c8c9292a3ababababaeae
aeaeaeaeaeaeaeaeaeaeaeaeae9a9595959595959595928c9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9797979797979797979daeaeaeaeaeaeaeaeaeaeaeaeaeaeae958989847e7e7e7e
73769797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a9797979797
97979797979595979797979797979797979797979797897e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7065656565656565656565656565656565656268707b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b7373737373737373737373767676767676768f92929292929a9a9a9aa3b3c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1b1928f8f8fa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a09a897b81959d9d9d9d9d9d9d9d9d9da8abababababab
abababababababababab9d9d9d9d958f8f8f8f8f8f8f8f8f8f8f8f8f8f95959595959595
9595959595959595959595959595959d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09d00007076788181818181818181818181818181817e7b97a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a87878781818178787878787070707070544c4c4e
5a6d7b8181818181818181818181818181818181818181818181818181817b6d76848c92
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958c898c
92a3ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaba59595959595959592959d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9797979797979797979daeaeaeaeaeaeaeaeaeaeaeaeaeaeae
958989847e7e7e7e737b9797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a09a97979797979797979797959597979797979797979797979797979789767b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b6d5c5a5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f5f68707b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b7373737373737373737373767676767676768f92929292929a
9a9a9aa3b3c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1b195959595a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09a897b81959d9d9d9d9d9d9d9d9d
9da8abababababababababababababababab9d9d9d9d958f8f8f8f8f8f8f8f8f8f8f8f8f
8f959595959595959595959595959595959595959595959d9d9d9d9d9d9d9da0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a00000707678818181818181818181818181
8181817e7897a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a878787818181787878787870
70707070544c4c4e5a6d7b81818181818181818181818181818181818181818181818181
81817b7b7e848c92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a958f8f8f92a3ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaba59595959595
959592959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797979daeaeaeaeaeaeae
aeaeaeaeaeaeaeae958181817e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a09a97979797979797979797959597979797979797979797979797
9797897b7b7b7b7876767676767676767676736a5c545454545454545a5f5f5f5f5f5f5f
5f5f68707b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7373737373737373737373767676767676
768f92929292929a9a9a9aa3b3c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1b195959595a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a09a897b81959d
9d9d9d9d9d9d9d9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9a9a9a958f8f8f8f8f
8f8f8f8f8f8f8f8f8f959595959595959595959595959595959595959595959d9d9d9d9d
9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0000070767881818181
8181818181818181818184848497a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a87878781
818178787878787070707070544c4c4e5a6d7b8181818181818181818181818181818181
818181818181818181817b8989898c92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f92a3ababababaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaba59595959595959592959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797979797979797
9daeaeaeaeaeaeaeaeaeaeaeaeaeaeae958181817e7e7e7e7b849797979797a0a0a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a9797979797979797979795959797979797
979797979797979797978f8f8f8f8f7876767676767676706d65625a514e4e4e4e4e4946
515f5f5f5f5f5f5f5f5f68707b7b7b7b7b7b7b7b7b7b7b7b7b7b7b737373737373737373
7373737373737370768f92929292929a9a9a9aa3b3c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
b195959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a
9a9a9a897b81959d9d9d9d9d9d9d9d9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a08f8c
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95959595959595959595959595959595959595
9595959d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a000
0070767881818181818181818181818181818c8c8c97a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a89a81818181818178787878787070707070544c4c4e5a6d7b818181818181818181
8181818181818181818181818181818181817b8c8c8c8c92a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f92a3ababababaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaba59595959595959592959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97
97979797979797979daeaeaeaeaeaeaeaeaeaeaeaeaeaeae928181817e7e7e7e7b849797
979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a979797979797979797
9795959797979797979797979797979797978f8f8f8f8f7876767676767670655f544c43
4343434343433e43515f5f5f5f5f5f5f5f5f687073737373737373737373737373737373
73737373737373737373737373737370768f9292929292959a9a9aa3b3bfbfbfbfbfbfbf
bfbfbfbfbfbfbfbfa895959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a897b81959d9d9d9d9d9d9d9d9d9da8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a88c7e818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9595959595979797979797
97979797979797979797959d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a000007076787e7e7e7e7e7e7e7e7e7e7e7e7e7e8c8f9597a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a89a81818181818178787878787070707070544c4c4e5a6d7b81
81818181818181818181818181818181818181818181818181817b8c97979a9aa0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f92a3abab
ababababababababababababababababababa59595959595959592959d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9797979797979797979daeaeaeaeaeaeaeaeaeaeaeaeaeaeae877e7e7e
7e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a97
97979797979797979795959797979797979797979797979797978f8f8f8f8f7876767676
76766d5f5c544c433e3e3e3e3e3b383b495f5f5f5f5f5f5f5f5f62626262656870737373
7373737373737373737373737676767676767676767676767e8f9292929292959a9a9aa3
abababababababababababababababa5a595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a897b81959d9d9d9d9d9d9d9d9d9da8a8a8
a8a8a8a8a8a8a8a8a8a8a8a89d7e76818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f959595
959597979797979797979797979797979797959d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0
a0a0a0a0a0a5a5a5a5a5a5a5a5a5a500007076787e7e7e7e7e7e7e7e7e7e7e7e7e848f92
9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a81818181818178787878787070707070
544c4c4e5a6a6a6a737b7b7b7b7b7b7b7b7b7b7b7b7b7b7b767b7b7b7b7b7b7b7b7b7b8c
97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
958f8f8f92a3ababababababababababababababababababababa5959595958f8f929295
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797979daeaeaeaeaeaeaeaeaeaeae
aeaeaeae877e7e7e7e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a09a9797979797979797979795959797979797979797979797979797978f8f
8f8f8f787676767676766d5f5c544c433b3532323538383b465457575757575757575757
57575f6870737373737373737373737373737373767b7b7b7b7b7b7b7b7b7b7e92979797
9797979797979797979797979797979797979797979797979795959595a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f8f897b78959d9d9d9d9d
9d9d9d9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d8176818f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f959595959597979797979797979797979797979797959d9d9d9d9d9d9d9da0
a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a500007076787e7e7e7e7e7e7e7e
7e7e8181899aa0a0a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8181818181817878
7878787070707070544c4c4c4949494e5a6a7676767878787878787878787878787b7b7b
7b7b7b7b7b7b7b8c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a958f8f8f92a3ababababababababababababababababababababa58f
8f8f8f8f8f9292959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797979daeaeae
aeaeaeaeaeaeaeaeaeaeaeae877e7e7e7e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a09a979797979797979797979595979797979797979797
9797979797978f8f8f8f8f787676767676766d5f5c544c433b322a2d3538383b46494e51
515151515151515151545f68707373737373737373737373737373737b81818184848484
8484848f92979797979797979797979797979797928c8c95959595959595959595959595
95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9a9a9a9a9a9a9a9a9a9a848484848484
7378959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d84848c8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f959595959597979797979797979797979797979797959d
9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a50000707678
7e7e7e7e7e7e7e7e7e7e81878f9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a89a
78787878787878787878787070707070544c4c4c464343494e5f7676767b7b7b7b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a
9a9a9a9a9a9a9a9a9792929292929292928f8f8f92a3abababababababababababababab
ababababababa58f8f8f8f8f8f9292959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797
979797979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8877e7e7e7e7e7e7e7b849797979797a0
a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a97979797979797979797959597
97979797979797979797979797978f8f8f8f8f7876767676766a6a5f5c544c433b322a2d
3538383b43464649494c51515151515151515a6870737373737373737373737373737373
7b818181959595959595959595979797979797979797979797979797928c8c9595959595
959595959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9595959595959595959595
95897e7e7e7e7e7e6a78959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f959595959597979797979797979797
979797979797959d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5
a5a5a500006a76787e7e7e7e7e7e7e7e7e7e81878f9aaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaea8a8a8a8a89a81818181818181818181787070707070544c4c4c464343494c51626a
6d7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8c97979a9aa0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a978f8f8f8f8f8f8f8f8f8f8f92a3abababababab
ababababababababababababababa58f8f8f8f8f8f9292959d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d97979797979797979797979797979797979797979797979797877e7e7e7e7e7e7e
7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a9797979797
979797979795959797979797979797979797979797978f8f8f8f8f78767676767665655f
5c544c433b322a2d3538383b3e434649494c515151515151515157687076767676767676
76767676767676767b818181a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59797979797979797
928c8c9595959595959595959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a898184
848484848484848484848484848484766d78959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95959595959797
9797979797979797979797979797929d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0
a0a5a5a5a5a5a5a5a5a5a500006a76787e7e7e7e7e7e7e7e7e7e81878f9aaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaea8a8a8a8a89a81818181818181818181787070707070544c4c4c
4643434343434957787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b8c97979a9a
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0929292929292929292928f8f8f8f8f8f8f8f8f8f8f
92a3ababababababababababababababababababababa58f8f8f8f8f8f9292959d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d97979797979797979797979797979797979797979595959595
877e7e7e7e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a09a9797979797979797979795959797979797979797979797979797978f8f8f8f8f78
767676767665655f5c544c433b322a2d3538383b3e434649494c4e4e4e51515151515768
707676767676767878787878787878787b818181a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9797979797979797928c8c9595959595959595959595959595a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3898181848484848484848484848484848484847370789597979797979797979d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f959595959597979797979797979797979797979797899a9a9a9a9a9a9a9aa0a0a0a0a0
a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a500007676787e7e7e7e7e7e7e7e7e7e8187
8f9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a89a818181818181818181817870
7070706d544c4c4c46434343433e435781818181818181818181818181818181817b7b7b
7b7b7b8c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f92a3a5abababababababababababababababababababa58f8f8f8f8f
8f9292959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d979595877e7e7e7e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a09a97979595959595959595959597979797979797979797979797
97978f8f8f8f8f78767676767665655f544343433b322a2d3538383b3e43464646464646
4649515151515768707676767676767b7b7b7b7b7b7b7b7b7b818181a0a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59797979797979797928c8c9595959595959595959595959595a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3898184848484848484848484848484848484847873788787
87878787878787979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958c8c8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f929292929297979797979797979797979797979797979797979797
92898fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a500007676787e7e7e7e
7e7e7e7e7e7e81878f9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a89a81818181
818181818181787070624e4c4c4c4c4c46433b3e3e3e43578c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c7b7b7b7b7b7b8c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f898489a3ababababababababababababababab
ababa58f8f8f8f8f8f9292959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d979595877e7e7e7e7e7e7e7b849797979797a0a0a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09a979595959595959595959595957862818f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f787676767662626254463e3838382d2a2d3538383b
3e4040404040404040434c5151515768707676767676767b7b7b7b7b7b7b7b7b7b818181
a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59797979797979797928c8c959595959595959595
95959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a89818484848484848484848484848484
8484847b7378878787878787878787959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958c8c8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84848f97979797979a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a92818fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a500
007676787e7e7e7e7e7e7e7e7e7e81878f9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8
a8a39a9a818181818181818181817870705440404040404040403b3e3e3e43578c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c7b7b7b7b7b7b8c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0
a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f817e87a3ababababababab
ababababababababababa58f8f8f8f8f8f92929595959595959595959597979797979797
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979595877e7e7e7e7e7e7e7b849797
979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959595959595
959595846a68818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f78767676684c4c4c4c403e3832
2d2d2a2d3232323232323232323232323232323551515762707676767676767b7b7b7b7b
7b7b7b7b7b818181a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59797979797979797928c8c95
95959595959595959595959595959595959595959292929292928f8f8981848f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f897e7378848484848484848484959d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9a928c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84849297979797979a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5
a5a5a5a5a5a5a500007676767676767676767676767681878f9aaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaea8a8a8a09a9a818181818181818181817870703e383b3b3b3b3b3b3b3b3b
3b3b40578c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7b7b7b7b7b7b8c97979a9aa0a0a0a0
a0a0a0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f817e87
a3abababababababababababababababababa58f8f8f8f87899292959595959595959595
959797979797979797979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979595877e7e7e
7e7e7e7e7b849797979797a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f787676765f
46464646403b35322d2d2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a272a30404e545c70767676
7676767b7b7b7b7b7b7b7b7b7b818181a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a597979797
97979797928c8c9595959595959595959595959595959595959595959292929292928f8f
8981849797979797979797979797979797978f817373848484848484848484959a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a958c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84
849297979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8fa0a0a0a0a0a0a0a0a0
a0a0a0a0a0a5a5a5a5a5a5a5a5a5a500007676767676767676767676818184878f9aaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a09a9a8181818181818181818178706a383838
3838383838383838303840578c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7b7b7b7b7b7b8c
97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f878787a3abababababababababababababababababa58f8f8f8f878c929295
9595959595959595959595959595959595959595929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d979595877e7e7e7e7e7e7e7b8489898989898997a3a5a5a5a5a5a5a5a5a5a5a5ababab
ababababababababababababa5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f7876767654403e3e3b3530272a2a2a2a2a2a2d323232323232323232323235464c
4c4c515a707676767676767b7b7b7b7b7b7b7b7b7b818181a0a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a89797979797979797928c8c959595959595959595959595959595959595959595
9292929292928f8f8981849797979797979797979797979797978f8973707b8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848c8c8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f84849297979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92a0
a0a0a0a0a0a0a0a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a500007676767676767676767676
8f8f8f9a9a9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a09a9a8181818181818181
818178705f46463e3e383838383838382d435a6d8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c7b7b7b7b7b7b8c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f878787a3abababababababababababababababababa58f
8f8f8f8c8c9292959595959595959595959595959595959595959797979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d979595877e7e7e7e7e7e7e7b8484848484848997a0a0a0a0a0a0a0
a0a0a0a0a0abababababababababababababababa5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f786a655743383027241f1916222a2a2a2a2a2d323232323232
3232323235404e515151575a6d7676767676767b818181818181818181818181a0a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a89797979797979797928c8c95979797979797979797979797
979797979797978181818181818181818181849797979797979797979797979797978f89
7376848f8f8f8f8f8f8f8f95959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d898c8c8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84849297979797979a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a92a0a0a0a0a0a0a0a0a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a50000767676
76767676767676768f97979a9a9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a0a0a09a9a
818181818181818181815f57514e493e3e38383838383835385f84878c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c7b73706d6a788c97979a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878787a3a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a58f8f8f8f8c8c9292959595959595959595959595959595959595959797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d978176787b7b7b7b7b7b7b7b7b7b7b7b7b7b89
97a0a0a0a0a0a5ababababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a5a5a0a0a0a0a0
a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f8f8f81736a5f463b322a22160b060b1f2a2a2a
2a2d3232323232323232323235404e5454545a5a657676767676767b8181818181818181
81818181a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89797979797979797928c8c9597979797
979797979797979797979797979797818181818181818181818184979797979797979797
9797979797978f89737b8f8f8f8f8f8f8f8f8f95959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8f8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84849297979797979a9a9a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a92a0a0a0a0a0a0a0a0a3a3a3a3a3a3a5a5a5a5a5a5a5
a5a5a5000076767676767676767676768f9a9a9a9a9aaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaea397959595958181818181818181818162545451493e3e3838383838383857848787
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c817b685c65788f97979a9aa0a0a0a0a0a0a0a0
a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f878787a3a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a58f8f8f8f8c8c929295959595959595959595959595
9595959595959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797897e7e7e7e7e7e7e7e
7e7e7e7e7e7b7e8997a0a0a0a0a0a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a5a5a5a0a0a0a0a0a0a0a0a08c8c8c8c898989848484848484848481817e7b5a51493b30
22160600112a2a2a2a2d3232323232323232323235404e575c5c5c626a7676767676767b
818181818181818181818181a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89797979797979797
8c8489929797979797979797979797979797979797979784848484818181818181818497
97979797979797979797979797978f897b848f929292929292929295959da8a8a8a8a8a8
a8a8a8a8a8a8a8a8a88f8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8484929797
9797979a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a92a0a0a0a0a0a0a0a0a3a3a3a3a3
a3a5a5a5a5a5a5a5a5a5a5000076767676767676767676768f9a9a9a9a9aaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaea397898989898181818181818181818173655f57493e3e383838
3b3e3e4c788787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87876857627e9597979a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c7e7b
7e8787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f878c8c8f8f8f8f8f8f8f
8f8f9292929292929292929292929797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a
927e7e7e7e7e7e7e7e7e7e7e7e7b7e8997a0a0a0a0a0a5aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f898989898989848484848481
817e7b655f4c3b35271f0b0308192a2a2a2d3232323232323232323235404e5a6265686d
6d7676767676767b818181818181818181818181a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
97979797979797978f898992979797979797979797979797979797979797978787878481
818178818181849797979797979797979797979797978f898f8f8f959595959595959595
959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8c7e849292929292929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a92a0a0a0a0a0
a0a0a0a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5000076767676767676706568768f9a9a9a
9a9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea39789898989818181818181818181817373
685c493e3e3835323b4c5f7b878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878768
54628f95959595959595959595959595959595959595958f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f7b73787e878787979797979797979797979797979797979797978f8f8f898c
8c8c8c8c8c8c8c8c8c8c9292929292929292929292929797979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a9a9a9a8484848484848484848484847b7e8997a0a0a0a0a0a5aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f89898989
8989848484848481817e7b655f4c3b352722140b08111c242a2d323b3b3b3b3b3b3b3b3e
3e465462656a6d6d6d7676767676767b818181818181818181818181a0a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a897979797979797978f89899297979797979797979797979797979797
97979792928784818181787b7b7b849797979797979797979797979797978f8992959595
9595959595959595959db1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f8c8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f847b849292929292929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a92a0a0a0a0a0a0a0a0a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5000076767676767676
706265768f9a9a9a9a9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3978989898981818181
8181818181817373685c493e3e2d272a406d8787878787878c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c87876257689da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959595958f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f7b73787e87878795959595959595959595959595959595
9595959292929297979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9297979797979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a8f8f8f8f8f8f8f8f8f8f8f847b7e8997a0a0a0
a0a0a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a5a5a0a0a0a0a0a0a0a0a0
8f8f8f8f898989898989848484848481817e7b6d5f4c3b353030271c14161f243038383b
4040404040404646464c5762656a6d6d6d7676767676767b818181818181818181818181
a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f8f8f8f8f8f8f8f8f8989929797979797979797
979797979797979797979797978784818181787878768497979797979797979797979797
97978f89929595959595959595959595959db1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f8c8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9292929292929a9a9a9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a92929797979797979aa3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a500
0081818181818181706a707b8f9a9a9a9a9aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea397
84848484818181818181818181817373685c493e3e3030385c878787878787878c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8787655f73a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595
8987898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7b73787e8787878989898989898989
8989898f979797979797979797979797979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d92
97979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a8f8f8f8f8f8f8f8f8f8f8f
847b7e89979d9d9d9da0a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a5a5a0
a0a0a0a0a0a0a0a08f8f8f8f898989898989848484848481817e7b6d5f4c3b383838382a
1f1f273e494949494949494949494949494c57656a6d6d6d6d7676767676767b87878787
8787878787878c8ca3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a9a9a97898992
979797979797979797979797979797979797979797878481818178787878849797979797
979797979797979797978f89929595959595959595959595959db1b1b1b1b1b1b1b1b1b1
b1b1b1b1b18f8c8f8f8f8f8f8f8f8f8f979797979797979797979797979797979792929a
9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a92848497979797979aa3a3a3a3a3a3a5a5a5
a5a5a5a5a5a5a500008c8c8c8c8c8c8c707081898f9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39281818181818181818181818181817373685c493e3e3b3e4976878787
878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87876d6d81a8b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1a59a958f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84847b73787e878787
87878787878787878787878f979797979797979797979797979797a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09d9297979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a958f
8f8f8f8f8f8f8f8f847b7e818181818187a0a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaea5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f898989898989848484848481817e7b6d
5f4c3b3b3b3b382d242a464e4e4e4e4e4e4e4e4e4e4e4e4e4e54686d6d6d6d6d6d767676
7676767b878787878787878787878c95a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a3
a3a3a3a39789899297979797979797979797979797979797979797979787848181817e7e
7e7e879797979797979797979797979797978f89929595959595959595959595959db1b1
b1b1b1b1b1b1b1b1b1b1b1b1b18f8c8f8f8f8f8f8f8f8f8f979797979797979797979797
979797979792929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9287848c979797979aa3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c7b849797979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8c8c8c848484848484848484847373685c493e
4040434e76878787878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8787787e92a8b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595959595959595958f8f8f8f8f8f8f7370
737373787e878787878787929797979797979797979797979797979797979797979797a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9297979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a9a9a9a9a958f8f8f8f8f8f8f8f8f847b7e7e7e7e7e7e81a0a5aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaea5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f8989898989898484
84848481817e7b6d5f4c4646433e382d2a3854545454545454545454545454545a656d6d
6d6d6d6d6d6d6d6d6d6d707b878787878787878787878c97a3a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a3a3a3a3a3a3a3a3978989929797979797979797979797979797979797979797
97878481818181818787879797979797979797979797979797978f899295959595959595
95959595959db1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f8484848484848487878797979797
9797979797979797979797979792929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a928c
8c92979797979aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c7b929797
97a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a928f8f8f8f8484848484848484
84847373685c5146494c515776878787878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c9295
959595959595a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595959595959595958f
8989898989876d68737373787e878787878787929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9297979797979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a9a9a9a9a958f8f8f8f8f8f8f8f8f847b7e7e7e7e7e7e8197a5ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a5a5a0a0a0a0a0a0a0a0a08f8f8f8f
898989898989848484848481817e7b6d5f5c5c5c5449382d2d405f5f5f5f5f5f5f5f5f5f
5f5f5f5f5f68707070707070707070707070707b878787878787878787878ca3a3a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a3a3a3a3a3a39a8f92979797979797979797979797
979797979797979797878481818187878787879797979797979797979797979797978f89
929595959595959595959595959db1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f848484848484
7b878787979797979797979797979797979797979792929a9a9a9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a95959595979797979aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a300008c8c8c
8c8c8c8c7b92979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a928f8f8f8f
848484848484848484847373685c57545a62626576878787878787878c8c8c8c8c8c8c8c
8c8c8c8c8c8c92a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595
959595959595958f8989898989877676767676787e878787878787929a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9297979797
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a958f8f8f8f8f8f8f8f8f847b7e7e
7e7e7e7e8197a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0
a0a0a0a08f8f8f8f8f8f8f8f8f8c848484848481817e7b7673736a6a6a6249322d466868
686868686868686868686868686870707070707070707070707070788787878787878787
878795a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a3a3a3a3a3a39a8f9297979797
979797979797979797979797979797979787848181818787878787979797979797979797
9797979797978f8f959595959595959595959595959db1b1b1b1b1b1b1b1b1b1b1b1b1b1
b18f84848484848484878787979797979797979797979797979797979792929a9a9a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595979797979aa3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a300008c8c8c8c8c8c8c7b92979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a
9a9a9a928f8f8f8f84848484848484848484847b6d5c5f65737373737b87878787878787
8c8c8c8c8c8c8c8c8c8c8c8c8c8c92a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a59a959595959595959595958f8989898989877676767676787e87878787878792
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09d9297979797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a959595959595
95958f8f847b7e7e7e7e7e7e8197a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaea0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8c818181818181817e7b7878786a6a
6a6a5f3e35516a6a6a6a6a6a6a6a6a6a6a6a6a6a6a68737373737373737373737373737b
87878787878787878792a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a3a3a3a3a3
a39a8f929797979797979797979797979797979797979797978784818181878787878797
97979797979797979797979797978f95959595959595959595959595959db1b1b1b1b1b1
b1b1b1b1b1b1b1b1b18f7b787b7b7b7b8787878797979797979797979797979797979797
9792929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595979797979aa3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c7b92979797a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a09a9a9a9a9a9a928f8f8f8f84848484848484848484847b6d62657387878787
8787878787878787878787878787878787878787878792a8a8a8a8a8a8a8a8b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a59a959595959595959595958f898787877e7e767676767678
7e878787878787929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09d929797979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a95959595959595958f8f847b7e7e7e7e7e7e8197a5aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c
8c7e7b7878786a6a6a6a6a4c3e5c70707070737373737373737373737384898989898989
8989898989898f959595959595959595959da3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a3a3a3a3a3a3a3a3a39a8f92979797979797979797979797979797979797979797878481
818187878787879797979797979797979797979797979295959595959595959595959595
959db1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f7b737b7b7b7b878787879797979797979797
97979797979797979792929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a959595959797
97979aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c7b92979797a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a928f8f8f8f84848484848484848484847b
6d656a878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8
a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595959595959595958f89878787
76767676767676787e878787878787929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f9797979797979797979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a95959595959595958f8f847b7e7e7e7e7e7e8197a5aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a0a0a0a0a08f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8c8c897b7878786a6a6a6a6a5a516a707070707b848484848484848484
89979797979797979797979797979797979797959597a3a3a3a3a3a3a3a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a3a3a3a3a3a3a3a3a39a8f9297979797979797979797979797979797
979797979787848181818787878787979797979797979797979797979a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f7b737b7b7b7b87878787
979797979797979797979797979797979792929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a95959595979797979aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a300008c8c8c8c8c8c8c
7b92979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a928f8f8f8f84848484
848484848484847b6d6a788f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87
878792a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a95959595959595
9595958f898787877b7b7b7b7b7b7b7b7e878787878787929a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d92979aa0a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a59a9a9a9a9a9a9a95959595959595958f8f847b7e7e7e7e7e7e
8197a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea0a0a0a0a095959595
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c897b7878786a6a707070707070707070707b84
848484848484848495979797979797979797979797979797979797959597a3a3a3a3a3a3
a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a39a8f929797979797979797
979797979797979797979797978784818181878787878797979797979797979797979797
9da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f7b73
7b7b7b7b87878787979797979797979797979797979797979792929a9a9a9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a95959595979797979aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a300
008c8c8c8c8c8c8c7b92979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a92
8f8f8f8f84848484848484848484847b7376898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5
9a959595959595959595958f898787877b7b7b7b7b7b7b7b7e878787878787929a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d92
979aa0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a9a9a9a9a9a9a95959595959595958f8f
847b7e7e7e7e7e7e8197a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5
a0a0a0a08f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c897b7878786a6a70707070
7070707070707b8484848484848484849597979797979797979797979797979797979795
9597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8f8f
8f8f8f979797979797979797979797979797979797878481818187878787879797979797
97979797979797979da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b18f7b737b7b7b7b878c8c8c979797979797979797979797979797979792929a
9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595979797979aa3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a000008c8c8c8c8c8c8c7b92979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39a9a9a9a9a9a928f8f8f8f8484898989898989898989898989898f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1a59a959595959595959595958f89817b7b7b7b7b7b7b7b7b7b7b7b7b7b
7b7387929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09d92979aa0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a09d9d9d9d9d9d9595
9595959595958f8f847b7e7e7e7e7e7e8197a5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaea5a0a0a0a09797979797979797979797979797978f8f8f8f8c8c8c7b78
78786a6a707070707070707070707b87878787878787878c959797979797979797979797
97979797979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39a8f8981788197979797979797979797979797979797979787847e76768787
878787979797979797979797979797979da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b18f7b737b7b7b7b87929292979797979797979797979797
979797979792929a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595979797979797
97979797979797979797979797898400008c8c8c8c8c8c8c7b92979797a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39a9a9a9a9a9a928f8f8f8f8484929595959aa8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595959595959595958f897b7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e627e959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a0a09d92979aa0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a3
9d9d9d9d9d9d9d9d9d9d9d9d9d9a8f8f847b7b7b7b7b68628197a5abababababaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a09797979797979797979797979797978f
8f8f8f8c8c8c787878786a6a707070707070707070707b89898989898989899295979797
979797979797979797979797979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39a8f897b73789797979797979797979797979797979797
97876d4e5a738787878787979797979797979797979797979da3a3a3a3a3a5a5a5a5a5a5
a5a5a5a5a5a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f7b737b7b7b7b8792929297979797
979797979797979797979797978f8f9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9595
959597979797979797979797979797979797979797898400008c8c8c8c8c8c8c7b929797
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9a9a928f8f8f8f8484929595959aa8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8
a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595959595959595958f
8989898989898989898989898989898787789a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09d92979aa0a8b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f847b7b7b7b623e3e7897a5ab
ababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a09797979797979797
979797979797978f8f8f8f8c8c8c8c8c8c896a6a707373737373737373737b8c8c8c8c8c
8c8c8f9295979797979797979797979797979797979797959597a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a929292877b8c9797979797979797
9797979797979797978151465a788787878787979797979797979797979797979da3a3a3
a3a3a5a5a5a5a5a5a5a5a5a5a5a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b18f7b737b7b7b7b
87929292979797979797979797979797979797979787899a9a9a9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a9595959595959595959595959595959595959595959595898400008c8c8c
8c8c8c8c7b92979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9a9a928f8f8f8f
8484929595959aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f81788492a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a59a959595
95959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09789878f9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09d92979aa0a8
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f7e737370
51322430547ea5abababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a0
979797979797979797979797979797929292928c8c8c8c8c8c8978737676767676767676
76767b8c8c8c8c8c8c8c929295979797979797979797979797979797979797959597a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292928f8484
9797979797979797979797979797979797684c4e65878787878787979797979797979797
979797979da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b18f7b73767676768792929297979797979797979797979797979797977e849a9a9a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a95959595959595959595959595959595959595959595
95898400008c8c8c8c8c8c8c7b92979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a
9a9a9a928f8f8f8f8484929595959aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a59a95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09789879d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a0979792979aa0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5
a59a8f8f89765f4e3827242a3b4c6dabababababaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaea5a0a0a0a0979797979797979797979797979797929292928c8c8c8c8c8c898484
84848484848484848484848c8c8c8c8c8c8c929295979797979797979797979797979797
979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39a9292928f848489979797979797979797979797979797897065657689898989898997
9797979797979797979797979da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b18f7b737b7e7e7e8c92929297979797979797979797979797979797
97767b959595959595959595959595959595959595959595959595959595959595959595
959595959595959595898400008c8c8c8c8c8c8c7b92979797a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39a9a9a9a9a9a928f8f8f8f8484929595959aa8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a59a95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0
a09789879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9aa3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a0929292979aa0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5
a5a5a5a5a5a5a5a5a59a8f8f8f8f6a51382a22272d304389ababababaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaea5a0a0a0a0979797979797979797979797979797929292928c
8c8c8c8c8c89878c8c8c8c8c8c8c8c8c8c8c92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a097979797979797979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39a9292928f84848187979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f
899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a595959595959595928f8f8f8f7b737b929292929292929797979797979797
9797979797979797977070848c8c8c8c8c8c8c8c8c8c8c95959595959595959595959595
9595959595959595959595959595959595898400008c8c8c8c8c8c8c7b92979797a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8484929595959aa8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a89d979797979797979795959595959595a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a0a09789929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9aa3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a95959aa0a8b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f78684e352222242a3865a8a8a8a8
a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a0979797979797979797979797
979797929292928c8c8c8c8c8c898792929292929292959595959da3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a397979797979797979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292928f8787878c9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9a979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9592929da3a3a3a3a3a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959589817b7b7b7b737b92929292929292
9797979797979797979797979797979797736a73818f8f8f8f8f8f8f8f8f8f9595959595
959595959595959595959595959595959595959595959595958984000087878787878787
7e92979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f9295
95959aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87
878792a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d899595959595959595959595959595
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a95929aa0a8b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f786d5f4e4338
2d2d3e629da8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a097979797
9797979797979797979797929292928c8c8c8c8c8c89879292929292929297a0a0a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a397979797979797979797959597a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0
a0a0a09d9d9d9d9d9d9d9d9d9d9d9a979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95878f
9da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f89898989898989817b70737373
7b929292929292929797979797979797979797979797979797847378878f8f8f8f8f8f8f
8f8f8f95959595959595959595959595959595959595959595959595958f7b7b7b7b7b00
00878787898989898992979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f9595959595
959595959595959595959aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d8f8f8f8f8f8f8f
9292929292929295a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a95
959aa0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f
8f8f786d62626262493b517b9da8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5
a0a0a0a0979797979797979797979797979797929292928f8f8f8f8c8c89879292929292
929297a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39797979797979797979795
9597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a95878f9da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5898989898989
8989817b6d65656a7b929292929292929797979797979797979797979797979797928c87
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
7b706d6d6d6d6d0000878787898989898992979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a38f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
9d8f8f8f8f8f8f899292929292929295a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a0a0a0a0a0a0a0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5
a5a5a5a5a59a8f8f8f8f786d68686868685a65849da8a8a8a8a8a8a8aeaeaeaeaeaeaeae
aeaeaeaeaeaeaea5a0a0a0a097979797979797979797979797979792929292928f8f8f8c
8c89879292929292929297a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3979797
97979797979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a95878f9da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a58989898989847e7b7b786a5c5f6a7b92929292929292929292929292929292979797
97979797979797979797979795958f959595959595959595959595959595959595959595
958f8f8f8f8f897e736d6d6d6d6d6d0000878787898989898992979797a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a38f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a89d959595959595959595959595959295a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a0a09a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9aa3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5
a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f786d70767676767676849da8a8a8a8a8a8a8
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a097979797979797979797979797979792
929292928f8f8f8c8c89879292929292929297a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a397979797979797979797959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39a9a9a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d
9d9d9a979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95878f9da3a3a3a3a3a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a58989898989847e706d6d655a5f768c9292929292929292929295
95959a9aa0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595958f9da8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a597979797978f8f8f8f8f8f8c8481818181818100008787878989898989929797
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878792a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a0a09aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a8b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f7870787e7e7e7e7e7e84
9da8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a09797979797979797
9797979797979792929292928f8f8f8c8c89879292929292929297a0a0a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a397979797979797979797959597a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39292979da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d
9d9d9d9d9d9d9d9d9d9d9a979a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a95878f9da3a3a3
a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58989898989847e706565625a5f768c929292
929292929292929595959aa3b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b195958f9da8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a597979797978f929292929292929292929292920000878787
898989898992979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f979a9a9a9a9a9a9a9a
9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f87878792a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59795a3a3a5a5a5a5a5a5a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a0a09aa0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a8
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f8181
8181818181817e849da8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5a0a0a0a0
97979797979797979797979797979792929292928f8f8f8c8c89879292929292929297a0
a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a397979797979797979797959597a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292979da5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9a95878f9da3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58989898989847e705f5f
5f5a5f768c929292929292929292929595959aa8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
a3958f9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797978f92929292929292929292
9292920000878787898989898992979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f97
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a89898989
898989898989898989898987878792a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59797a3a3a5
a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a0a09aa0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a0a0a0a0a0a0a0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5a5a5a5a5a5a5a5a5
a59a8f8f8f8f81818181818181817e849da8a8a8a8a8a8a8aeaeaeaeaeaeaeaeaeaeaeae
aeaeaea5a0a0a0a097979797979797979797979797979792929292928f8f8f8c8c898792
92929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5929595959595
959595959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292979da5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979aa5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59a95878f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8989
898989847e6d5f5f5f5a5f768c929292929292929292929595959da8b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a3958f9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797978f9292
929292929292929292929200007e7e87898989898992979797a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a38f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a89a89818787878787878787878787878787878792a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a39797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a0
a09aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a5a5a5a5a5
a5a5a5a5a5a5a5a5a59a8f8f8f8f81818181818181817e849da8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a5a5a5a5a5a5a5a5a09597979797979797979797979797979797979292929292
8f8f8f8c8c89879292929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aea5929595959595959595959597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a39a9292979da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a97
9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a95878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87
8787878787878787878787847e685f5f5f5a5f768c9292929292929292929297979aa5a8
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a3958f9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5
97979797978f9292929292929292929292929200007e7e87898989898992979797a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a38f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a89a878187878787878787878787878787878787929797979797
97979797979797979797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a3a3a3a0a09aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f81818181818181817e849da8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a3a3a3a3a39d8c9292929292929292929292929292
92929292929292928f8f8f8c8c89879292929292929297aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaea5929595959595959595959597a0a0a0a0a0a0a0a0a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a39a9292979da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d
9d9d9d9d9d9d9a979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a95878f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f817878787878787878787878706d685f5f5f5a5f768c92929292929292
92929297a0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a3978f9da8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a597979797978f9292929292929292929292929200008c8c8c8c8c8c8c
8c929797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a39587818787878787878787878787878787
87878787878781818989898c8f8f97979797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a0a09aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a09a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a8f8f8f8f818181818181
81817e849da8abb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9ae9a9a9a9a9a9a8f929292929292
929292929292929292929292929292928f8f8f8c8c89879292929292929297aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5929595959595959595959597a0a0a0a0a0a0
a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292979da5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a958787
8787878787878787878787878787877b7676767676767676735f5f5f5f5f5f5f5f5a5f76
8c929292929292929292929da0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39d959d
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797978f9292929292929292929292929200
008c8c8c8c8c8c8c8c8c8c8c8c89898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d958781878787878787
878787878787878787878787878773687e89898c8f8f97979797979797a3a3a5a5a5a5a5
a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a3a0a09aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0958ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8f8f
8f8f81818181818181817e8492a3abc4c4c4c4c4c4c4c4c4c4c4c4c4c4c4bc958f8f8f8f
8f8f929292929292929292929292929292929292929292928f8f8f847b7b879292929292
929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea592959595959595959595
9597a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958f8f92979da5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979aa5a5a5a5a5a5a5a5a5a5a5
a5a5a5a59a958787878787878787878787878787767676767373736d6865655f5a545457
5a5a5a5a5a5a5f768c929292929292929292929da0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1a39d979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797978f929292929292
9292929292929200008c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97
958f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d95
878187878787878787878787878787878787878787876d5a6289898c8f8f979797979797
97a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0959292929aa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095819a9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a8f8f8f8f81818181818181848484878fabc4c7c7c7c7c7c7c7c7c7c7c7c7
c7c7c79d929292929292929292929292929292929292929292929292929292928f8f8f84
7b78879292929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea59295
95959595959595959597a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395817e
92979da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9a979aa5a5a5
a5a5a5a5a5a5a5a5a5a5a5a59a9587878787878787878787878787877e7b7b7b7b73735c
51464043494c4e545a5a5a5a5a5a5f768c929292929292929292929da0a8a8a8b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1a39d979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797
978f9292929292929292929292929200008c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d97958f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09d95878187878787878787878787878787878787878787877e7e6578898c
8f8f97979797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a095898c929aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c9797979797
97979797979797979797959595958f8f8f8f81818181818181878795959dbfc7c7c7c7c7
c7c7c7c7c7c7c7c7c7c7c7ae9a9a9a9a9a9a9a9a92929292929292929292929292929292
929292928f8f8f847b87879292929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaea58f8f8f8f8f8c959595959597a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a395818195979da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d
9d9d9a979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a958787878787878787878787878787
878787877b736d5149463838404c4e545a5a5a5a5a5a5f768c929292929292929292929d
a0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39d979da8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a597979797978f9292929292929292929292929200008c8c959d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978989979a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa0
a0a0a0a0a0a0a0a0a0a0a0a0a0a092848481878787878787878787878787878787878787
87877e7e7e76898c8f8f97979797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a0958c8c959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
9d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a09592979797979797979797979797979797898181818181818181818181818181878795
a5aebfe0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0c7a5a5a5a5a5a5a39a9292929292929292
9292929292929292929292928f8f8f847b87879292929292929297aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaea5929292928c8c8c8c8c8c8c8c8c8c8c8c8c8c95959595
9595959595959595a0a0a0a0a0a0a0a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d
9d9d9d9d9d9d9d9d9d9d97979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a95878c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c877b735c494946383538494e545a5a5a5a5a5a5f768c929292
929292929292929da0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39d979da8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a597979797978f9292929292929292929292929200008c8c95
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97978789979a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a958f8f8f8f8f8f8f8f8f8f8f8f897e818184848487878787878787
878787878787878787877e7e7e7e898c8f8f97979797979797a3a3a5a5a5a5a5a5a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9d9d959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0959297979797979797979797979797979797978989898989898181
8181818181878795abb1bfe9f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7e3bfbfbfbfbfb6a39a
92929292929292929292929292929292929292928f8f8f847b87879292929292929297ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5979797979797979797978f8f8f8f
8c84736d7073737373787e7e7e878f95a5ababababababababababababababababababab
a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d979292a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9a87878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877b734e434343383538464e545a5a5a5a
5a5a5f768c929292929292929292929da0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
a39d979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597979797978f92929292929292929292
92929200008c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95898989898989898989898989877e7e7e7e7e
7e84878787878787878787878787878787877e7e7e7e7b8c8f8f97979797979797a3a3a5
a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0959aa0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095929292979797979797979797979797979797
8f8f8c8c8c8981818181818181878795abb1bfe9fffffffffffffffffffffffffffffffc
e3e3e3e3e3b6a39a92929292929292929292929292929292929292928f8f8f847b878792
92929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5979797979797
979797978f8f8f8f81655a5a5c5c5c5c5c626a767e878f95a5ababababababababababab
abababababababababa5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d97929aa5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59a84848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877b6a463e3e3e3835
38434c4c4c4c4c4c4c4e5a768f8f8f8f8f8f8f8f8f8f929da0a8a8a8b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a39d979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a92929200008c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9589878787878787878787
8787877e7e7e7e7e7e84878787878787878787878787878787877e7e7e7e78738f8f9797
9797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0
959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d979aa3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09592929297979797979797
97979797979797978f8f8c8c8c8981818181818181878795abb1c4f1ffffffffffffffff
ffffffffffffffffffffffffebcabc9a9292929292929292929292929292929292929292
898484847b87879292929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aea5979797979797979797978f8f8f8f7b655a545454545454575a5f6d878f95a5ababab
abababababababababababababababababa8a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d9792
9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a7e818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87
7b5c43383838383538434c4c4c4c4c4c4c4c5a768f8f8f8f8f8f8f8f8f8f929da0a8a8a8
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39d979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d92929200008c8c959d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958987
87878787878787878787877e7e7e7e7e7e84878787878787878787878787878787877e7e
7e7e7e7e878c97979797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a0a0a0a0959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d979797
97979797979797978f9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959292
929797979797979797979797979797978f8f8c8c8c8981818181818181878795abc1e0f7
fffffffffffffffffffffffffffffffffffffffff1ddbc9a929292929292929292929292
9292929292735c575a5c62787887879292929292929297aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaea5979797979797979797978f8f8f8f7b655a544c464c4e4e51575c
738c8f95a5ababababababababababababababababababababa8a5a5a5a5a59d9d9d9d9d
9d9d9d9d9d9d97929da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a81818c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c877b5f40303535353538434c4c4c4c4c4e4e515c769a9a9a9a9a9a9a9a
9a9a9a9da0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39d979da8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a59d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d92929200008c8c959d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a95898787878787878787878787877e7e7e7e7e7e8487878787878787878787
878787878787848484848484848497979797979797a3a3a5a5a5a5a5a5a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09d979797979797979797979787899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a959292929797979797979797979797979797978f8f8c8c8c89818181818181
81878795b1c1e0f7fffffffffffffffffffffffffffffffffffffffff4e6bc9a92928f8f
8f8f8f8f8f8f8f8f8f8f8f8f7049353840494e627887878f92929292929297aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea5979797979797979797978f8f8f8f7b655a54
40404949494c5a62768c8f95a5ababababababababababababababababababababa8a5a5
a5a5a59d9d9d9d9d9d9d9d9d9d9d95849da5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a84818c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877b654e35303535353843434343464c51545c6d81
9a9a9a9a9a9a9a9a9a9a9a9da0a8a8a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a39d9797
9792928c8f9d9d9d9d9d9d9d9d9da0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a892929200
008c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a95898787878787878787878787877e7e7e7e7e7e848787
8787878787878787878787898c8c8c8c8c8c8c8c8c8c97979797979797a3a3a5a5a5a5a5
a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0959aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09d979797979797979797979789898c9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a959292929797979797979797979797979797978f8f8c8c
8c8981818181818181878795b1c1e0f7ffffffffffffffffffffffffffffffffffffffff
fcebbc9a92928f8f8f8f8f8f8f8f8f8f8f8f8f8f684032384049515c6d87878f92929292
929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea597979797979797979797
8f8f8f8f785f51433b434e4e4e546268768c8f95a5ababababababababababababababab
abababababa8a5a5a5a5a59d9d9d9d9d9d9d9d9d9d9d877b9da5a5a5a5a5a5a5a5a5a5a5
a5a5a5a58f84848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877b6565493b3b3b3b3b3b3b3b
35464e5a626d84849a9a9a9a9a9a9a9a9a9a9a9da0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a3a3a39d979797979595959d9d9d9d9d9d9d9d9da0aeaeaeaeaeaeaeaeaeaeaeaeae
aeaea8a887767600008c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97
979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95898787878787878787878787877e
7e7e7e7e7e84878787878787878787878787878995959595959595959595979797979797
9797979a9a9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a095979d9d
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09d979797979797979797979789898992
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959292929797979797979797979797
979797978f8f8c8c8c8981818181818181878795b1c1e0f7ffffffffffffffffffffffff
ffffffffffffffffffebbc9a92928f8f8f8f8f8f8f8f8f8f8f8f8f8f6a4e4649494c515c
6d87878f92929292929297aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea59797
97979797979797978f8f8f8f78514040464e54575a626a707e8c8f95a5ababababababab
abababababababababababababa8a3a0a0a0a09d9d9d9d9d9d9d9d9d9d9d92879da0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09d8f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8c8c877b656562
5754544e4e4e4e463b4e5c6a707e84849a9a9a9a9a9a9a9a9a9a9a9da0a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a3a3a39d979797979797979d9d9d9d9d9d9d9d9dabaeaeaeaeae
aeaeaeaeaeaeaeaeaeaea8a88c76760000a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d
9d9d9d9d9d9d9d97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95898787878787
878787878787877e7e7e7e7e7e8487878787878787878787878787899595959595959595
95959595959595959595929292929292929292929292928c8fa0a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a397a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09d97979797979797
979797978c8c8c929595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95929292979797
9797979797979797979797978f8f8c8c8c8981818181818181878795b1c1e0f7ffffffff
ffffffffffffffffffffffffffffffffffebbc9a92928f8f8f8f8f8f8f8f8f8f8f8f8f81
6d626262625a5a627087878c8c8c9292929297a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a3a3a3a3a3979797979797979797978f8f8f8f78574c5768686868686870818f8f8f95
a5ababababababababababababababababababababa8a392929a9a9a9aa0abababababab
abababababababababa89d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a978c8c8c8c8c8c8c8c8c
8c8c8c877b65656262625f545151514e4c5f7378787e84849a9a9a9a9a9a9a9a9a9a9a9d
a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a39d979797979797979d9d9d9d9d9d9d
9d9daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a89d7e7e0000abababababababa5a5a5a5
a5a5a5a09d9d9d9d9d9d9d9d9d9d9d979797979595959595959595959595959595958c87
8787878787878787878787878787877e7e7e7e7e7e848787878787878787878787878789
9595959595959595959595959595959595959595929292929292929292928f848fa0a3a3
a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a3a3a3a3a3a3a3a3a3a3a3a0a0
9d97979797979797979797978c8c8c92929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a959292929797979797979797979797979797978f8f8c8c8c8981818181818181878795
b1c1e0f7ffffffffffffffffffffffffffffffffffffffffffebbc9a92928f8f8f8f8f8f
8f8f8f8f8f8f8f736d6d6d6d6d6d65707087878989898f929292979a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9797979797979797979797979797978f8f8f8f7870707373737373
7373818f8f8f8f95a5ababababababababababababababababababababa8a392929a9a9a
9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a978c
8c8c8c8c8c8c8c8c8c8c8c877b6565626262625a545151545c6d7878787e84849a9a9a9a
9a9a9a9a9a9a9a9da0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a39d979797979797
979d9d9d9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a081810000ababab
ababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d979797978c8787878787878787
87878787847e706a7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7e7e818995959595959595959595959595959595959595959292929292929292
92928f848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababab
abababa5a5a3a0a09d97979797979797979797978c8c8c92929292929a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a959292929797979797979797979797979797978f8f8c8c8c898181
818181787e878795b1c1e0f7ffffffffffffffffffffffffffffffffffffffffffebbc9a
929289898989898989898989898989787070707070706a70708787878787878787878787
8787878784879595959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097979797978f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95a5ababababababababababababababababababab
aba8a39a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea39d9d9d9d9d9d9d9d9d
9d9d9d9d9d9a978c8c8c8c8c8c8c8c8c8c8c8c877b6565626262626262625c5c5f707878
787e84849a9a9a9a9a9a9a9a9a9a9a9da0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a39d
9d9d979797979797979d9d9d9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8
a081810000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9a9a97978c
87878787878787878787877370685c5a767e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e737e7e7e7e7e7e7e7e7e81899595959595959595959595959595959595959595
8989898989898989898989848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabab
abababababababababababa5a5a3a0a09d97979797959595959595958c8c8c9595959595
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95929292979797979797979797979797979797
8f8f8c8c8c8981818181817878878795b1c1e0f7ffffffffffffffffffffffffffffffff
ffffffffffeebc9a929289898f929292929292929292929292929292877b6d7070878787
89898989898989898989898989899595959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097
979797978f9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a8f95a5ababababababababababab
abababababababababa8a39a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea39d
9d9d9d9d9d9d9d9d9d9d9d9d9d9a978c8c8c8c8c8c8c8c8c8c8c8c877b65656565656565
656565625f707b7b7b8484849a9a9a9a9a9a9a9a9a9a9a9da0a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a39d9797979797979797979d9d9d9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1a8a8a389870000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d
9d9d9d9d9d97978c877676767676767676767673685a4c4c5f7e7e7e7e7e7e7e7e7e7e7e
7e7e8787878787878787878787878787878787847e7e8189959595959595959595959595
95959595959595958981848484848484848484848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeabababababababababababababa5a5a3a0a08c8c8c8c89898c8c8c8c8c8c
8c8c8c9595959595959595959595959595958f9292929292929292929297979797979797
97979797979797978f8f8c8c8c8981818181817878878795b1c1e0f7ffffffffffffffff
ffffffffffffffffffffffffffffd8a89a9797928f929292929292929292929292929292
877b76767687878789898989898989898989898989899595959597a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a097979797978f9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5ababab
abababababababababababababababababa8a39a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1aea39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a978c8c8c8c8c8c8c8c8c8c8c8c87
7b65656565656565656565655f707b7b7b8484849a9a9a9a9a9a9a9a9a9a9a9da0a5a5a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9797979797979797979d9d9d9d9d9d9d9d9db1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a0
9d9d9d9d9d9d9d9d9d9d9d9d9d97978c8770707070707070707070685c4e4340495f7e7e
7e7e7e7e7e7e7e7e7e7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e818995959595
959595959595959595959595959595958984848484848484848484848fa0a3a3a3a3aeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababababababa5a5a3a0a08c878784
84878c8c8c8c8c8c8c8c8c95959595959595959595959595959595959595959592929292
929797979797979797979797979797978f8f8c8c8c89818181817b7878878795b1c1e0f7
fffffffffffffffffffffffffffffffffffffffffffff1b9a39797958f92929292929292
9292929292929292877b7b7b7b87878789898989898989898989898989899595959597a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097979797978f9da0a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5ababababababababababababababababababababa8a39a9a9a9a9a9aa0b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1aea39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a978c8c8c8c8c
8c8c8c8c8c8c8c8770656565656565656565656562737b7b7b8484849a9a9a9a9a9a9a9a
9a9a9a9da0a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a897979797979797979797979d9d9d
9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000ababababababab
a5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d97978c7b6d6d6d6d6d6d6d6d6d6257
4c403b3e40497e7e7e7e7e7e7e7e7e7e7e7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84
7e7e818995a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d958989898989898989898984
8fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababababababa5
a5a3a0a08c8989898c8c8c8c8c8c8c8c8c8c8c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9792929292929797979797979797979797979797978f8f8c8c8c89818181787378
78848795b1c1e0f7ffffffffffffffffffffffffffffffffffffffffffffffd2ab979795
8f9292929292929292929292929292928781818181878787898989898989898989898989
89899595959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097979797978f9da0a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5ababababababababababababababababababababa8a39a
9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea39d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a978c8c8c8c8c8c8c8c8c8c8c8c877873737373737373737373736a7b7b7b7b848484
9a9a9a9a9a9a9a9a9a9a9a9da0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5979797979797
97979797979d9d9d9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c00
00abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d97978c6d686868
68686868685c49463e35353e40435f7e7e7e7e7e7e7e7e7e7e7e8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c847e7e818995a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d95898989
89898989898989848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababab
abababababababa5a5a3a0a08c8989898c8c8c8c8c8c8c8c8c8c8c979da0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09792929292929797979797979797979797979797978f8f8c8c
8c897b7b7870687378788195b1c1e0f7ffffffffffffffffffffffffffffffffffffffff
ffffffeeb9979795979797979797979797979797979797978f8181818181788489898989
898989898989898989899595959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09797979797
8f9da0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5ababababababababababababababab
abababababa8a39a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea39d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a978c8c8c8c8c8c8c8c8c8c8c8c877b7b7b787b7b7b7b7b7b7b7b
7b7b7b7b7b8484849a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d97979797979797979797979d9d9d9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d
9d97978c6d5f5f5f5f5f5f5f5f4e3e383530323535353b51707070707070707070738c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e818995a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09d9d9589898989898989898989848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeabababababababababababababa5a5a3a0a08c8989898c8c8c8c8c8c8c8c8c8c8c97
9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097929292929292929292928f8f8f8f8f8f
8f8f8f8f8f8f8c8c8c8970706d655f6268738495b1c1e0f7ffffffffffffffffffffffff
fffffffffffffffffffffffcd2a59d959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92818181
8181707889898989898989898989898989899595959597a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a097979797978f9da0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a5ababababab
abababababababababababababa8a39a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1aea39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a978c8c8c8c8c8c8c8c8c8c8c8c8784848484
848484848484848484847e7b7b8484849a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d97979797979797979797979d9d9d9d9d9d9d9d9db1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a09d9d9d9d
9d9d9d9d9d9d9d9d9d97978c6d5c5c5c5c5c5c5c5c4c3b35352d2a2d2d2d2d2d3e545454
545454545a738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e818995a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09d9d9589898989898989898989848fa0a3a3a3a3aeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeabababababababababababababa5a5a3a0a08c8989898c8c8c8c
8c8c8c8c8c8c8c979da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978f8f8f8f8f8f8f8f
8f89737373737373737373737373737373736d6d6d625a6276848495b1c1e0f7ffffffff
fffffffffffffffffffffffffffffffffffffffceebf9d959a9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d92818181818176788c8c8c8c8c8c8c8c8c8c8c8c8c8c9595959597a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09789818181899da0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a59da3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a39a9a9a9a9a9aa0b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1aea3a0a0a0a0a0a09d9d9d9d9d9d9d9d9a978c8c8c929292929292
9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f7e7b7b8484849a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a92979797979797979797979797979797979797979797979797979d9d9d9d9d9d9d
9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000abababababababa5a5a5a5
a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d97978c6d5c5c5c5c5c5c5c5c463835322a2727
242424242a434949494949495a738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e8189
95a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9a92929292929292929292848fa0a3a3
a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababababababa5a5a3a0a0
8c8989898c8c8c8c8c8c8c8c8c8c8c9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097
8f8f8f8f8f8f8f8c76685f656565656565656565656565656565656565625c6a84848495
b1c1e0f7fffffffffffffffffffffffffffffffffffffffffffffffcfcd8a0959da0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09281818181817e848c8c8c8c8c8c8c8c8c8c8c8c8c8c9595
959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09789787076899da0a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d97979797979a9a9a9a9a9a9a9a9a9a9a
9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea3a0a0a0a0a0a09d9d9d9d9d9d9d9d9a9789
7b819292929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f7e7b7b848c8c9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a9a9a9a9a9a9a979797979797979797979797
979d9d9d9d9d9d9d9d9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000ababab
ababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d979781625f5f5f5f5f5f5f
5c3e3838322a24221f1f242427354646464646465a738c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c847e7e818995a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d
9d9d97848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababab
abababa5a5a3a0a08c898989a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0
a0a0a0a0a0a0a0978f8f8f8f8f8f8f6d5757575c65656565656565656565656565656565
655f5c7384848495b1c1c1d2f4fffffffffffffffffffffffffffffffffffffffffffffc
fcf1bfa39da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0928181848989898c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097897884898f9da0a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d8f8f8792929a9a9a
9a9a9a9a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea3a0a0a0a0a0a09d9d9d
9d9d9d9d9d9a9792898f9292929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f7e7b
7b848f979d9da3a3a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a397979797
979797979797979797979797979797928f9ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8
a38c8c0000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d979770
5f5f5f5f5f5f5f5f4e3b3b3b382d241c1c1f24242732323b3b3b3b465a738c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c847e7e818995a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d
9d9d9d9d9d9d9d9d9d9d97848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabab
abababababababababababa5a5a3a0978c898989a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a0a0a0a0a0a0a0a0a0a0a0978f8f8f8f8f8f8f5f4c4e515a6265656565656565
6565656565656565625c5f7884848495a3a3a5b1d8ffffffffffffffffffffffffffffff
fffffffffffffffcfcfce6bca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a09281818489959d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e8c9597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097
8978848fa0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d
8f89768c929a9a9a9a9a9a9a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea3a0
a0a0a0a0a09d9d9d9d9d9d9d9d9a979292929292929292929a9a9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d8f7e7b7b848f979d9da3a3a3a3a3a3a3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6a397979797979797979797979797979797979797928c97b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d
9d9d9d9d9d8f7b686565656565656562493e3e3e3e352a2424242424242424242d353843
5a738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e818995a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d97848fa0a3a3a3a3aeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeabababababababababababababa5a5a397818f8f8f95a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a0978f8f8f8f8f8f7b574646464e
575c6262626262626262626262626262625f657b84848495959595a3bfebffffffffffff
fffffffffffffffffffffffffffffffcfcfcfcddb9aeaeaeaeaeaeaeaeaeaeaeaeaeaea0
928181848f979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e8c9597a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0978978848fa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d
9d9d9d9d9d9d9d9d8f816d81929a9a9a9a9a9a9a9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1aea3a0a0a0a0a0a09d9d9d9d9d9d9d9d9a979292929292929292929a9a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d8f7e7b7b8492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9b9a397979797979797979797979797979797979797979da0b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a0
9d9d9d9d9d9d9d9d9d9d9d9d9d7b656565656565656565624c404040403b383030303030
302d24222730323e54738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e7e7892a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d97848fa0a3a3a3a3aeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababababababa5a5a38c818f8f8f95
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a0978f8f8c89
877b624e433b383e464c515a5a5a5a5a5f6262626262626265656a81848484959595959a
a8c7fcfffffffffffffffffffffffffffffffffffffffffcfcfcfcf7cfb3b3b3b3b3b3b3
b3b3b3b3b3b3b3a09289929797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e8c9597a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978978848fa3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d8f7b707b929a9a9a9a9a9a9a9a9a9a9a9aa0b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1aea3a0a0a0a0a0a09d9d9d9d9d9d9d9d9a979292929292
929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f7e7b7b8492979d9da3a3a3a3a3a3
a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a397979797979797979797979797979797
97979797a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000ababababababab
a5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d877b7b7b7b7b7b7b786d654c404040
403e3b30303030303030271f243032384c6d8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84
7e7e7e7b92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9781
7b819da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababababababababa5
a5a389818f8f8f95a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0
a0a0a0978f8f897e6d5a4e43403e383b3e40494e575a5a5a5f626262626262626a737e81
84848495959595979aaee0fffffffffffffffffffffffffffffffffffffffffcfcfcfcfc
e3c1b9b3b3b3b3b3b3b3b3b3b3b3b3a09295959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d8c7e8c9597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978978848fa3a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9d9d9d9d9d9d9d9d9d878787848c9a9a9a9a9a9a9a
9a9a9a9a9aa0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea3a0a0a0a0a0a09d9d9d9d9d9d9d
9d9a979292929292929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f818484849297
9d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39797979797979797
979797979792928f878c8c97a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a38c8c00
00abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9d8f898989898989
84786d684c404040403e3b303030303030302a22273032384c6d8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8481848c9292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d
9d9d9d9d9d9d977e7b819da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababab
abababababababa5a59d84818f8f8f95a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0a0a0a0a0a0a0a0a0a0a0978f8f877e6a51463e3e3e3b3b3b3e4349545a5a5a5f626262
626262626d737e8184848495959595979aa8cdffffffffffffffffffffffffffffffffff
fffffffcfcfcfcfcf9d8bcb3b3b3b3b3b3b3b3b3b3b3b3a09295959797979d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d8c7e8c9597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0928978848f
a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a59d9d9d9d9d9d9d9d9d9d87878787
8c9a9a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a09d9d9d9d9d9d9d9d9a979292929292929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d958f84848492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3
979797979797979797979797927e787376818c97a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d
9d8f89898989898984786d684e40404040403b303030303030302a272a3032384c6d8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848184929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d9d9d9d9d9d9d9d8181819da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3abab
abababababababababababababababa5a59d81818f8f8f95a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a0978f817b7b6a5751433e3e3b3e3e3e4349
545757575f686868686868686d737e8184848495959595979aa8c4eeffffffffffffffff
fffffffffffffffffffffffcfcfcfcfcf9ebc4b9b9b9b9b9b9b9b9b9b9b9b9a092959597
97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e8c929292929292929292929292929292
9292928c8978848fa3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5a5a59d9d9d9d9d9d
9d9d9d9d878787878c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f9aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9a979292929292929292929a9a9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d958f84848492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9b9a39797979797979797979797978c7b767376818c97a0a0b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1a8a8a38c8c0000abababababababa5a5a5a5a5a5a5a09d9d9d9d
9d9d9d9d9d9d9d9d9d8f89898989898984786d685146434343433b303030303030302d2d
2d3032384c6d8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848184929292a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d928c8c9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9797ababababababababababababababababa5a59d9a818f8f8f95a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a09787786d68655f5f54
433e3e4343464e51545454545f7b7b7b7b7b7b7b7b7b7e8184848495959595979aa8c4dd
fcfffffffffffffffffffffffffffffffffffffcfcfcfcfcf9f9d5bfbfbfbfbfbfbcbcbc
bcbcbca09295959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e8c92929292929292
92929292929292929292928c8978848fa3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5
a5a59d9d9d9d9d9d9d9d9d9d878787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c879aa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9a97929292929292929292
9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958f84848492979d9da3a3a3a3a3a3a3a3b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39797979797979797979797978c7e7e7e7e818c97
a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8928c8c8c0000abababababababa5a5a5a5
a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9a8f89898989898984786d68574e4c4c4c4c3e30
3030303030303030303032384c6d8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8181849292
92a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9da0a0a0a0a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89a9a9a9a878c9aabababababababababababababababa5a59d9a81
8f8f8f95a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a097
9289765f5f5f5f5c494040494c4c515154545a5a657b7b7b7b8989898989898989898995
9595959595a8c4ddeefffffffffffffffffffffffffffffffffffffcfcfcfcfcf9f9ebca
bfbfbfbfbfbcbcbcbcbcbcae9797959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e
8c9292929292929292929292929292929292928c8978848fa3b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9a5a5a5a5a59d9d9d9d9d9d9d9d9d9d878787878c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c848fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9a9792
92929292929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958f84848492979d9da3a3
a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3928f8f8f8f8f8f8f8f8f8f8f
8c84848484818797a0a0b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8898989890000ababab
ababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9a8f89898989898984786d68
655c5a5a544e433b3b32323232323232303032384c6d8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c7e8184929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9da0a0
a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f818181767e8ca5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a59d9a818f8f9297a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0
a0a0a0a0a0a0a09792928f6d6262625f494649495151515154545c656a7b7b7b7b898989
898989898989898f8f8f8f8f8fa8c4ddddf1fffffffffffffffffffffffffffffffffffc
fcfcfcfcf9f9f9dbcacacacac1bcbcbcbcbcbcaea3a0959797979d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d8c7e8c9292959595959595959595959595959595958c8978848fa3b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5a5a59d9d9d9d9d9d9d9d9d9d8787878787878484
848484848484848484848484a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d
9d9d9d9d9d9a979292929292929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958f84
848492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a38c8c8c8c
8c8c8c8c8c8c8c8c8984848484818797a0a0aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9589
8989890000abababababababa5a5a5a5a5a5a5a09d9d9d9d9d9d9d9d9d9d9d9d9a8f8989
8989898984786d68656565655a54544c3e32323232323232303032384c6d8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c848484929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a09d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f81816a65738192a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a59d9a818f8f9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a0a0a0a0a0a0a0a0a0a0a09792929278656565624e4c4c495151515154545c65
707b7b7b7b89898989898989898989898989898989a0c1c7c7d2fcffffffffffffffffff
fffffffffffffffcfcfcfcfcf9f9f9f4e3e3e3cfc1bcbcbcbcbcbcaea8a3959797979d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e898992959595959595959595959595959595958c
8478848fa3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5a5a59d9d9d9d9d9d9d9d9d9d
878787878787818181818181818181818181818ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a0a0a0a09d9d9d9d9d9d9d9d9a979292929292929292929a9a9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d959284848492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9b9a38f8f8f8f8f8f8f8f8f8f8f8f8984848484818497a0a0aeaeaeaeaeaeaeaeaeae
aeaeaeaeaeae979292928c0000a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d
9d9d9d9d9a8f898989898989847b7b7b7b7b7b7b7b7b7b7b5a3e3e3e3e3e3e3e30303238
4c6d8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848484929292a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b70
6265789295a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a818f8f9a9aa8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a0979292928478736d6a5f544c49
5151515154545c65707b7b7b7b898989898989898989898989898989878fa5b6b6bce3fc
fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcf9f9f9f9f9f9e3cfc1bcbcbcbcbcbcae
a8a3959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e898992959595959595959595
959595959595958c8178848fa3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5a5a59d9d
9d9a9595959595958787878787878181818181818181818181818192a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a0a0a0a09d9592929292929292929292929292929292929a9a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9595958c8492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9b9a39797979797979797979797978989898989817e97a0a0aeae
aeaeaeaeaeaeaeaeaeaeaeaeaeae9d9d9d9d8c00009292929292929d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9a8f898989898989878787878787878787878787845c5454
433e3e3e303032384c6a8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c848484929292a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a88f7b706d7e929295a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a818f8f9a9a
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a09792929292
927e6d6a65574c495151515151515c65707b7b7b7b898989898989898989898989898989
84849aa5a5a5c1f4fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcf9f9f9f9f9f9e3cf
c1bcbcbcbcbcbcaea8a5959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7e89899295
9595959595959595959595959595958c8178899aa3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9a5a5a5a5a59d9d9d9a9292929292928c8c8c8c8c8c818181818181818484848484849d
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a09d9592929292929292929292929292
929292929a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d959595958492979d9da3a3a3a3a3a3
a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3a0a0a0a0a0a0a0a0a0a0a0a08c8c8c8c
8c81879da0a0aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d9d9d9d8c00008f8f8f8f8f8f9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8f8989898989898787878787878787
8787878787817665433e3e3e303032384c657e8484848484848484848484848484848484
84849292929797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9da0a0a0a0a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a88f7b706d81929295a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a59d9a818f8f9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0
a0a0a097929292929292787876624c495454545454545c65707b7b7b7b89898989898989
8989898989898989848495979797abddfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfc
f9f9f9f9f9f9e3cfc1bcbcbcbcbcbcaea8a5959797979d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d8c7e818992959595959595959595959595959595958c7e78899da3b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9a5a5a5a5a59d9d9d9a9292929292928c8c8c8c8c8c7b7878787878
81878787878787a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a09d959292929292
929292959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8979595959595959595849297
9d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3a0a0a0a0a0a0a0a0
a0a0a0a0978c8f8f8f8f979da0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9d9d9d8c00
008f8f8f8f8f8f959595959595959595959595959595959595959595958f898989898989
87878787878787878787878787878165433e3e3e303032384c65707b8484848484848484
84848484848484848484929292929295a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d
9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b706d81929295a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a59d9a818f8f9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0a0a0a0a0a0a0a0a0a0a097929292929292929292896a656565656565656565707b7b7b
7b898989898989898989898989898989848492959595a3cdf9fcfcfcfcfcfcfcfcfcfcfc
fcfcfcfcfcfcfcfcf9f9f9f9f9f9e3cfc1bcbcbcbcbcbcaea8a5959797979d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d8c7e78899295959595959595959595959595959595897878899d
a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5a5a59d9d9d9a9292929292928c8c8c8c
8c8c7b7070787878848f8f8f8f8f8fa3ababababababababababababababababa8a0a0a0
a09d959292929292929292959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a9a
9a9a9a9a9a8492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3
a0a0a0a0a0a0a0a0a0a0a0a0a08c92979aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09d9d9d9d8c00008f8f8f8f8f8f929292929292929292929292929292929292929292
928f89898989898987878787878787878787878787878165433e3e3e303032384c65707b
7b7e7e848484848484848484848484848484959595959597a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b706d819292
95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a818f8f9a9aa3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0979292929292929292928f8f8f8f8f8f8f
8f8f7865707b7b7b7b898989898989898989898989898989848492959595a3c4e9fcfcfc
fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcf9f9f9f9f9f9f9dbc1bcbcbcbcbcbcaea8a59597
97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c7b78899295959595959595959595959595
959595897876899da3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a59d9d9d9d9d9d9d9a9292
929292928c8c8c8c8c8c7b6d6a78787889929797979797a3abababababababababababab
ababababa8a0a0a0a09d959292929292929292959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a88492979d9da3a3a3a3a3a3a3a3b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9b9a3a0a0a0a0a0a0a0a0a0a0a0a0a08c9297a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a0a0a0a0a09d9d9d9d9d8c00008c8c8c8c8c8c8c929292929292929292929292
9292929292929292928f89898989898987878787878787878787878787878165433e3e3e
303032384c65707b7b7e7e848484848484848484848484848484959595959597a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a88f7b706d81929295a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a818f8f9a9a9d9d9d9d
9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0979292929292929292
929292929292929292928f707b7b7b7b7b89898989898989898989898989898984848f92
9595a3bccff4fcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcf9f9f9f9f9f9f9e9c1bcbcbc
bcbcbcaea8a5959797979797979797979797979797979797978778737387929595959595
9595959595959595959595898181929da3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39797
9797979797979292929292928c8c8c8c8c8c7b6d6d78787889929d9d9d9da0a5abababab
ababababababababababababa8a0a0a0a09d959292929292929292959da8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a889929292929292929292929aa3b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3a0a0a0a0a0a0a0a0a0a0a0a0a08c929dabababab
ababababababababababababa0a0a0a0a09d9d9d9d9d8c00008f8f8f8f8f8f8f92929292
92929292929292929292929292929292928f898989898989878787878787878787878787
87878165433e3e3e32322d2d4c65707b7b7e7e8484848484848484848484848484849595
9595959797979797979797979797979d9d9d9d9d9d9d9d9d9d9da0a0a0a0a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a88f7b706d81929295a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a87
898f9a9a9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097
9292929292929292929292929292929292928f8181818181818989898989898989898989
89898989848487879595a3aebcebfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcfcf9f9f9f9
f9f9f9f9d8c1c1c1bcbcbcaea8a5959797979797979797979797979797979797977b6d6d
73788995959595959595959595959595959595898484929da3b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9a397979797979797979292929292928c8c8c8c8c8c7b73737878788992a3a3
a3a3a8abababababababababababababababababa8a0a0a0a09d95929292929292928f95
9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a892929292929292
9292929292a0b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a3a0a0a0a0a0a0a0a0a0a0a0a0
a08c92a0ababababababababababababababababa0a0a0a0a09d9d9d9d9d8c00008f8f8f
8f8f8f8f9292929292929292929292929292929292929292928f89898989898987878787
878787878787878787878165433e3e3e3232322d4362707b7b7e7e848484848484848484
84848484848495959595959797979797979797979797979d9d9d9d9d9d9d9d9d9d9da0a0
a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b706d81929295a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a59d9a8c8c8f9a9a9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0979292929292929292929292929292929292928f818181818181898989
8989898989898989898989897e7e81879295a3a8b3e3fcfcfcfcfcfcfcfcfcfcfcfcfcfc
fcfcfcfcf9f9f9f9f9f9f9f9f7d8cdcabcbcbcaea8a59595979797979797979797979797
97979797977b76767b818995959595959595959595959595959595898484929da3b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9a397979797979797979292929292928c8c8c8c8c8c7b7b
7b7878788992abb6b6b6b6bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b1a8a0a0a09a959592
929292928f878f959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8929292929292929292929a9a9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a08c92a3ababababababababababababababababa0a0a0a0a09d9d9d
9d9d8c0000959595959595959292929292929292929292929292929292928f8f8f8f8989
8989898987878787878787878787878787878165433e3e3e3232322d4357627b7b7e7e84
848484848484848484848484848495959595959797979797979797979797979d9d9d9d9d
9d9d9d9d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b706d81929295a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a09d9a8f8f8f9a9a9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0979292929292929292929292929292929292928f81
818181818189898989898989898989898989898978707e878f95a3a5abcfe6fcfcfcfcfc
fcfcfcfcfcfcfcfcfcfcf9f9f9f9f9f9f9f9f9f9f9ebd5cabcbcbcaea8a5929297979797
979797979797979797979797977b7e818181899595959595959595959595959595959589
8484929da3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39797979797979797929292929292
8c8c8c8c8c8c7b7b7b7878788992abc1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1bcb3b1
a8a0a0a092929292929292928f8c8f959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89d9d9d9d9789898989929a9a9a9a9a9a9a9a9a9aa0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09597a5abababababababababababababababab
a0a0a0a0a09d9d9d9d9d8c00009595959595959592929292929292929292929292929292
92928f877e7b7b878787878787878787878787878787878787878165433e3e3e3232322d
43575c787b7e7e8484848484848484848484848484879595959595979797979797979797
9797979d9d9d9d9d9d9d9d9d9d9da0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a88f7b6d
6d819292959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8f8f8f9a9a9d9d9d9d9d9d9d9d
9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0929292929292929292929292929292
9292929292928f8181818181818989898989898989898989898989897b6d7887898c9aa3
a3b3cff1f9f9f9f9f9f9f9f9fffffffffffffffffffffffffffffffffffcdbcabcbcbcae
a8a5929297979797979797979797979797979797977b7e81818189959595959595959595
95959595959595898484929da3b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3979797979797
97979292929292928c8c8c8c8c8c7b7b7b7878788992abcdcdcdcdcdcdcdcdcdcdcdcdcd
cdcdcdcdcdbcb3b1a8a0a09a92929292929292928f8c8f959da8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9d9d978989898992a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959aa5abababababababab
ababababababababa0a0a0a0a09d9d9d9d9d920000959595959595958f8c8c8c8c8c8c8c
848484848484848484848484736576878787878787878787878787878787878787878165
433e3e3e3232322d43575a687b7e7e848484848484848484848484848487959595959597
97979797979797979797979a9a9a9a9a9a9a9a9a9a9aa0a0a0a0a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a88f7b787b819292959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f9a9a
9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092929292929292
92929292929292929292929292928f818181818181898989898989898989898989898989
7b7b787e8187959a9aa0bfddf7f9f9f9f9f9f9f9ffffffffffffffffffffffffffffffff
fffce9cabcbcbcaea8a5929295959595959595959595959595959595957b7e8181818995
959595959595959595959595959595898484929da3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3
b1a397979797979797979292929292928c8c8c8c8c8c7b7b7b7878788992abd2dbdddddd
ddddddddddddddddddddddddd8bcb3b1a89a929292929292929292928f8c8f959da8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09d9d9d978787878992a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959aa5
ababababababababababababababababa0a0a0a3a3a3a3a3a3a3a3000095959595959595
8f8c8c8c8c8c8c8c816d6d6d6d6d6d6d6d6d6d6d6d657687878787878787878787878787
8787878787878165433e3e3e3535352d434e4e4e6d7e7e84848484848484848484848484
84879595959595979797979797979797979797979797979797979797978fa0a0a0a0a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a89292929292929295959595959595959595959595959595
9595958f8f8f9a9a9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a09292929292929292929292929292929292929292928f81818181818189898989898989
89898989898989897b7b7b7b7b7b848992a0b6c4dbf9f9f9f9f9f9f9ffffffffffffffff
fffffffffffffffffffcf9d5aeaeaeaea8a5929292929292929292928989898989898989
897b7e8181818995959595959595959595959595959595898484929da3b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1a8a397979797979797979292929292928c8c8c8c8c8c7b7b7b787878
8992abd5e6f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eecab3b1a8978f8f8f8f8f8f8f8f8f8f
8f8c8f959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a5978484848992a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0959aa5ababababababababababababababababa0a0a0a3a3a3a3a3a3a3a300
00959595959595958f8787878787878784846d6d6d6d6d6d6d6d6d6d6d70768787878787
87878787878787878787878787878165433e3e3e3b38352d4343434354787e8484848484
848484848484848484879595959595979797979797979797979797979797979797979797
978fa0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8929292929292929595959595959595
95959595959595959595958f8f8f9a9a9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a09292929292929292929292929292929292929292928f8181818181
818989898989898989898989898989897b7b7b7b7b7b81848fa0b1b1c1f1f9f9f9f9f9f9
fffffffffffffffffffffffffffffffffffcf9e0aea8a8a8a8a592929292929292929292
92929292928f8f8c897b7e8181818995959595959595959595959595959595898484929d
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097979797979797979292929292928c8c8c8c
8c8c7b7b7b766d738992abdbf7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8b3b1aea5a3a3
a3a08f8f8f8f8f8f8c8c8f959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a597847e7b7e92a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0
a0a0a0a0a0a0a0a0a0a0a0a0a0959aa5ababababababababababababababababa0a0a0a3
a3a3a3a3a3a3a30000959595959595958f8787878787878784848478787878787878786d
6d7676878787878787878787878787878787878787878165434343434343352d43434343
54577b848484848484848484848484848487959595959597979797979797979797979797
9797979797979797978fa0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a892929292929292
959595959595959595959595959595959595958f8f8f9a9a9a9a9d9d9d9d9d9d9d9da0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092929292929292929292929292929292929292
92928f8f8f8f8f8181818181817b7b7b7b7b7b7b7b7b7b7b7e7e7e7e7e7e8184879aa0a0
b3ddf9f9f9f9f9f9fffffffffffffffffffffffffffffffffffcf9f7cabcb1a8a8a59292
9292929292929292929292929292928c897b7e8181818995959595959595959595959595
959595898484929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979792928c8c
8c8c8c8c8c8c8c8c8c8c7b7b7b78787e8992abddf7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4
eed8c4c1bcbcaeaeaea08f8f8f8f8f8f8c8c8f959da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597846d6d7892a0a0a0a0a0a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a0a0a0a0a0a0959aa5abababababababababababab
ababababa0a0a0a3a3a3a3a3a3a3a30000959595959595958f8787878787878787878787
878787878787786d6d767687878787878787878787878787878787878787816557574646
4646352d434343435454546d848484848484848484848484848795959595959797979797
97979797979797979797979797979797978f8f8f8f8f9797979797979797979797979797
9792929292929292959595959595959595959595959595959595958f8f8f9a9a9a9a9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979797979292929292929292929292
92929292929292929292929292929281818181818181818181818181817e7e7b7e7e7e7e
7e7e8184848f959aabc4e9f9f9f9f9f9fffffffffffffffffffffffffffffffffffcf9f9
ebcdb1a8a8a592929292929292929292929292929292928c897b7e818181899595959595
9595959595959595959595898484929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797
9797979792928c8c8c8c8c8c8c8c8c8c8c8c7b7b848c8c8c9292abe3f7f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea08f8f8f8f8f8f8f8f8f959da8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59784686d7e95a0a0a0a0a0
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a0a0a0a0a0a0959aa5abababab
ababababababababababababa0a0a0a3a3a3a3a3a3a3a30000959595959595958f878787
878787878787878787878787878778686d76768787878787878787878787878787878787
878781656565464646463527404343435454546584848484848484848484848484879595
959595979797979797979797979797979797979797979797978f8f8f8f7b7b8484849292
92929292929292929292929292929292959595959595959595959595959595959595958f
8f8f9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797929292
929292929292929292929292929292929292929292929281818181818181818181818181
817e7e7b7e7e7e7e7e7e8184848f959aabaec4eef9f9f9f9ffffffffffffffffffffffff
fffffffffffcf9f9f9d2b1a8a5a592929292929292929292929292929292928c897b7e81
81818995959595959595959595959595959595898484929d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d97979797979792928c8c8c8c8c8c8c8c8c8c8c8c7b7b848c8c8c9597b9e3
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea08f8f8f92929797979797
9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a597846d
768995a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a0a0a0a0a0
a0959aa5ababababababababababababababababa0a0a0a3a3a3a3a3a3a3a30000959595
959595958f878787878787878787878787878787878778656d7676878787878787878787
87878787878787878787816565654646464646303e434343545454658484848484848484
848484848487959595959597979797979797979797979797979797979797979789898989
816d65707b84929292929292979797979797979797979797979797979795959595959595
959595959595958f8f8f97979a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797
979797979792929292929292929292929292929292929292929292929292928181818181
818181818181818181817e7b7e7e7e7e7e7e8184848f959aa5a5abcff9f9f9f9ffffffff
fffffffffffffffffffffffffffcf9f9f9ddb19a8f929292929292929292929292929292
9292928c897b7e8181818995959595959595959595959595959595898484929d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979792928c8c8c8c8c8c8c8c8c8c87877b7b
848c8c8c95abc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea08484
87929297979797979da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a5977b78879595a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0
a0a0a0a0a0a0a0a0a0959aa5abababababababababababababababab978992a3a3a3a3a3
a3a3a30000959595959595958f8787878787878787878787878787878787877e7b7b7b87
878787878787878787878787878787878787816565654646464646464646464654545465
848484848484848484848484848795959595959797979797979797979797979797979797
9797977e767676766a5c5a62768492929292929297979797979797979797979797979797
9795959595959595959595959595958f8f8f8f8f929a9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d97979797979797979292929292929292929292929292929292929292929292
9292928181818181818181818181818181817e7b7e7e7e7e7e7e7e7e7e7e89979a9da3bf
eef9f9f9fffffffffffffffffffffffffffffffffffcf9f9f9eec1979595959595959595
95959292929292929292928c897b7e818181899595959595959595959595959595958f89
8484929797979797979797979797979797979797979797979797979792928c8c8c8c8c8c
8c8c8c8c87847b7b848c8c8c95bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1
bcbcaeaeaea0817b81929297979797979da0a0a0a0a0a0a0a0a0a0a0a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a597878c959595a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a0a0a0a0a0a0a0a0a0a0a0a0a0a0959aa5abababababababababababababababab
979297a3a3a3a3a3a3a3a30000959595959595958f87878787898f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f84848787878787878787878787878787878787878781656565464646464646
464646465454546581818181818181818181818181879595959595979797979797979797
97979797979797979797977e7676767662575a6273849292929292929797979797979797
97979797979797979795959595959595959595959595958f8f8f8f8f929a9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979787817e89929292929292929292929292
9292929292929292929292818181818181818181818181818181817b7e7e7e7e7e7e7e7e
7e7e848c929aa3b3d2f9f9f9fffffffffffffffffffffffffffffffffffcf9f9f9eee0b6
b6b6b6ae9797979797979292929292929292928c897b7e81818189959595959595959595
959595959595878784849297979797979797979797979797979797979797979797979797
92928c8c8c8c8c8c8c8c8c8c877e7b7b848c8c8c95bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7
f7f7f7f4eed8c4c1bcbcaeaeaea089848992929797979797979797979797979797978ca0
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59a928f959595a0a0a0a0a0a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a0a0a0a0a097959aa5abababababababab
ababababababababa3a3a3a3a3a3a3a3a3a3a30000959595959595958f87878787898f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8484878787878787878787878787878787878787878165
65654646464646464646464649494c5a7b81818181818181818181818187878787878787
878787878787878787818181818181818181817e767676766d65626a7684929292929292
97979797979797979797979797979797978781848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
929a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979787736d8192929292
929295959595959595959595959595959595958184848484848484848484848484848484
8484847e7e7e7e7e7e81848c929aa3a5b3e3f9f9ffffffffffffffffffffffffffffffff
fffcf9f9f9eeeee0d8d5cfc4b3b3b3b3b3a39292929292929292928c84787e8181818995
9595959595959595959595959595877b8484929595959595959595959595959595959595
959595959595959592928c8c8c8c8c8c8c8c8c8c877e7b7b848c9292a0bcc7e3f7f7f7f7
f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea09292929292979797979797979797
97979797979789a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a0928f959595a0
a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9aa5
ababababababababababababababababa3a3a3a3a3a3a3a3a3a3a3000095959595959595
8f87878787898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848484848484848484848484767676
6a656565656565656565464646464646464646464643464c5c7e81818181818181818181
8187878787878787878787878787878787878787878787877b6d6d6d6d6d6d6d6d6d6a70
7b8492929292929297979797979797979797979797979797978781848f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f929797979797979797979797979797979797979797979797928c8c8c
81736d818f8f8f8f8f8f9595959595959595959595959595959595818484848484848484
84848484848484848484847e7e7e7e7e7e81848989898c8f9ac7f9f9ffffffffffffffff
fffffffffffffffffffcf9f9f9eeeeeeeedbd2d2d2d2d2d2bca39292929292929292928c
89767e818181899595959595959595959595959595958787878787878787878787878787
87848487878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c877e7b7b848c9a9a
a5bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea09a9797929297
97979797979797979797979797978f9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8928f959595a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a5abababababababababababababababaeaeb3b3b3b3b3b3b3b3b3b300
00959595959595958f87878787898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84848484848484
84848484847676766d6d6d6d6d6d6d6d6d6d464646464646464646464646464c5c7e8181
818181818181818181878787878787878787878787878787878787878787878778737878
787878787878787b7e849292929292929797979797979797979797979797979797878184
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8781817b736d6d818f8f8f8f8f8f959595959595959595959595959595959581
848484848484848484848484848484848484847e7e7e7e7e7e818181818181818cb3ebf9
fffffffffffffffffffffffffffffffffffcf9f9f9eeeeeeeee0dbdbdbd5d2d2c4ab9292
929292929292928c89897e8181818787878787878787878787878f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f878784847876818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
877e7b7b848ca0a0a5bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeae
aea09a97979292979797979797979797979797979797979aa8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8928f959595a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a597
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a5abababababababababababababababaeaeb3b6b6
b9b9b9b9b9b9b90000959595959595958f87878787898f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8484848484848484848484847676766d6d6d6d6d6d6d6d6d6d464c4c4c4c4c4c4c4c4c
4c4c4c545c7e818181818181818181818187878787878787878787878787878787878787
878787877e7e7e7e7e7e7e7e7e7e7e7e7e84929292929292979797979797979797979797
97979797978781848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e879595959595959595959595
95959595959595959595959581787878787878818f8f8f8f8f8f97979797979797979797
9797979797979581848484848484848484848484848484848484847e7e7e7e7e7e818f8f
8f8f8f8f8fa5cff9fffffffffffffffffffffffffffffffffffcf9f9f9eeeeeeeeebe6e6
e0d5d2d2c4b19292929292929292928c8989878181818181818181818181818484849292
929292929292929292929292929292878784846d73818787878787878787878787878787
8787878787878787817e7b7b848ca0a0a5bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4
eed8c4c1bcbcaeaeaea09a97979292979797979797979797979797979797979aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f959595a0a0a0a0a0a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5aeaeb3b6b6b9b9b9b9b9b9b90000959595959595958f89898989898f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8484848484848484848484847676766d6d6d6d6d6d6d6d6d6d4657
5a5a5a5a5a5a5a5a5a5a5a5a5c7e81818181818181818181818787878787878787878787
8787878787878787878787877e7e7e7e7e7e7e7e7e7e7e7e7e8492929292929297979797
979797979797979797979797978781848484848484848484848f8f8f8f8f8f8f8fa3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0847b7b7b7b7b7b818f8f8f8f8f8f9797
97979797979797979797979797979581848484848484848484848484848484848484847e
7e7e7e7e7e81979797979797979aaed8fffffffffffffffffffffffffffffffffffcf9f9
f9eeeeeeeeeee9e6e0d5d2d2c4b19292929292929292928c898987878787878787848484
84848184848492929292929292929292929292929292928787848465737b7b7b7b7b7b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b787878848ca0a0a5bcc7e3f7f7f7f7f7f7f7f7
f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea09a9797929297979797979797979797979797
9797979aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f959595a0a0a0a0a0
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a39d9d9d9d9d9a9a9aaeaeb3b6b6b9b9b9b9b9b9b900008f8f8f8f8f8f8f8f898989
89898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8484848484848484848484847676766d6d6d6d
6d6d6d6d6d6d4657686868686868686868686868687e8181818181818181818181878787
87878787878787878787878787878787878787877e7e7e7e7e7e7e7e7e7e7e7e7e849292
929292929797979797979797979797979797979797878181818181818170707e7e92a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a08484818181817e7e
7e7e7e7e7e81979797979797979797979797979797979581848484848484848484848484
848484848484847e7e7e7e7e7e81979797979797979aa0bcf4ffffffffffffffffffffff
fffffffffcfcf9f9f9eeeeeeeeeee9e6e0d5d2d2c4b19292929292929292928c89898787
87878787878484848484818484849a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a878784736a
737b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b787878848ca3a3a5bcc7e3
f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea09a97979292979797979a
9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f
9595959d9d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9797aeaeb3b6b6b9b9b9b9b9b9b90000848484
848489898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8484848484848484848484
847676766d6d6d6d6d6d6d6d6d6d4657686868686868686868686868687e818181818181
818181818187878787878787878787878787878787878787878787877e7e7e7e7e7e7e7e
7e7e7e7e7e84929292929292979797979797979797979797979797979787818181818181
81766d7e7e92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0a0a0a0a0a0a0a0
8484818181817e7070707070707e97979797979797979797979797979797978c8c898787
8787878787878787878484848484847e7e7e7e7e7e81979797979797979aa0b3ddf9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2c4b1929292929292
9292928c8989878787878787878484848484818484849a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a8787847878787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b787878
848ca3a3a5bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f4eed8c4c1bcbcaeaeaea09a97
979292979797979a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8928f9595959595959595a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9297aeaeb3b6b6b9b9b9b9
b9b9b90000848484848489898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f848484
8484848484848484847676766d6d6d6d6d6d6d6d6d6d4657686868686868686868686868
687e81818181818181818181818787878787878787878787878787878787878787878787
7e7e7e7e7e7e7e7e7e7e7e7e7e8487878787878797979797979797979797979797979797
9787818181818181817b73737e92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3
a0a0a0a0a0a0a0a08484818181817e707070737e7e849797979797979797979797979797
97979797978c8c8c8c8c8c8c8c8c8c8c878484848484847e7e7e7e7e7e81979797979797
979aa0b3ddf9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2
c4b19292929292929292928c8989878787878787878484848484818484849a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a87878787818181817b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b7b7b787878848ca3a3a5bcc7e3f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7eee3d8c4c1
bcbcaeaeaea09a97979292979797979a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9da3a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f959aa0a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9797ae
aeb3b6b6b9b9b9b9b9b9b90000848484848489898989898989898f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8484848484848484848484847676766d6d6d6d6d6d6d6d6d6d465a68686868
6868686868686868687e8181818181818181818181848484848484848487878787878787
87878787878787877e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e9797979797979797
97979797979797979787818181818181817b78767e92a3a3a3a3a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a3a0a0a0a0a0a0a0a09292818181817e70707073929797979797979797
97979797979797979797979797928c8c8c8c8c8c8c8c8c8c878484848484847e7e7e7e7e
7e81979797979797979aa0b3dbf4f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeee
eeeee9e6e0d5d2d2c4b19292929292929292928c89898787878787878784848484848184
84849a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8787878781818181787878787878787878
78787878787878787878787878787878848ca3a3a5bcc7e3f4f4f4f4f4f4f4f4f4f4f4f4
f4f4f4d2c7c7c4c1bcbcaeaeaea09a97979292979797979a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a979595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f959aa0a3a3a3a3a3a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d
a0a0a0a0a0a0a0aeaeb3b6b6b9b9b9b9b9b9b90000848484848489898989898989898f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8484848484848484848484847373818181818181818181
8181818181818181818181817e787373737e818181818181818181818184848484848484
848787878787878787878787878787877e7e7e7e7e7e7e7e7e7e87878787878787878787
979797979797979797979797979797979787818181818181817b7b7b7e92a3a3a3a3a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0a0a0a0a0a0a0a09a92818181817e7070707392
979797979797979797979797979797979797979797978c8c8c8c8c8c8c8c8c8c87848484
8484847e7e7e7e7e7e81979797979797979aa0aebfd5f1f9f9f9f9f9f9f9f9f9f9f9f9f9
f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2c4b1928c8c8c8c8c8c8c8c8c8989878787878787
878484848484818487879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a878787878181818178
6a6a6a6a6a6a6a6a6a737373737373737373737373737376848ca3a3a5bcc7e3e3e3e3e3
e3e3e3e3e3e3e3e3e3e3dbbcb9b9b9b9b9b9aeaeaea09a97979292979797979a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a97928fa3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8928f959aa0a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39da5a5a5a5a5a5a5aeaeb3b6b6b9b9b9b9b9b9b9000084848484848989
8989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8484848484848484848484846d7389
89898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8781817e7873737373686865656565657b8181
8184848484848484848787878787878787878787878787877e7e7e7e7e7e7e7e7e7e878f
8f8f8f8f8f8f8f8f979797979797979797979797979797979787818181818181817b7b7b
7e92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0a0a0a0a0a0a0a09d928181
81817e6d6d687892979797979797979797979797979797979797979797978c8c8c8c8c8c
8c8c8c8c878484848484847e7e7e7e7e7e81979797979797979aa0a0aec4ddf9f9f9f9f9
f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2c4b192898989898989898989
8989878787878787878484848484818487879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a87
87878781818181786a6a6a6a6a6a6a6a6a6d6d6d6d6d6d6d6d6d6d6d6d6d707e848ca3a3
a5bcc7d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5c1b6b6b6b6b6b6b6aeaeaea09a9797929297
9797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979292a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a89297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39da5a5a5a5a5a5a5aeaeb3b6b6b9b9b9b9b9b9b900
00848484848489898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f898c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8781817e78737373736868
5f57575454626a6a7684848484848484848787878787878787878787878787877e7e7e7e
7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f9797979797979797979797979797979797878181
81818181817b7b7b7e92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0a0a0a0
a0a0a0a09d92818181817e6d6d707b929797979797979797979797979797979797979797
97978c8c8c8c8c8c8c8c8c8c878484848484847b68625f737e81979797979797979aa0a0
aebfcde9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2c4b19292
898c9595959595959595959595959595958484848484818487879a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a8787878781818181786a6a6a6a6a6a6a6a6a6d70707070707070707070
70707e7e848ca3a3a5bcc7c7c7c7c7c7c7c7c7c7c7c7c7c7c7c7c1b6b6b6b6b6b6b6aeae
aea09a9797928f8f8f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979292a3a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a89297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39da5a5a5a5a5a5a5aeaeb3b6b6
b9b9b9b9b9b9b90000848484848489898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f89959595959595959595959595959595898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878181
7e787373737368685f575c5f686868686884848484848484848787878787878787878787
878787877e7e7e7e7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8484
848484848484818181818181817b7b7b7e92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a39d8f7e6d6d707b92979797979797979797979797
979797979797979797978c8c8c8c8c8c8c8c8c8c87848484848484705c5a57627e819797
97979797979aa0a0aebfcddbf9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6
e0d5d2d2c4b19292898c9595959595959595959595959595958484848484818487879a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8787878781818181786a6a6a6a6a6a6a6a6a6d7378
7e7e7e7e7e7e7e7e7e7e7e7e848ca3a3a5bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb6
b6b6b6b6b6b6aeaeaea09a9797928c8f8f8f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797
97a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a5a5a5a5
a5a5a5aeaeb3b6b6b9b9b9b9b9b9b90000848484848489898989898989898f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f89959595959595959595959595959595898c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8781817e787373737368685f575c5f68686868687684848484848484878787
8787878787878787878787877e7e7e7e7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8c787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7e92a3a3a3a3a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5ababababababababababababababab846a65707b9297979797
9797979797979797979797979797979797978c8c8c8c8c8c8c8c8c8c8784848484848470
5c5a57627681979797979797979aa0a0aebfcdd8f1f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9
f9eeeeeeeeeee9e6e0d5d2d2c4b19292898c959595959595959595959595959595848484
8484818487879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a87878787818181817868686868
68686868686873787e7e7e7e7e7e7e7e7e7e7e7e848ca3a3a5bcbcbcbcbcbcbcbcbcbcbc
bcbcbcbcbcbcbcb6b6b6b6b6b6b6aea8a3a09a9797928c8c8c89979a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89297979aa0a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabab
aba3a3a0a5a5a5a5a5a5a5aeaeb3b6b6b9b9b9b9b9b9b900008484848484898989898989
89898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f89959595959595959595959595959595898c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8781817e787373737368685f5c5c5f6868686868768484
84848484848787878787878787878787878787877e7e7e7e7e7e7e7e7e7e878f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8c84848484848484847e7b7b7b7b7b7b7b7b7b7e92a3a3
a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6895f
5c707b92979797979797979797979797979797979797979797978c8c8c8c8c8c8c8c8c8c
87848484848484705c5a57626881979797979797979aa0a0aebfcdd8e6f9f9f9f9f9f9f9
f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2c4b19292898c95959595959595959595
95959595958484848484818487879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8787878781
818181786565656251686868686873787e7e7e7e7e7e7e7e7e7e7e7e7e87a3a3a5b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b6b6b6b6b6b6b6aea8a0a09a9797928c8c8c87979a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89297
979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3aeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeabababa3a3a0a5a5a5a5a5a5a5aeaeb3b6b6b9b9b9b9b9b9b90000848484
848489898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8995959595959595959595
9595959595898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8781817e787373737368685f5f5f5f
68686868686d848484848484848787878787878787878787878787877e7e7e7e7e7e7e7e
7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8c8c8c8c8c877e7e7e7e7e7e
7e7e7e7e7692a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6897370737b9297979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8c8c
8c8c8c8c8c8c8c8c87848484848484705c5a57575781979797979797979aa0a0aebfcdd2
d2e6f9f9f9f9f9f9f9f9f9f9f9f9f9f9f9eeeeeeeeeee9e6e0d5d2d2c4b19292898c9595
9595959595959595959595959584848484847e8487879a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a878787878181818178656565575170737373737378878989898989898989898989
8989a3a3a5a5a5b3b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6aea8a0a09a97
97928c8c8789979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a3a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a89297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3aeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a5a5a5a5a5a5a5aeaeb3b6b6b9b9b9b9
b9b9b90000848484848489898989898989898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f899595
95959595959595959595959595898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8781817e787373
737368686868686868686868686d73767684848484848484848484848484848481818181
7e7e7e7e7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8c898787878184898989898992a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b7b7b7b929797979797a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39a8c8c8c8c8c8c8c8c8c8c87848484848484705c5c5c5c5c81979797979797
979aa0a0aebfc4c4c4c7e6eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9e6e0d5d2d2
c4b19292898c95959595959595959595959595959584848484847e8487879a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a87878787818181817865656251707373737373737887959595
95959595959595959595a3a3a5a5a5b3b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6
b6b6aea89595959595928c8c898c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a3a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a89297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a5a5a5a5a5a5a5ae
aeb3b6b6b9b9b9b9b9b9b900007b84848484898989898989898989898989898989898989
89898989848995959595959595959595959595959592929292929292929292929292928f
8c8781817e787373737368686868686868686868686d7376768484848484848484848484
848484847b7e7e7e7e7e7e7e7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8c8987878781848c8f8f8f8f92a3a3a3a3a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b7b7b7b929797979797a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39a8c8c8c8c8c8c8c8c8c8c87848484848484705c5f5f5f
5f81979797979797979aa0a0a5a5a5a5a5a5bfeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeee9e6e0d5d2d2c4b19292898c9595959595959595959595959595958c848484847e84
87879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8787878781818181786254545f78787878
7878787b8795979797979797979797979797a3a3a5a5a5b3b3b6b6b6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6b6b6b6ae95898c8c8c8c8c8c8c8c8c979a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89297979aa0a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0
a5a5a5a5a5a5a5abababababababababababab0000848484848489898989898989898989
8989898989898989898989787b8995959595959595959595959595959595959595959595
959595959595958f8c878181817b7b7b737368686868686868686868686d737676848484
8484848484848484848484847e7b7e7e7e7e7e7e7e7e7e7e7e7e878f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8987878781848c8f8f8f8f92a3a3a3a3a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b7b7b7b92
9797979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8c8c8c8c8c8c8c8c8c8c87848484
848484705c5f5f5f5f8197979797979797979797979797979792a3d5eeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeee9c7bfbfbfbfbfb19292898c9595959595959595959595959595
958f848484847e8487879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a878787878181818178
6d62707e7e7e7e7e7e7e7e7e8795979797979797979797979797a3a3a5a5a5b3b3b3b3b3
b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b39a8c89878c8c8c8c8c8c8c8c8c959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89297979aa0a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeabababa3a3a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a597979797000084848484848484
848484848484848484848484848484848484847e81899595959595959595959595959595
9595959595959595959595959595958f8c8c8c8c8c8c8c7b73736a6a6a6a6a6a68686868
686d737676848492929292929292929292929292929292929292929292898989847e878f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8987878781848c8f8f8f
8f92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6
b6b6897b7b7b7b929797979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8c8c8c8c8c8c
8c8c8c8c87848484848481705c5f5f5f5f81959595959595959595959595959595929dbf
ebeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6c7a8a8a8a8a8a8a89292898c959595959595
9595959595959595958f848484847e8487879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a87
87878787878787878787878787878787878787878795979797979797979797979797a3a3
a3a3a3a3a3a3a3a3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b69d8789898c8c8c8c8c8c8c8c
8c8c959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a89297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a3a3a3a3aeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeabababa3a3a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59289898900
008787878787878787878787878787848484848484848484848481818189959595959595
95959595959595959595959595959595959595959595958f8c8c8c8c8c8c8c7b73736a6a
6a6a6a6a68686868686d737676848492929292a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9d898989847e878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8987
878781848c8f8f8f8f92a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5b6b6b6b6b6
b6b6b6b6b6b6b6b6b6b6897b7b7b7b929797979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39a8c8c8c8c8c8c8c8c8c8c87736d6d6d6d6a6a5c5f5f5f5f818c8c8c8c8c8c8c8c8c8c
8c8c8c8c8f929db9dbe0e0e0e0e0e0e0e0e0e0e0e0e0e0e0d2bfa89d9d9d9d9d9d9d9292
898c9595959595959595959595959595958f848484847e84878792929292929292929292
929292929292928787878787878787878787878787878787878787878795979797979797
9797979797979797979595959595959595b6b6b6b6b6b6b6b6b6b6b6b6b6b6b69d959292
9595959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a09a
8fa3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a58c7e7e7e0000979797979797979797978f8c8c8c84848484848484848484848181
818995959595959595959595959595959595959595959595959595959595958f8c8c8c8c
8c8c8c7b73736a6a6a6a6a6a68686868686d7376767b7e92929292a0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39d898989847e878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8c8987878781848c8f8f8f8f92a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d
9da3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b7b7b7b929797979797a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39a8c8c8c8c8c8c8c8c8c8c6d545757575757575c5f5f5f5f818c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c9db3bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb3b1a59d9d
9a9a9a9a9a9a9292898c9595959595959595959595959595958f8f7e7e7e7e8487879292
929292929292929292929292929292878787878787878787878787878787878787878787
8795979797979797979797979797979797959797979797979db6b6b6b6b6b6b6b6b6b6b6
b6b6b6b69d95929295959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97
979797979797958f8c878f8f8f8f8f8f8f8f9297979aa0a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a0a0978497aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a58c7b7b7b0000979797979797979797978f8c8c8c7b7e7e7e7e
7e7e7e7e7e81818181899595959595959595959595959597979797979797979797979797
9797978f8c8c8c8c8c8c8c7b73736a6a6a6a6a6a68686868686d737676787e92929292a0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8c8987878781848c8f8f8f8f92a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39d9da3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b7b7b7b9297979797
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a898989898989898989735f57575757575757
5c5f5f5f5f6d6d6d6d6d78818c8f8f929292929292929aababababababababababababab
abab9a97979797979797979797979292898c95959595959595959595959595959595957e
70707e848787929292929292929292929292929292929287878787878787878787878787
8787878787878787879597979797979797979797979797979795979797979797a3b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b69d95929295959595959595979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a97979797979797958c7e7b89898989898989899297979aa0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a09d9797978c849daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabab
aba3a3a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58c7e7e7e0000979797979797979797978f
8c8c8c7b7e7e7e7e7e7e7e7e7e8181818189959595959595959595959595959797979797
97979797979797979797978f8c8c8c8c8c8c8c7b73736a6a6a6a6a6a68686868686d7070
70737e92929292a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f97979797
9797979797979797979797979792929292929292928c8987878781848c8f8f8f8f92a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9da3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b
7b7b7b878787899597a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d928981685f
5f575757575757575c5f5f5f5f5f5f5f5f5f6d818f8f8f979a9a9a9a9a9a9aa5a5a5a5a5
a5a5a5a5a5a5a5a5a5a59a97979795959595959595959292878c95959595959595959595
959595959595959589898989898989898989898989898787878787878787878787878787
878787878787878787878787878787878795979797979797979797979797979797959797
97979797a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b69d95929295959595959595979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979795817b788c8c8c8c8c8c8c8c9297
97979797979797979797979797979797979797979587878792a8aeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeabababa3a3a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58c8181810000979797
979797979797978f8c8c8c84848484848484847e7e818181818995959595959595959595
95959597979797979797979797979797979797928c8c8c8c8c8c8c7b73736a6a6a6a6a6a
68686868686d707376878f92929292a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989
847b878f979797979797979797979797979797979795959595959595958c898787878184
8c8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9da3a3b6b6b6b6b6b6b6b6b6
b6b6b6b6b6b6897b7b7b7b7b7b7b7e8497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3928968575a5a5a5a5a5a5a5a6268686868686868686868788f8f8f8f97a0a0a3a3
a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a97979795929292929292929292878c9595
959595959595959595959595959595959595959595959589898989898989817e7b7b7b87
878787878787878787878787878787878787878787878787879597979797979797979797
979797979795979797979797a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d95929295959595
959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979795817e7e8c8c
8c8c8c8c8c8c92979797979797979797979797979797979797979797928184849aa8aeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c
8181810000979797979797979797978f8c8c8c84848484848484847e7e81818181899595
95959595959595959595959797979797979797979797979797979797928c8c8c8c8c8c7b
73706a6a6a6a6a6a68686868686d70738f8f8f92929292a0a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39d898989847b878f979797979797979797979797979797979795959595959595
958c8c87878781848c8f8f8f8f929797979797979797979797979d9d9d9d9d9d9da3a3b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6897b878787878787878797a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3927b5f575f5f5f5f5f686d6d6d6d6d6d6d6d6d6d6d73768c8f
8f8f8f97a0a0a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979797959292929292
92929292878c959595959595959595959595959595959595959595959595958989898989
8989817e7678788787878787878787878787878787878787878787878787878787959797
9797979797979797979797979795979797979797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
9d95929295959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797
9797958989898c8c8c8c8c8c8c8c92929292929292929292929292929292929292929292
928184849aa8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09d8c8181810000979797979797979797978f8c8c8c84848484848484847e
7e8181818189959595959595959595959595959797979797979797979797979797979797
978c8c8c8c8c8c7e736d6a6a6a6a6a6a68686868686a6a878f8f8f92929292a0a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f97979797979797979797979797979797
9795959595959595958c8c87878781848c8f8f8f8f929797979797979797979797979d9d
9d9d9d9d9da3a3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b68c8c8c8c8c8c8c8c8c8995a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a392735c545f6d6d6d6d7373737373737373
73737378898f8f8f8f8f8f97a0a0a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a97
979795929292929292929292878c92929595959595959595959595959595959595959595
95959589898989898989817e7b7678878787878787878787878787878787878787878787
87878787879597979797979797979797979797979795979797979797a3a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a89d95929295959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a97979797979797958989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8981767b
8181818181818181818184849aa8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababa3a3a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c8181810000979797979797979797978f8c8c8c84
848484848484847e7e818181818995959595959595959595959595979797979797979797
9797979797979797978c8c8c8c8c8c897e6d6a6a6a6a6a6a68625f5c5c5c6d9d9d9d9d9d
9d9d9da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f9797979797979797
97979797979797979795959595959595958c8c87878781848c8f8f8f8f92959595959595
9595959597979d9d9d9d9d9d9d9da3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6929292929292
9292928995a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3785c575f707b7b7b
7b7b7b7b7b7b7b7b7b7e818c8f8f8f8f8f8f8f97a0a0a3a3a3a3a3a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a59a979797959292929292929292928789898f959595959595959595959595
97979797979797979797979797979797978f818484848489898989898989898989898989
898989898989898989898989879597979797979797979797979797979795979797979797
a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d95929295959595959595979a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a97979797979797958989898c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8970686d7e81818181818181818184849aa8a8aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeabababa3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c818181000097979797979797
9797978f8c8c8c84848484848484847e7e81818181878989898989898989898989898c97
97979797979797979797979797979797978c8c8c8c8c8c897e6d6a6a6a6a6a6a68625f5c
5a5a8f9d9d9d9d9d9d9d9da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f
979797979797979797979797979797979795959595959595958c8c87878781848c8f8f8f
8f929595959595959595959597979d9d9d9d9d9d9d9da3b6b6b6b6b6b6b6b6b6b6b6b6b6
b6b69595959595959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
8765657b7e7e7e7e7e7e7e7e7e7e7e7e7e8c8f8f8f8f8f8f8f8f8f97a0a0a3a3a3a3a3a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979795959292929292929292928789898f95959595
959595959595959597979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f898f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f959797979797979797979797979797
97959d9d9d9d9d9da3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9592929595959595959597
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979797958989898c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c87706a737e81818181818181818184849ab3b3b3b3b3b3b3
b3b3b3b3b3b3b3b3b3aeabababa3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c81818100
00979797979797979797978f8c8c8c84848484848484847e7e8181818181818787878787
8787878787878c9797979797979797979797979797979797978c8c8c8c8c8c897e6d6a6a
6a6a6a6a68625f5a4e6a979d9d9d9d9d9d9d9da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9d898989847b878f979797979797979797979797979797979795959595959595958c8c87
878781848c8f8f8f8f929595959595959595959597979d9d9d9d9d9d9d9da3b6b6b6b6b6
b6b6b6b6b6b6b6b6b6b69a9a9a9a9a9a9a9a9a9a95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a387707e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8f8f8f8f8f8f8f8f8f8f97
a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a97979292929292929292929292
8789898f95959595959595959595959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95979797979797
979797979797979797959d9d9d9d9d9da3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d959292
95959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a87878789898989898989
89898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847376767e8181818181818181818484
9ab3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3aeabababa3a3a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09d8c8181810000979797979797979797978f8c8c8c84848484848484847e7e878787
8787878989898989898989898989959797979797979797979797979797979797978c8c8c
8c8c8c897e6d6a6a6a6a6a6a68625746518f979d9d9d9d9d9d9d9da0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39d898989847b878f9797979797979797979797979797979797959595
95959595958c8c87878781848c8f8f8f8f929292929292929292929297979d9d9d9d9d9d
9d9da3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b69a9a9a9a9a9a9a9a9a9a95a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3877e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8f8f8f
8f8f8f8f8f8f8f97a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9a9a9a9a9a9797929292
92929292929292928789898f95959595959595959595959597979da0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f95979797979797979797979da8a8a8a8abababababababababababababababa8a8a8a8
a8a8a8a89d95929295959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a7878
878989898989898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847376767e818181
81818181818184849ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9aeabababa3a3a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09d8c8181810000979797979797979797978f8c8c8c8484848484
8484847e7e878787878787898c8c8c8c8c8c8c8c92929a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a979797978c8c8c8c8c8c897e6d6a6a6a6a6a6a5f5a574c6295979d9d9d9d9d9d9d9da0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f979797979797979797979797
979797979795959595959595958c8c7e818181848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
97979d9d9d9d9d9d9d9da3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b69a9a9a9a9a9a9a9a9a9a
95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38c8787878787878787878787
878787877e8f8f8f8f8f8f8f8f8f8f97a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9a9a
9a9a9a979792929292929292929292928789898f95959595959595959595959597979da0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f95979797979797979797979daebcbcbcbcbcbcbcbcbcbcbcbcbcbc
bcbcbcaba8a8a8a8a8a8a8a89d95929295959595959595979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a97977378878989898989898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
847676767e81818181818181818184849ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9aeabab
aba3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c8181810000979797979797979797978f
8c8c8c84848484848484847e7e878787878787898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59a979797978c8c8c8c8c8c897e6d6a6a6a6a6a6a626262627695979d
9d9d9d9d9d9d9da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d898989847b878f97979797
9797979797979797979797979795959595959595958c8c84848481848c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c898f979d9d9d9d9d9d9d9da3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a
9a9a9a9a9a9a9a9a95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f87878c
8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f97a0a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39d9a9a9a9a9a978f89898989898989898989898789898f9595959595959595
9595959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95979797979797979797979daec4c4c4c4c4c4
c4c4c4c4c4c4c4c4c4c4c4aba8a8a8a8a8a8a8a89d95929295959595959595979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a95877378898989898989898989898c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c847e7e7e7e81818181818181818184849ab9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9aeabababa3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c8181810000979797
979797979797978f8c8c8c84848484848484847e7e878787878787898c8c8c8c8c8c8c8c
92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a979797978c8c8c8c8c8c897e6d6a6a6a6a6a6a
6d6d78849595979d9d9d9d9d9d9d9da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8f8c89
847b878f979797979797979797979797979797979795959595959595958c8c8484848184
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d89
959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a38f8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f97a0a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39d9a9a9a9a9a8f817b878787878787878787878789898f
95959595959595959595959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9597979797979797979797
9daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba8a8a8a8a8a8a8a89d95929295959595
959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9281767e898989898989898989898c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e7e7e8181818181818181818489a3b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9aeaba8a8a3a3a0a097979797979797979797979797978c
8181810000979797979797979797978f8c8c8c8484848484848484707887878787878789
8c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8c898989898989
7e6d6a6a6a6a6a6a707389959595979d9d9d9d9d9d9d9da0a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39d8f8c89847b878f979797979797979797979797979797979795959595959595
958c8c8484847e7e7e6270898f8f8f8f8f8f8f929292929292979d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d89959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f8f8f8f8f8f8f
8f8f8f97a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d979595959581736a768787878787
878787878789898f95959595959595959595959597979da0a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f959797
97979797979797979daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba3a3a3a3a3a3a39a
9595929295959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9792929292929292
9292928f8f898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e7e7e81818181818181
81818fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9aea09595959595928f8f8f8f8f8f8f
8f8f8f8f8f8f8f8c8181810000979797979797979797978f8c8c8c84848484848484846d
76878787878787898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a
9a8c8989898989897e6d6a6a6a6a6a6a737392959595979d9d9d9d9d9d9d9da0a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a39d8f8c89847b878f97979797979797979797979797979797
9795959595959595958c8c8484847e7e543b54898f8f8f8f8f8f8f929292929292979d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c
8c8f8f8f8f8f8f8f8f8f8f97a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d979284818178
706a738787878787878787878789898f95959595959595959595959597979da0a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f95979797979797979797979daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4ab
a3a3a3a3a3a3a38c8c8c8c8c8c8c8c8c8c787b979aa0abababababababababababababab
ababababababababababa58f8f898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c847e7e7e
7e8181818181818181818fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a09595959595
9289898989898989898989898989898981818100006d6d6d6d6d70788484848484848484
848484848484847b7b878787878787898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a59a9a9a9a9a8f8f8f8f8989897e6d6a625f5f5f68787e95959595979d9d9d9d9d
9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8c89847b73899797979797979797
97979797979797979795959595959595958c8c8484847e7e3824387e8f8f8f8f8f8f8f92
9292929292979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9792959a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a959a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f
8f8f8f8f8f8f8c8c8c8f8f8f8f8f8f8f8f8f8f97a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39d9792847e7e7e7e7e7e7e7e7e7e7e7e7e786d8189898f959595959595959595959595
97979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f95979797979797979797979daec4c4c4c4c4c4c4c4c4c4
c4c4c4c4c4c4c4aba3a3a3a3a3a3a3929292929292928c8c8c6d68979aa0abababababab
ababababababababababababababababababa58f8f898c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c847e7e7e7e8181818181818181818fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9a0959595959592898989898989898989898989898989818181000065656565656578
8787878787878989898989898989898989898989898987898c8c8c8c8c8c8c8c92a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f8f8989897e6d62514e515c6878959595
9595979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979797979797978f8c89785f4968
979797979797979797979797979797979795959595959595958c8c8484847e7e2d223265
8f8f8f8f8f8f8f929292929292979797979797979797979797979797958c8f92959a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a959a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f95959595959595959597a0a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39d978c847e7e7e7e7e7e7e7e7e7e7e7e7e7e7e8189898f95959595
959595959595959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929292929292929292929daec4c4
c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba3a3a3a3a3a3a39d9d9d9d9d9d9a8c8c8c7b6284
9aa0ababababababababababababababababababababababababa58f8f898c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c847e7e7e7e8181818181818181818fa0b1b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9a09595959595928c8c8c8c8c8c8c8c8c8c8c8c8c878781818100
006a6a6a6a6a76878787878789898989898989898989898989898989898987898c8c8c8c
8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f8f8989897e735f4e
4c515c68819595959595979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8f8f8f8f8f8f
8f8f8c897e5c3e57979797979797979797979797979797959595959595959595958c8c84
84847e6d384351788f8f8f8f8f8f8f929292929292979797979797979797979797979797
84878f92959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959a9aa3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f95959595959595959597
a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d897e7e878787878787878787878787878787
8789898f95959595959595959595959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929292929292
929292929daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba3a3a3a3a3a3a39d9d9d9d9d
9d9a8c8c8c8173849aa0ababababababababababababababababababababababababa58f
8f89898989898989898989898989898989898989847e7e7e7e8181818181818181818fa0
b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a09595959595928c8c8c8c8c8c8c8c8c8c8c
8c8c7e7e7e7e7e00007b7b7b7b7b7b878787878789898989898989898989898989898989
898987898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f
8f8989897e786551575c6a7e959595959595979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f
8f8f8f8f8f8f8f8f8f8f8c8c8c704e5c929292929292929292929292929292928c8c8c8c
8c8c8c8c8c8c8c8484847e6a7073768c8f8f8f8f8f8f8f92929292929297979797979797
979797979797979789898f92959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a959a9aa0a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f9595
9595959595959597a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d89817e87878787878787
87878787878787878787878787878787878787878f92959597979da0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f92929292929292929292929daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4ab9d9d9d9d
9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f9aa0abababababababababababababababababab
ababababababa58f8f89898989898989898989898989898989898989847e7e7e7e7e7e7e
7e7e7e7b78818fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a095959595958c8c8c8c
8c8c8c8c8c8c8c8c8c8c848484848400007e7e7e7e7e7e87878787878989898989898989
8989898989898989898987898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9a9a9a9a9a8f8f8f8f8989897e786d5c70788495959595959595979d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9797979797979797979797928c8c8c816d6d929292979797979797979797
9797979797978c8c8c8c8c8c8c8c8c8484847e6a7073768c8f8f8f8f8f8f8f9292929292
9297979797979797979797979797979789898f92959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f
8f8f8c8c8c8f95959595959595959597a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8984
848787878787878787878787878787878787878787878787877878818f92959597979da0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a392928f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f92929292929292929292929daec4c4c4c4c4c4c4c4c4c4c4c4c4c4
c4c4c4ab9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f9aa0abababababababababab
ababababababababababababababa58f8f89898989898989898989898989848484848484
847e7e7e7e7e7e7e7e7e7e7b767e8fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a08f
8f8f8f8f8f95959595959595959595959595959587878700007e7e7e7e7e7e8787878787
89898989898989898989898989898989898987898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f8f8989897e7876657b879595959595959595979d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797979797928f8c8c81787892929297
97979797979797979797979797978c8c8c8c8c8c8c8c8c8484847e6a7073768c8f8f8f8f
8f8f8f92929292929297979797979797979797979797979789898f92959a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f
8f8f8f8f8f8f8f8f8f8f8c8c8c8f95959595959595959597a0a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39d929292929292929292929292929287878787878787878787878787787b87
8f92959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a392928f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929292929292929292929daec4c4c4c4c4c4
c4c4c4c4c4c4c4c4c4c4c4aba3a0a0a0a0a0a0a0a0a0a0a0a09a8c8c8f8f8f8f9aa0abab
ababababababababababababababababababababababa58f8f8989898989898989898989
8989848484848484847e7e7e7e7e7e7e7e7e7e7b7b8c8fa0b1b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9978487898c979d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a000007e7e7e
7e7e7e878787878789898989898989898989898989898989898987898c8c8c8c8c8c8c8c
92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f8f8989897e78766d7e8c9595
959595959595979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797979797928f8c
8c8178789292929797979797979797979797979797978c8c8c8c8c8c8c8c8c8484847e6a
7073768c8f8f8f8f8f8f8f92929292929297979797979797979797979797979789898f92
959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f95959595959595959597a0a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39d92929292929292929292929292928787878787878787
87878787877884878f92959597979da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a392928f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f92929292929292
9daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba3a0a0a0a0a0a0a0a0a0a0a0a09a8c8c
8f8f8f8f9aa0ababababababababababababababababababababababababa58f8f898989
89898989898989898989848484848484847e7e7e7e7e7e7e7e7e7e7b8c8f8fa0b1b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b997847b7e8c979d9d9d9d9d9d9d9dabababababababab
ababab00007e7e7e7e7e7e87878787878989898989898989898989898989898989898789
8c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f8f898989
81848484848c9595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979797
9797979797928f8c8c8178789292929797979797979797979797979797978c8c8c8c8c8c
8c8c8c8484847e6a7073768c8f8f8f8f8f8f8f9292929292929797979797979797979797
9797979789898f92959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9595959aa3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f959595959595
95959597a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9292929292929292929292929292
878787878787878787878787877884878f8f8f8f8f8f8fa0a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a392928f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
89929292929292929daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba3a0a0a0a0a0a0a0
a0a0a0a0a09a8c8c8f8f8f8f97a0abababababababababababababababababababababab
ababa58f8f89898989898989898989898989848484848484847e7e7e7e7e7e7e7e7e7e7b
8f8f8fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9978989848c979d9d9d9d9d9d9d9d
ababababababababababab00007e7e7e7e7e7e8787878787898989898989898989898989
89898989898987898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a
9a8f8f8f8f89897b818c9797979797979797979797979797979797979797979797979797
97979797979797979797979797928f8c8c81787892929297979797979797979797979797
97978c8c8c8c8c8c8c8c8c8484847e6a7073768c8f8f8f8f8f8f8f929292929292979797
97979797979797979797979789898f92959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9295959a
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c
8c8f95959595959595959597a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d929292929292
9292929292929292878787878787878787878787877884878f8f8f8f8f8f8f9292929292
9292929292929292929292929292929292929292928f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8c929292929292929daec4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4ab
a3a0a0a0a0a0a0a0a0a0a0a0a09a8c8c8f8f8f8f8fa0abababababababababababababab
ababababababababababa58f8f89898989898989898989898989848484848484847e7e7e
7e7e7e7e7e7e7e7e8f8f8fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9978989848c97
9d9d9d9d9d9d9d9db1b1b1b9b9b9b9b9b9b9b900007e7e7e7e7e7e878787878789898989
898989898989898989898989898987898c8c8c8c8c8c8c8c92a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a59a9a9a9a9a8f8f8f8f898981899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d959797
979797979797979797979797979797979797979797928f8c8c8178789292929797979797
979797979797979797978c8c8c8c8c8c8c8c8c8484847e6a7073768c8f8f8f8f8f8f8f92
929292929297979797979797979797979797979789898f92959595959595959595959595
9595958c8795959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a08f8f8f8f8f8f8f8f
8f8f8f8f8f8f8c8c8c8f95959595959595959597a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39d9292929292929292929292929292878787878787878787878787877884878f8f8f8f
8f8f8f92929292929595959595959595959595959595959595959595958f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8989898989898797aec4c4c4c4c4c4c4c4c4c4
c4c4c4c4c4c4c4aba3a0a0a0a0a0a0a0a0a0a0a0a09a8c8c8f8f8f8f8fa0abababababab
ababababababababababababababababababa58f8f898989898989898989898989898484
84848484847e7e8787878787878787878f8f8fa0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9978989848c979d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700007e7e7e7e7e7e87
8787878792a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59589878787878787878776707ea5a5a5
a5a5a5a5a5a5a5a5a5a5a5a59a9a9a9a9a8f8f8f8f898984979d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d979797979797979797979797979797979797979797979797928f8c8c817878
7878899797979797979797979797979797978484848484848484848484847e6a7073768c
8f8f8f8f8f8f8f92929292929292929292929292929289898989898989898f9295959595
95959595959595959595958f8f95959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c8c8f95959595959595959597a0a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39d9292929292929292929292929292878787878787878787878787
877884878f8f8f8f8f8f8f92929292929a9da5ababababababababababababababababa0
978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8989898989898797aec4c4
c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aba3a0a0a0a0a0a0a0a0a0a0a0a09a8c8c8f8f8f8f
8fa0ababababababababababababababababababababababababa58f8f89898989898989
8989898989897b7b7e7e8989898989929292929292929292929292a0b1b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9978989848c979d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700
007e7e7e7e7e7e878787878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9589878787878787
8787685f6d9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f8f817884979d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979797979797979797979797979797979797979797
97928f8c8c817878786a7897979797979797979797979797979781818181818181818181
81817e6a7073788c8f8f8f8f8f8f8f929292929292929292929292929292877884898989
89898f92929292929292929292929292929295959595959aa3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c898f95959595959595959597
a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d929292929292929292929292929287878787
8787878787878787877884878f8f8f8f8f8f8f92929292929a9da5aeb6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6a0978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c848787
8787878797abababababababababababababababababababa3a0a0a0a0a0a0a0a0a0a0a0
a09a8c8c8f8f8f8f8fa0ababababababababababababababababababababababababa58f
8f898989898989898989898989898473787b9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da0
b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9978989848c979d9d9d9d9d9d9d9db1b1b1c1
c7c7c7c7c7c7c700007e7e7e7e7e7e878787878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
958987878787878787876d6265879a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f
8f7e7884979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797979797979797979797
979797979797979797928f8c8c817b7b7b7b7e9797979797979797979797979797978787
878787878787878781817e6a7076878c8f8f8f8f8f8f8f92929292929292929292929292
92928c818489898989898f92929292929292929292929292929d9d9d9d9d9d9da3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c817b8f9595
9595959595959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d92929292929292929292
92929292878787878787878787878787877884878f8f8f8f8f8f8f92929292929a9da5ae
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a0978f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8c848787878787878c8c8c8f9dabababababababababababababababa3a0a0a0
a0a0a0a0a0a0a0a0a09a8c8c8f8f8f8f8fa0abababababababababababababababababab
ababababababa58f8f898989898989898989898989898970707b9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9da0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9978989848c9d9d9d9d9d
9d9d9d9db1b1b1c1c7c7c7c7c7c7c700007e7e7e7e7e7e878787878792aeaeaeaeaeaeae
aeaeaeaeaeaeaeae95898787878787878787766a657b8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f7e7e84979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797979797
9797979797979797979797979797979797928f8c8c818787878c8c979797979797979797
9797979797978c8c8c8c8c8c8c87878781817e6a70768c8c8c8c8c8c8c8c8c8c92929292
9292929292929292929292898989898989898f92929292929292929292929292929d9d9d
9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a929292929292929292929292
8f81817e768f959595959595959595959595959595959595959595959595959595959292
929292929292929292929292878787878787878787878787877884878f8f8f8f8f8f8f92
929292929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a0978f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8c818181818181818181818997ababababababababababab
ababababa3a0a0a0a0a0a0a0a0a0a0a0a09a89898f8f8f8f8fa0abababababababababab
ababababababababababababababa58989898989898989898989898989898976707b9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da0b1b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b99789
89848c9d9d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700007e7e7e7e7e7e8787878787
92aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9589878787878787878778787e7e8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e7e84979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9797979797979797979797979797979797979797979797928f8c8c818787878c8c97
97979797979797979797979797978c8c8c8c8c8c8c87878781817e6a70768f9292929292
929292929292929292929292929292929292928f8989898989898f929292929292929292
92929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a95959595959595959595
95959595959595958c87877b6d8795959595959595959595959595959595959595959595
959595959595929292929292929292929292929287878787878787878787878787788487
8f8f8f8f8f8f8f92929292929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a0978f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c767381818c8c8c8c8c8c8c95a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a3a0a0a0a0a0a0a0a0a0a0a0a09a81898f8f8f8f8fa0abab
ababababababababababababababababababababababa389898989898989898989898989
89898987737b9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97979aa3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3978989848c9d9d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700007e7e7e
7e7e7e878787878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae958987878787878787877e7e
7e7e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e7e84979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9797979797979797979797979797979797979797979797928f8c
8c818787878c8c9797979797979797979797979797978c8c8c8c8c8c8c87878781817e6a
70788fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a959595959592928989898989898989
929292929292929292929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a8c7b
8f9595959595959595959595959595959292928765709595959595959595959595959595
959595959595959595959595959592929292929292929292929292928787878787878787
87878787877884878f8f8f8f8f8f8f92929292929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6a09789878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c6a6273818c8c8c
8c8c8c8c95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a09a8189
8f8f8f8f8fa0ababababababababababababababababababababababababa089899a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a8181a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3978f8f
9292929292929292929292929292928989848c9d9d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7
c7c7c700007e7e7e7e7e7e878787878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae95898787
8787878787877e7e7e7e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c7e818c
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797979797979797979797979797979797
9797979797928f8c8c818787878c8c9797979797979797979797979797978f8f8f8f8f8f
8f8f8f8f7b6d6d6a70819aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a95959595959292
8997979797979797979797979797979797929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9a9a9a9a9a9a8c7b87959595959595959595959595959595959595956a6a7b9292929292
929292929292929292929292929292929292929292929292929292929292929292929292
878787878787878787878787877884878f8f8f8f8f8f8f92929292929a9da5aeb6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6a09787878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c6d62707b8c8c8c8c8c8c8c95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0
a0a0a0a0a09a81898f8f8f8f8fa0abababababababababababababababababababababab
ababa089899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39792959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9589848c9d9d9d9d9d9d9d9d9d
b1b1b1c1c7c7c7c7c7c7c700007e7e7e7e7e7e7e7b7e878792aeaeaeaeaeaeaeaeaeaeae
aeaeaeae958987878787878787877e7e7e7e8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f897e84a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d97979797979797979797
97979797979797979797979797928f8c8c818787878c8c9797979797979797979aa5a5a5
a5a5a5a5a5a5a5a5a5a5a5a58c685f6876849aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
9a9595959595929289aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae929292929d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9a9a9a9a9a9a8c7b8795959595959595959595959595959595959595
7b7670768484848484848484848484848484849292929292929292929292929292929292
9292929292929292878787878787878787878787877884878f8f8f8f8f8f8f8f8f8f8f92
9a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a09787878784898c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c817081898c8c8c8c8c8c8c95a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a0a0a0a0a0a0a0a0a0a0a0a09a81898f8f8f8f8f9aabababababababababababababab
ababababababababababa089899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9589848c9d
9d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700007e7e7e7e7e7e7e7b7e878792aeaeae
aeaeaeaeaeaeaeaeaeaeaeae958987878787878787877e7e7e7e8f8f8f8f959797979797
979797979797979797978f8c7e7e8fa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9797
979797979797979797979797979797979797979797928f8c87818787878c8c9797979797
979797979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59576656a76849aa0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09a9595959595929289aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae929292
929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a8c7b879595959595959595959595
9595959595959595877e65625f686d6d6d6d6d6d6d6d6d6d6d7884929292929292929292
929292929292929292929292929292928787878787878787878787878778848787878787
87878787878787929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a0978787877e818c8c
8c8c8c8c8c8c8c8c8c8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a09a8187878787878792abababababab
ababababababababababababababababababa089899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9589848c9d9d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700007b7b7b7b7b7b7b
7b7e878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae958987878787878787877e7e7e7e8f8f
8f8f959797979797979797979797979797978f7b768192a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a89d9595959595959595959595958f8f8f8f8f8f8f8f8f8f8f8f8f847b788787
878c8c9797979797979797979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59587767376849aa0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9595959595929292aeaeaeaeaeaeaeaeaeaeae
aeaeaeaeae929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9595959595958c7b87959595
95959595959595959595959595959595877e65574e51545454545454545454545c788492
929292929292929292929292929292929292929292929292878787878787878787878787
877884878787878787878787878787929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a0
9787878787878c8c8c8c8c8c8c8c8c8c8c8fabababababababababababababababababab
ababa5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a09a818181817373
8192ababababababababababababababababababababababababa08f959a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9589848c9d9d9d9d9d9d9d9d9db1b1b1c1c7c7c7c7c7c7c700
007b7b7b7b7b7b7b7b7e878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae95817b7e7e7e7e7e
7e7e7e7e7e7e8f8f8f8f959797979797979797979797979797978f81788492a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a89d9595959595959595959595957676787878787b7b7b7b
7b7b7b7b7b7b8787878c8c9797979797979797979aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9595958989899aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a959595959592929aaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeae929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95928989
8989897b8795959595959595959595959595959595959595877e654e4e4e4e4e4e4e494c
4c4c4c4c5a78848484848484848484848484878787878787878787878787878787878787
8787878787878787877884848484848484848484878787929a9da5aeb6b6b6b6b6b6b6b6
b6b6b6b6b6b6b6a0978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8fabababababababababab
ababababababababababa595959595959595959595959595959595959595929292929292
929281818181767b878f9a9a9a9a9a9a9a9a9dabababababababababababababababa097
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39792959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9589848c9d9d9d9d9d9d9d9d9db1b1b1c1
c7c7c7c7c7c7c700008c8c8c8c8c8c8c8c8c878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
957b767e7e7e7e7e7e7e7e7e7e7e87898f8f959797979797979797979797979797978f95
959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d9595959595959595959595926a62
6d7373737e8487878787878787878787878c8c9797979797979797979aa5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59595959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a959595
959592929aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae929292929d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d959287767b7b7b7b8795959595959595959595959595959595959595877e705a
4e4c4c4c4c4c4949494943435a7884848484848484848484848487878787878787878787
878787878787878787878787878787878778787878787878787878737b8787929a9da5ae
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a0978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8fabab
ababababababababababababababababababa5929292928c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8484848484848484818c8c8c8c8c8c8c8c8c8c8c8c8c8c8c95a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a0979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a958f8f8f9d9d9d9d9d
9d9d9d9db1b1b1c1c7c7c7c7c7c7c70000a5a5a5a5a5a5a5a592878792aeaeaeaeaeaeae
aeaeaeaeaeaeaeae9581818181818181818181818181817e848f95979797979797979797
9797979797978f95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d959595959595
9595959595926d5f6d788484848487878787878787878787878c8c979797979797979797
9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09a959595959595959aaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae929292929d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d959287736d767b7b87959595959595959595959595959595
95959595877e736a4c3b3b3b3b3b3b3b3b3838384c788484848484848484848484848484
848484848484848484848484848484848484848484848484847878787878787878787870
7b8787929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a097929292929292928c8c8c8c
8c8c8c8c8c8fababababababababababababababababababababa59292929292928c8c8c
8c8c8c8c8c8c8c8c8c8c7b7b7b7b7b7b7b7b7b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f95a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09d9d9d9db1b1b1c1c7c7c7c7c7c7c70000b9b9b9b9b9b9b9ae928787
92aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9581818181818181818181818181817e7e879597
97979797979797979797979797978f95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a89d95959595959595959595959276687e878787878787878787878787878787878c8c8f
8f8f8f8f8f8f8f8f9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959aa0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09a979797979797979aaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
ae929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95928773686a7b7b8795959595959595
959595959595959595959595877e736a492a2a2a2a2a2a2a2a242d304062848484848484
848484848484848484848484848484788484848484848484848484848484848484787878
78787878787878707b8787929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a097929292
92929292818c8c8c8c8c8c8c8c8fababababababababababababababababababababa592
92929292928c8c8c8c8c8c8c8c8c8c8c8c8c787676767676767676959797979797979797
97979797979797a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9aa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9db1b1b1c1c7c7c7c7c7c7c70000c4c4c4
c4c4c4c4ae92878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae958181818181818181818181
8181817e7e84959797979797979797979797979797978f95959595a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a89d878484848484848484848484767b898c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c878c8c8c8c8c8c8c8c8c8c8c9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a595959595
95959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0aeaeaeaeaeaeae
aeaeaeaeaeaeaeaeae929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d959287735f5f787b
8795959595959595959595959595959595959595877e736a4c27272727272727271f272a
3b516d848484848484848484848484848484848484848478848484848484848484848484
848484848478787878787878787878707b8787929a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6
b6b6b6a0979595959595959584898c8c8c8c8c8c8c8fabababababababababababababab
ababababababa59292929292928c8c8c8c8c8c8c8c8c8c8c8c8c78787878767676767695
9797a0a0a0a0a0a0a0a0a0a0a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3979295
9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9db1b1b1c1c7c7c7c7
c7c7c70000c4c4c4c4c4c4c4ae92878792aeaeaeaeaeaeaeaeaeaeaeaeaeaeae95818181
81818181818181818181817e7e84959797979797979797979797979797978f95959595a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d767676767676767676767676767b898c8c8c
8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f929292929aa5a5a5a5a5a5a5a5a5a5a5
a5a5a5a59595959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3
a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
959287735a4c5f788795959595959595959595959595959595959595877e736a4e2d2d2d
2d2d2d27241f272a38465778848484848484848484848484848484848484847878787870
7073737373737373737373737373737373737373737373707b8787929a9da5aeb6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6a097959595959595959595959595958c8c8c8fabababababab
ababababababababababababababa59292929292928c8c8c8c8c8c8c8c8c8c8c8c8c8181
81787676767676959797a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39792959a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d
b1b1b1c1c7c7c7c7c7c7c70000c4c4c4c4c4c4c4ae92878792ababababababababababab
abababab9581818181818181818181818181817e7e849597979797979797979797979797
97978f95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89581818181818181818181
7b78767b898c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f979797979da5a5a5
a5a5a5a5a5a5a5a5a5a5a5a59595959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3
a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae929292929d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d959287734e35405a7895959595959595959595959595959595959595
877e736a51383838352d2d27221c272a323b496270848484848484848484848484848484
84848478787865515454545454545454546a70707070707070707070707070707b878792
9a9da5aeb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a097959595959595959595959595958c8c
8c8fababababababababababababababababababababa59292929292928c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c787676767676959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09795979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09d9d9d9daeaeaeaeaeaeaeaeaeaeae0000c4c4c4c4c4c4c4ae9287878f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f81818181818181818181818181817e7e84959797979797
979797979797979797978f95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8958484
84848484848484847b78767b898c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f
979a9aa0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959aa0a0a0a0a0a0a0a0a0
a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8f8f8f
8f8f8f8f8f8f8f8f8f8c87878787878787878773462a324e7e9595959595959595959595
9595959595959595877e736a54434343352d2d271c161f2a2d303b4c6584848484848484
848484848484848484848478787857403e3e3e3e3e3e3e3e405470707070707070707070
707070707b8787929a9da5aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea09795959595959595
9595959595958c8c8c8fababababababababababababababababababababa59292929292
928c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c787676767676959797a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a9a9aa0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d929292920000c4c4c4c4c4c4c4
ae9287878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f81818181818181818181818181817e
7e84959797979797979797979797979797978c95959595a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a895848484848484848484847b78767b898c8c8c8c8c8c8c8c8c8c8c8c8c8f8f
8f8f8f8f8f8f8f8f979a9aa0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959aa0
a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeae
aeaeaeaeae8f7e8787878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87733b1f2d4e8c959595
95959595959595959595959595959595877e736a54464643352d2d271c16243030303246
65848484848484848484848484848484848484787876513e3e3e3e3e3e3e3e353e5c7070
7070707070707070707070707b8787929a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0
97959595959595959595959595958c8c8c8fabababababababababababababababababab
ababa5929292929292898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c787676767676959797a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39792959a9a9a9a
9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d928c8c8c8c00
00c4c4c4c4c4c4c4ae9287878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f81818181818181
818181818181817e7e84959797979797979797979797979797978c95959595a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a895848484848484848484847b78767b898c8c8c8c8c8c8c
8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f979a9aa0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
9595959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3aeaeae
aeaeaeaeaeaeaeaeaeaeaeaeae8f7e8787879595959595959595959595959595958f8773
382235578c95959595959595959595959595959595959595877e736a544c4c43352d2d2a
2424323232323243658484848484848484848484848484847b7b7b787865514646464643
43434338406d70707070707070707070707070707b878787959595959595959595959595
959595959595959595959595959595959595959595958c8c8c8fabababababababababab
ababababababababababa592929297979797979797979797979797979797958c8c787676
767676959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39792959a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9d9d9d9d
9d9d8c878787870000c4c4c4c4c4c4c4ae9284847e7e7e7e7e8181818181818181818181
8181818181818181818181818181817e7e84959797979797979797979797979797978c95
959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a895848484848484848484847b78767b
898c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f979a9aa0a3a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a59595959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3
a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8f7e87878795959595959595959595
95959595958f8773433549708c95959595959595959595959595959595959595877e736d
544e4c43382d2d3232353535353535405f8484848484848484848484848484847370706d
625f514646464643434343404c6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d4e57687e7e7e
7e7e7e7e7e7e7e7e819595959595959595959595959595959595959595958c8c8c8fabab
ababababababababababababababababababa59292929d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d97958c8c787676767676959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d979797979792959a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
9d9d9d9d9d9d9d9d9d9d877b7b7b7b0000c4c4c4c4c4c4c4ae9284847b7b7b6d6a818181
81818181818181818181818181818181818181818181817e7e8495979797979797979797
9797979797978c95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a895848484848484
848484847b78767b898c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f979a9aa0
a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959595959595959595958989929292
92a3a3a3a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae8f7e8487879595
959595959595959595959595958f8773514665738c959595959595959595959595959595
95959595877e73735f4e4c434032323b3b3b3b3b3b3b3b465c7676767676767676767676
76767676735f575451515146464646434343494c5a6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d
6d6d3e384978787878787878787878788195959595959595959595959595959595959595
959589848195ababababababababababababababababababababa59292929d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d97958c8c787676767676959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9595959595959595959595929292928f898995a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a097929292929292929292817b7b7b7b0000c4c4c4c4c4c4c4ae928484
848484767081818181818181818181818181818181818181818181818181817e7e849597
97979797979797979797979797978c95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a895848484848484848484847e78767b898c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f
8f8f8f8f979a9aa0a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959595959595959595959595
959595847892929292a3a3a3a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
ae92787b87879595959595959595959595959595958f87735f5a73738c95959595959595
959595959595959595959595877e737373574c434038323b3b3b3b3b3b3b434e62737373
7373737373737373737373737357494646464646464646434343495a7070707070707070
707070707070707070706243628484848484848484848484849595959595959595959595
959595959595959595958c8f9295ababababababababababababababababababababa592
92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97958c8c787676767676959797a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84818495a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978f8f8f8f8f8f8f8f8f7b7b7b7b7b0000c4c4c4
c4c4c4c4ae92878787878784708181818181818181818181818181818181818181818181
8181817e7878849797979797979797979797979797978c95959595959595959595959595
9595929292929292929284848484848484848484847b818c8c8c8c8c8c8c8c8c8c8c8c8c
8c8f8f8f8f8f8f8f8f8f8f8f979a9aa0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395959595
959595959595959595959587707b929292a3a3a3a3a3a3a3a3a3a3a3a3ababababababab
ababababababababab92848487879595959595959595959595959595958f877368657373
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c81818181817e7373736a4e43403b383b3b3b3e3e
3e3e46576a7676767676767676767676767676766d5f544949494949494949434343495a
707070707070707070707070707070707070706284848484848484848484848484959595
9595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9dabababababababababababababab
ababababababa59292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97958c8c78767676767695
9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a898c8c8c8c8c8c8c8c8c8c8c8c979797979797979797979797
9797978c8495a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09797979797979795898787
8787870000c4c4c4c4c4c4c4ae9287878787878770818181818181818181818181818181
81818181818181818181817e7870788484848484848484898c8c8c8c8c8c8c9595959595
959595959595959595958f8484878787878787878787878787878f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8c8f8f8f8f8f8f8f8f8f8f8f979d9da0a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3959595959595959595959595959595877876879292a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a39a9a9a9a9a9a9a9a9a9a92898987879595959595959595959595959595
958f8773686a73738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c84737373737373737373735746
4646463e3e3b3e40404051737b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7070705f5151514c
4c4c4c434343495a70707070707e92929292929292929292929292929292929292928f84
84848484849595959595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9dabababababab
ababababababababababababababa59292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97958c
8c787676765a5f959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a818c8c8c8c8c8c8c8c8c8c8c8c9aa5a5a5
a5a5a5a5a5a5a5a5a5a5a5a58f95a0a0a0a0a0a0a0a8abababababababababababababab
ababab9a959595959595870000c4c4c4c4c4c4c4ae928787878787877081818181818181
818181818181818181818181818181818181817e78767b8181818181818181898c8c8c8c
8c8c8c9595959595959595959595959595958f8989898989898989898989898989899292
929292929292929292929292929292928c92929292929d9d9d9d9d9d9da0a0a0a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a39595959595959595959595959595958989817b8492a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292929292929292929289898787959595959595
9595959595959595958f7b6d707373738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8473737373
73737373737370625f5f573e3e3e40494c516d7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b
78767676655a544c4c4c4c434343517070707070707e9aa5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a0a0a0a08f8484848484849595959595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9dababababababababababababababababababababa59292929d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d97958c8c787662544c5f959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a7e898c8c8c8c8c8c8c
8c8c8c8c9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a095a0a0a0a0a0a0a0a8abababababab
ababababababababababab9a959595959595870000c4c4c4c4c4c4c4ae92878787878787
7081818181818181818181818181818181818181818181818181817e7884898989898989
898989898c8c8c8c8c8c8c92929292929292929292929292929289898989898989898989
8989898989899292929292929292929292929292929292928c9292929292a0a0a0a0a0a0
a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958c8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f7b7b8fa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a929292929292929292928989
87879595959595959595959595959595958f6d68707373738c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c848181818181818181818181817b70573e464e4e575c6d7b7b7b7b7b7b7b7b7b7b
7b7b7b7b7b7b7b7b787676767668544c4c4c4c434354707070707070707e9aa5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a0a0a0a08f8484848484849595959595959595959d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9dababababababababababababababababababababa59292929d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d97958c8c786d463b465f959797a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a81
898c8c8c8c8c8c9595959597a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595a0a0a0a0a0a0
a0a8ababababababababababababababababab9a959595959595870000c4c4c4c4c4c4c4
ae92878787878787707e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7884898989898989898989898989898989898989898989898989898989898c9292929292
929292929292929292929292929292929292929292979797979797979797979797979797
9792a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f8c8f9595959595
95959595959595959595848195a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a92929292
929292929292898987879595959595959595959595959595958f7068737373738c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c89898989898989898989898989897e625462707376787b7b7b
7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b787676767673544c4c4c4c495c78787878787878
78849aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a095878484848495959595959595
95959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9dabababababababababababababababababab
abab929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97958c8c78573532435f959797a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a95818c8c8c8c8c8c8c97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a0a0a0a0a0a0a0a0a8ababababababababababababababababab9a9595959595958700
00c4c4c4c4c4c4c4ae9287878787878770707070707070707070707070706d7070707070
707070707070707678848989898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c898989
89898c9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292929297979797979797
97979797979797979792a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
8f8c8f9595959595959595959595959595958c899da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a39a92929292929292929292898987879595959595959595959595959595958f706d
737373738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c898989898989898984
8787878787878787878787878787877e7b7b7b7b7b7b7b7b7876767676765a515757575a
8187878787878787878c9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a084
849595959595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a
9a9a9a9a9a9a9a9a9a9a878989899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97958c8c783e30
32435157576da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a09a877e76787b7b7b818c8c8c8c8c8c8c97a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a8ababababababababababababababababab9a
979797979797870000c4c4c4c4c4c4c4ae92878787878787707070707070707070707070
7070707070707070707070707070707678848989898989898c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c89878787878ca0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a929292
929797979797979797979797979797979792a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a38f8c8f95959595959595959595959595959595959da3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a39a929292929292929292928989878795959595959595959595
95959595958f7373737373738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89
898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8787877e7b7b7b7b7b7b7b7b78767676
76766d6265656565819292929292929292929aabababababababababababababababa0a0
a0a0a0a0a0a0a0848495959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9a9a9a9a9a9a9a95898989878478788989899d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d97958c8c6a303038434646466aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a089736865686a73878c8c8c8c8c8c8c97a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a0a0a0a8abababababababababab
ababababababab9d9d9d9d9d9d9d870000c4c4c4c4c4c4c4ae9287878787878770707070
70707070707070707070707070707070707070707070707678848989898989898c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c84788487878ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39a929292929797979797979797979797979797979792a0a0a0a0a0a0a0a0a0a0
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a08f8c8f959595959595959d9d9d9d9d9d9d9d9d9d
9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a92929292929292929292898987879595
959595959595959595959595958f7373737373738c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c89898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8787877e7b7b7b7b
7b7b7b7b787676767676767676767673819292929292929292929aababababababababab
ababababababa0a0a0a0a0a0a0a0a084848c8c9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a958989897665626d8989899d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d97958c8c6a383838434646466aa0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5897b7068656a73898c8c8c8c
8c8c8c97a8ababababababababababababababababababa8a5a0a0a0a0a0a0a0a0a8abab
abababababababababababababababa8a8a8a8a8a8a8870000c4c4c4c4c4c4c4ae928787
878787877070707070707070707070707070707070707070707070707070707678848989
898989898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89738487878ca3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a39a929292929797979797979797979797979797979792a0a0
a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3978f8c8f95959595959595a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9292929292929292
929289897e849595959595959595959595959595958f7373737373738c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f
8c8c8c7e7b7b7b7b7b7b7b7b787687898989898989898989899292929292929292929aab
ababababababababababababababa0a0a0a0a0a0a0a0a0848484849d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a978c89876d5f5f6a7b
89899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d97958c8c6a404040403e3e40629da0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5897b786d
686a73898c8c8c8c8c8c8c97a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aeaea8a5a0a0a0
a0a0a0a0a0a8ababababababababb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b6870000b3b3b3
b3b3b3b3ae92878787878787707070707070707070707070707070707070707070707070
7070707678848989898989898c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7b8787878ca3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a929292929797979797979797979797
979797979792a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3978f8c8f95
959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a
92929292929292929292898978789595959595959595959595959595958f737373737373
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898997a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09d8f8c8c8c7e7b8181848484848484848989898989898989929292929292
9292929292929aabababababababababababababababa0a0a0a0a0a0a0a0a0848789899d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a9a
8c89846d6a686a7378879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9795898762494643433e38
3e5f9292929292929292929292929292928f9a9a9aa0a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5897b7876706a73898c8c8c8c8c8c8c97a8bcbcbcbcbcbcbcbcbcbcbcbcbcbcbc
bcaeaea8a5a0a0a0a0a0a0a0a0a8ababababababababb9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b6870000a0a0a0a0a0a0a0a09287878787878770707070707070707070707070707070
70707070707070707070707678848989898989898c8c8c92929292929292929292929292
9292898989878ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a92929292979797
9797979797979797979797979792a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3978f8c8f95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d
9d9d9d9d9d9d9d9a92929292929292929292898984849595959595959595959595959595
958f737373737373818181818181878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898997a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8c8c8c7e7b878789898989898989898989898989
89899292929292929292929292929aabababababababababababababababa0a0a0a0a0a0
a0a0a0848789899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9a9a9a9a9a9a9a9a8c89877e786d6a7078879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979589
6d5f5a5149434346495c84898989898989898989898989898989879a9aa0a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5897b7878736a73898c8c8c8c8c8c8c97a8c4c4c4c4c4c4c4
c4c4c4c4c4c4c4c4c4aeaea8a5a0a0a0a0a0a0a0a0a8ababababababababb9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b68700008989898989898989898787878787877070707070707070
707070707070707070707070707070707070707678848989898989898c8c8c9292929292
92929292929292929292929292878ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9a929292929797979797979797979797979797979792a0a0a0a0a0a0a0a0a0a0a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3978f8c8f95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9797979797979797979797979797979792929292
9292929292929292928f737373737373767676767676878c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c89898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8c8c8c7e7b87878989898989
898989898989898989899292929292929292929292929aababababababababababababab
ababa0a0a0a0a0a0a0a0a0848789899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a9a8c87878784736d7078879d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d8784846d6565655f575757545c7b898989898989898989898989898989849a
9aa0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5897b7878736a73898c8c8c8c8c8c8c97
a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aeaea8a5a0a0a0a0a0a0a0a0a8abababababab
ababb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b6870000878787878787878787878787878787
707070707070707070707070707070707070707070707070707070767884898989898989
8c8c8c929292929292929292929292929292929292878ca3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39a929292929797979797979797979797979797979792a0a0a0a0a0a0
a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3978f8c8f95959595959595a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a97a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0929292929292929292929292928f737373737373737373737373898c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c89898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8c8c8c7e
7b87878989898989898989898989898989899292929292929292929292929aababababab
ababababababababababa0a0a0a0a0a0a0a0a0848789899d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a9a8c8c8c8c8476767678879d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d8784846d656565656565655f6584898989898989898989
898989898989849a9aa0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5897b7878736a6d89
8c8c8c8c8c8c8c97a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4aeaea8a5a0a0a0a0a0a0a0
a0a8ababababababababb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b687000095959595959595
958c87878787878770707070707070707070707070707070707070707070707070707076
78848989898989898c8c8c929292929292929292929292929292929292899da3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a92929292979797979797979797979797979797
9792a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a978f8c8f9595959595
9595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9d9d9d9a97a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0929292929292929292929292928f7e7e7e7e7e7e7e7e7e7e
7e819595959595959595959595959595958c8c89898997a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09d8f8c8c8c7e7b878789898989898989898989898989898997a3a3a3a3a3a3a3a3a3
a3a3abababababababababababababababababa5a0a0a0a0a0a0a0848789899d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c8c8c8c
8787878787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8784846d6d6d6d6d6d6d73737e8789
8989898989898989898989898989849a9aa0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
897b7878736a6d898c8c8c8c8c8c8c97a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8
a5a0a0a0a0a0a0a0a0a8ababababababababb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b68700
00a3a3a3a3a3a3a3a38c87878787878773737373737373737373736d7070707070707070
707070707070707678848989898989898c8c8c929292929292929292929d9d9d9d9d9d9d
9da0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9292929297979797979797
97979797979797979792a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09292928c
84878f95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d
9d958f8f97a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c878787878787878787878787878787
878787878787878787929797979797979797979797979797978c8c89898997a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09d8f8c8c8c7e7b878789898989898989898989898989898997a5
a5a5a5abb1b6bfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbcb1aeabababa5a0a0a0a0a0a0a084
8789899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d8c8c8c8c8787878787879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8784846d6d6d6d
6d6d6d7b878787898989898989898989898989898989849a9aa0a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a58c847e7b7b6d6d898c8c8c8c8c8c8c97a8c4c4c4c4c4c4c4c4c4c4c4
c4c4c4c4c4b1b1a8a5a0a0a0a0a0a0a0a0a8ababababababababb9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b6870000a3a3a3a3a3a3a3a38c8787878787877b7b7b7b7b7b7b7b7b7b7b7b
7b7b7b7b7b7b7b7b787878787878737678848989898989898c8c8c929292929292929292
92a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a929292
929797979797979797979797979797979792a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a08f8f8f8c7e818f95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d
9d9d9d9d9d9d9d9d9d8c898f97a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c84848484848484
8484848484848787878787878787929597979797979797979797979797979797978c8c89
898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8c8c8c7e7b8787898989898989898989
89898989898997ababababbccfd8d8d8d8d8d8d8d8d8d8d8d8d8d8d8c4bcb1aeabababa5
a0a0a0a0a0a0a0848789899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d8c8c8c8c8787878787879d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d8784846d6d6d6d6d6d6d81878787898989898989898989898989898989849a9aa0a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5928f7e7b7b7670898c8c8f9595959597a8c4c4c4
c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8a5a08781879da0a0a0a8ababababababababb9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b6810000a3a3a3a3a3a3a3a38c878787878787878f9595
9595959595959595959595959592847e788187878787878787878989898989898c8c8c92
929292929292929292a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39a929292929797979797979797979797979797979792a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09292929292929295959595959595a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9292959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
8c8181818181818181818181818487878787878787879295979797979797979797979797
97979797978c8c89898997a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f8c8c8c8c8c8c8c8c
8c8989898989898989898989898997b3b3b3b9d5f1f1f1f1f1f1f1f1f1f1f1f1f1f1f1e0
c4bcb1aeabababa5a0a0a0a0a0a0a0848789899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9292928c8787878787879d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d8784846d6d6d6d6d6d6d8187878789898989898989898989898989
8989849292a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5958f7e7b7b7b7b898c8c8f95
95959597a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8a5a087737084979797979797
97979797979ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b6840000a8a8a8a8a8a8a8a88c8787
87878787878f97979797979797979797979797979792847e788195959595959595959595
9595959595958c92929292929292929292a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeae
aeaeaeaeaeaeaeaeaeaeaeae9a8f8c8c8c9797979797979797979797979797979792a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09292929292929295959595959595a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9aa0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a08c81818181818181817e7e7e7e848787878787878787929597979797
979797979797979797979797978c8c8c8c8f97a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8f
8c8c8c8c8c8c8c8c8c8989898989898989898989898997b6b6b6d2f4f4f4f4f4f4f4f4f4
f4f4f4f4f4f4f4e0c4bcb1aeabababa5a0a0a0a0a0a0a0848789899d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c87878787
87879d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8784846d6d6d6d6d6d6d818787878989898989
89898989898989898989848487a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5958f7e7b
7b7b7b898c8c8f9595959597a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8a5a08770
6a7b8f8f8f8f8f8f8f8f8f8f8f9ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b6920000a8a8a8
a8a8a8a8a88c878787878787878f97979797979797979797979797979792847e78819595
95959595959595959595959595958c92929292929292929292a0a0a0a0a0a0a0a3a3a3a3
a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a8f84818c9797979797979797979797
979797979792a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09292929292929295
959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9da0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c81818181818181817e78787884878787878787
8787929597979797979797979797979797979797978c8c8c8c8f97a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a09d9595959595959595958f8989898989898989898989898997bfbfc1f1f4
f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5a0a0a0a0a0a0a0878789899d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0958c8787878787878787878787878773737373737373737373736d6d6d6d6d6d6d81
8787878989898989898989898989898989897e7b87a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5958f7e7b7b7b7b898c8c8f9595959597a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4
c4b1b1a8a5a0846d687384898989898989898989899ab9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b69a0000a8a8a8a8a8a8a8a88c878787878787878f9797979797979797979797979797
9792847e7881959595959595959595959595959595958c92929292929292929292a0a0a0
a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a877b7e8c979797
9797979797979797979797979792a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
9292929292929295959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d
9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c81818181818181817e7370
7084878787878787878792959797979797979797979797979797979797959292929297a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f8989898989898989898989
898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5a0a0a0a0
a0a0a08c8c8c899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0958c878787878787878787878787877368656d6d6d6d6d6d6d6d
6d6d6d6d6d6d6d8187878789898989898989898989898989898970788ca0a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5958f7e7b7b7b7b898c8c8f9595959597a8c4c4c4c4c4c4c4
c4c4c4c4c4c4c4c4c4b1b1a8a59d7b6d6a7389898989898989898989899ab9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b69a0000a8a8a8a8a8a8a8a88c878787878787878f979797979797
97979797979797979792847e788195959595959595959595959595959595849292929292
9292929292a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
9d95928f8c97979797979797979797979797979797929a9aa0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09292929292929295959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39d9d9d9d9d9d9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c818181
81818181817e736a70848787878787878787929597979797979797979797979797979797
97959595959597a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f898989
8989898989898989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1ae
abababa5a0a0a0a0a0a0a08c8c8c899d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958c8787878787878787878787878773686a
6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d818787878989898989898989898989898989897681
95a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5958f7e7b7b7b7b898c8c8f9595959597
a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8a38f7b6d6a788f8f8f8f8f8f8f8f8f8f
8f9ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b69a0000a8a8a8a8a8a8a8a88c878787878787
878f97979797979797979797979797979792847e78819595959595959595959595959595
95958f92929292929292929292a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeae
aeaeaeaeaeaeaeae9d9595958c9292929292929292929292929292929292928ca0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09292929292929292929292929595a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39a9292929292929595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a08c81818181818181817e78707384878787878787878792959797979797979797
979797979797979797959595959597a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a58f8989898989898989898989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4
f4f4f4e0c4bcb1aeabababa5a0a0a09a8f8f8f8c8c8c899d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958c8787878787878787
87878787877876766d6d6d6d6d6d6d6d6d6d6d6d6d6d6d81878787898989898989898989
898989898989878c95a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5958f7e7b7b7b7b89
8c8c8f9595959597a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a89a87786d70849292
9292929292929292929ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b69a0000a8a8a8a8a8a8a8
a88c878787878787878f97979797979797979797979797979792847e7881959595959595
959595959595959595959595929292929292929292a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3
a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d9595958c929292929292929292929292929292
9292928ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092929292929292929292928f
9595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3898489898989899595959aa3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a0a0a08c81818181818181817e7b7b818487878787878787879295
9797979797979797979797979797979797959595959597a0a0a0a0a0a0a0a0a0a0a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a58f8989898989898989898989898997c1caddf4f4f4f4f4f4
f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5a0a09a8f8f8c8c8c8c8c899d9d9d9d9d
9d9d9d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5958c
878787878787878787878787878181766d6d6d6d6d6d6d6d6d6d6d6d6d6d6d8187878789
8989898989898989898f8f8f8f8f8f8f9595959595959595959595959595959595959595
958f7e7b7b7b7b898c8c8f9595959597a8c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8
95877870788f92929292929292929292929ab9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b69a00
00a8a8a8a8a8a8a8a88c878787878787878f97979797979797979797979797979792847e
788c959595959595959595959595959595959595929292959595959595a0a0a0a0a0a0a0
a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d9595958c92929292929292
92929292929292929292928ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a092929292
929292929292928f9595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3847e89898989899595959a
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a08c818484848484848484848484848787
87878787878792959797979797979797979797979797979797959595959597a0a0a0a0a0
a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f8989898989898989898989898997c1
caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5a0a0929292929292
928f898f9d9d9d9d9d9d9d9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5
a5a5a5a5a5a5958c878787878787878787878787878181766d6d6d6d6d6d6d6d6d6d6d6d
6d6d6d81878787898989898989898989898f8f8f8f8f8f8f959595959595959595959595
9595959595959595958f7e7b7b7b7b87878c8f9595959597a8c4c4c4c4c4c4c4c4c4c4c4
c4c4c4c4c4b1b1a8a5a39581849292929292929292929292929ab9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b69a0000a8a8a8a8a8a8a8a88c878787898989898f97979797979797979797
9797979797928481848c9595959595959595959595959595959595959292929595959595
95a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d959595
8c9292929292929292929292929292929292928ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a092929292929292929292928f9595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3847e89
898989899595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a08c8187898c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8792959797979797979797979797979797979797959595
959597a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f89898989898989
89898989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5
a0a097979797979797978c849d9d9d9da3a3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a5a5a5a5a5a5a5a5a5a5a5a5a5a5958c878787878787878787878787878181766d6d6d6d
6d6d6d6d6d6d6d6d6d6d6d81878787898989898989898989898f8f8f8f8f8f8f95959595
95959595959595959595959595959595958f7e7b7b7b7b7b767e8f9595959597a8c4c4c4
c4c4c4c4c4c4c4c4c4c4c4c4c4b1b1a8a5a59797929292929292929292929292929ab9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b69a0000a8a8a8a8a8a8a8a88c7e737889929797979797
979797979797979797979797979284848c8c959595959595959595959595959595959595
929292959595959595a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeae
aeaeaeae9d9595958c9292929292929292929292929292929292928c9595959595959595
95959595959595959595959592929292929292929292928f95959a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a817e89898989899595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0
8c8187898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f879295979797979797979797979797
9797979797959595959597a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
8f7e7b7b7b7b7b7b81848989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0
c4bcb1aeabababa5a0a09797979797979797958c9a9d9d9da8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a5a5a5a5958c878787878787878787878787
878181766d6d6d6d6d6d6d6d6d6d6d6d6d6d6d81878787878787878787878787878f8f8f
8f8f8f8f9595959595959595959595959595959595959595958f7e7b7b7b7b7b737e8f95
95959597a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b1b1a8a5a597979797979292929292
92929292929aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a0000a8a8a8a8a8a8a8a88c7b73
7889929797979797979797979797979797979797979284898c8c95959595959595959595
9595959595959595929292959595959595a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeae
aeaeaeaeaeaeaeaeaeaeaeae9d9595958c9292929292929292929292929292929292928c
959595959595959595959595959595959595959592929292929292929292928f95959595
9595959595959595959595958c7e7e89898989899595959aa3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a0a0a08c8187898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87929597979797
97979797979797979797979797959595959597a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a58f7e7b7b7b7b7b70737e8989898997c1caddf4f4f4f4f4f4f4f4f4f4
f4f4f4f4f4f4f4e0c4bcb1aeabababa5a0a0979797979797979797979797979da8a8a8a8
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabababababababa8a8a8a8a8a8a8a8958c87878787
8787878787878787878181766d6d6d6d6d6d6d6d6d6d6d6d6d6d6d818c8c8c8c8c8c8c8c
8c8c8c8c8c8f8f8f8f8f8f8f9595959595959595959595959595959595959595958f7e7e
7e7e7e7e7e7e8f9595959597a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a59797
979797929292929292929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a0000a8a8a8
a8a8a8a8a88c7b767e8992979797979797979797979797979797979797928c8c8c8c9595
95959595959595959595959595959595898492959595959595a0a0a0a0a0a0a0a3a3a3a3
a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d9595958c9292929292929292929292
929292929292928c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f929292929292929292929292
9292928f959595959595959595959595959595957b7b7e89898989899595959aa3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a08c8187898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8792959797979797979797979797979797979797959595959597a0a0a0a0a0a0a0a0a0
a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7e7b7b7b7b7b70737e8989898997c1caddf4f4
f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5979797979797979797979797
97979795a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8
a8a8958c878787878787878787878787878181766d6d6d6d6d6d6d6d6d6d6d6d6d707381
8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f95959595959595959595959595959595
9595959595959595959595959595959595959597a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a8a5a59797979797929292929292929292929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a0000a8a8a8a8a8a8a8a88c89898989929797979797979797979797979797979797
97929292929295959595959595959595959595959595959589848f959595959595a0a0a0
a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d95959589898989
8989898989898989898989898989898989898989898987878f8f8f8f8f8f8f8f92929292
92929292929292929292928f9595959595959595959595959595958c767b7e8989898989
9595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a08c8187898f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8792959797979797979797979797979797979797959595959597a0
a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7e7b7b7b7b7870737e8989
898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababab
ababa8a8a8a8a8a8a8a8957e818181818181818181818181818181766d6d6d6d6d6d6d6d
6d6d6d6d6d7376818c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f9595959595959595
95959595959595959595959595959595959595959595959595959597a8b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a8a5a59797979797929292929292929292929a9a9aa3a3a3a3
a3a3a3a3a3a3a3a3a3a3a30000a8a8a8a8a8a8a8a88c8989898992979797979797979797
979797979797979797929292929295959595959595959595959595959595959589818c95
9595959595a0a0a0a0a0a0a0a3a3a3a3a3a3a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeae
9d959595898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8784878787878787878787
878787879292929292929292929292929292928f95959595959595959595959595959581
737b7e89898989899595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d978989818789
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87929597979797979797979797979797979797
97959595959597a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7e7878
78787670737e8989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1ae
abababa5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1ababababababa8a8a8a8a8a8a8a8958181818181818181818181818181818176
6d6d6d6d6d6d6d6d6d6d6d6d6d73788c8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f
959595959595959595959595959595959595959595959595959595959595959595959595
959da5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a3a3a3a397929292929292929292
929a9a9aaeb1b1b1b1b1b1b1b1b1b1b1b1b1b10000a8a8a8a8a8a8a8a88c898989899297
979797979797979797979797979797979792929292929595959595959595959595959595
959595958c818c9595959595959797979797979797979797979797979daeaeaeaeaeaeae
aeaeaeaeaeaeaeae9d95959589959595959595959595959595959595958c8c8c8c898989
89898989898989898989897e9292929292929292929292929292928f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8c7b737b7e7e7e7e7e7e9595959aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a39d897b787b87898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8192959797979797979797
979797979797979797959595959597a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a58f7e706870707070737e8989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4
f4f4f4e0c4bcb1aeabababa5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8929292929292929292
92929292929281766d6d6d6d6d6d6d6d6d6d6d6d6d73878c8c8c8c8c8c8c8c8c8c8c8c8c
8c8f8f8f8f8f8f8f95959595959595959595959595959595959595959595959595959595
959595959595958984848795a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a59792
9292929292929292929a9a9aaeb1b1b1b1b1b1b1b1b1b1b1b1b1b10000a8a8a8a8a8a8a8
a88c89898989929797979797979797979797979797979797979292929292959595959595
959595959595959595959595929292959595959595959595959595959595959595929292
95aeaeaeaeaeaeaeaeaeaeaeaeaeaeae9d9595958f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8787878787878787879595959aa3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a39d847b787b87898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9295
9797979797979797979797979797979797959595959595959595959595958f8f97a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a58f7e70686d707070737e8989898997c1caddf4f4f4f4f4f4
f4f4f4f4f4f4f4f4f4f4f4e0c4bcb1aeabababa5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8
9a9a9a9a9a9a9a9a9a9a9a9a9a9281766d6d6d6d6d6d6d6d6d6d6d6d6d768c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f9595959595959595959595959595959595959595
95959595959595959595959595959592817b7e8fa3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a5a5a5a5a5a597929292929292929292929a9a9aaeb1b1b1b1b1b1b1b1b1b1b1b1b1b100
00a8a8a8a8a8a8a8a88c8989898992979797979797979797979797979797979797929292
9292959595959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a95959595959595
959595959595959597ababababababababababababababab9d959595959d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e848c8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8992
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d847b787e87898f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f929597979797979797979797979797979797979595959595959595959595
9595878c97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7e70686d707070737e8989898997c1
caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4e9c4bfbcb1aeabababa5a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8
a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09281766d6d6d6d6d6d6d6d6d6d6d6d
6a7b8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f959595959595959595959595
95959595959595959595959595959595959595959595959595848797a5a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a5a5a5a5a5a597929292929292929292929a9a9aaeb1b1b1b1b1b1b1
b1b1b1b1b1b1b10000a8a8a8a8a8a8a8a88c898989899297979797979797979797979797
97979797979292929292959595959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9a95959595959595979797979797979797a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d959595
959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e
848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8992a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d847b787e87898f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f92959797979797979797979797979797979797959595
95959595959595959595878c97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58f7e70686d707070
737e8989898997c1caddf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4cdaeaeaeaeaea5a5a5a5
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09281766d6d6d6d
6d6d6d6d6d6d6d6d6d7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f8f8f8f8f95959595
9595959595959595959595959595959595959595959595959595959595959595958f8c97
a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a597929292929292929292929a9a9a
aeb1b1b1b1b1b1b1b1b1b1b1b1b1b10000a8a8a8a8a8a8a8a88c89898989929797979797
979797979797979797979797979292929292959595959595959595a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39a95959595959595979797979797979797a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09d959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f7e848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
95959595959595959595959595959592a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d847b
787e87898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f9295979797979797979797979797
979797979795959595959595959595959595878c97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
8f7e70686d707070737e8989898997bfbfbfdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbd8aea8
a8a8a8a8a5a5a5a5a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0
a09281766d6d7678787878787878787878878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8f8f8f
8f8f8f8f959595959595959595959595959595959587878f959595959595959595959595
95959595958f8c97a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5979292929292
92929292929a9a9aaeb1b1b1b1b1b1b1b1b1b1b1b1b1b10000a8a8a8a8a8a8a8a88c8989
8989929797979797979797979797979797979797979292929292959595959595959595a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a95959595959595979797979797979797a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09d959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e848c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a39d847b787e8f95959797979797979797979797979797979797929597979797
9797979797979797979797979795959595959595959595959581818c97a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a58f7e70686d7070707376767e878997aeaeaeb3b3b3b3b3b3b3b3b3b3
b3b3b3b3b3b39d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8
aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5
a5a5a5a5a5a5a5a0a09281766d6d768c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8f8f8f8f8f8f8f9595959595959595959595959595959584686a8f95959595
959595959595959595959595958f8c97a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5
a5a59792929292929292929292929292aeb1b1b1b1b1b1b1b1b1b1b1b1b1b10000a8a8a8
a8a8a8a8a88c898989899297979797979797979797979797979797979792929292929595
95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9595959595959597979797
9797979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d8c878c959d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e848c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c7e7e8484848484848484848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a39d847b787e8f9597979797979797979797979797979797
97979295979797979797979797979797979797979795959595959595959595957b707e8c
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38f7e70686868686868545c6265687e97a0a0a0a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8
a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09281707070768c959595959595959595959595
95959595958c8c8c8c8c8c8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8173879595959595959595959595959595959595958f8c97a5a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a5a5a5a5a5a59792929797979797979797979797b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b10000a8a8a8a8a8a8a8a88c89898989929797979797979797979797979797979792
929292929292929292929292928c8fa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a959595
95959595979797979797979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f81818c959d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e84848484
848484848484848484848484787e8484848484848484848f9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f847b787e8f959797979797979797
979797979797979797979295979797979797979797979797979797979795929292929292
9292928f70707e8c929292929292929292929292929292928f7e70686868686868465154
545a7892a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59a9a9da3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababab
ababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09281657070768c95979797
979797979797979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87818484
848484848484848484898c9595959595959595959595959595959595958f8c97a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5979292979797979797979797a5a5b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1000092929292929292928c8989898992979797979797979797
9797979797979792929292929292929292929295959da3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39a928c8c8c8c8c95979797979797979797979797979797979797979797979792
8781818c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f7e7e7e78706d68737b7b7b7b7b7b84848484848484848484848484848f9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a897676737070737878787878787878787878787878787e8f95
979797979797979797979797979797979797929595959595959595959595959595959595
9595928f8f8f8f8f8f8f8f8f70707e8989898989898989898989898989898989897e7068
68686868684043464e5c78929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95979797979da3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a0928165
7070768c95979797979797979797979797979797978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c847689898989898989898989898c8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a8f8c97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a597929297979797979797
9797a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6b6b600008c8c8c8c8c8c8c8c8c898989899297
979797979797979797979797979797929292929292929292929292979da3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a39a9289898989899597979797979797979797979797979797
97979797979797928c8c8c8c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f7e7e7e786a5c5c737b7b7b7b7b7b8484848484848484848484
8484848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8976766d6a707378787878787878787878
78787878787e8f959797979797979797979797979797979797978784848484847678898f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f70707070707070707070707070707070
706a6a6a6a6a6a6868686868684c383b4c5f788f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92
959595959da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a8a8a8a8aeb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5
a5a5a5a0a092816a7070768c95979797979797979797979797979797978c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c84848c8c8c8c8c8c8c8c8c8c8c8c8c9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a8f8f97a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59792
92979797979797979797a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6b6b600008c8c8c8c8c8c8c
8c8c89898989929595959595959595959595959595959592929292929292929292929297
9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a928995959595959797979797979797
9797979797979797979797979797979595959595959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e7e7e76685f68737b7b7b7b7b7b848484
84848484848484848484848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a897676737e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7878787e8f959797979797979797979797979797979797978787
878787847076898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7070707070707070
7070707070655a5a5a5a5a5a5a5a5a5a5a5a5a5a5a57383e4c5f788f9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a928c89898c9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a8a8a8a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8
a8a5a5a5a5a5a5a5a5a5a5a0a0927b6d7070768c95979797979797979797979797979797
978c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c898c8c8c8c8c8c8c8c8c8c8c8c8c8c9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5929292979797979797979797a5a5b6b6b6b6b6b6b6b6b6b6b6b6b6b6b600
007b8487878989898989898989898f959595959595959595959595959595959292929292
92929292929292979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a92899595959595
97979797979797979797979797979797979797979797979797979797979d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e7b70655f5f68737b
7b7b7b7b7b84848484848484848484848484848f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a89
7676848787878787878787878787878787877878787e8f95979797979797979797979797
9797979797979797979789898176898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
70707070707070707070707070655a57575757575757575757575757575754515a6d878f
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928c8787899da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a5a5a5a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8
a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a0927b7b7b73768c9597979797979797
9797979797979797979792929292929292928f8f8f8c8c8c8c8c8c8c898c8c8c8c8c9595
959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5929292979797979797979797a8a8b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b60000708487878989898989898989898f95959595959595959595959595
959595929292929292929292929292979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
9a92899595959595979797979797979797979797979797979797979d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7b
655f5c5c5f68737b7b7b7b7b7b84848484848484848484848484848f9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a8976768f8f8f8f8f8f8f8f8f8f8f8f8f8f8f877878787e8f9597979797
97979797979797979797979797979797979789898176898f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f70707070707070707070707070655a5757656d6d6d6d6d6d6d6d6d6d
6d6d6d6d7087878f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797979da3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39da5a8aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09287878773768c
95979797979797a0a5a8abababababababababababababababab9d9d958c8c8c8c8c8c8c
898c8c8c8c8c9595959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5929292979797979797979797a8b3
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d78878787878787878787878f9595959595
9595959595959595959595929292929292929292929292979da3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a39a9289959595959597979797979797979797979797979797979797a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f736868685f5f68737b7b7b7b7b7b848484848484848484848484848c8f
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a89767b8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f877878
787e8f959797979797979797979797979797979797979797979789898176898f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f70707070707070707070707070655a5a5a657681
8787878787878787878787878787878f9a9a9a9a9a9a9a9ab1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1aba3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d97a5a8aeb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0
a09287878773768c95979797979797a0abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d
958c8c8c8c8c8c8c898c8c8c8c8c9595959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5929292979797
979797979797a8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d787b7b7b7b7b7b7b7b
7b7e8f95959595959595959595959595959595929292929292929292929292979da3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a92899595959595979797979797979797979797
979797979d9d9da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9a8c8c8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e6868685f5f68737b7b7b7b7b7b84848484848484
8484848484848c8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8976848f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f877878787e8f95979797979797979797979797979797979797979797978989
817689898f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f707070707070707070707070
70655f5f5f6d84878787878787878787878787878787878f9a9a9a9a9a9a9a9ab1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c899da8
aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5
a5a5a5a5a5a5a5a0a09287878773768c95a0a0a0a0a0a0a0abb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1ae9d958c8c8c87898989898c8c8f8f8f9595959595959595959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5928792979797979797979797a8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d70
7070707070707070707e8f95959595959595959595959595959595929292929292929292
929292979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9289959595959597979797
979797979797979797979797a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a39d9d
9d9d9d9d9a8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e6868685f5f68707b7b7b7b7b
7b848484848484848484848484848c8f9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a89818f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f877373737e8f9597979797979797979797979797979797
9797979797978989817687878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f70707070
707070707070707070656262626d87878787878787878787878787878787878f9a9a9a9a
9a9a9a9ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d
9d9d9d9d878495a5aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ababababababa8a8a8a8a8a8
a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09287878773768c95a0a0a0a0a0a0a0abb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c87898989898c8c929295959595959595
9595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5959597979797979797979797a8b3b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b60000626d737373737373737373737e8f9595959595959595959595959595959592
929292928c878c8c8c8c8c979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a928c95
9595959597979797979797979797979797979797a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a39d9d9d9d9d9d9a8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7e6868685f
5f6a737b7b7b7b7b7b848484848484848484848484848c8f9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9595959595959595958f8f8f8f8f8f8f8f8f87736d737e8f959797979797979797
9797979797979797979797979797898981767b878f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f70707070707070707070707070656262626d8787878787878787878787878787
8787878f9a9a9a9a9a9a9a9ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0
a09d9d9d9d9d9d9d9d9d9d9d89878992a8b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1abababab
ababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a09287878773768c95a0a0a0
a0a0a0a0abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c87898989898c8c92
92959595959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b60000626d737373737373737373737e87878787878787878787
87878787878787878787878787878c8c8c8c8c979da3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a39a928c959595959597979797979797979797979797979797a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a39d9d9d9d9d9d95898c8c8c8c8c8c8c8c8c8c8c8c8c8c
8c89897e6868685f6d70787b7b7b7b7b7b848484848484848484848484848c8f9a9a9a9a
9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8f8f8f8f8f87736d737e8f95
97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8989817673818f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f707070707070707070707070706562626276878787878787
87878787878787878787878f9a9a9a9a9a9a9a9ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d89877b879ab1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1ababababababa8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a5a5a5a5a5a0a0928787
8773768c95a0a0a0a0a0a0a0abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c
87898989898c8c9292959595959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595979a9a9a9a9a9a9a
9a9aa8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d76818181818181818181818181
818181818181818181787e87878787878787878787878c8c8c8c8c97a0a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a39a928c9595959595959595959595959595958f8f8f8f8f97
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a39d9d9d9d9d9d847e8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c89897e6868685f70707b7b7b7b7b7b7b8484848484848484848484
84848c8f9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a08f8f8f8f8f8f8f8f
8f87736d737e8f9597979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a898981767881
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7070705f5f5f5f5f5f5f5f5f62626262
627687878787878787878787878787878787878f9a9a9a9a9a9a9a9ab1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d89877b899ab1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1ababab9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a0a09287878773768c95a3a3a3a3a3a3a3abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1ae9d958c8c8c87898989898c8c9292959595959595959595959a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595
979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d76898f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c7b7e87878787878787878787878c8c8c8c8c97
a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a928c95959595959595959595959595
9595898981818497a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3959595959592
7b7b8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89897e6868685f70707e7e7e7e7e7e7e848484
848484848484848484848c8f9a9a9a9a9a9a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0
8f8f8f8f8f8f8f8f8f87736d737e8f9597979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9292818181818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f7070655a5a5a5a5a
5a5a5a5a62626262627687878787878787878787878787878787878f9a9a9a9a9a9a9a9a
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d
8f8f8f959aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5929da5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a59a9a9287878773738c95a3a3a3a3a3a3a3abb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1ae9d9587878787898989898c8c9292959595959595959595959a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a59595979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b600
00626d768992929292929595959595959595959595959595957b7e878787878787878787
8787898989898997a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a928c9595959595
959595959595959595958773737b8497a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a39292929292817b7b81818181818181818181818181818181817e6868685f70708184
84848484848484848484848c8c8c8c8c8c8c8c8c8c8c8c8c8c92a0a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a3a08f8f8f8f8f8f8f8f8f87736d737e849297979797979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9292818181818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
7070544c545454575757575762626262627687878787878787878787878787878787878f
9a9a9a9a9a9a9a9ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d
9d9d9d9d9d9d9d9d959595959aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38f9aa5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59292928787877b707b95a3a3a3a3a3a3a3
abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d9587818787898989898c8c9292959595
959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9595979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6b6b6b6b6
b6b6b6b6b6b6b60000626d768992929292929595959595959595959595959595957b7e87
87878787878787878787878787878797a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
97928c959595959595959595959595959595876d70788497a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a389898989817b7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
6868685f737b818484848484848484848484848c8c8c8c8c8c8c8c8c8c8c8c8c8c92a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a08f8f8f8f8f8f8f8f8f87736d737e848f97979797
979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292818181818f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f705446404c4c4c4c5154545762626262627687878787878787878787
878787878787878f9a9a9a9a9a9a9a9ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0
a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d959595959aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a595878fa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5898787878787877670
89a3a3a3a3a3a3a3abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c8c898989
898c8c9292959595959595959595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a958f8f9295959595959595959595979a9a9a9a9a9a9a9a9aa8b3
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d7689929292929295959595959595959595
95959595957b7e87878787878787878787878787879292a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a38c8c8c959595959595959595959595959595877b7b84929aa5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a37e7b7b7b7b7b7b7b7e7e7e7e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e6868685f7384848484848484848484848484848c8c8c8c8c8c8c8c8c
8c959d9d9d9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a08f8f8f8f8f8f8f8f8f87736d
737e848f97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292818181818f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8962494040404040403e464e576262626262768787
8787878787878787878787878787878f9595959595959597b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d959595959aa5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5877b89a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a58c
89898989898981768ca3a3a3a3a3a3a3abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d
958c8c8c8c898989898c8c9292959595959595959595959a9a9a9a9a9a9a9a9a9a9aa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a958f8f9295959595959595959595979a9a9a
9a9a9a9a9a9aa8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d768992929292929595
959595959595959595959595957b7e87878787878787878787878787879a9aa5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a38c8c8c9595959595959595959595959595958787
8789929aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a37e7e7e7e7e7b7b7b7e7e
7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6868685f7384848484848484848484848484848c
8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a08f8f8f8f
8f8f8f8f8f87736d707e848f97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292
818181818f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f84624e4949494949403840515c
6262626262788787878f92929292929292929292929292929292929289899297b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d95959595
9aa0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a581737e9da5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5928c8c8c8c8c8c8c8192a3a3a3a3a3a3a3abb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1ae9d958c8c8c8c898989898c8c9292959595959595959595959a9a9a9a9a
9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a95959595959595959595
95959595979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000626d76
8992929292929595959595959595959595959595957b7e87878787878787878787878787
879a9aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a38c8c8c959595959595959595
95959595959589898989929aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a38784
8484847b7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6868685f7384848484848484
848484848484848c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a3a09292928f8f8f8f8f8f877b73787e848f97979797979a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a92928181818189898989898989898989898989898989898989846a575757
575757494046545c686a6a6a6a818787878f959595959595959595959595959595959595
95879297b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d
9d9d9d9d95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38470788fa5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5928c8f9292929295959da3a3a3a3a3a3a3abb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c8c898989898c8c959595959595959595
95959595959a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9595
959595959595959595959595979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6b6b6b6b6b6b6b6b6
b6b6b60000575a768992929292929595959595959595959595959595957b7e8787878787
8787878787878787879a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a38c8c8c95
95959595959595959595959595958f8f8f8f929aa5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a38f898484847b7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6868685f
7384848484848484848484848484848c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a3a09292928f8f8f8f8f8f87847e7e7e848f97979797979a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a92928181818189898989898989898989898989898989
898989846a575757575757574c4c545c68767b7b7b818787878fa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0879297b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0
a09d9d9d9d9d9d9d9d9d9d9d95959595959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38476
7e95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5928c8f9292929295a3a3a3a3a3
a3a3a3a3abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c8c89898989898c95
959595959595959595959595959a9a9a9a9a9a9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a39a9a9a9a9595959595959595959595959595979a9a9a9a9a9a9a9a9aa8b3b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b600006568768992929292929595959595959595959595959595
957b7e87878787878787878787878787879a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3
a3a3a3a38c8c8c95959595959595959595959595979797979797979aa5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a38f898484847b7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e6868685f7384848484848484848484848484848c8c8c8c8c8c8c8c8c8c95a0a3
a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f8f8f8f8f8f8f8f8f8f8f8f8f
97979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292818181818989898989898989
8989898989898989898989846a575757575757574e4e545c6876818181818787878fa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08c9297b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1aba3a0a0a0a0a0a09d9d9d9d9d9d9d9d9d9d9d95959595959595a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a084878c95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a592928f9292
929295a3a3a3a3a3a3a3a3a3abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ae9d958c8c8c
8c818181817e8c9797979797979797979797979797979797979797959595a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a39a9a9a9a9595959595959595959595959595979a9a9a9a9a9a9a
9a9aa8b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b30000767b7b899292929292959595959595
9595959595959595957b7e87878787878787878787878787879a9da5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a3a3a3a3a3a38c8c8c9595959595959595959595959597a5a5a5a5a5a5a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a38f898484847b7b7b7e7e7e7e7e7e
7e7e7e7e7e7e7e7e7e7e7e7e6868685f7384848484848484848484848484848c8c8c8c8c
8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f97979797
979797979797979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a929281818181
89898989898989898989898989898989898989846a5757575757575751545a5f68788181
81818787878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095818cb1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1aba3a0a0a0a0a0a09d9d9d9d9a9a9a9a9a9a9a9595959595959595
959595959595959595959595959284898c95a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a592928f9292929295a3a8a8a8a8a8a8a8a8abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1ae9d958c8c8c8c81817e737e979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95
9595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9595959595959595959595959595
979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979292920000767e7e89929292
92929595959595959595959595959595957b7e87878787878787878787878787879a9da5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a38c8c8c8c8c897878787878787878787b
97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5a5a38f898484847b
7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6868685f738484848484848484848484
8484848c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0
9292928f9797979797979797979797979797978f979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a929281818181898989898989898989898989898989898989898473626262625a5c5c
5c626565687b818181818787878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958181
9db1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aba09a9a9a9a9a9a9a9a9a9a95959595959595
9595959595959595959595959595959595959595958f87898c95a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a592928f9797979797a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0a0a0a0a0a0a0a0a0a0a09d958c8c8c8c81786d76849d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d959595a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a959595959595
9595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979284848400
00767e7e8992929292929595959595959595959595959595957b7e878787878787878787
87878787879a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a38c8c8c8c8c897676
767676767676767b97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a5a5a5
a5a38f898787847b7b7b7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e6868685f73848484
84848484848484848484848c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a3a09292928f97979797979797979797979797979787929a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9292818181818989898989898989898989898989898989898984
817e7070655a5f68686d6d6d6d81818181818787878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0958f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae9a9a9a
9a8f8f95959595959595959595959595959595959595959595959595959595959595a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a592928f9aa0a0a0a0a5a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a09d958c8c8c8c817878879a9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95898ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a
9a9a9597979797979797979797979797979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a97979292890000767e7e8992929292929595959595959595959595959595957b7e87
878787878787878787878787879a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3a3a3
8c8c8c8c8c847376767676767676767b97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a5a5a5a5a5a38f898787847b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b785a575f
5f5f5f5f7384848484848484848484848484848c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f9797979797979797979797979797978f
929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a929281818181898989898989898989898989
898989898989898481818173655a5f686d7378787881818181818787878fa0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a3a3a3a3a3a3a3a5b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b19a9a9a92898c95959595959595959595959595959595959da3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a39d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d92928f9aa5a5a5a5a5
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0a09d958c8c8c8c819292
929a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95818fa3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a39a9a9a9a95979797a8ababababababababababababababababababababab
ababa09a9a9a9a9a9a9a97979292890000767e7e89929292929295959595959595959595
95959595957b7e84848484848484878787878787879a9da5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a3a3a3a3a3a38c8c8c8c8c656876767676767676767b97a5a5a5a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a5a3a3a3a3a38f898787847b7b7b78787878787878787878
787878785a545451575757577384848484848484848484848484848c8c8c8c8c8c8c8c8c
8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f9797979797979797
979797979797978f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a92928181818189898989
8989898989898989898989898989898481818178655a5f6d737681818181818181818787
878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09aa5b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b19a9a9587878c9595959595959595959595959595959595
9dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ab979797979797979797979797979797979792
928f9aa5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09a9a9a9a9a9a9a9a9a9a9a
958c8c8c8c819292929a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d89879aa3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a95979797a8aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeababababa09797979797979797979292890000767e7e8992929292929595
959595959595959595959595957b7b7b7b7b7b7b7b7b7b7b7b7b8187879a9da5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a08c8c8c8c683e54767676767676787b7e97a5a5a5
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a08f8f8f8f8f8f898787847b7b736565
6565656565656565656565655a5454513e3032497384848484848484848484848484898c
8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f
9797979797979797979797979797978f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9292
81818181898989898989898989898989898989898989898481818181655a68787e818181
8181818181818787878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a097a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19a8f817e878c959595959595959595
95959595959595959dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ab97979797979797979797
9797979797979792928f9aa5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a897979797
9797979797979797958c8c8c8c819292929a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9297a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a95979797a8aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa09797979797979797979292890000768184
899292929292959595959595959595959595959595878787878787877b7b7b7b7b7b7b84
879a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a08c8c8c8c703e547676767676
76787e7e97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0958f8f8f8f8f89
8787847b7b736a6a6a6a6a6a6a6a6a68656562625a5454513b303e628484848484848484
8484848484878c8c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a3a09292928f9797979797979797979797979797978f8f8f89898992929292929292
92929292929292927b818181818181898989898989898989898989898989898481818181
685f7381818181818181818181818787878fa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b19a95817e878c95
959595959595959595959595959595959dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ab9797
97979797979797979797979797979792928f9aa5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8979797979797979797979797958c8c8c8c819292929a9d9d9d9d9d9d9d9d9d9d
9d9da0a3a3a3a3a3a3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89a9a9a9597
9797a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa0979797979797979797
929289000076848489929292929295959595959595959595959595959587878787878787
7b7b7b7b7b7b70787e9a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a0a0a08c8c8c8c
705f68767676767676787e7e97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0958f8f8f8f8f898787847b7b7370707070707070707068656562625a54544e3e3b5a87
878787878787878787878787878c8c8c8c8c8c8c8c8c8c8c8c95a0a3a3a3a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a3a09292928f9797979797979797979797979797978f8f8f877e
7e8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c7878787878787889898989898989898989898989
8989898481818181736d8181818181818181818181818787878fa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1a5a58981878c95959595959595959595959595959595959dabb1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1ab979797979797979797979797979797979792928f9aa5a5a5a5a5a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8979797958c8c8c8c8c8c8c8c8c8c8c8c8c819292929a9d9d
9d9d9d9d9d9d9d9d9d9da0aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8
a8a8a89a9a9a8f979797a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa097
979797979797979792928900007684848992929292929595959595959595959595959595
958787878787878784848484848473787e9a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0
a0a095958c8c8c8c7e7e7e7e7e7e7e7e76787e7e97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a0958f8f8f8f8f898787847373737070707070707070706862626257
43404646494e6a89898989898989898989898989898f8f8f8f8f8f8f8f8f8f8f8f95a0a3
a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f979797979797979797979797
9797978f8f8f877b788c8c8c8c8c8c8c8c8c8c8c8c8c8c8c786d76767676768181818181
8181818181818184848484848484848484848484848484848484848484848484848fa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1aeae8f81878c95959595959595959595959595959595959dabb1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1ab979797979797979797979797979797979792928f9da5
a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8979797958c8c8c8c8c8c8c8c8c8c8c8c
8c819292929a9d9d9d9d9d9d9d9d9d9da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a8a8a8a8a8a8a8a8a8a8a89a9a9a8f979797a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeababababa09797979797979797979292890000788484899292929292929292929292
929292929292928c8c8787878787878787848484848473787e9a9da5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a0a0a0a08181818181817e7e7e7e7e7e7e7e76787e7e97a5a5a5a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0958f8f8f8f8f89878784737370707070707070
707070685a5a57493e43515c656a7889898c8c8c8c8c8c8c8c8c8c8c8c95979797979797
979797979797a0a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a09292928f97979797
97979797979797979797978f8f8f877b788c8c8c8c8c8c8c8c8c8c8c8c8c8c8c78687676
767676818181818181818181818181898989898989898989898989898989898987848484
848484848195a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aeaeaba0a0a0a09d9a9a9a9a9a9a9a97959595
959595959dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ab9797979797979797979797979797
9797979d9d9da5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8979797958c8c8c8c
8c8c8c8c8c8c8c8c84819292929a9d9d9d9d9d9d9d9d9d9da3a3a3aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a89a9a9a8f979797a8aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaeababababa09797979797979797979292890000848484898f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878787878787878787848484848473787e9a9da5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a08181818181817e7e7e7e7e7e7e7e73787e7e
97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0958f8f8f8f8f8987878473
73707070707070707070706a655f5c545778818181898989898c8c8c8c8c8c8c8c8c8c8c
8c95979797979797979797979797a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0
929292849797979797979797979797979797978f8f8f877e7e8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c766d767676767681818181818181818187898989898989898989898989898989
8989898987848787878787878795a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a89d9a9a9a
9a9a9a9a9795959595958f8f9dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1ab979797979797
9797979797979797979797a5a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
979797958c8c8c8c8c8c8c8c8c8c8c84787e9292929a9d9d9d9d9d9d9d9d9d9da3a3a3ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a97a8ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa097979797979797979792928900
008484848484848484848489898989898989898989898989898989898989898987848484
848473787e9a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a08181818181817e7e7e7e
7e7e7e7e73787e7e97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0958f8f
8f8f8f898787847b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b737881818181898989898c8c8c
8c8c8c8c8c8c8c8c8c959797979797979797979797979797979595959595959595959595
9292929292929292929292849797979797979797979797979797978f8f8f898989898989
898989898989898984787873737076767676768181818181818181818789898989898989
89898989898989898989898987848787878787878795a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a89d9a9a9a9a9a9a9a97959595959595959dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1ab9797979797979797979797979797979797a5a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8979797958c8c8c8c8c8c8c8c8c8c8c84737e9292929a9d9d9d9d9d9d
9d9d9d9da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a89a
9a9a9a9a9a97a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa09797979797
97979797929289000084848c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c898989898989
8989898987848484848473787e9a9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a0a0a08181
818181817e7e7e7e7e7e7e7e7e7e7e7e97a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a0958f8f8f8f8f898787847b7b899a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9584
81898989898c8c8c8c8c8c8c8c8c8c8c8c95979797979797979797979797979797959595
95959595959595959292929292929292929292849797979797979797979797979797978f
8f8f898989898989898989898989898984706d68687076767676767b8181818181818181
878989898989898989898989898989898989898987849595959595959595a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a89d9a9a9a9a9a9a9a979595959da5a5a5a5abb1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1ab9797979797979797979797979797979797a5a5a5a5a5a5a5a5a5
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8979797958c8c8c8c8c8c8c8c8c8c8c84737e9292
929a9d9d9d9d9d9d9d9d9d9da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8
a8a8a8a8a8a8a89a9a9a9a9a9a97a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeabab
ababa0979797979797979797929289000084848c92929292929292929797979797979797
979797979797978c8c8c8c8987848484848473787e898989898989898989898989898989
8989898989898181818181817e7e7e7e7e7e7e7e7e7e7e7e97a5a5a5a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a0958f8f8f8f8f898787847b7b899d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d958481898989898c8c8c8c8c8c8c8c8c8c8c8c9597979797979797979797
979797979795959595959595959595959292929292929292929292849797979797979797
979797979797978f8f8f8989898989898989898989898989847068686870707070707070
818181818181818187898989898989898989898989898989898989898784979797979797
9797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a0a0a0a09a9a9a9789898fabb6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1ab928c959595959595959595959595959595a5
a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8979797958c8c8c8c8c8c8c8c
8c8c8c7e737e9292929a9d9d9d9d9d9d9d9d9d9da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaea8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a97a8aeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeababababa0979797979797979797929289000084848c9292929292929292
9797979797979797979797979797978c8c8c8c8987848484848473787b7b7b7b7b7b7b7b
7b7b7b7b7b8181818181818181818181818181817e7e7e7e7e7e7e7e7e7e7e7e97a5a5a5
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0958f8f8f8f8f898787847b7b899d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d958481898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c959797
979797979797979797979797979595959595959595959595929292929292929292929284
9797979797979797979797979797978f8f8f898989898989898989898989898984706865
687678787878787881818181818181818789898989898989898989898989898989898989
8784979797979797979797979797979797959a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a
97877e8fabb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1ab92898989898989898989
89898989898c8fa5a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a897979795
8c8c8c8c8c8c8c8c8c8c8c8181819292929a9d9d9d9d9d9d9d9d9d9da3a3a3aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a9a97a8aeaeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa0979797979797979797929289000084848c
97979797979797979797979797979797979797979797978c8c8c8c898784848484847378
7878787878787878787878787878767676767e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e7e7e97a0a0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a095898989898989
8787848187929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9584818992929595959595959597
9d9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0978c8c8c8c8c87878787878787878787
87878787878787848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f89898989898989898989
898989898470686568767b7b7b7b7b7b8181818181818181878989898989898989898989
89898989898989898784979a9a9a9a9a9a9a9a9a9a9a9a9aa5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8
a8a8a8a8a89a9a9a97877b8fabb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1ab9289
898989898989898989898778787889a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5979797958c8c8c8c8c8c8c8c8c8c8c8181819292929a9d9d9d9d9d9d9d9d9d9d
a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a89a9a9a9a9a
9a97a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa0979797979797979797
929289000084848c97979797979797979797979797979797979797979797978c8c8c8c89
87848484848473787878787878787878787878787878707076768c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c818184848795a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0958989898989898787848192929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958481899292
9595959595959597a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b397898989897e7378
878787878787878787878787878787848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8989
8989898989898989898989898470686568767b7b7b7b7b7b8181818181818181878c9292
929292929292929292929292929292928784979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a97877889abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6
b1b1b1b1b1ab928989898989898989898989877373768ca5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5979797958c8c8c8c8c8c8c8c8c8c8c8181819292929a9d9d
9d9d9d9d9d9d9d9da3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8
a8a8a8a0a0a0a09a9a97a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeababababa097
9797979797979797929289000084848c9797979797979797979797979797979797979797
9797978c8c8c8c8987848484848473787878787878787878787878787878707076768ca5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a392877e818995a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a0958989898989898787848192929d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9584818992929595959595959597a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3
978c8c8c8c897376848484848484848484848484848484848f8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f89898989898989898989898989898470686568767b7b7b7b7b7b81818181
81818181878c9797979797979797979797979797979797978784979a9a9a9a9a9a9a9a9a
9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a97877b89abb6b6b6b6b6b6b6
b6b6b6b6b6b6b6b6b1b1b1b1b1ab928989898989898989898989877b76788ca5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a592929292929292928c8c8c8c8c8c8c8c8c8c8c81
81819292929292929292929292929297a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a8a8a8a8a8a8a8a8a8a8a8a0a0a0a09a9a97a8aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeababababa0979797978f8f8f8f8f8f8f890000848492979797979797979797979797
97979797979797979797978c8c8c8c898784848484847378787878787878787878787878
7878707076768ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3929289898c95a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0958989898989898787848192929d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9584818992929595959595959597a5ababababb3b3b3b3b3b3b3
b3b3b3b3b3b3b3b3978f8f8f8f8f8181848484848484848484848484848484848f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f89898989898989898989898989898470686568767b7b
7b7b7b7b8181818181818181878c9797979797979797979797979797979797978784979a
9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a0a0a0a0a0a0a0a0
a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a97878789
abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1ab928989898989898989898989877e
7e7e8ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5928c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8181818181818181818181818181899297a3a3a3aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a8a0a0a0a09a9a97a8aeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaea895959595959595958f8181818181818100008c8c9797979797
979797979797979797979797979797979797978c8c8c8c89878484848484737373737373
73737373737373737373707076768ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a39292
8c8c8c95a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a09589898989898987878481
92929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9584818992929595959595959597a5ababab
abb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3978f8f8f8f8f8f8f8f8f84848484848484848484
848484848787878787878787878787878787878989898989898989898989898989898989
8470626568767b7b7b7b7b7b8181818181818181878c9797979797979797979797979797
979797978784979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0a0a0a0a0a0a0a0a5b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8
a89a9a9a97878789abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b1b1b1b1b1ab928989898989
898989898989878484848ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a592898c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c818181818181818181818181817b879297a3a3a3ae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a8a0a0a0a09a9a97a8ab
ababababababababababababababababababa0898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c00
009797979797979797979797979797979797979797979797979797978f8c8c8987848484
848473737373737373737365707070707070707076768ca5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a392928c8c8c959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958989
898989897b73738192929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d95848189929295959595
95959597a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3978f8f8f8f8f8f8f8f8f8484
848484848484848484848478848787878787878787878787878787898989898989898989
898989898989898984705c6568767b7b7b7b7b7b8181818181818181878c979797979797
9797979797979797979797978784979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0979aaeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a8a8a8a8a8a89a9a9a97878789abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6a5a5a5a5
a5a5928989898989898989898989878484848ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a59284848484848484848484848484848484848481818181818181818181818181
7e7e7e97a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8a8a8a8a8a8a8a8a0
a0a0a09a9a97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0899292929292929aa3
a3a3a3a3a3a3a30000979797979797979797979797979797979797979797979797979797
8f8c8c898784848484847678787e7e7e7e7e7e7e7e7e7e7e7e7e7e7e76768ca5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a392928c8c8c8f8f8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d958989898989897b70708192929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9584
818992929595959595959597a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3978f8f8f
8f8f8f8f8f8f848484848484848484848484847884878787878787878787878787878789
898989898989898989898989898989898470575f68767b7b7b7b7b7b7b7b7b7b7b7b7e81
878ca3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a38784979a9a9a9a9a9a9a9a9a9a9a9a9a
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a0928caeb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a97878789abb6b6b6b6b6b6b6b6b6b6b6
b6b6b6b69d9d9d9d9d9d928989898989898989898989878484848ca5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5897b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b81818181818181
81818181818181817e7e7b97a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8a8a8a8
a8a8a8a8a8a8a8a0a0a0a09a9a979797979797979797979797979795959595959595958c
9292929292929aabbcbcbcbcbcbcbc000097979797979797979797979797979797979797
97979797979797978f8c8c898784848484847678787e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
76768ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c8c8c9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d958989898989897e7e7e8792929d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9584818992929595959595959597a5ababababb3b3b3b3b3b3b3b3b3b3b3
b3b3b3b3978f8f8f8f8f8f8f8f8f84848484848484848484848484818487878787878787
878787878787878989898989898989898989898989898989846a5a5c68767e7e7e7e7e7e
7e7e7e7e7e7e7e81878ca3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a39595979a9a9a9a9a
9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0a0a09797
aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a97878789abb6b6b6
b6b6b6b6b6b6b6b6b6b6b6b692929292929292898989897e848484848484848484848ca5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595817e8181818181818181818181818181
818181818181818181818181818181817e7e7b8ca3a3a3a3a3aeaeaeaeaeaeaeaeaeaeae
aeaeaeaea8a8a8a8a8a8a8a8a8a8a8a0a0a0a09a9a97979797979797979797979797978c
8c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4c4c4c400009797979797979797979797
979797979797979797979797979797978f8c8c89877870706a6a7678787e7e7e7e7e7e7e
7e7e7e7e7e7e7e7e70768ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c
97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958989898989898787878792929d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9584818992929595959595959597a5ababababb3b3b3
b3b3b3b3b3b3b3b3b3b3b3b3978f8f8f8f8f8f8f8f8f8181818181818181818181818181
818181818181818181818181787b818989898989898989898989898989898989846a625f
68768489898989898989898989898989898ca3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a3
9595979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0
a0a0a0a0a0a09797aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a89a9a9a
97878789abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b687878787878787878787878484848484
8484848484848ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d898181878787878787
8787878787878787878787878787818484848484848484848484848c959595959597a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a09a9a97979797979797
97979797979797898c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4c4c4c40000979797
9797979797979797979797979797979797979797979797978f8c8c8987766a68686d7678
787e7e7e7e7e7e7e7e7e7e7e7e7e7e7e768497a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a392928c8c8c8c97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d978c89898989898989
8787878792929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9584818992929595959595959597
a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b39a9a9a9a9a9a9a9a9a97818181818181
81818181818181818181818181818181818181817b7b8189898989898989898989898989
8989898984767676787b84959595959595959595959595959595a3a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a5a39595979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a0a0a0a0a0a0a0a09a9a9797aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8
a8a8a8a8a89a9a8c89878789abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b68787878787878787
87878787878787878787878787878ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d87
7e818792929292929292929292929292929292928f87818f929292929292929292929292
92929292928c9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a09a
9a9797979797979797979797979797898c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4
c4c4c400009797979797979797979797979797979797979797979797979797978f8c8c89
816d686a73787878787e7e7e8484848484848484848484848492a0a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a392928c8c8c8c97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d7e78
76818484848787878787878792929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797979797
9797979797979597a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3a0a0a0a0a0a0a0a0
9d9d84818181818181818181818184848484848484848484848484848476818989898989
8989898989898989898989898484848484848495959595959595959595a3a3a3a3a3a3a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a39595979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a095959797aeb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1a8a8a8a8a8a89a958987878789abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6
878787878787878c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8fa5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a59d897b818795959595959595959595959595959595958f87818f92929292
92929292929292929292929292929aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a0a0a0a09a9a979797979797979797979797978f848c8c8c8c8c8c8c8c92929292
92929ab9c4c4c4c4c4c4c400009797979797979797979797979797979797979797979797
979797978f8c8c89786d6d788189959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a929da0a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c97979d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d737070848484848787878787878792929d9d9d9d9d9d9d9da0a0a0a0a0a0
a0a0a0a0a0a0a0a0a09d9d9d9d9a9797a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3
a0a0a0a0a0a0a0a09d9d8478818181818181818181818484848484848484848484848484
84707b8989898989898989898989898989898989848c8c8c8c8c8c959595959595959595
95a3a3a3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a39595979a9a9a9a9a9a9a9a9a
9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0958f9797aeb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a897878787878789abb6b6b6b6b6b6b6
b6b6b6b6b6b6b6b6878787878787878ca5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8c8787929595959595959595959595959595959595
8f87818f9292929595959595959595959595959595959a9d9d9d9da0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958f8f8f8f8f8f8f8f8f8f8f8f8f8f877e8c8c8c8c
8c8c8c8c9292929292929ab9c4c4c4c4c4c4c40000979797979797979797979797979797
9797979797979797979797978f8c8c898481898f9292959a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a97a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c97979d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d976d7378848484848787878787878792929d9d9d9d9d9d
9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9a9a97a5ababababb3b3b3b3b3b3b3
b3b3b3b3b3b3b3b3a0a0a0a0a0a0a0a09d9d8c7681818181818181818181848484848484
848484848484848484687689898989898989898989898989898989898492959595959595
959595959595959595a3a3a3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a39595979a
9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a0a0a0a0a0a0a0a0
95959797aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a88f788787878789
abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b6878787878787878caeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaea3958c9292929292929292929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959595
95959595959595958f87818f9292929595959595959595959595959595959797979797a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c8c8c8c8c8c8c8c8c8c8c
8c8c89848c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4c4c4c4000097979797979797
97979797979797979797979797979797979797978f8c8c89878789929292959a9a9a9a9a
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a39292
8c8c8c8c97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d927681818484848487878787878787
92929292929292929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d9d9d9a9a97a5ababab
abb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3a0a0a0a0a0a0a0a09d9d8f768181818181818181
8181848484848484848484848484848484656d8789898989898989898989898989898989
8492959595959595959595959595959595a3a3a3a3a3a3a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a5a39595979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a0a0a0a0a0a0a0a095959797aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8
a889768787878789abababababababababababababababab878787878787878caeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaea395928f8f8f8f8f8f8f8f8f8f8fa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a095959595959595959595958f87818f9292929d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0958c8c8c8c
8c8c8c8c8c8c8c8c8c8c89898c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4c4c4c400
009797979797979797979797979797979797979797979797979797978f8c8c8987878992
9292959a9a9a9a9aa0a0a0a0a0a0a0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a392928c8c8c8c97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d92898989898989
848787878787878792929292a0a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a09d9d9d
9d9a9a97a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3a0a0a0a0a0a0a0a09d9d8f84
848484848484848484818484848484848484848484848484846d687e8989898989898989
89898989898989898492959595959595959595959595959595a3a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a5a39595979a9a9a9a9a9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a89d9d9d9d9d9d9d9d95959797aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1a8a8a8a8a8a8897687878787898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87878787
8787878caeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958f8f8f8f8f8f8f8f8f8f8fa0a0
a0a0a0a0a0a0a0a0a0a0a0a0a095959595959595959595958f87818f9292929d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0
a0a0a0958c8c8c8c8c8c8c8c8c8c8c8c8c8c89898c8c8c8c8c8c8c8c9292929292929ab9
c4c4c4c4c4c4c40000979797979797979797979797979797979797979797979797979797
8f8c8c89878789929292959a9a9a9a9aa3a3a3a3a3a3a3a3a5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c97979d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d928f8f8f8f8f8f878787878787878792929292a0c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1a5a5a5a09d9d9d9d9a9a97a5ababababb3b3b3b3b3b3b3b3b3b3b3b3b3b3b3a0a0a0a0
a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c8184848484848484848484848484848478656a
787878787878787878787878787878788492959595959595959595959595959595a3a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a3959595959592959a9a9a9a9a9a9a9a9a
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a892959595959a9a9a9a9a9a9aaeb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1a0929292929289768787878787878787878787878787878778
787e7e7e7e7e7e7e7e7e7e8caeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958c8c8c8c8c
8c8c8c8c8c8ca0a0a0a0a0a0a0a0a0a0a0a0a0a0a095959595959595959595958f87818f
9292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a0a0a0a0a0a0a0a0a0a0958c8c8c8c8c8c8c8c8c8c8c8c8c8c89898c8c8c8c8c8c8c8c
9292929292929ab9c4c4c4c4c4c4c4000097979797979797979797979797979797979797
97979797979797978f8c8c89878789929292959a9a9a9a9aabaeaeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaeaeaea8a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c97979d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d928f8f8f8f8f8f8f8f87878787878792929292a0c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9d9a9a97a5ababababb3b3b3b3b3b3b3b3b3b3b3
b3b3b3b3a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c8184878787878787878787
878787878787625a68686868686868737373737373737378849295959595959595959595
9595959595a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a395959595958f8c97
9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a892959595959aa0a0a0a0a0a0
aeb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a092878787878776878787878787878787
8787878787878778767e7e7e7e7e7e7e7e7e7e8caeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a395958c8c8c8c8c8c8f8f979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a095959595959595
959595958f87818f9292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0958c8c8c8c8c8c8c8c8c8c8c8c8c8c8989
8c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4c4c4c400009797979797979797979797
979797979797979797979797979797978f8c8c89878789929292959a9a9a9a9aabb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a5a5a5a392928c8c8c8c
97979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928f8f8f8f8f8f8f8f87878787878792929292
a0c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9d9a9a97a3ababababb3b3b3
b3b3b3b3b3b3b3b3b3b3b3b3a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c818487
878787878787878787878787878773626262626262626873737373737373737884929d9d
9d9d9d9d9d9d9d9d9d9d9d9d9da3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a3
95959595958f878c9a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a892959595
959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09284848484847687
8787878787878787878787878787877876787878787878787e7e7e8caeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea395958c8c8c8c8c8c8f8f9da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3
a095959595959595959595958f89818f95959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a0958c8c8c8c8c8c8c8c
8c8c8c8c8c8c89898c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4c4c4c40000979797
9797979797979797979797979797979797979797979797978f878787878789929292959a
9a9a9a9aabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a5a5
a5a392928c8c8c8997979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a928f8f8f8f8f8f8f8f8787
8787878792929292a0c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9d9a9a97
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c
8c8c8c8c8c8184878787878787878787878787878787878784766d6a6a65687373737373
737373788492a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a5a395959595958f84849a9a9a9a9a9a9a9aa8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a892959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
897b7b7b7b7b768787878787878787878787878787878778767676706a6d737676787b8c
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958c8c8c8c8c8c8f8f9daeaeaeaeaeaeaeae
aeaeaeaeaeaeaea3a095959595959595959595958f897e8f9a9a9a9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0a0a0a095
8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898c8c8c8c8c8c8c8c9292929292929ab9c4c4c4c4
c4c4c400009797979797979797979797979797979797979797979797979797978f878487
878789929292959a9a9a9a9aabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5
a5a5a5a5a5a5a5a5a5a3929292929292979797979797979797979797979797958f8f8f8f
8f8f8f8f8f8f8787878787878f8f8f92a0c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5
a09d9d9d9d9a9a979797979797979797959597a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
9d9d8f8c8c8c8c8c8c8c8c8c8c8184878787878787878787878787878787878784766d6a
6a68687373737373737373788492a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a395959595958f84849a9a9a9a9a9a9a9aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a892959595959aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a09d9d977673737373737373736a7676767676767676767676767676766a6562
5c626d76767687a0aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958c8c8c8c8c8c8f8f9d
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a095959595959595959595958f897e8f9a9a9a9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0
a0a0a0a092898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898c8c8c8c8c8c8c8c92929292
92929ab9c4c4c4c4c4c4c400009797979797979797979797979797979797979797979797
979797978f878487878789929292959a9a9a9a9aabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1a8a5a5a5a5a5a5a5a5a5a5a3929292929292979797979797979797979797
979797958f8f8f8f8f8f8f8f8f8f8787878787878c8c8c8fa3c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1a5a5a5a09d9d9d9d9a9a979797979797979797959297a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c818487878787878787878787878787
8787878784766d6a6d6d6d7678787878787878788492a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a395959595958f84848f8f8f8f
8f8f8f8f8f8f8f9292929292929292929292929292959595959aa0a0a0a0a0a0a0a0a0a0
a0a0a0a0a09a979797979797977b76767673737373737373685757575757575757575757
57575757575757575a5f6870788fa3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958c
8c8c8c8c8c8f8f9daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a09595959595959595959595
9595959a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a0a0a0a0a0a0a08c878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c89898c8c8c8c
8c8c8c8c92929292929295b9c4c4c4c4c4c4c40000979797979797979797979797979797
9797979797979797979797978f878487878789929292959a9a9a9a9aabb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a5a5a5a392929292929297979797
979797979797979797979795959595959595959595958787878787878787878fa5c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9d9a9a979797979797979797929297a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c81848787878787
87878787878787878787878784766d6a737878787e7e7e7e7e7e7e7e8792a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a59795959595
958f84848f8f8f8f8f8f8f8f9295959595959595959595959595959595959595959aa0a0
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d8778767673737373737373624e4649
5154545454545454545454545454575a626d73737ba0a3a3aeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaea395958c8c8c8c8c8c8f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a0959595
959595959595959a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0978f898c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c89898c8c8c8c8c8c8c8c8c8c8c8c8c8c8cb9c4c4c4c4c4c4c4000097979797979797
97979797979797979797979797979797979797978f878487878789929292959a9a9a9a9a
abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a5a5a5a39292
92929292979797979797979797979797979797959595959595959595959587878787878c
929292a0a5c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9d9a9a9797979797
97979797929297a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c878787878787878784766d6a738484848484848484848484
8992a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3
a39a9a9795959595958f84848f8f8f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
97959595959aa0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d927e7676737373
737373735a433b3e434e545454545454545454545454575f6870768487a0a3a3aeaeaeae
aeaeaeaeaeaeaeaeaeaeaeaea395958c8c8c8c8c8c8f979daeaeaeaeaeaeaeaeaeaeaeae
aeaeaea3a0959595959595959595959a9a9a9a9a9a9a9a9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a09795959595959595
959595898989898989898989878787878787878787878787878787aec4c4c4c4c4c4c400
009797979797979797979797979797979797979797979797979797978f87848787878992
9292959a9a9a9a9aabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5
a5a5a5a5a5a3929292929292979797979797979797979797979797959595959595959595
959587878787878ca3a3a3a3a5c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d
9d9a9a979797979797979797929297a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9d8f8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878787878787878784766d6a73898989
89898989898989898992a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a3a3a39a9a9795959595958f8484878f8f8f8f8f8f8f929a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a97959595959aa0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
9d927e767673737373737373513b3b3b404e545454545454545454545454575f68707684
97a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958c8c8c8c8c8c8f979daeaeaeae
aeaeaeaeaeaeaeaeaeaeaea3a0959595959595959595959a9a9a9a9a9a9a9a9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0a0a0a0a0
9795959595959595959595898989898989898989848484848484848484848484848484ae
c4c4c4c4c4c4c40000979797979797979797979797979797979797979797979797979797
8f878487878789929292959a9a9a9a9aabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1a8a5a0a0a0a0a0a0a0a0a0a092929292929297979797979797979797979797979795
9595959595959595959587878787878ca3a3a3a3a5c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
c1a5a5a5a09d9d9d9d9a9a979797979797979797929297a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8787878787878787
84766d6a738c8c8c8c8c8c8c8c8c8c8c8c92a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a3a39a9a9795959595958f84847e898f8f8f8f8f8f
929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97959595959aa0a0a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a89d927e7676737373737373734e3b3b3b404c51515454545454545454
5454575f6870768497a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea395958c8c8c8c8c
8c8f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a0959595959595959595959a9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a0a0a09a9a9a9a9795959595959595959595898989898989898989847e7e7e7e7e7e7e
7e7e7e7e7e7e81a8c4c4c4c4c4c4c4000097979797979797979797979797979797979797
97979797979797978f878487878789929292959a9a9a9a9aabb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a0a0a0a09292929292929797979797979797
97979797979797959595959595959595959587878787878ca3a3a3a3a5c1c1c1c1c1c1c1
c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9d9a9a979797979797979797929297a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09d9d8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c
878787878787878784766d6a738f8f8f8f8f8f8f8f8f8f8f8f95a8ababababababababab
ababababababababababa8a8a8a8a8a8a8a8a8a8a8a8a3a39d9a9a9795959595958f8489
89898f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97959595959aa0a0a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d927e68686868686868685c463b3b3b40464646
54545454545454545454575f6870768497a3a3a3aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a395958c8c8c8c8c8c8f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a095959595959595
9595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979797a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a0a0a0979797979795959595959595959595898989898989898989
847b7b7b7b7b7b7b7b7b7b7b7b73789dc4c4c4c4c4c4c400009797979797979797979797
979797979797979797979797979797978f878487878789929292929292929295abb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a0a0a0a0929292929292
979797979797979797979797979797959595959595959595959587878787878ca3a3a3a3
a5c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5a09d9d9d9a9a9a979797979797979797
929297a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09d9a8f8c8c8c8c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c8c8c878787878787878784766d6a738f9292929292929292929295a5c4cd
cdcdcdcdcdcdcdcdcdcdcdcdcdcdbfbfbfb6a8a8a8a8a8a8a8a8a8a8a8a8a08f8f8f8f8f
8f8f8f8f8f8f848989898f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97959595
959aa0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d927e6a6565656565655c4e
433b3b3b4043434343434343434343435154575f6870768497a3a3a3aeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea395958c8c8c8c8c8c8f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3
a0959595959595959595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a097979797979595959595959595959589
8989898989898989847b7b7b7b7b7b7b7b7b7b7b766a708fc1c1c1c1c1c1c10000959595
9595959595959595959595958c8c8c8c8c8c8c8c8c8c8c8c8c8784878787899595959595
95959595abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5a5a5a5a5a5a5a0a0
a0a092929292929297979797979797979797979797979795959595959595959595958181
8787878ca3a3a3a3a5c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a59784848492929292
92929292929292929292979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8f8c8c8c8c8c
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878787878787878784766d6a738f929292929292
9292929295aed2e3e3e3e3e3e3e3e3e3e3e3e3e3e3e3dbcdc7b6a8a8a8a8a8a8a8a8a8a8
a8a88c8c8c8c8c8c8c8c8c8c8c8c848989898f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a97959595959aa0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d928c76
706d656565655c46403b3b3535353535353535353535352d354c575f6870768497a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a395958c8c8c8c8c8c8f979daeaeaeaeaeaeaeae
aeaeaeaeaeaeaea3a0959595959595959595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d959797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a09797979797959595
95959595959595898989898989898989847b7b7b7b7b7b7b7b7b7b7b7068738cb3b3b3b3
b3b3b300008f8f8f8f8f8f8f8f8f8f8f8f8f8f8989848484848484848484848484848487
8787899d9d9d9d9d9d9d9d9dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a5
a5a5a5a5a5a5929292929292929292929797979797979797979797979797979595959595
95959595959581818787878ca3a3a3a3a5c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a5
977b7b819292929292929292929292929292929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d
9d9a8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c878787878787878784766d6a
738f9292929292929292929295aed2eef1f1f1f1f1f1f1f1f1f1f1f1f1f1f1e9d2b6a8a8
a8a8a8a8a8a8a8a8a8a88c8c8c8c8c8c8c8c8c8c8c89848989898f8f8f8f8f8f929a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a97928c92959aa0a0a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a89d928f78786d656565655143403b3b353535353535353535353535303849575f
6870768497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d979795958c8c8c8c8c8c8f979d
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a0959595959595959595959a9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d959797a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a0a0a0
979797979795959595959595959595848484848484848484847b7b7b7b7b7b7b7b7b7b7b
6d7084a3b3b3b3b3b3b3b300008f8f8f8f8f8f8f8f8f8f8f8f897b818484848484848484
84848484848484878787899d9d9d9d9d9d9d9d9dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1a8a5a5a5a5a5a5a59a9a9a9a9a9a9a979292979797979797979797979797
979797959595959595959595959581818787878ca3a3a3a3a5c1c1c1c1c1c1c1c1c1c1c1
c1c1c1c1c1a5a5a5978489899292929292929292929292929292929295959d9d9d9d9d9d
9d9d9d9d9d9d9d9d9d9a8f8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c87878787
8787878784766d70818f9292929292929292929295aed2eef4f4f4f4f4f4f4f4f4f4f4f4
f4f4f4f4f4cfaea3a3a3a3a3a3a3a3a3a3978c8c8c8c8c8c8c8c8c8c8c7b848989898f8f
8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9792847e8c9aa0a0a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a89d928f877b6d656565574340403b3b353535353535353535
353535324049575f6870768497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8c8c8c8c8c
8c8c8c8c878f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a0959292959595959595959a
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d959797a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a0a0a0979797979795959595959595959595818181818181818181817b7b7b
7b7b7b7b7b7b7b76738495abb3b3b3b3b3b3b300008f8f8f8f8f8f8f8f8f8f8f7e76767b
81818181818181818181818181818181817e899d9d9d9d9d9d9d9d9dabb1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a8a8a8a8a8a8a8a8a8a397929295959595
95959595959595959595959595959595959595959595818181817e8ca3a3a3a3a5c1c1c1
c1c1c1c1c1c1c1c1c1c1c1c1c1a5a5a59795959595959595959595959595959595959592
95959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a8778818c9797979797979797979797979797
97979797898989898989898984766d73848f9292929292929292929295aed2eef4f4f4f4
f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5a3a3a3a3a3a3978181818181818181818181
817e898989898f8f8f8f8f8f929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797978c8189a0a0
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d928f8f7e6d65656543353535353535
3535353535353535353535354049575f6870768497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a39d8f8f8f8c8c8c8c8c8c848f979daeaeaeaeaeaeaeaeaeaeaeaeaeaeaea3a0958f8f
959595959595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d959797a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09797979797959595959595959595958c8c8c8c8c
8c8c8c84817b84848484848484848484848495abb3b3b3b3b3b3b300008f8f8f8f8f8f8f
8f8f8f877e787878787878787e7e7e7e7e7e7e7e7e7e7e7e7e81879d9d9d9d9d9d9d9d9d
abb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a397929295959595959595959595959595959595959595959595959595958181817e818c
a3a3a3a3a5b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a5a5a5979595959595959595959595
959595959595959295959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a897370818c979797979797
979797979797979797979797979797979797979784766d73848f92929292929292929292
95aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5a3a3a3a3a3a389818181
8181818181818189898989898989898989898989929a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
979797978184929aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d928f8f876d6565
51383035353535353535353535353535383838384049575f6870768497a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a39d8f8f8f8c8c8c8c8c8c848c979daeaeaeaeaeaeaeaeaeaeaeae
aeaeaea3a0958f89959595959595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a
9a9a959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0979797979795959595959595
9595958f8f8f8f8f8f8f8f84817b84848484848484848484848495abb3b3b3b3b3b3b300
008f8f8f8f8f8f8f8f8f8f877e7e7e7e7e7e7e7b7e7e7e7e7e7e7e7e7e7e7e7e7e878f9d
9d9d9d9d9d9d9d9dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a3979292929292929292929289929595959595959595959595959595
959584848484848ca3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a3a397959595
959595959595959595959595959595929595959595959595959595959595958f817e7673
7b8c9797979797979797979797979797979797979797979797979797977e7073848f9292
929292929292929295aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5a3a3
a3a3a39d898989898989898989898189959595959595959595959595979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a97979797817e8f9aa8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
9d928f8f8f6d656546323035353535353535353535353535383b3b3b4349575f68708184
97a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8f8f8f8c8c8c8c8c89848c979daeaeaeae
aeaeaeaeaeaeaeaeaeaeaea3a0958f8c959595959595959a9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9a9a9a9a9a9a9a959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a097979797
97959595959595959595958f8f8f8f8f8f8f8f84817b84848484848484848484848495ab
b3b3b3b3b3b3b3000087878787878787878787877e7e7e7e7e7e7e7e7e7e7e7e7e7e7e7e
7e7e73767e89959d9d9d9d9d9d9d9d9dabb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1
b1b1a8a8a8a8a8a8a8a8a8a8a8a8a8a8a397929292929292929292928992959595959595
9595959595959595959587878787878ca3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a5a0a09795959595959595959595959595959595959592959595959595959595959595
959595959592877b7b8c9797979797979797979797979797979797979797979797979797
97958781848f9292929292929292929295aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4
f4eec1ababa5a3a3a3a3a39d898989898989898989898189959595959595959595959595
979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979781818f9aa8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a89d928f8f8f6d65624032323535353535353535353535353538434343
4349575f6870818497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8f8f8f8c8c8c8c8c81
818c979da5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a3a0958f8c959595959595959a9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a959797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a09797979797959595959595959595958f8f8f8f8f8f8f8f84817e848484848484
84848484848495abb3b3b3b3b3b3b300007e7e7e7e7e7e7e818181818181818181818181
8181818181818181818170707e8c959d9d9d9d9d9d9d9d9dabb1b1b1b1b1b1b1b1b1b1b1
b1b1b1b1b1b1b1b1b1b1a8a8a8a8a8a8a8a8a8a8a8a8a8a8a39a95959292929292929292
89929595959595959595959595959595959587878787878ca3a3a3a3a5a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a5a0a097959595959595959595959595959595959595929595959a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9784818c979797979797979797979797979797979797
97979797979797979797979795959595959595959592929295aed2eef4f4f4f4f4f4f4f4
f4f4f4f4f4f4f4f4f4eec1ababa5a3a3a3a3a39d89898989898989898989818995959595
9595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979595959aa8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d928f8f8f70655f403535353535353535353535
35353535384343434349575f6870818497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39d8f
8f8f8c8c8c8c8c7b848c97979797979797979797979797979795959595958f8c95959595
9595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9a9a9a9a959797a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a09797979797959595959595959595958f8f8f8f8f8f8f8f84
7e8484848484848484848484848495abb3b3b3b3b3b3b300009797979797979797979797
979592929292928c8c8c8c8c8c8c8c8c87877b81898c959d9d9d9d9d9d9d9d9dabb1b1b1
b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1aea8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39a9a
929292929292929289929595959595959595959595959595959587878787878ca3a3a3a3
a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a0a097959595959595959595959595959595
959595929595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9787848c97979797979797979797
979797979797979797979797979797979797979795959595959595959592929295aed2ee
f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5a3a3a3a3a39d8c8c8c8c8c8c8c8c
8c8c8189959595959595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797
95959595a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a89d928f8f8f70655f40383838
383838353535353535353535384343434349575f6870818497a3a3a3a3a3a3a3a3a3a3a3
a3a3a3a3a3a3978f8f8f8c8c8c8c8c7e848c9797979797979797979797979797978f8f8f
8f8f8f8c959595959595959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a8c9595959597
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9797979797959595959595959595958f
8f8f8f8f8f8f8f89898484848484848484848484848495abababababababab0000bfbfbf
bfbfbfbfbfbfbfbfa095929292929292929292929292929287878787898c959d9d9d9d9d
9d9d9d9da0a0a0a0a0a0a0a0a0a0a0a0a3a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a3a39d9d92929292929292928992959595959595959595959595959595958787
8787878ca3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a0a09795959595959595
9595959595959595959595929595959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9787878c9797
979797979797979797979797979797979797979797979797979797979595959595959595
9592929295aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5a3a3a0a0a09d
8c8c8c8c8c8c8c8c8c8c8189959595959595959595959595979a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9797979795959595979797979797979797979797979797979797979797928f8f
8f70655f40383838383838353535353538383838384343434349545f6870818497a3a3a3
a3a3a3a3a3a3a3a3a3a3a3a3a3a3958f8f8f8c8c8c8c8987878c97979797979797979797
979797979789878c8c8c8c8c8c8c8c8c8c8c959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a
9a9284899595959797979797979797979797979797979797979797979795959595959595
959595959595958f8f8f8f8f8f8f8f8f8f8484848484848484848484848495ababababab
ababab0000bfbfbfbfbfbfbfbfbfbfbfa095929292929292929292929292929287878787
898c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9da3a5a5a5a5a5a5a5a5a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d9292929292929292899295959595959595959595
95959595959587878787878ca3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a5a0a0
97959595959595959595959595959595959595929595959a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9787878c979797979797979797979797979797979797979797979797979797979797
95959595959595959592929295aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ab
aba58f8f8f8f8f8f8c8c8c8c8c8c8c8c8c8c8189959595959595959595959595979a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9797979795959595959595959595959595959595928f8f8f
8f8f8f8f8f8f8f8f8f70655f403838383838383227242d35434343434343434343464e5f
6870818497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958f8f8f8c8c8c8c8c8c8c8c9797
9797979797979797979797979787848c8c8f8f8f8f8f8f8f8f8f959a9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d978f8484899292929292929292929292979d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9595959595959595958f8f8f8f8f8f8f8f8f8f8484848484848484848484
848495abb1b1b1b1b1b1b10000bfbfbfbfbfbfbfbfbfbfbfa09595959595959595959595
9595959587878787898c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a9597a3a5a5a5
a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d9292929292929292898f8f8f
8f8f8f8f92929292929292929292929292929292a3a3a3a3a5a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a5a0a097959595959595959595959595959595959595929595959a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9787878c97979797979797979797979797979797979797979797
979797979797979795959595959595959592929295aed2eef4f4f4f4f4f4f4f4f4f4f4f4
f4f4f4f4f4eec1ababa5878c8c8c8c8c8c8c8c8c8c8c8c8c8c8c81899595959595959595
95959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797959595959595959595959595
959595959292929292929292929292929270655f40383838383838383022223549494949
494949494949545f6870818497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3958f8f8f8c8c
8c9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979781848c8c8f8f8f8f8f8f8f8f8f959a
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d928781818992959595959595959595959da0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a09595959595959595959595959595959595958f848484
8484848484848484848495abb1b1b1b1b1b1b10000bfbfbfbfbfbfbfbfbfbfbfa5979797
95959595959595959595959587878787898c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a
9a9a9592a3a5a5a5a5a5a5a5a5a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d92929292
92929292898989898989847b92929292929292929292929292929292a3a3a3a3a5a5a5a5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5a0a09795959595959595959595959595959595959595
9a9a9aa3a3a3a3a3a3a3a3a3a3a3a3a3a3a39787878c9797979797979797979797979797
9797979797979797979797979797979795959595959595959592929295aed2eef4f4f4f4
f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5898c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8189
959595959595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979795959595
95959595959595959595959592929292929292929292929292705f5a4038383838383838
382a2735494e4e4e4e4e4e4e4e515c5f6570818497a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3
a3a3958f8f8f8c878ca5ababababababababababababababab9a979797767e8c8c8f8f8f
8f8f8f8f8f8f959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c817b78818f97979797979797
979a9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09595959595959595959595959595
959595958f8484848484848484848484848495abb1b1b1b1b1b1b10000bfbfbfbfbfbfbf
bfbfbfbfa5a3979795959595959595959595959587878787898c959d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d9d9a9a9a958c929292929292929297a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a3a39d9d9292929292929292898989898987737b92929292929292929292929292929292
a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a3a39a9a9a9a9a9a9a979595959595959595959797
97a5a5a5a5aeaeb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39787878c979797979797
979797979797979797979797979797979797979797979797959595959595959595929292
95aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa58f8f8f8f8f8f8f8c8c8c
8c8c8c8c8c8c8189959595959595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
979797979595959595959595959595959595959592929292929292929292929292765c57
4038383838383838383235465151515151515151545762626270818497a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3a3958f8f8f8c8492a8ababababababababababababababab9a8c8c
87707e8c8c8f8f8f8f8f8f8f8f8f959a9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8c87847b7e
8c97979797979797979a9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959595959595
9595959595959595959595958f848c8c8c8c8c8c8c8c8c8c8c8c95abb1b1b1b1b1b1b100
00bfbfbfbfbfbfbfbfbfbfbfa5a3979795959595959595959595959587878787898c959d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a95898f8f8f8f8f8f959597a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a3a39d9d92929292929292928989898989877b8f9292929292929292
9292929292929292a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a09a9a9a9a9a9a9a97959595
959595959595979797a5a5a5a5aeb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39787
878c97979797979797979797979797979797979797979797979797979797979795959595
95959595958f8f8c92aed2eef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa59797
97979797978c8c8c8c8c8c8c8c8c8189959595959595959595959595979a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a97979797959595959595959595959595959595959292929292929292
92929292927e5c57403b3b3b3b3b3b3b3b3b43515151515151515151575a656868708184
979d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d958f8f8f8c8c92a8abababababababababab
ababababab9a848178787e8c8c8f8f8f8f8f8f8f8f8f959a9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d8c8c8c8c8c8c97979797979797979a9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a09595959595959595959595959595959595958f848f8f8f8f8f8f8f8f8f8f8f8f95ab
b1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a39797959595959595959595959595
87878787898c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a8c878c8c8c8c8c8f9595
97a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d92929292929292928989898989898992
929292929292929292929292929292929d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d979292
9595959595959595959595959595979797a8abababb9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9a39787878c9797979797979797979797979797979797979797979797979797
979797979595959595959595958f8f929aaecdeef4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4
f4eec1ababa5979797979797978c8c8c8c8c8c8c8c8c8189959595959595959595959595
979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9797979795959595959595959595959595959595
92929292929292929292929292845c574e4e4e4e4e4e4e4e4e4e4e515151515151515151
5a5c6868687081848f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c92a8abab
ababababababababababababab9a84817b787e8c8c8f8f8f8f8f8f8f8f8f929292929292
92929292929292929292928c8c8c8c8c8c97979797979797979a9d9da0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a09595959595959595959595959595959595958f8c8f8f8f8f8f8f
8f8f8f8f8f8f95abb1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a3979795959595
959595959595959587878787898c959d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d9a9a9a7e81
878787878c8f959597a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d877b7e818f8f8f8f
8f8f8f8f929292929292929292929292929292929292929292928c8c8c8c8c8c8c8c8c8c
8c8c8c8c8c8c81879595959595959595959595959595979797a8b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9a39787878c979797979797979797979797979797979797
9797979797979797979797979595959595959595958f8f979aaecdddf4f4f4f4f4f4f4f4
f4f4f4f4f4f4f4f4f4eec1ababa5979797979797978c8c8c8c8c8c8c8c8c818995959595
9595959595959595979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979595959595959595
959595959595959592929292929292929292929292845c57545454545454545454545457
5c5c5c5c5c5c5c5c5c626868687081818f8f8f9797979797979797979797979797978f8f
8f8f8c8c92a8ababababababababababababababab9a84817b787e8c8c8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f87878c8c8c8c8c8c8c8c8c8c8c8c8c97979797979797979a9d9d
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0959595959595959595959595959595959595
959595929292929292929292929295abb1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbf
a5a3979795959595959595959595959587878787898c959d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d9d9a9a9a787b818181818c8f959597a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d
87787e818f8f8f8f8f8f8f8f929292929292929292929292929292929292929292928c87
848484848484848484848484848484879595959595959595959595959595979797a8b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39787878c97979797979797979797
97979797979797979797979797979797979797979595959595959595958f8f979aaecdd2
dbf4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4eec1ababa5979797979797978c8c8c8c8c8c8c
8c8c81899595959595959595959595959797979797979797979797979797979797979797
9595959595959595959595959595959592929292929292929292929292845c5754545454
5454545454545457686868686868686868686868687081818f8f8f9d9d9d9d9d9d9d9d9d
9d9d9d9d9d9d8f8f8f8f8c8c92a8ababababababababababababababab9a84817b787e8c
8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878c8c8c8c8c8c8c8c8c8c8c8c8c979797
97979797979a9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0928f8f95959595959595
9595959595959595959595929292929292929292929295abb1b1b1b1b1b1b10000c1c1c1
c1c1c1c1bfbfbfbfa5a3979795959595959595959595959587878787898c959d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d9d9a9a9a8781818181848c8f959597a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a3a39d9d877e7e818f8f8f8f8f8f8f8f92929292929292929292929292929292
9292929292928c8781818189898989898989898989898989959595959595959595959595
9797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39787878c8f8f
8f9797979797979797979797979797979797979797979797979797979595959595959595
958f8f979aaecdd2d2e0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeed5bfaba0a0979797979797
978c8c8c8c8c8c8c8c8c7e89959595959595959595959595979797979797979797979797
979797979797979795959595959595959595959595959595929292929292929292929292
92845c43575a5a5a5a5a5a5a5a5a5a5c686868686868686868686868687081818f8f8f9d
9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8c8c92a8abababababababababababababab
ab9a84817b787e8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878c8c8c8c8c8c8c8c
8c8c8c8c8c97979797979797979a9d9da0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a08f87
8f959595959595959595959595959595959595929292929292929292929295abb1b1b1b1
b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a3979795959595959595959595959587878787
898c959a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a8989898989898c8f959597a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d877e7e818f8f8f8f8f8f8f8f9292929292929595
959595959595959595959595959595958f8f8f8f8f8f8f8f8f8f8f8f8f8f8c8c95959595
95959595959595959797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9a3978787898989898c9797979797979797979797979797979797979797979797979797
9595959595959595958f8f979aaec7c7cfd8d8d8d8d8d8d8d8d8d8d8d8d8d8d8c1a8a3a3
a0a0979797979797978c8c8c8c8c8c8c8c8c817e95959595959595959595959597979797
979797979797979797979797979797979595959595959595959595959595959592929292
929292929292929292845a385c5f5f5f5f5f5f5f5f5f5f65686868686868686868686868
687081818f8f8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8f8f8c8c92a8abababababab
ababababababababab9a84817b787e8c8c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8787
8c8c8c8c8c8c8c8c8c8c8c8c8c97979797979797979a9d9da5a5a5a5a5a5a5a5a5a5a5a5
a5a5a5a5a5a38f818f959595959595959595959595959595959595929292929292929292
92928fa5b1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a397979595959595959595
9595959587878787898c9595959595959595959595959597979797979797979797979797
9797979797a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3a39d9d8c8c8c8c8f8f8f8f8f8f8f8f
929292929292959797979797979797a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0958c8c9595959595959595959595959797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9a3978787898989898c8f9797979797979797979797979797979797
97979797979797979595959595959595958f8f979aaeaeb1c4c4c4c4c4c4c4c4c4c4c4c4
c4c4c4c1a09797979797979797979797978c8c8c8c8c8c8c8c8c8c848989898989898989
899292929292929292929292929595959595959595959595959595959595959595959595
9595959592929292929292929292929292845a4662626262626262626565656d6d6d6d6d
6d6d6d6d6d6d6d6d6d7081818f8f8f9d9d9d9d9d9d9d9d9d9d9d9d9d9d9d8f8f8989898c
92a8ababababababababababababababab9a87878484848c8c8f8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f87878c8c8c8c8c8c8c8c8c8c8c8c8c97979797979797979a9d9da8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a38f7e8995959595959595959595959595959595959592
9595979797979797979797a5b1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a39a9a
9a9a9a9a9a9a9a9a9a9a9a9587878787898c8c8c8c8c8c8c8c8c8c8c8c8c8c9a9d9d9d9d
9d9dabababababababababababababababa8a8a8a8a8a8a8a8a8a8a8a3a39d9d95959595
9595959595959595959595959592959797979797979797a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0958c8c9595959595959595959595959797979797a8b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3978787898989898c8f979797979797979797
979797979797979797979797979797979595959595959595958f8f979aa0a0abc4c4c4c4
c4c4c4c4c4c4c4c4c4c4c4a5979797979797979797979797978f8c8c8c8c8c8c8c8c8c84
878787878787878787898989898989898989898989959595959595959595959595959595
959595959595959595959595929292929292929292929292928478737373737373737362
6a737676767676767676767676767676767681818787899d9d9d9d9d9d9d9d9d9d9d9d9d
9d9d89818184848c92a8ababababababababababababababab9a8f8f8f8f8f8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878c8c8c8c8c8c8c8c8c8c8c8c8c97979797979797
979a9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a38f7e899797979797979797979797
979797979797979295959da8a8a8a8a8a8a8a8a8b1b1b1b1b1b1b10000c1c1c1c1c1c1c1
bfbfbfbfa5a39a9a9a9a9a9a9a9a9a9a9a9a9a9587878787898989898989898989898989
8989899a9d9d9d9d9d9dabababababababababababababababa8a8a8a8a8a8a8a8a8a8a8
a3a3ababababababababababababababababababa092959797979797979797a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c95959595959595959595959597979797
97a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a3928787898989898c8f95
959595959595959595959595959595959595959595959595959595959595959595898c97
9aa0a0abb6b6b6b6b6b6b6b6b6b6b6b6b6b6b69d9a9a9a9a9a9a9a9a9a9a9a9a9a8f8f8f
8f8f8f8f8f8f8f8487878787878787878787898989898992929292929295959595959595
959595959595959595959595959595959595959592929292929292929292929292848181
81817e7e7e7e73626a787b7b7b7b7b7b7b7b7b7b7b7b7b7b7b766a737b7e899d9d9d9d9d
9d9d9d9d9d9d9d9d9d9d847e8184848c92a8ababababababababababababababab9a8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878c8c8c8c8c8c8c8c8c8c8c8c
8c97979797979797979a9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3897b87979797
979797979797979797979797979797929595a0abababababababababb1b1b1b1b1b1b100
00c1c1c1c1c1c1c1bfbfbfbfa5a39a9a9a9a9a9a9a9a9a9a9a9a9a958787878789898989
89959595959595959595959a9d9d9d9d9d9dababababababababababababababab9d9d9d
9d9d9d9d9d9d9d9d9d9daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea092959a9a9a9a9a
9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c9595959595959595
959595959797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a39287
87898989898989898989898989898c8c8c8c8c9595959595959595959595959595959595
9595959592878c979aa0a0a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59d9a9a9a9a9a9a9a9a
9a9a9a9a9a97979797979797979797848787878787878787878789898989899595959595
959595959595959595958c8989898987898f8f8f8f8f8f8f8f8f92929292929292929292
929292929284818181817e7e7e7e73626a787b8181818181818181818181818181816868
707b89a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877e8484848c92a8abababababababababab
ababababab9a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f87878c8c8c8c
8c8c8c8c8c8c8c8c8c97979797979797979a9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8
a8a3877e92979797979797979797979797979797979797929aa3abababababababababab
b1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a39a9a9a9a9a9a9a9a9a9a9a9a9a95
878787878989898989959595959595959595959a9d9d9d9d9d9dabababababababababab
ababababab9797979795959595928f7e849daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeae
a092959a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c
8989898989898989898989959797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9a3928787878787878787878787878784898c8c8c8c8c959595959595959595
9595959595959595959595958c878c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9797979797979797979784878787878787878787878989
8989899595959595959595959595959595958c89898989817e7b8c8f8f8f8f8f8f8f9292
9292929292929292929292929284818181817e7e7e7e73626a787b818181818181818181
81818181818168686d7687a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877e8484848c92a8abab
ababababababababababababab9a8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f
8f8f87878c8c8c8c8c8c8c8c8c8c8c8c8c97979797979797979a9d9da8a8a8a8a8a8a8a8
a8a8a8a8a8a8a8a8a8a3877e92979797979797979797979797979797979797929aa3abab
ababababababababb1b1b1b1b1b1b10000c1c1c1c1c1c1c1bfbfbfbfa5a39a9a9a9a9a9a
9a9a9a9a9a9a9a95878787878989898989959595959595959595959a9d9d9d9d9d9dabab
ababababababababababababab9797979795959595928f7e849daeaeaeaeaeaeaeaeaeae
aeaeaeaeaeaeaeaea092959a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0a0a0a0a0958c8c8989898989898987878784959797979797a8b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9a3928787878787878787878787878784898c8c8c8c8c95
9595959595959595959595959595959595958f8f8c878c979a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a979797979797979797978487878787
87878787878789898989899595959595959595959595959595958c89898989706d6a7878
78787878787892929292929292929292929292929284818181817e7e7e7e73626a787b81
818181818181818181818181818168686d767ea5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877e
8484848c92a8ababababababababababababababab9a8f8f8f8f8f8f8f8f8f8f8f8c8484
8487878787878787878787878c8c8c8c8c8c8c8c8c8c8c8c8c97979797979797979a9d9d
a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3877e92979797979797979797979797979797
979797929aa3ababababababababababababababababab0000c1c1c1c1c1c1c1bfbfb6b1
a5a39a9a9a9a9a9a9a9a9a9a9a9a9a95878787878989898989959595959595959595959a
9d9d9d9d9d9dababababababababababababababab9797979795959595928f7e849daeae
aeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea092959a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0
a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c8989898989898987878784959797979797a8b9b9
b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9a38c87878787878787878787878787
84898c8c8c8c8c929292929292929292929292929292929292927e8787878c979a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797979797
979797848787878787878787878789898989899595959595959595959595959595958c70
707070625c5f737878787878787887878787878787878787878787878784818181817e7e
7e7e73626a787b81818181818181818181818181818168686d767ea5a5a5a5a5a5a5a5a5
a5a5a5a5a5a5877e8484848c92a8ababababababababababababababab978f8f8f8f8f8f
8f8f8f8f8f8c78737384878787878787878787878c8c8c8c8c8c8c8c8c8c8c8c8c979797
97979797979a9d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3877e9297979797979797
9797979797979797979797929aa3ababababababababababababababababab0000c1c1c1
c1c1c1c1b3a3a3a3a3a39a9a9a9a9a9a9a9a9a9a9a9a9a9587816d848989898989959595
959595959595959a9d9d9d9d9d9dababababababababababababababab97979797959595
95928c7e849daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea092959a9a9a9a9a9a9a9aa0
a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c898989898989898787878495
9797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b992848484848484
848484848484848484898c8c8c8c8c929292929292929292929292929292929292927e87
87878c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9797979797979797979784878787878787878787878989898989959595959595959595
9595959595958c7070707062545768686868737878788787878787878787878787878787
8784818181817e7e7e7e73626a787b81818181818181818181818181818168686d767ea5
a5a5a5a5a5a5a5a5a5a5a5a5a5a5877e8484848c92a8abababababababababababababab
ab958f8f8f8f8f8f8f8f8f8f8f8c786d6576878787878787878787878c8c8c8c8c8c8c8c
8c8c8c8c8c9797979797979797979d9da8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a8a3877e
92979797979797979797979797979797979797929aa3abababababababababababababab
ababab0000c1c1c1c1c1c1c1ab95979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a95876d6278
8989898989959595959595959595959a9d9d9d9d9d9dabababababababababababababab
ab97979797959595958c897e849daeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea092959a
9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0958c8c89898989
89898987878784959797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b1817b8484848484848484848484848484898c8c8c8c8c92929292929292929292929292
9292929292927e8787878c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a979797979797979797978487878787878787878787878787878995
95959595959595959595959595958c707070705f544e4e4e4e4e6d787878878787878787
87878787878787878784818181817e7e7e7e73626a787b81818181818181818181818181
818168686d767ea5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877e8484848c92a3a3a3a3a3a3a3
a3a3a3a3a3a3a3a3a3958f8f8f8f8f8f8f8f8f8f8f8c785c5f687e878787878787878787
8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c979d9da8a8a8a8a8a8a8a8a8a8a8a8
a8a8a8a8a8a3877e92979797979797979797979797979797979797929aa3abababababab
ababababababababababab0000c1c1c1c1c1c1c1a092979a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a95816562788989898989959595959595959595959a9d9d9d9d9d9dabababababab
ababababababababab979797978c8c8c8787877e849daeaeaeaeaeaeaeaeaeaeaeaeaeae
aeaeaeaea092959a9a9a9a9a9a9a9aa0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0
a0958c8c8989898989898987878784959797979797a8b9b9b9b9b9b9b9b9b9b9b9b9b9b9
b9b9b9b9b9b9b9b9b17e7b8484848484848484848484848484898c8c8c8c8c8f8f8f8f8f
8f8f8f8f8f8f8f8f8f8f8f8f8f8f7e8787878c979a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a
9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a9a97979797979797979797848484848484848484
848484848484879595959595959595959595959595958c707070705a514c4c4943496d78
787887878787878787878787878787878784818181817e7e7e7e73626a787b8181818181
8181818181818181818168686d767ea5a5a5a5a5a5a5a5a5a5a5a5a5a5a5877e8484848c
9295959595959595959595959595959595958f8f8f8f8f8f8f8f8f8f8f8c705c5c657381
8787878787878787898989898989898989898989898989898989898487979d9da8a8a8a8
a8a8a8a8a8a8a8a8a8a8a8a8a8a3877e9297979797979797979797979797979797979792
9aa3ababababababababababababababababab0000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000
pgsave restore
showpage
end
%%EndDocument

 endTexFig
 619 4309 a Fi(Original)1045 b(op)6 b(ened)69 b(image)p
Black 3751 6118 a Fh(14)p Black eop
%%Page: 15 16
15 15 bop Black Black Black Black 587 992 a Fj(Bina)-8
b(ry)99 b(Reconstruction)p Black Black -231 1474 a Fi(Let)69
b Fg(I)82 b Fi(and)69 b Fg(J)84 b Fi(b)6 b(e)69 b(to)f(bina)-6
b(ry)69 b(images)f(\(sets\),)h(with)g Fg(J)64 b Fe(\022)48
b Fg(I)13 b Fi(.)-237 1706 y(W)-6 b(e)69 b(will)f(refer)h(to)f
Fg(I)82 b Fi(as)69 b(the)f(mask)f(and)i Fg(J)85 b Fi(as)68
b(the)h(ma)-6 b(rk)g(er)1659 1939 y(image.)-299 2420
y(F)g(urthermo)g(re,)68 b(Let)h(the)f(connected)h(comp)6
b(onents)68 b(of)i Fg(I)82 b Fi(b)6 b(e)1531 2653 y Fg(I)1607
2687 y Fb(1)1697 2653 y Fg(;)29 b(:)g(:)g(:)59 b(;)29
b(I)2193 2673 y Ff(n)2286 2653 y Fi(.)-27 3134 y(Then)69
b(the)f(reconstruction)h Fg(\032)2189 3171 y Ff(I)2268
3134 y Fi(\()p Fg(J)16 b Fi(\))69 b(of)g(mask)e Fg(I)82
b Fi(from)-264 3367 y(ma)-6 b(rk)g(er)67 b Fg(J)84 b
Fi(is)69 b(the)g(union)h(of)f(the)g(connected)g(comp)6
b(onents)453 3599 y(that)68 b(contain)g(at)h(least)e(one)j(pixel)e(of)i
Fg(J)1227 4438 y(\032)1317 4475 y Ff(I)1395 4438 y Fi(\()p
Fg(J)16 b Fi(\))49 b(=)2112 4296 y Fd([)1926 4638 y Ff(J)13
b Fc(\\)p Ff(I)2180 4671 y Fa(k)2250 4638 y Fc(6)p Fb(=)p
Fc(;)2487 4438 y Fg(I)2563 4476 y Ff(k)177 5148 y Fi(This)69
b(op)6 b(eration)69 b(is)g(also)g(called)f(feature-AND)p
Black 3751 6118 a Fh(15)p Black eop
%%Page: 16 17
16 16 bop Black Black Black Black -80 580 a Fj(Bina)-8
b(ry)99 b(Reconstruction)h(-)f(Example)737 866 y
 18945146 13640500 0 0 34469642 24997068 startTexFig
 737
866 a
%%BeginDocument: maskmarker.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 380 moveto 0 0 lineto 524 0 lineto 524 380 lineto closepath clip newpath
1.0 379.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1613 2188 m 1627 2213 l 1644 2238 l 1663 2263 l 1684 2288 l 1706 2313 l
 1731 2337 l 1757 2362 l 1785 2386 l 1815 2410 l 1847 2434 l
 1880 2458 l 1915 2482 l 1952 2505 l 1990 2528 l 2030 2550 l
 2071 2572 l 2113 2593 l 2157 2614 l 2201 2634 l 2246 2653 l
 2292 2672 l 2338 2689 l 2385 2706 l 2431 2722 l 2478 2737 l
 2525 2750 l 2572 2763 l 2619 2774 l 2665 2785 l 2710 2794 l
 2755 2802 l 2799 2809 l 2843 2815 l 2885 2819 l 2927 2823 l
 2967 2825 l 3006 2826 l 3045 2826 l 3082 2824 l 3118 2821 l
 3153 2818 l 3188 2813 l 3224 2805 l 3259 2797 l 3294 2787 l
 3327 2775 l 3359 2762 l 3390 2747 l 3420 2731 l 3450 2713 l
 3478 2694 l 3505 2673 l 3531 2651 l 3556 2627 l 3580 2602 l
 3603 2576 l 3624 2548 l 3644 2520 l 3663 2490 l 3680 2460 l
 3696 2428 l 3710 2396 l 3723 2363 l 3734 2330 l 3744 2296 l
 3753 2262 l 3760 2228 l 3765 2194 l 3769 2159 l 3772 2125 l
 3773 2091 l 3773 2058 l 3771 2024 l 3768 1991 l 3764 1958 l
 3759 1926 l 3752 1894 l 3744 1862 l 3735 1831 l 3725 1800 l
 3713 1768 l 3699 1736 l 3685 1704 l 3668 1672 l 3651 1640 l
 3632 1608 l 3612 1576 l 3590 1545 l 3568 1513 l 3544 1482 l
 3518 1450 l 3492 1419 l 3465 1388 l 3437 1357 l 3408 1327 l
 3378 1298 l 3348 1268 l 3317 1240 l 3286 1212 l 3254 1185 l
 3222 1159 l 3191 1133 l 3159 1109 l 3128 1086 l 3097 1063 l
 3067 1042 l 3037 1022 l 3008 1003 l 2979 985 l 2951 968 l
 2924 952 l 2898 937 l 2872 923 l 2847 910 l 2823 898 l
 2800 888 l 2773 876 l 2747 865 l 2721 855 l 2696 847 l
 2672 840 l 2648 834 l 2624 829 l 2601 826 l 2578 824 l
 2555 824 l 2532 825 l 2509 827 l 2486 831 l 2463 836 l
 2441 843 l 2419 851 l 2396 860 l 2374 871 l 2352 883 l
 2330 897 l 2307 911 l 2285 927 l 2263 943 l 2241 961 l
 2218 980 l 2195 999 l 2172 1020 l 2149 1041 l 2125 1064 l
 2100 1088 l 2079 1108 l 2057 1129 l 2034 1151 l 2011 1174 l
 1988 1198 l 1964 1223 l 1939 1249 l 1915 1276 l 1890 1304 l
 1865 1333 l 1840 1363 l 1816 1394 l 1792 1425 l 1768 1457 l
 1745 1490 l 1722 1524 l 1701 1558 l 1680 1592 l 1661 1627 l
 1643 1662 l 1626 1697 l 1611 1732 l 1598 1767 l 1587 1802 l
 1577 1836 l 1569 1870 l 1564 1904 l 1560 1938 l 1559 1971 l
 1559 2003 l 1562 2035 l 1568 2066 l 1575 2097 l 1585 2128 l
 1598 2158 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 103.93 54.93] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 1688 4788 m 1702 4812 l 1718 4837 l 1736 4862 l 1754 4886 l 1775 4911 l
 1796 4936 l 1819 4960 l 1844 4985 l 1869 5009 l 1896 5033 l
 1924 5057 l 1953 5080 l 1983 5103 l 2014 5125 l 2045 5146 l
 2076 5166 l 2108 5185 l 2140 5203 l 2173 5219 l 2204 5235 l
 2236 5249 l 2267 5261 l 2298 5272 l 2328 5282 l 2357 5290 l
 2386 5296 l 2413 5301 l 2440 5304 l 2466 5305 l 2491 5305 l
 2515 5303 l 2538 5300 l 2563 5294 l 2587 5286 l 2610 5276 l
 2633 5263 l 2654 5249 l 2675 5232 l 2695 5214 l 2714 5194 l
 2731 5172 l 2748 5149 l 2764 5124 l 2778 5098 l 2791 5071 l
 2803 5043 l 2814 5015 l 2823 4987 l 2830 4958 l 2837 4929 l
 2841 4901 l 2845 4874 l 2847 4847 l 2848 4820 l 2847 4795 l
 2845 4771 l 2842 4748 l 2837 4727 l 2832 4707 l 2825 4688 l
 2815 4665 l 2802 4644 l 2788 4625 l 2772 4607 l 2754 4591 l
 2734 4575 l 2713 4561 l 2690 4547 l 2666 4534 l 2641 4522 l
 2615 4510 l 2588 4499 l 2561 4489 l 2535 4478 l 2509 4468 l
 2483 4457 l 2458 4447 l 2434 4436 l 2411 4425 l 2390 4413 l
 2369 4401 l 2350 4388 l 2332 4373 l 2314 4357 l 2298 4340 l
 2282 4321 l 2266 4301 l 2252 4280 l 2237 4258 l 2223 4236 l
 2210 4212 l 2196 4188 l 2184 4164 l 2171 4140 l 2159 4117 l
 2148 4094 l 2137 4071 l 2126 4050 l 2115 4030 l 2105 4011 l
 2094 3994 l 2084 3978 l 2073 3963 l 2063 3950 l 2053 3940 l
 2043 3931 l 2033 3923 l 2023 3915 l 2012 3909 l 2000 3904 l
 1988 3900 l 1976 3897 l 1963 3895 l 1950 3894 l 1937 3894 l
 1923 3896 l 1909 3899 l 1895 3903 l 1881 3908 l 1867 3915 l
 1853 3923 l 1839 3931 l 1826 3941 l 1812 3952 l 1799 3964 l
 1786 3977 l 1774 3990 l 1762 4005 l 1749 4021 l 1738 4038 l
 1726 4054 l 1716 4071 l 1705 4090 l 1694 4110 l 1684 4130 l
 1674 4152 l 1664 4176 l 1654 4200 l 1646 4226 l 1637 4252 l
 1630 4280 l 1623 4308 l 1618 4337 l 1613 4367 l 1610 4398 l
 1607 4428 l 1606 4459 l 1606 4490 l 1608 4521 l 1611 4552 l
 1615 4583 l 1621 4613 l 1628 4643 l 1637 4673 l 1647 4702 l
 1659 4731 l 1672 4759 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 107.07 259.60] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 6550 3788 m 6564 3795 l 6580 3802 l 6597 3807 l 6616 3811 l 6635 3813 l
 6656 3814 l 6677 3814 l 6699 3813 l 6721 3810 l 6743 3806 l
 6765 3801 l 6786 3795 l 6806 3788 l 6824 3781 l 6841 3772 l
 6857 3764 l 6870 3755 l 6882 3745 l 6892 3735 l 6900 3725 l
 6906 3715 l 6910 3704 l 6912 3692 l 6912 3680 l 6911 3668 l
 6908 3655 l 6903 3642 l 6896 3629 l 6888 3615 l 6879 3602 l
 6869 3588 l 6857 3575 l 6845 3562 l 6832 3550 l 6819 3538 l
 6805 3526 l 6791 3516 l 6778 3506 l 6764 3496 l 6750 3488 l
 6735 3478 l 6719 3470 l 6704 3462 l 6688 3454 l 6671 3448 l
 6655 3442 l 6639 3437 l 6623 3434 l 6607 3432 l 6592 3431 l
 6577 3431 l 6563 3433 l 6550 3436 l 6538 3441 l 6527 3448 l
 6517 3455 l 6508 3464 l 6500 3475 l 6493 3486 l 6488 3498 l
 6482 3512 l 6478 3527 l 6474 3543 l 6472 3560 l 6470 3578 l
 6469 3597 l 6469 3616 l 6471 3636 l 6473 3655 l 6477 3674 l
 6482 3692 l 6489 3710 l 6496 3726 l 6505 3741 l 6514 3755 l
 6525 3767 l 6537 3778 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 431.27 228.73] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 0 0 m 8700 0 l 8700 6300 l 0 6300 l
 cp gs col0 s gr 
% Polyline
n 4725 4863 m 4741 4899 l 4758 4936 l 4777 4972 l 4796 5008 l 4817 5044 l
 4839 5080 l 4862 5117 l 4886 5153 l 4912 5189 l 4938 5225 l
 4966 5261 l 4996 5297 l 5026 5332 l 5058 5368 l 5091 5403 l
 5125 5438 l 5160 5473 l 5197 5507 l 5234 5541 l 5272 5575 l
 5312 5607 l 5352 5639 l 5392 5671 l 5434 5701 l 5476 5731 l
 5519 5760 l 5562 5788 l 5605 5815 l 5649 5841 l 5693 5866 l
 5737 5890 l 5781 5912 l 5826 5934 l 5870 5955 l 5914 5974 l
 5959 5992 l 6003 6009 l 6047 6026 l 6091 6041 l 6135 6055 l
 6180 6067 l 6224 6079 l 6268 6090 l 6313 6100 l 6355 6109 l
 6398 6116 l 6442 6123 l 6485 6129 l 6529 6134 l 6574 6138 l
 6619 6142 l 6665 6144 l 6711 6146 l 6757 6146 l 6804 6146 l
 6851 6145 l 6899 6143 l 6946 6140 l 6995 6137 l 7043 6132 l
 7091 6126 l 7139 6120 l 7188 6112 l 7236 6104 l 7284 6095 l
 7331 6085 l 7378 6074 l 7425 6062 l 7471 6050 l 7516 6036 l
 7561 6022 l 7605 6007 l 7647 5992 l 7689 5976 l 7730 5959 l
 7770 5942 l 7809 5924 l 7846 5906 l 7882 5887 l 7917 5867 l
 7951 5847 l 7984 5827 l 8015 5806 l 8045 5785 l 8074 5764 l
 8101 5742 l 8128 5720 l 8153 5697 l 8177 5674 l 8200 5650 l
 8226 5621 l 8251 5591 l 8275 5560 l 8297 5528 l 8317 5496 l
 8336 5462 l 8354 5428 l 8371 5394 l 8386 5358 l 8399 5322 l
 8412 5286 l 8422 5249 l 8431 5212 l 8439 5175 l 8445 5138 l
 8450 5101 l 8453 5064 l 8455 5028 l 8455 4992 l 8453 4956 l
 8450 4922 l 8446 4888 l 8440 4856 l 8433 4824 l 8424 4794 l
 8415 4765 l 8404 4738 l 8391 4713 l 8378 4688 l 8363 4666 l
 8348 4645 l 8331 4626 l 8314 4609 l 8295 4594 l 8276 4580 l
 8256 4568 l 8235 4558 l 8213 4550 l 8189 4544 l 8165 4539 l
 8140 4536 l 8114 4535 l 8086 4536 l 8058 4538 l 8028 4542 l
 7997 4547 l 7964 4553 l 7931 4562 l 7896 4571 l 7860 4582 l
 7824 4594 l 7786 4607 l 7747 4622 l 7708 4637 l 7667 4653 l
 7626 4670 l 7585 4688 l 7543 4707 l 7501 4725 l 7458 4745 l
 7415 4764 l 7373 4784 l 7330 4804 l 7288 4823 l 7246 4843 l
 7204 4862 l 7163 4881 l 7122 4900 l 7082 4918 l 7042 4935 l
 7002 4952 l 6964 4968 l 6925 4983 l 6887 4998 l 6850 5012 l
 6813 5025 l 6773 5038 l 6735 5050 l 6696 5061 l 6657 5071 l
 6618 5081 l 6579 5089 l 6540 5096 l 6501 5103 l 6462 5108 l
 6423 5113 l 6384 5116 l 6346 5118 l 6307 5119 l 6269 5119 l
 6231 5118 l 6194 5116 l 6158 5112 l 6122 5107 l 6087 5101 l
 6053 5094 l 6020 5086 l 5988 5077 l 5957 5066 l 5927 5054 l
 5899 5042 l 5872 5028 l 5846 5013 l 5822 4997 l 5799 4981 l
 5777 4963 l 5757 4944 l 5738 4925 l 5720 4905 l 5704 4883 l
 5689 4861 l 5675 4838 l 5662 4813 l 5650 4787 l 5640 4761 l
 5630 4733 l 5621 4703 l 5613 4673 l 5606 4640 l 5600 4607 l
 5594 4572 l 5589 4536 l 5585 4499 l 5582 4460 l 5579 4420 l
 5577 4379 l 5575 4337 l 5575 4294 l 5574 4251 l 5574 4206 l
 5575 4161 l 5576 4116 l 5577 4071 l 5578 4025 l 5580 3979 l
 5582 3933 l 5584 3888 l 5586 3842 l 5588 3797 l 5590 3753 l
 5592 3709 l 5594 3665 l 5596 3622 l 5597 3579 l 5598 3537 l
 5599 3495 l 5600 3454 l 5600 3413 l 5600 3366 l 5599 3320 l
 5598 3274 l 5596 3228 l 5593 3182 l 5590 3136 l 5587 3089 l
 5582 3043 l 5578 2997 l 5572 2951 l 5566 2905 l 5560 2860 l
 5552 2816 l 5545 2772 l 5536 2730 l 5527 2689 l 5518 2649 l
 5508 2611 l 5498 2575 l 5487 2541 l 5476 2508 l 5465 2478 l
 5453 2450 l 5441 2424 l 5429 2401 l 5417 2379 l 5404 2360 l
 5391 2344 l 5378 2329 l 5365 2317 l 5351 2308 l 5338 2300 l
 5323 2295 l 5309 2292 l 5294 2291 l 5279 2292 l 5263 2295 l
 5246 2301 l 5230 2309 l 5212 2319 l 5195 2332 l 5176 2347 l
 5158 2364 l 5139 2383 l 5120 2405 l 5100 2428 l 5081 2454 l
 5061 2481 l 5041 2511 l 5021 2542 l 5002 2574 l 4982 2609 l
 4963 2644 l 4944 2680 l 4925 2718 l 4907 2756 l 4889 2795 l
 4871 2835 l 4854 2876 l 4838 2917 l 4822 2959 l 4806 3001 l
 4790 3044 l 4775 3088 l 4764 3121 l 4752 3156 l 4741 3191 l
 4730 3226 l 4720 3263 l 4709 3300 l 4699 3338 l 4689 3377 l
 4679 3417 l 4669 3457 l 4660 3499 l 4652 3541 l 4643 3584 l
 4635 3627 l 4628 3672 l 4621 3717 l 4615 3762 l 4609 3808 l
 4604 3854 l 4600 3901 l 4596 3948 l 4594 3995 l 4592 4042 l
 4590 4089 l 4590 4136 l 4591 4182 l 4592 4229 l 4594 4275 l
 4598 4320 l 4602 4366 l 4607 4410 l 4613 4454 l 4619 4498 l
 4627 4540 l 4636 4583 l 4646 4624 l 4656 4665 l 4668 4706 l
 4681 4746 l 4694 4785 l 4709 4824 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 306.00 152.73] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 3325 4163 m 3344 4170 l 3365 4176 l 3386 4181 l 3409 4184 l 3433 4187 l
 3457 4189 l 3483 4189 l 3509 4189 l 3535 4187 l 3561 4185 l
 3586 4181 l 3611 4176 l 3635 4171 l 3658 4165 l 3679 4158 l
 3699 4151 l 3717 4144 l 3733 4135 l 3746 4127 l 3758 4118 l
 3768 4109 l 3775 4100 l 3781 4090 l 3784 4079 l 3784 4067 l
 3782 4055 l 3778 4043 l 3771 4030 l 3762 4017 l 3751 4004 l
 3737 3990 l 3722 3977 l 3706 3963 l 3688 3950 l 3669 3937 l
 3649 3925 l 3629 3913 l 3608 3901 l 3587 3891 l 3566 3881 l
 3546 3871 l 3525 3863 l 3504 3854 l 3484 3846 l 3463 3839 l
 3441 3832 l 3420 3826 l 3398 3820 l 3377 3815 l 3355 3812 l
 3334 3809 l 3314 3807 l 3294 3806 l 3276 3806 l 3258 3807 l
 3242 3810 l 3227 3814 l 3214 3819 l 3202 3825 l 3191 3832 l
 3183 3840 l 3175 3850 l 3169 3860 l 3165 3871 l 3161 3883 l
 3159 3896 l 3158 3911 l 3158 3926 l 3159 3942 l 3162 3958 l
 3166 3976 l 3171 3993 l 3178 4011 l 3186 4028 l 3195 4046 l
 3205 4062 l 3217 4079 l 3230 4094 l 3243 4108 l 3258 4121 l
 3273 4133 l 3290 4144 l 3307 4154 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 210.53 253.73] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 5350 1425 m 5353 1437 l 5356 1448 l 5360 1457 l 5365 1466 l 5371 1475 l
 5377 1482 l 5383 1488 l 5390 1493 l 5398 1498 l 5406 1502 l
 5415 1504 l 5424 1506 l 5433 1507 l 5443 1506 l 5452 1505 l
 5462 1503 l 5472 1500 l 5481 1497 l 5491 1492 l 5500 1487 l
 5509 1481 l 5518 1475 l 5527 1468 l 5535 1460 l 5542 1452 l
 5549 1444 l 5556 1435 l 5563 1425 l 5571 1411 l 5578 1395 l
 5585 1379 l 5591 1361 l 5596 1342 l 5601 1322 l 5605 1301 l
 5608 1279 l 5611 1257 l 5613 1234 l 5614 1211 l 5615 1188 l
 5615 1165 l 5614 1143 l 5613 1121 l 5611 1100 l 5609 1080 l
 5606 1061 l 5603 1043 l 5600 1025 l 5598 1014 l 5595 1003 l
 5592 992 l 5590 981 l 5586 971 l 5583 961 l 5580 952 l
 5576 943 l 5572 934 l 5568 926 l 5564 918 l 5559 911 l
 5555 904 l 5550 899 l 5545 894 l 5540 889 l 5534 886 l
 5529 884 l 5524 882 l 5518 881 l 5513 881 l 5507 883 l
 5502 885 l 5496 888 l 5491 891 l 5485 896 l 5479 902 l
 5474 909 l 5468 916 l 5463 925 l 5455 938 l 5447 954 l
 5438 971 l 5430 990 l 5422 1011 l 5413 1034 l 5405 1058 l
 5397 1084 l 5389 1111 l 5382 1138 l 5375 1166 l 5368 1194 l
 5362 1222 l 5357 1249 l 5353 1276 l 5350 1302 l 5347 1326 l
 5346 1349 l 5345 1371 l 5346 1390 l 5347 1409 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 356.33 58.73] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 2450 2088 m 2459 2093 l 2469 2097 l 2480 2099 l 2492 2100 l 2505 2099 l
 2518 2097 l 2532 2094 l 2545 2090 l 2558 2084 l 2570 2078 l
 2580 2072 l 2590 2065 l 2598 2058 l 2605 2051 l 2609 2044 l
 2613 2038 l 2614 2029 l 2612 2021 l 2607 2013 l 2600 2004 l
 2590 1996 l 2579 1987 l 2566 1979 l 2552 1971 l 2538 1962 l
 2525 1954 l 2512 1946 l 2500 1938 l 2492 1931 l 2484 1924 l
 2476 1917 l 2469 1910 l 2462 1903 l 2455 1897 l 2449 1891 l
 2443 1885 l 2437 1881 l 2432 1878 l 2428 1876 l 2424 1875 l
 2420 1876 l 2417 1878 l 2415 1882 l 2413 1888 l 2410 1896 l
 2408 1907 l 2407 1920 l 2406 1935 l 2406 1951 l 2407 1969 l
 2409 1988 l 2411 2006 l 2415 2024 l 2420 2040 l 2426 2055 l
 2433 2068 l 2441 2079 l
 cp gs /PC [[1.00 0.84 0.00] [1.00 0.84 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 160.40 125.00] PATmp PATsp ef gr PATusp gs col31 s gr 
% Polyline
n 2013 4675 m 2028 4679 l 2045 4682 l 2063 4683 l 2082 4684 l 2102 4684 l
 2122 4683 l 2142 4682 l 2161 4679 l 2179 4675 l 2195 4671 l
 2209 4667 l 2221 4661 l 2229 4656 l 2235 4650 l 2238 4644 l
 2238 4638 l 2234 4631 l 2227 4624 l 2217 4617 l 2203 4610 l
 2188 4602 l 2170 4595 l 2150 4588 l 2129 4582 l 2107 4576 l
 2085 4571 l 2063 4567 l 2042 4564 l 2023 4562 l 2005 4561 l
 1989 4561 l 1975 4563 l 1968 4564 l 1962 4566 l 1957 4568 l
 1952 4570 l 1948 4573 l 1944 4576 l 1941 4579 l 1938 4583 l
 1936 4587 l 1934 4591 l 1933 4595 l 1933 4600 l 1933 4604 l
 1934 4609 l 1935 4614 l 1937 4619 l 1939 4624 l 1942 4629 l
 1946 4634 l 1950 4639 l 1955 4643 l 1959 4648 l 1965 4652 l
 1971 4656 l 1977 4660 l 1983 4664 l 1990 4667 l 1997 4670 l
 2005 4673 l
 cp gs /PC [[1.00 0.84 0.00] [1.00 0.84 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 128.87 304.07] PATmp PATsp ef gr PATusp gs col31 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 Black Black 797 3075 a Fi(Blue:)93 b(mask,)67 b(Gold:)93
b(ma)-6 b(rk)g(ers)737 3351 y
 18945146 13640500 0 0 34469642 24997068 startTexFig
 737 3351 a
%%BeginDocument: binrecon.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 380 moveto 0 0 lineto 524 0 lineto 524 380 lineto closepath clip newpath
1.0 379.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 0 0 m 8700 0 l 8700 6300 l 0 6300 l
 cp gs col0 s gr 
% Polyline
n 1613 2188 m 1627 2213 l 1644 2238 l 1663 2263 l 1684 2288 l 1706 2313 l
 1731 2337 l 1757 2362 l 1785 2386 l 1815 2410 l 1847 2434 l
 1880 2458 l 1915 2482 l 1952 2505 l 1990 2528 l 2030 2550 l
 2071 2572 l 2113 2593 l 2157 2614 l 2201 2634 l 2246 2653 l
 2292 2672 l 2338 2689 l 2385 2706 l 2431 2722 l 2478 2737 l
 2525 2750 l 2572 2763 l 2619 2774 l 2665 2785 l 2710 2794 l
 2755 2802 l 2799 2809 l 2843 2815 l 2885 2819 l 2927 2823 l
 2967 2825 l 3006 2826 l 3045 2826 l 3082 2824 l 3118 2821 l
 3153 2818 l 3188 2813 l 3224 2805 l 3259 2797 l 3294 2787 l
 3327 2775 l 3359 2762 l 3390 2747 l 3420 2731 l 3450 2713 l
 3478 2694 l 3505 2673 l 3531 2651 l 3556 2627 l 3580 2602 l
 3603 2576 l 3624 2548 l 3644 2520 l 3663 2490 l 3680 2460 l
 3696 2428 l 3710 2396 l 3723 2363 l 3734 2330 l 3744 2296 l
 3753 2262 l 3760 2228 l 3765 2194 l 3769 2159 l 3772 2125 l
 3773 2091 l 3773 2058 l 3771 2024 l 3768 1991 l 3764 1958 l
 3759 1926 l 3752 1894 l 3744 1862 l 3735 1831 l 3725 1800 l
 3713 1768 l 3699 1736 l 3685 1704 l 3668 1672 l 3651 1640 l
 3632 1608 l 3612 1576 l 3590 1545 l 3568 1513 l 3544 1482 l
 3518 1450 l 3492 1419 l 3465 1388 l 3437 1357 l 3408 1327 l
 3378 1298 l 3348 1268 l 3317 1240 l 3286 1212 l 3254 1185 l
 3222 1159 l 3191 1133 l 3159 1109 l 3128 1086 l 3097 1063 l
 3067 1042 l 3037 1022 l 3008 1003 l 2979 985 l 2951 968 l
 2924 952 l 2898 937 l 2872 923 l 2847 910 l 2823 898 l
 2800 888 l 2773 876 l 2747 865 l 2721 855 l 2696 847 l
 2672 840 l 2648 834 l 2624 829 l 2601 826 l 2578 824 l
 2555 824 l 2532 825 l 2509 827 l 2486 831 l 2463 836 l
 2441 843 l 2419 851 l 2396 860 l 2374 871 l 2352 883 l
 2330 897 l 2307 911 l 2285 927 l 2263 943 l 2241 961 l
 2218 980 l 2195 999 l 2172 1020 l 2149 1041 l 2125 1064 l
 2100 1088 l 2079 1108 l 2057 1129 l 2034 1151 l 2011 1174 l
 1988 1198 l 1964 1223 l 1939 1249 l 1915 1276 l 1890 1304 l
 1865 1333 l 1840 1363 l 1816 1394 l 1792 1425 l 1768 1457 l
 1745 1490 l 1722 1524 l 1701 1558 l 1680 1592 l 1661 1627 l
 1643 1662 l 1626 1697 l 1611 1732 l 1598 1767 l 1587 1802 l
 1577 1836 l 1569 1870 l 1564 1904 l 1560 1938 l 1559 1971 l
 1559 2003 l 1562 2035 l 1568 2066 l 1575 2097 l 1585 2128 l
 1598 2158 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 103.93 54.93] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 1688 4788 m 1702 4812 l 1718 4837 l 1736 4862 l 1754 4886 l 1775 4911 l
 1796 4936 l 1819 4960 l 1844 4985 l 1869 5009 l 1896 5033 l
 1924 5057 l 1953 5080 l 1983 5103 l 2014 5125 l 2045 5146 l
 2076 5166 l 2108 5185 l 2140 5203 l 2173 5219 l 2204 5235 l
 2236 5249 l 2267 5261 l 2298 5272 l 2328 5282 l 2357 5290 l
 2386 5296 l 2413 5301 l 2440 5304 l 2466 5305 l 2491 5305 l
 2515 5303 l 2538 5300 l 2563 5294 l 2587 5286 l 2610 5276 l
 2633 5263 l 2654 5249 l 2675 5232 l 2695 5214 l 2714 5194 l
 2731 5172 l 2748 5149 l 2764 5124 l 2778 5098 l 2791 5071 l
 2803 5043 l 2814 5015 l 2823 4987 l 2830 4958 l 2837 4929 l
 2841 4901 l 2845 4874 l 2847 4847 l 2848 4820 l 2847 4795 l
 2845 4771 l 2842 4748 l 2837 4727 l 2832 4707 l 2825 4688 l
 2815 4665 l 2802 4644 l 2788 4625 l 2772 4607 l 2754 4591 l
 2734 4575 l 2713 4561 l 2690 4547 l 2666 4534 l 2641 4522 l
 2615 4510 l 2588 4499 l 2561 4489 l 2535 4478 l 2509 4468 l
 2483 4457 l 2458 4447 l 2434 4436 l 2411 4425 l 2390 4413 l
 2369 4401 l 2350 4388 l 2332 4373 l 2314 4357 l 2298 4340 l
 2282 4321 l 2266 4301 l 2252 4280 l 2237 4258 l 2223 4236 l
 2210 4212 l 2196 4188 l 2184 4164 l 2171 4140 l 2159 4117 l
 2148 4094 l 2137 4071 l 2126 4050 l 2115 4030 l 2105 4011 l
 2094 3994 l 2084 3978 l 2073 3963 l 2063 3950 l 2053 3940 l
 2043 3931 l 2033 3923 l 2023 3915 l 2012 3909 l 2000 3904 l
 1988 3900 l 1976 3897 l 1963 3895 l 1950 3894 l 1937 3894 l
 1923 3896 l 1909 3899 l 1895 3903 l 1881 3908 l 1867 3915 l
 1853 3923 l 1839 3931 l 1826 3941 l 1812 3952 l 1799 3964 l
 1786 3977 l 1774 3990 l 1762 4005 l 1749 4021 l 1738 4038 l
 1726 4054 l 1716 4071 l 1705 4090 l 1694 4110 l 1684 4130 l
 1674 4152 l 1664 4176 l 1654 4200 l 1646 4226 l 1637 4252 l
 1630 4280 l 1623 4308 l 1618 4337 l 1613 4367 l 1610 4398 l
 1607 4428 l 1606 4459 l 1606 4490 l 1608 4521 l 1611 4552 l
 1615 4583 l 1621 4613 l 1628 4643 l 1637 4673 l 1647 4702 l
 1659 4731 l 1672 4759 l
 cp gs /PC [[0.00 0.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 107.07 259.60] PATmp PATsp ef gr PATusp gs col1 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 -80 5561 a Fi(Reconstruction)69 b(of)g(blue)g(mask)e(from)h(gold)i(ma)
-6 b(rk)g(ers)p Black 3751 6118 a Fh(16)p Black eop
%%Page: 17 18
17 17 bop Black Black Black Black -198 937 a Fj(Bina)-8
b(ry)99 b(Reconstruction)h(-)f(alternative)1243 1170
y(fo)-8 b(rmulation)1337 1659 y
 9472573 14871933 0 0 17169039 27036303 startTexFig
 1337 1659 a
%%BeginDocument: geodesic.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 411 moveto 0 0 lineto 261 0 lineto 261 411 lineto closepath clip newpath
-114.0 426.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 2000 1875 m 2015 1899 l 2033 1924 l 2051 1948 l 2071 1972 l 2093 1996 l
 2116 2021 l 2141 2045 l 2167 2069 l 2194 2094 l 2224 2119 l
 2254 2144 l 2286 2169 l 2319 2194 l 2354 2220 l 2390 2245 l
 2427 2271 l 2464 2297 l 2503 2323 l 2543 2349 l 2583 2375 l
 2624 2402 l 2665 2428 l 2707 2454 l 2749 2481 l 2791 2507 l
 2833 2533 l 2875 2559 l 2917 2585 l 2958 2611 l 2999 2636 l
 3039 2662 l 3079 2687 l 3119 2713 l 3157 2738 l 3195 2763 l
 3232 2788 l 3268 2813 l 3304 2837 l 3338 2862 l 3372 2887 l
 3405 2912 l 3438 2938 l 3471 2964 l 3503 2991 l 3535 3019 l
 3566 3047 l 3596 3076 l 3626 3105 l 3655 3134 l 3683 3165 l
 3711 3195 l 3738 3227 l 3764 3259 l 3789 3291 l 3814 3324 l
 3837 3357 l 3859 3391 l 3880 3425 l 3900 3460 l 3919 3494 l
 3937 3529 l 3953 3564 l 3968 3599 l 3981 3634 l 3993 3669 l
 4003 3704 l 4012 3738 l 4020 3772 l 4026 3806 l 4030 3839 l
 4033 3872 l 4034 3904 l 4033 3936 l 4031 3967 l 4028 3998 l
 4023 4028 l 4017 4058 l 4009 4087 l 4000 4116 l 3989 4144 l
 3976 4172 l 3963 4200 l 3947 4227 l 3930 4255 l 3912 4282 l
 3892 4309 l 3870 4336 l 3847 4363 l 3823 4391 l 3797 4418 l
 3769 4446 l 3741 4474 l 3710 4503 l 3679 4531 l 3647 4560 l
 3613 4589 l 3579 4618 l 3543 4647 l 3507 4677 l 3470 4706 l
 3433 4736 l 3395 4766 l 3357 4796 l 3319 4826 l 3281 4856 l
 3243 4885 l 3206 4915 l 3168 4945 l 3132 4975 l 3096 5004 l
 3060 5033 l 3026 5062 l 2992 5091 l 2960 5120 l 2928 5149 l
 2897 5178 l 2868 5206 l 2839 5235 l 2812 5263 l 2786 5292 l
 2761 5321 l 2738 5350 l 2714 5381 l 2691 5412 l 2670 5444 l
 2649 5477 l 2630 5510 l 2612 5543 l 2594 5578 l 2578 5613 l
 2563 5648 l 2549 5685 l 2536 5721 l 2524 5758 l 2513 5796 l
 2504 5834 l 2495 5872 l 2488 5911 l 2482 5950 l 2477 5988 l
 2473 6027 l 2470 6066 l 2468 6104 l 2468 6142 l 2469 6179 l
 2470 6216 l 2473 6252 l 2477 6288 l 2482 6323 l 2487 6357 l
 2494 6390 l 2501 6422 l 2509 6454 l 2518 6484 l 2528 6514 l
 2539 6543 l 2550 6571 l 2562 6598 l 2574 6624 l 2588 6650 l
 2602 6676 l 2618 6702 l 2634 6727 l 2652 6752 l 2670 6776 l
 2689 6799 l 2710 6822 l 2731 6844 l 2754 6865 l 2778 6886 l
 2803 6906 l 2829 6925 l 2856 6943 l 2884 6961 l 2913 6977 l
 2943 6993 l 2974 7007 l 3006 7020 l 3038 7032 l 3072 7043 l
 3105 7052 l 3140 7060 l 3175 7067 l 3210 7072 l 3246 7077 l
 3281 7080 l 3317 7081 l 3354 7081 l 3390 7080 l 3427 7078 l
 3463 7074 l 3500 7069 l 3537 7063 l 3574 7056 l 3612 7047 l
 3650 7038 l 3681 7028 l 3713 7019 l 3746 7008 l 3778 6996 l
 3812 6983 l 3846 6969 l 3880 6954 l 3916 6938 l 3952 6921 l
 3988 6903 l 4025 6884 l 4063 6863 l 4102 6842 l 4141 6819 l
 4180 6795 l 4220 6770 l 4261 6744 l 4302 6717 l 4343 6688 l
 4384 6659 l 4426 6628 l 4468 6597 l 4510 6565 l 4551 6532 l
 4593 6498 l 4635 6463 l 4676 6427 l 4717 6391 l 4758 6355 l
 4799 6317 l 4839 6279 l 4878 6241 l 4917 6202 l 4956 6163 l
 4994 6124 l 5031 6084 l 5068 6043 l 5104 6003 l 5140 5962 l
 5175 5920 l 5210 5879 l 5245 5836 l 5279 5793 l 5313 5750 l
 5342 5711 l 5371 5672 l 5400 5632 l 5430 5591 l 5459 5550 l
 5487 5507 l 5516 5464 l 5545 5420 l 5573 5376 l 5602 5330 l
 5630 5283 l 5658 5236 l 5686 5188 l 5714 5139 l 5741 5089 l
 5768 5038 l 5794 4987 l 5821 4935 l 5846 4882 l 5872 4829 l
 5896 4775 l 5920 4721 l 5944 4666 l 5966 4611 l 5988 4556 l
 6010 4501 l 6030 4445 l 6049 4390 l 6068 4334 l 6086 4279 l
 6102 4224 l 6118 4169 l 6132 4114 l 6146 4060 l 6158 4006 l
 6170 3953 l 6180 3900 l 6189 3847 l 6197 3796 l 6204 3744 l
 6210 3694 l 6215 3644 l 6219 3594 l 6221 3546 l 6222 3497 l
 6223 3449 l 6222 3402 l 6220 3355 l 6217 3309 l 6213 3263 l
 6207 3215 l 6200 3167 l 6192 3119 l 6183 3072 l 6172 3024 l
 6160 2977 l 6147 2929 l 6133 2881 l 6117 2833 l 6100 2785 l
 6082 2737 l 6063 2689 l 6043 2640 l 6021 2592 l 5999 2543 l
 5975 2495 l 5950 2446 l 5925 2398 l 5898 2350 l 5870 2302 l
 5842 2254 l 5813 2206 l 5783 2159 l 5752 2113 l 5721 2067 l
 5689 2021 l 5657 1976 l 5624 1932 l 5591 1888 l 5558 1845 l
 5524 1803 l 5491 1762 l 5457 1722 l 5423 1683 l 5390 1644 l
 5357 1607 l 5323 1570 l 5290 1534 l 5257 1499 l 5225 1466 l
 5192 1433 l 5161 1401 l 5129 1369 l 5097 1339 l 5066 1310 l
 5036 1281 l 5005 1253 l 4975 1225 l 4937 1191 l 4900 1158 l
 4862 1126 l 4825 1094 l 4788 1063 l 4750 1032 l 4713 1002 l
 4675 973 l 4638 944 l 4600 915 l 4563 887 l 4525 860 l
 4487 833 l 4450 807 l 4412 781 l 4375 757 l 4338 732 l
 4302 709 l 4265 686 l 4229 664 l 4194 643 l 4159 622 l
 4125 603 l 4091 584 l 4059 566 l 4027 549 l 3995 533 l
 3965 517 l 3935 502 l 3906 489 l 3878 475 l 3850 463 l
 3824 451 l 3798 440 l 3773 429 l 3748 419 l 3724 409 l
 3700 400 l 3666 387 l 3633 375 l 3599 364 l 3567 353 l
 3534 343 l 3501 333 l 3469 324 l 3437 316 l 3404 309 l
 3372 302 l 3340 296 l 3309 291 l 3278 287 l 3248 283 l
 3218 281 l 3189 279 l 3160 278 l 3133 277 l 3106 278 l
 3080 279 l 3055 281 l 3030 284 l 3006 287 l 2983 291 l
 2960 295 l 2938 300 l 2917 305 l 2896 311 l 2875 317 l
 2853 324 l 2832 332 l 2810 341 l 2788 351 l 2765 361 l
 2742 373 l 2718 385 l 2694 399 l 2670 413 l 2646 429 l
 2622 445 l 2597 463 l 2572 481 l 2548 501 l 2523 521 l
 2499 542 l 2475 563 l 2451 586 l 2427 609 l 2403 633 l
 2380 657 l 2357 682 l 2334 708 l 2311 735 l 2288 763 l
 2268 786 l 2249 811 l 2229 836 l 2209 862 l 2190 890 l
 2170 918 l 2150 947 l 2130 977 l 2111 1009 l 2092 1041 l
 2073 1074 l 2055 1108 l 2037 1143 l 2021 1178 l 2005 1214 l
 1990 1250 l 1977 1287 l 1964 1324 l 1953 1361 l 1944 1398 l
 1936 1435 l 1930 1472 l 1925 1509 l 1922 1545 l 1921 1581 l
 1922 1616 l 1925 1650 l 1929 1684 l 1936 1717 l 1945 1750 l
 1955 1782 l 1968 1814 l 1983 1844 l
 cp gs col1 1.00 shd ef gr gs col1 s gr 
% Polyline
n 3450 5700 m
 3750 5700 l gs col3 s gr 
% Polyline
n 3600 5550 m
 3600 5850 l gs col3 s gr 
% Polyline
n 2700 1350 m
 2700 1650 l gs col3 s gr 
% Polyline
30.000 slw
n 3675 5700 m 4050 3975 l 4035 3720 l 3900 3450 l
 2700 1500 l gs col6 s gr 
/Times-Roman ff 225.00 scf sf
4725 6750 m
gs 1 -1 sc (A) col0 sh gr
% Polyline
7.500 slw
n 2550 1500 m
 2850 1500 l gs col3 s gr 
/Times-Roman ff 225.00 scf sf
2775 1275 m
gs 1 -1 sc (P) col2 sh gr
/Times-Roman ff 225.00 scf sf
3000 5850 m
gs 1 -1 sc (Q) col2 sh gr
$F2psEnd
rs
%%EndDocument

 endTexFig
 Black Black -159 4024 a Fi(The)69 b(geo)6 b(desic)69
b(distance)f Fg(d)1884 4062 y Ff(A)1998 4024 y Fi(\()p
Fg(P)5 b(;)30 b(Q)p Fi(\))69 b(b)6 b(et)-6 b(w)g(een)69
b Fg(P)93 b Fi(and)69 b Fg(Q)-239 4257 y Fi(within)g
Fg(A)f Fi(is)h(the)g(length)g(of)g(the)g(sho)-6 b(rtest)69
b(path)f(b)6 b(et)-6 b(w)g(een)593 4489 y Fg(P)93 b Fi(and)70
b Fg(Q)e Fi(that)g(is)h(contained)g(in)g Fg(A)p Fi(.)-273
4971 y(F)-6 b(o)g(r)70 b(digitized)f(images,)e(the)i(sho)-6
b(rtest)69 b(path)f(is)h(dep)6 b(endent)517 5203 y(of)70
b(the)e(t)-6 b(yp)6 b(e)69 b(of)g(connectiveit)-6 b(y)68
b(used.)p Black 3751 6118 a Fh(17)p Black eop
%%Page: 18 19
18 18 bop Black Black Black Black 96 254 a Fj(Geo)8 b(desic)100
b(Dilation)f(and)g(Erosion)p Black Black -240 677 a Fi(The)69
b(geo)6 b(desic)69 b(dilation)f(of)i(size)e Fg(n)49 b
Fe(\025)f Fi(0)69 b(of)g(B)h(within)e(A)h(is)617 1427
y Fg(\016)701 1342 y Fb(\()p Ff(n)p Fb(\))695 1487 y
Ff(A)928 1427 y Fi(\()p Fg(B)8 b Fi(\))50 b(=)f Fe(f)p
Fg(p)g Fe(2)f Fg(A)h Fe(j)f Fg(d)2246 1464 y Ff(A)2360
1427 y Fi(\()p Fg(p;)30 b(B)8 b Fi(\))50 b Fe(\024)e
Fg(n)p Fe(g)-16 1921 y Fi(This)69 b(can)g(b)6 b(e)69
b(implemented)d(b)-6 b(y)69 b(a)f(no)-6 b(rmal)68 b(dilation)810
2136 y(follo)-6 b(w)g(ed)70 b(b)-6 b(y)69 b(an)g(intersection)1024
2885 y Fg(\016)1108 2800 y Fb(\(1\))1102 2945 y Ff(A)1332
2885 y Fi(\()p Fg(B)8 b Fi(\))50 b(=)e(\()p Fg(B)g Fe(\010)39
b Fg(S)9 b Fi(\))39 b Fe(\\)h Fg(A)30 3379 y Fi(where)68
b Fg(S)78 b Fi(is)69 b(a)g(unit)g(squa)-6 b(re)69 b(structuring)g
(element.)-85 3803 y(F)-6 b(urthermo)g(re,)68 b(the)h(dilation)f(of)h
(a)g(given)g(size)g(can)f(b)6 b(e)-111 4017 y(obtained)69
b(b)-6 b(y)69 b(iteration)f(of)h(the)g(elementa)-6 b(ry)66
b(geo)6 b(desic)1627 4232 y(dilation)606 4982 y Fg(\016)690
4896 y Fb(\()p Ff(n)p Fb(\))684 5042 y Ff(A)917 4982
y Fi(\()p Fg(B)i Fi(\))50 b(=)f Fg(\016)1561 4896 y Fb(\(1\))1555
5042 y Ff(A)1824 4982 y Fe(\016)38 b Fg(\016)2034 4896
y Fb(\(1\))2028 5042 y Ff(A)2297 4982 y Fe(\016)h(\001)29
b(\001)g(\001)g Fg(\016)2742 4896 y Fb(\(1\))2736 5042
y Ff(A)1477 5084 y Fd(|)p 1542 5084 616 18 v 616 w({z)p
2288 5084 V 616 w(})1909 5248 y Fi(n)69 b(times)2966
4982 y(\()p Fg(B)8 b Fi(\))-146 5672 y(The)69 b(geo)6
b(desic)70 b(erosion)f(is)g(tricially)e(equal)i(to)g(classical)991
5887 y(mo)-6 b(rphological)68 b(erosion.)p Black 3751
6118 a Fh(18)p Black eop
%%Page: 19 20
19 19 bop Black Black Black Black 587 1937 a Fj(Bina)-8
b(ry)99 b(Reconstruction)p Black Black -165 2419 a Fi(Using)70
b(geo)6 b(desic)69 b(dilations)f(the)h(bina)-6 b(ry)69
b(reconstruction)1019 2651 y(ma)-6 b(y)68 b(b)6 b(e)68
b(fo)-6 b(rmulated)68 b(as)1137 3490 y Fg(\032)1227 3527
y Ff(I)1306 3490 y Fi(\()p Fg(J)16 b Fi(\))48 b(=)1901
3348 y Fd([)1836 3679 y Ff(n)p Fc(\025)p Fb(1)2154 3490
y Fg(\016)2238 3404 y Fb(\()p Ff(n)p Fb(\))2232 3550
y Ff(I)2465 3490 y Fi(\()p Fg(J)16 b Fi(\))1002 4192
y(\(iterate)68 b(until)g(stabilit)-6 b(y\))p Black 3751
6118 a Fh(19)p Black eop
%%Page: 20 21
20 20 bop Black Black Black Black 272 808 a Fj(Reconstruction)99
b(b)-8 b(y)99 b(Op)8 b(ening)137 1094 y
 28417720 29838605 0 0 27365212 28746629 startTexFig
 137 1094 a
%%BeginDocument: binrecope.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 437 moveto 0 0 lineto 416 0 lineto 416 437 lineto closepath clip newpath
-35.0 472.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 7500 5700 m 4500 5700 l 4500 5400 l 7500 5400 l 7500 5100 l 4500 5100 l
 4500 4800 l 7500 4800 l 7500 4500 l
 4500 4500 l gs col0 s gr 
% Polyline
n 3600 5700 m 600 5700 l 600 5400 l 3600 5400 l 3600 5100 l 600 5100 l
 600 4800 l 3600 4800 l 3600 4500 l
 600 4500 l gs col0 s gr 
% Polyline
n 4500 4500 m 4500 7500 l 4800 7500 l 4800 4500 l 5100 4500 l 5100 7500 l
 5400 7500 l 5400 4500 l 5700 4500 l 5700 7500 l 6000 7500 l
 6000 4500 l 6300 4500 l 6300 7500 l 6600 7500 l 6600 4500 l
 6900 4500 l 6900 7500 l 7200 7500 l 7200 4500 l 7500 4500 l
 7500 7500 l 4500 7500 l 4500 7200 l 4500 7500 l 7500 7500 l
 4500 7500 l 4500 7200 l 7500 7200 l 7500 6900 l 4500 6900 l
 4500 6600 l 7500 6600 l 7500 6300 l 4500 6300 l 4500 6000 l

 7500 6000 l gs col0 s gr 
% Polyline
n 600 600 m 600 3600 l 900 3600 l 900 600 l 1200 600 l 1200 3600 l
 1500 3600 l 1500 600 l 1800 600 l 1800 3600 l 2100 3600 l
 2100 600 l 2400 600 l 2400 3600 l 2700 3600 l 2700 600 l
 3000 600 l 3000 3600 l 3300 3600 l 3300 600 l 3600 600 l
 3600 3600 l 600 3600 l 600 3300 l 600 3600 l 3600 3600 l
 600 3600 l 600 3300 l 3600 3300 l 3600 3000 l 600 3000 l
 600 2700 l 3600 2700 l 3600 2400 l 600 2400 l 600 2100 l

 3600 2100 l gs col0 s gr 
% Polyline
n 600 4500 m 600 7500 l 900 7500 l 900 4500 l 1200 4500 l 1200 7500 l
 1500 7500 l 1500 4500 l 1800 4500 l 1800 7500 l 2100 7500 l
 2100 4500 l 2400 4500 l 2400 7500 l 2700 7500 l 2700 4500 l
 3000 4500 l 3000 7500 l 3300 7500 l 3300 4500 l 3600 4500 l
 3600 7500 l 600 7500 l 600 7200 l 600 7500 l 3600 7500 l
 600 7500 l 600 7200 l 3600 7200 l 3600 6900 l 600 6900 l
 600 6600 l 3600 6600 l 3600 6300 l 600 6300 l 600 6000 l

 3600 6000 l gs col0 s gr 
% Polyline
n 3600 1800 m 600 1800 l 600 1500 l 3600 1500 l 3600 1200 l 600 1200 l
 600 900 l 3600 900 l 3600 600 l
 600 600 l gs col0 s gr 
% Polyline
n 7500 1800 m 4500 1800 l 4500 1500 l 7500 1500 l 7500 1200 l 4500 1200 l
 4500 900 l 7500 900 l 7500 600 l
 4500 600 l gs col0 s gr 
% Polyline
n 4500 600 m 4500 3600 l 4800 3600 l 4800 600 l 5100 600 l 5100 3600 l
 5400 3600 l 5400 600 l 5700 600 l 5700 3600 l 6000 3600 l
 6000 600 l 6300 600 l 6300 3600 l 6600 3600 l 6600 600 l
 6900 600 l 6900 3600 l 7200 3600 l 7200 600 l 7500 600 l
 7500 3600 l 4500 3600 l 4500 3300 l 4500 3600 l 7500 3600 l
 4500 3600 l 4500 3300 l 7500 3300 l 7500 3000 l 4500 3000 l
 4500 2700 l 7500 2700 l 7500 2400 l 4500 2400 l 4500 2100 l

 7500 2100 l gs col0 s gr 
% Polyline
n 1800 2700 m 1800 3000 l 2100 3000 l 2100 3300 l 3000 3300 l 3000 3000 l
 2700 3000 l 2700 2700 l 3000 2700 l 3000 2400 l 2700 2400 l
 2700 2100 l 2400 2100 l 2400 2400 l 2100 2400 l 2100 2700 l

 1800 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 120.00 140.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 2100 900 m 2100 1500 l 3000 1500 l 3000 900 l 2700 900 l 2700 600 l
 2400 600 l 2400 900 l
 2100 900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 140.00 40.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 600 2400 m 900 2400 l 900 3300 l 600 3300 l
 600 2400 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 40.00 160.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 3900 3600 m 3900 3900 l 3600 3900 l 3600 4200 l 3900 4200 l 3900 4500 l
 4200 4500 l 4200 4200 l 4500 4200 l 4500 3900 l 4200 3900 l
 4200 3600 l
 3900 3600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 240.00 240.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 6300 900 m 6300 1200 l 6600 1200 l 6600 900 l
 6300 900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 420.00 60.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 6296 900 m 6304 900 l gs col4 s gr
% Polyline
n 900 900 m 900 1200 l 1200 1200 l 1200 1500 l 1500 1500 l 1500 900 l

 900 900 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 60.00 60.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 6600 2400 m 6600 2700 l 6300 2700 l 6300 2400 l
 6600 2400 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 420.00 160.00] PATmp PATsp ef gr PATusp gs col4 s gr 
/Times-Roman ff 210.00 scf sf
5325 7800 m
gs 1 -1 sc (Reconstruction) col0 sh gr
% Polyline
n 6000 2700 m 6300 2700 l 6300 3000 l
 6000 3000 l gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 400.00 180.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 2400 4500 m 2400 4800 l 2100 4800 l 2100 5100 l 2400 5100 l 2400 5400 l
 2700 5400 l 2700 5100 l 3000 5100 l 3000 4800 l 2700 4800 l

 2700 4500 l gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 140.00 300.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 2400 6000 m 2400 6300 l 2100 6300 l 2100 6600 l 2400 6600 l 2400 6900 l
 2700 6900 l 2700 6600 l 3000 6600 l 3000 6300 l 2700 6300 l

 2700 6000 l gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 140.00 400.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 2100 6300 m 2100 6600 l 1800 6600 l 1800 6900 l 2100 6900 l 2100 7200 l
 2400 7200 l 2400 6900 l 2700 6900 l 2700 6600 l 2400 6600 l

 2400 6300 l gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 120.00 420.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 6000 4800 m 6000 5400 l 6900 5400 l 6900 4800 l 6600 4800 l 6600 4500 l
 6300 4500 l 6300 4800 l
 6000 4800 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 400.00 300.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 5700 6600 m 5700 6900 l 6000 6900 l 6000 7200 l 6900 7200 l 6900 6900 l
 6600 6900 l 6600 6600 l 6900 6600 l 6900 6300 l 6600 6300 l
 6600 6000 l 6300 6000 l 6300 6300 l 6000 6300 l 6000 6600 l

 5700 6600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 380.00 400.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
n 6900 6600 m 6900 6900 l 7200 6900 l 7200 6600 l
 6900 6600 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 460.00 440.00] PATmp PATsp ef gr PATusp gs col4 s gr 
% Polyline
15.000 slw
n 3975 3975 m
 4125 4125 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 265.00 265.00] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
n 3975 4125 m
 4125 3975 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 1.00]] def
15.00 15.00 sc P1 [16 0 0 -8 265.00 265.00] PATmp PATsp ef gr PATusp gs col1 s gr 
% Polyline
7.500 slw
n 3000 2700 m 3000 3000 l 3300 3000 l 3300 2700 l
 3000 2700 l  cp gs /PC [[1.00 0.00 0.00] [1.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 200.00 180.00] PATmp PATsp ef gr PATusp gs col4 s gr 
/Times-Roman ff 210.00 scf sf
1275 3900 m
gs 1 -1 sc (Original) col0 sh gr
/Times-Roman ff 210.00 scf sf
5400 3900 m
gs 1 -1 sc (Erosion) col0 sh gr
/Times-Roman ff 210.00 scf sf
1275 7800 m
gs 1 -1 sc (Opening) col0 sh gr
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 Black Black Black 3751 6118 a Fh(20)p Black eop
%%Page: 21 22
21 21 bop Black Black Black Black 400 724 a Fj(Greyscale)101
b(Reconstruction)p Black Black -133 1205 a Fi(De\014ne)69
b(the)f(elementa)-6 b(ry)67 b(geo)6 b(desic)69 b(dilation)f(of)i(image)
1720 1438 y Fg(J)64 b Fe(\024)48 b Fg(I)1062 2276 y(\016)1146
2191 y Fb(\(1\))1140 2336 y Ff(I)1370 2276 y Fi(\()p
Fg(J)16 b Fi(\))49 b(=)f(\()p Fg(J)55 b Fe(\010)39 b
Fg(B)8 b Fi(\))40 b Fe(^)f Fg(I)-24 2841 y Fe(^)68 b
Fi(denotes)i(p)6 b(oint)-6 b(wise)69 b(minimum,)c(i.e.)93
b(w)-6 b(e)68 b(dilate)g(J)200 3073 y(conditional)i(on)f(the)g
(dilation)f(b)6 b(eing)69 b(b)6 b(elo)-6 b(w)69 b(I.)322
3555 y(De\014ne)f(the)h(greyscale)f(reconstruction)h(as)1007
4393 y Fg(\032)1097 4430 y Ff(I)1175 4393 y Fi(\()p Fg(J)16
b Fi(\))133 b(=)1938 4251 y Fd(^)1874 4583 y Ff(n)p Fc(\025)p
Fb(1)2192 4393 y Fg(\016)2276 4308 y Fb(\()p Ff(n)p Fb(\))2270
4453 y Ff(I)2502 4393 y Fi(\()p Fg(J)16 b Fi(\))1580
4853 y(=)197 b(lim)1874 4939 y Ff(n)p Fc(!1)2284 4853
y Fg(\016)2368 4767 y Fb(\()p Ff(n)p Fb(\))2362 4913
y Ff(I)2595 4853 y Fi(\()p Fg(J)16 b Fi(\))672 5417 y(Because)68
b(dilation)h(is)g(increasing.)p Black 3751 6118 a Fh(21)p
Black eop
%%Page: 22 23
22 22 bop Black Black Black Black 690 1716 a Fj(Dual)99
b(Reconstruction)p Black Black -202 2198 a Fi(The)69
b(dual)g(reconstruction)g(of)g(mask)e Fg(I)82 b Fi(from)68
b(ma)-6 b(rk)g(er)67 b Fg(J)16 b Fi(,)1720 2430 y Fg(I)62
b Fe(\024)48 b Fg(J)1144 3269 y(\032)1234 3200 y Fc(\003)1234
3317 y Ff(I)1312 3269 y Fi(\()p Fg(J)16 b Fi(\))49 b(=)1907
3127 y Fd(_)1842 3458 y Ff(n)p Fc(\025)p Fb(1)2160 3269
y Fg(\017)2231 3183 y Fb(\()p Ff(n)p Fb(\))2231 3329
y Ff(I)2458 3269 y Fi(\()p Fg(J)16 b Fi(\))-48 3959 y(The)69
b(reconstruction)g(p)-6 b(reserves)69 b(p)6 b(eaks)68
b(and)h(domes)-303 4192 y(whereas)f(the)g(dual)h(reconstruction)g(p)-6
b(reserves)69 b(basins)g(and)1636 4424 y(valleys.)p Black
3751 6118 a Fh(22)p Black eop
%%Page: 23 24
23 23 bop Black Black Black Black -267 254 a Fj(Greyscale)101
b(Reconstruction)f(-)f(Example)p Black Black -164 723
a Fi(Greyscale)67 b(reconstruction)i(of)h(mask)c(I)j(from)f(ma)-6
b(rk)g(er)67 b(J)437 998 y
 23681433 11840715 0 0 23944560 12038062 startTexFig
 437 998 a
%%BeginDocument: greyrecon2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 183 moveto 0 0 lineto 364 0 lineto 364 183 lineto closepath clip newpath
-88.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 4500 600 m 4500 3600 l 4800 3600 l 4800 600 l 5100 600 l 5100 3600 l
 5400 3600 l 5400 600 l 5700 600 l 5700 3600 l 6000 3600 l
 6000 600 l 6300 600 l 6300 3600 l 6600 3600 l 6600 600 l
 6900 600 l 6900 3600 l 7200 3600 l 7200 600 l 7500 600 l
 7500 3600 l 4500 3600 l 4500 3300 l 4500 3600 l 7500 3600 l
 4500 3600 l 4500 3300 l 7500 3300 l 7500 3000 l 4500 3000 l
 4500 2700 l 7500 2700 l 7500 2400 l 4500 2400 l 4500 2100 l

 7500 2100 l gs col0 s gr 
% Polyline
n 4500 1800 m 1500 1800 l 1500 1500 l 4500 1500 l 4500 1200 l 1500 1200 l
 1500 900 l 4500 900 l 4500 600 l
 1500 600 l gs col0 s gr 
% Polyline
n 7500 1800 m 4500 1800 l 4500 1500 l 7500 1500 l 7500 1200 l 4500 1200 l
 4500 900 l 7500 900 l 7500 600 l
 4500 600 l gs col0 s gr 
% Polyline
n 1500 600 m 1500 3600 l 1800 3600 l 1800 600 l 2100 600 l 2100 3600 l
 2400 3600 l 2400 600 l 2700 600 l 2700 3600 l 3000 3600 l
 3000 600 l 3300 600 l 3300 3600 l 3600 3600 l 3600 600 l
 3900 600 l 3900 3600 l 4200 3600 l 4200 600 l 4500 600 l
 4500 3600 l 1500 3600 l 1500 3300 l 1500 3600 l 4500 3600 l
 1500 3600 l 1500 3300 l 4500 3300 l 4500 3000 l 1500 3000 l
 1500 2700 l 4500 2700 l 4500 2400 l 1500 2400 l 1500 2100 l

 4500 2100 l gs col0 s gr 
% Polyline
n 6296 900 m 6304 900 l gs col4 s gr
% Polyline
30.000 slw
n 1500 3000 m 2700 3000 l 2700 2700 l 3300 2700 l 3300 3300 l 4800 3300 l
 4800 3000 l 6000 3000 l 6000 2400 l 6300 2400 l 6300 1500 l
 6600 1500 l 6600 900 l 6900 900 l 6900 3000 l
 7500 3000 l gs col31 s gr 
% Polyline
n 1500 2400 m 2100 2400 l 2100 2100 l 2700 2100 l 2700 1500 l 3000 1500 l
 3000 900 l 3300 900 l 3300 1800 l 3600 1800 l 3600 2400 l
 3900 2400 l 3900 3000 l 4500 3000 l 4500 2400 l 4800 2400 l
 4800 1800 l 5100 1800 l 5100 2100 l 5700 2100 l 5700 1200 l
 6000 1200 l 6000 600 l 7200 600 l 7200 2700 l
 7500 2700 l gs col1 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 870 2968 a Fi(blue:)93 b(mask;)67 b(gold:)93 b(ma)-6
b(rk)g(er)437 3243 y
 23681433 11840715 0 0 23944560 12038062 startTexFig
 437 3243 a
%%BeginDocument: greyrecon.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 183 moveto 0 0 lineto 364 0 lineto 364 183 lineto closepath clip newpath
-88.0 217.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1500 600 m 1500 3600 l 1800 3600 l 1800 600 l 2100 600 l 2100 3600 l
 2400 3600 l 2400 600 l 2700 600 l 2700 3600 l 3000 3600 l
 3000 600 l 3300 600 l 3300 3600 l 3600 3600 l 3600 600 l
 3900 600 l 3900 3600 l 4200 3600 l 4200 600 l 4500 600 l
 4500 3600 l 1500 3600 l 1500 3300 l 1500 3600 l 4500 3600 l
 1500 3600 l 1500 3300 l 4500 3300 l 4500 3000 l 1500 3000 l
 1500 2700 l 4500 2700 l 4500 2400 l 1500 2400 l 1500 2100 l

 4500 2100 l gs col0 s gr 
% Polyline
n 7500 1800 m 4500 1800 l 4500 1500 l 7500 1500 l 7500 1200 l 4500 1200 l
 4500 900 l 7500 900 l 7500 600 l
 4500 600 l gs col0 s gr 
% Polyline
n 4500 1800 m 1500 1800 l 1500 1500 l 4500 1500 l 4500 1200 l 1500 1200 l
 1500 900 l 4500 900 l 4500 600 l
 1500 600 l gs col0 s gr 
% Polyline
n 4500 600 m 4500 3600 l 4800 3600 l 4800 600 l 5100 600 l 5100 3600 l
 5400 3600 l 5400 600 l 5700 600 l 5700 3600 l 6000 3600 l
 6000 600 l 6300 600 l 6300 3600 l 6600 3600 l 6600 600 l
 6900 600 l 6900 3600 l 7200 3600 l 7200 600 l 7500 600 l
 7500 3600 l 4500 3600 l 4500 3300 l 4500 3600 l 7500 3600 l
 4500 3600 l 4500 3300 l 7500 3300 l 7500 3000 l 4500 3000 l
 4500 2700 l 7500 2700 l 7500 2400 l 4500 2400 l 4500 2100 l

 7500 2100 l gs col0 s gr 
% Polyline
n 6296 900 m 6304 900 l gs col4 s gr
% Polyline
30.000 slw
n 1500 2400 m 2100 2400 l 2100 2100 l 2700 2100 l 2700 1500 l 3000 1500 l
 3000 900 l 3300 900 l 3300 1800 l 3600 1800 l 3600 2400 l
 3900 2400 l 3900 3000 l 4500 3000 l 4500 2400 l 4800 2400 l
 4800 1800 l 5100 1800 l 5100 2100 l 5700 2100 l 5700 1200 l
 6000 1200 l 6000 600 l 7200 600 l 7200 2700 l
 7500 2700 l gs col1 s gr 
% Polyline
n 1500 3000 m 2700 3000 l 2700 2700 l 3300 2700 l 3300 3300 l 4800 3300 l
 4800 3000 l 6000 3000 l 6000 2400 l 6300 2400 l 6300 1500 l
 6600 1500 l 6600 900 l 6900 900 l 6900 3000 l
 7500 3000 l gs col31 s gr 
% Polyline
n 1500 2700 m 3900 2700 l 3900 3000 l 4500 3000 l 4500 2400 l 4800 2400 l
 4800 2100 l 5700 2100 l 5700 1200 l 6000 1200 l 6000 900 l
 7200 900 l 7200 2700 l
 7500 2700 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1031 5212 a Fi(green:)92 b(reconstruction)-222 5681
y(The)69 b(reconstruction)g(extracts)e(the)i(p)6 b(eaks)68
b(in)h(I)f(that)g(a)-6 b(re)1413 5910 y(ma)g(rk)g(ed)67
b(in)i(J.)p Black 3751 6118 a Fh(23)p Black eop
%%Page: 24 25
24 24 bop Black Black Black Black 790 1896 a Fj(h-domes)98
b(transfo)-8 b(rm)p Black Black -265 2377 a Fi(The)69
b(h-domes)f(transfo)-6 b(rm)67 b(consists)j(of)f(reconstructing)g(a)
-190 2610 y(mask)d Fg(I)82 b Fi(from)68 b Fg(I)52 b Fe(\000)39
b Fg(h)69 b Fi(and)g(subtracting)f(the)h(result)g(from)1022
2842 y(the)g(o)-6 b(riginal)69 b(mask,)e(i.e.)1048 3681
y Fg(D)1192 3719 y Ff(h)1281 3681 y Fi(\()p Fg(I)13 b
Fi(\))49 b(=)g Fg(I)j Fe(\000)38 b Fg(\032)2182 3718
y Ff(I)2260 3681 y Fi(\()p Fg(I)53 b Fe(\000)38 b Fg(h)p
Fi(\))-118 4245 y(the)69 b(h-domes)f(extract)f(light)i(structures)g(of)
g(height)g Fg(h)p Fi(.)p Black 3751 6118 a Fh(24)p Black
eop
%%Page: 25 26
25 25 bop Black Black Black Black 759 508 a Fj(h-domes)98
b(-)h(Example)437 794 y
 23681433 11840715 0 0 23944560 12103843 startTexFig
 437 794 a
%%BeginDocument: hdomes.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 184 moveto 0 0 lineto 364 0 lineto 364 184 lineto closepath clip newpath
-88.0 218.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 4500 600 m 4500 3600 l 4800 3600 l 4800 600 l 5100 600 l 5100 3600 l
 5400 3600 l 5400 600 l 5700 600 l 5700 3600 l 6000 3600 l
 6000 600 l 6300 600 l 6300 3600 l 6600 3600 l 6600 600 l
 6900 600 l 6900 3600 l 7200 3600 l 7200 600 l 7500 600 l
 7500 3600 l 4500 3600 l 4500 3300 l 4500 3600 l 7500 3600 l
 4500 3600 l 4500 3300 l 7500 3300 l 7500 3000 l 4500 3000 l
 4500 2700 l 7500 2700 l 7500 2400 l 4500 2400 l 4500 2100 l

 7500 2100 l gs col0 s gr 
% Polyline
n 4500 1800 m 1500 1800 l 1500 1500 l 4500 1500 l 4500 1200 l 1500 1200 l
 1500 900 l 4500 900 l 4500 600 l
 1500 600 l gs col0 s gr 
% Polyline
n 7500 1800 m 4500 1800 l 4500 1500 l 7500 1500 l 7500 1200 l 4500 1200 l
 4500 900 l 7500 900 l 7500 600 l
 4500 600 l gs col0 s gr 
% Polyline
n 1500 600 m 1500 3600 l 1800 3600 l 1800 600 l 2100 600 l 2100 3600 l
 2400 3600 l 2400 600 l 2700 600 l 2700 3600 l 3000 3600 l
 3000 600 l 3300 600 l 3300 3600 l 3600 3600 l 3600 600 l
 3900 600 l 3900 3600 l 4200 3600 l 4200 600 l 4500 600 l
 4500 3600 l 1500 3600 l 1500 3300 l 1500 3600 l 4500 3600 l
 1500 3600 l 1500 3300 l 4500 3300 l 4500 3000 l 1500 3000 l
 1500 2700 l 4500 2700 l 4500 2400 l 1500 2400 l 1500 2100 l

 4500 2100 l gs col0 s gr 
% Polyline
n 6296 900 m 6304 900 l gs col4 s gr
% Polyline
30.000 slw
n 1500 2400 m 2100 2400 l 2100 2100 l 2700 2100 l 2700 1500 l 3000 1500 l
 3000 900 l 3300 900 l 3300 1800 l 3600 1800 l 3600 2400 l
 3900 2400 l 3900 3000 l 4500 3000 l 4500 2400 l 4800 2400 l
 4800 1800 l 5100 1800 l 5100 2100 l 5700 2100 l 5700 1200 l
 6000 1200 l 6000 600 l 7200 600 l 7200 2700 l
 7500 2700 l gs col1 s gr 
% Polyline
n 1500 3000 m 2100 3000 l 2100 2700 l 2700 2700 l 2700 2100 l 3000 2100 l
 3000 1500 l 3300 1500 l 3300 2400 l 3600 2400 l 3600 3000 l
 3900 3000 l 3900 3600 l 4500 3600 l 4500 3000 l 4800 3000 l
 4800 2400 l 5100 2400 l 5100 2700 l 5700 2700 l 5700 1800 l
 6000 1800 l 6000 1200 l 7200 1200 l 7200 3300 l
 7500 3300 l gs col31 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 Black Black 870 2775 a Fi(blue:)93 b(mask;)67 b(gold:)93
b(ma)-6 b(rk)g(er)437 3051 y
 23681433 16577001 0 0 23944560 16840130 startTexFig
 437 3051 a
%%BeginDocument: hdomes2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 256 moveto 0 0 lineto 364 0 lineto 364 256 lineto closepath clip newpath
-88.0 290.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 4500 600 m 4500 3600 l 4800 3600 l 4800 600 l 5100 600 l 5100 3600 l
 5400 3600 l 5400 600 l 5700 600 l 5700 3600 l 6000 3600 l
 6000 600 l 6300 600 l 6300 3600 l 6600 3600 l 6600 600 l
 6900 600 l 6900 3600 l 7200 3600 l 7200 600 l 7500 600 l
 7500 3600 l 4500 3600 l 4500 3300 l 4500 3600 l 7500 3600 l
 4500 3600 l 4500 3300 l 7500 3300 l 7500 3000 l 4500 3000 l
 4500 2700 l 7500 2700 l 7500 2400 l 4500 2400 l 4500 2100 l

 7500 2100 l gs col0 s gr 
% Polyline
n 4500 1800 m 1500 1800 l 1500 1500 l 4500 1500 l 4500 1200 l 1500 1200 l
 1500 900 l 4500 900 l 4500 600 l
 1500 600 l gs col0 s gr 
% Polyline
n 7500 1800 m 4500 1800 l 4500 1500 l 7500 1500 l 7500 1200 l 4500 1200 l
 4500 900 l 7500 900 l 7500 600 l
 4500 600 l gs col0 s gr 
% Polyline
n 1500 600 m 1500 3600 l 1800 3600 l 1800 600 l 2100 600 l 2100 3600 l
 2400 3600 l 2400 600 l 2700 600 l 2700 3600 l 3000 3600 l
 3000 600 l 3300 600 l 3300 3600 l 3600 3600 l 3600 600 l
 3900 600 l 3900 3600 l 4200 3600 l 4200 600 l 4500 600 l
 4500 3600 l 1500 3600 l 1500 3300 l 1500 3600 l 4500 3600 l
 1500 3600 l 1500 3300 l 4500 3300 l 4500 3000 l 1500 3000 l
 1500 2700 l 4500 2700 l 4500 2400 l 1500 2400 l 1500 2100 l

 4500 2100 l gs col0 s gr 
% Polyline
n 6296 900 m 6304 900 l gs col4 s gr
% Polyline
30.000 slw
n 1500 4800 m 3000 4800 l 3000 4200 l 3300 4200 l 3300 4800 l 4800 4800 l
 4800 4500 l 5100 4500 l 5100 4800 l 6000 4800 l 6000 4200 l
 7200 4200 l 7200 4800 l
 7500 4800 l gs col1 s gr 
% Polyline
n 1500 2400 m 2100 2400 l 2100 2100 l 2700 2100 l 2700 1500 l 3000 1500 l
 3000 900 l 3300 900 l 3300 1800 l 3600 1800 l 3600 2400 l
 3900 2400 l 3900 3000 l 4500 3000 l 4500 2400 l 4800 2400 l
 4800 1800 l 5100 1800 l 5100 2100 l 5700 2100 l 5700 1200 l
 6000 1200 l 6000 600 l 7200 600 l 7200 2700 l
 7500 2700 l gs col1 s gr 
% Polyline
n 1500 3000 m 2100 3000 l 2100 2700 l 2700 2700 l 2700 2100 l 3000 2100 l
 3000 1500 l 3300 1500 l 3300 2400 l 3600 2400 l 3600 3000 l
 3900 3000 l 3900 3600 l 4500 3600 l 4500 3000 l 4800 3000 l
 4800 2400 l 5100 2400 l 5100 2700 l 5700 2700 l 5700 1800 l
 6000 1800 l 6000 1200 l 7200 1200 l 7200 3300 l
 7500 3300 l gs col31 s gr 
% Polyline
n 1500 2400 m 2100 2400 l 2100 2100 l 2700 2100 l 2700 1500 l 3300 1500 l
 3300 1800 l 3600 1800 l 3600 2400 l 3900 2400 l 3900 3000 l
 4500 3000 l 4500 2400 l 4800 2400 l 4800 2100 l 5700 2100 l
 5700 1200 l 7200 1200 l 7200 2700 l
 7500 2700 l gs col2 s gr 
$F2psEnd
rs
end
%%EndDocument

 endTexFig
 1031 5633 a Fi(green:)92 b(reconstruction)p Black 3751
6118 a Fh(25)p Black eop
%%Page: 26 27
26 26 bop Black Black Black Black Black Black Black 3751
6118 a Fh(26)p Black eop
%%Page: 27 28
27 27 bop Black Black Black Black Black Black Black 3751
6118 a Fh(27)p Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
